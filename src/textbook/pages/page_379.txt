（3）当待排序记录数$n$较大，排序码分布可能会出现正序或逆序的情况，且对稳定性不作要求时，则采用堆排序或归并排序为宜。

（4）当待排序记录数$n$较小，记录或基本有序或分布较随机，且要求稳定时，则采用直接插入排序为宜。

（5）当待排序记录数$n$较小，对稳定不作要求时，则采用直接选择排序为宜，若排序码不接近逆序，也可采用直接插入排序。

*10.7 外排序

10.7.1 外排序的概念

外排序就是对外存文件中的记录进行排序的过程，排序结果仍然被放到原有文件中。外存文件排序包括磁盘文件排序和磁带文件排序两种，本节只讨论磁盘文件排序的问题。

每个磁盘文件的存储空间逻辑上是按字节从 0 开始顺序编址的。若一个文件中存放有$n$个记录，每个记录占有$b$个字节，则每个记录的首字节地址为$(i-1) \times b$，其中$1 \leqslant i \leqslant n$。此文件按字节计算出的大小为$n \times b$，按记录计算出的大小为$n$，通常文件的长度是指文件中所含的记录数，所以该文件的大小为$n$。

当用文件流对象打开一个磁盘文件后，系统就为其分配一个文件指针，通过调用文件流类中的移动文件指针的成员函数可以使文件指针指向文件中的任何字节位置，该位置就是对文件进行信息存取操作的首字节地址。当向文件中存取一个具有$b$个字节的信息块后，其文件指针自动由原来位置向后移动$b$个字节的位置，以便用户存取下一个信息块。当然若在进行下一次文件存取前，用户把文件指针移向了其他位置，接着存取信息就会从这个新位置开始。当文件指针移到最后一个字节位置之后，若再从文件中读出信息，则就读到了文件的结束标记（每个文件的最后都会存在有这个结束标记），此时用于读出信息的文件流对象将返回 0。

以二进制（binary）方式打开的磁盘文件是通过 read 和 write 成员函数按信息块传送方式进行文件信息的存取，每个信息块通常包含一个或若干个实际记录的内容。信息块在内存中对应着一个记录对象或具有记录类型的数组对象。内存中的一个信息块可以一次写入到磁盘文件中，磁盘文件中的一个信息块也可以一次读入到内存中具有同样大小的变量或数组空间中。

外存文件同内存信息块之间的信息交换实际上是通过内存文件缓冲区实现的。当打开每个文件时，系统在内存中至少为其分配一个缓冲区，每个缓冲区的大小（即所含的字节数）为外存中一个物理记录块的大小，对于一般的计算机而言，其大小为$1KB \sim 4KB$之间。当向文件中写入信息时，首先是把它写入到对应的文件缓冲区中，待文件缓冲区写满后，系统才一次性地把整个缓冲区的内容写入到外存上。当从文件中读出信息时，首先在该文件所对应的内存缓冲区中查找，若找到则不需要访问外存，直接从缓冲区中取出使用即可，否则访问一次外存，把包含访问信息的整个物理记录块全部读入到内存文件缓冲区中，然后再从文件缓冲区中读出使用，即读入到内存变量或数组中。
