(a) 3阶 B_树
(b) 插入 65
(c) 插入 24

(d) 插入 24 调整
(e) 插入 50
(f) 插入 50 调整

(g) 插入 50 继续调整
(h) 插入 38

图 9-7 3 阶 B_树的插入过程

bool InsertMBTree(MBNode*& MT, KeyType K, int num)
{
    //向树根指针为 MT 的 B_树插入索引项 (K,num,NULL)
    //当 B_树为空时的处理情况

    if (MT==NULL) {
        MT=new MBNode;
        MT->keynum=1; MT->parent=NULL;
        MT->key[1]=K; MT->key[2]=MaxKey;
        MT->receptr[1]=num;
        MT->ptr[0]=MT->ptr[1]=NULL;
        return true;
    }
    //从 B_树上查找插入位置
    int i;
    MBNode* xp=MT,*p=NULL; //xp 和 p 分别指向当前结点和父结点
    while(xp!=NULL) {
        i=1;
        while(K>xp->key[i]) i++;
        if(K==xp->key[i]) return false; //关键字已存在,插入失败
        else {
            p=xp; xp=xp->ptr[i-1]; //下移一层查找
        }
    }
}
