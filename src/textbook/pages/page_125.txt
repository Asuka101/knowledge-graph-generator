许多。如根据一个集合建立顺序存储结构或建立链接存储结构, 从集合顺序表或单链表中查找出所有具有同一属性值的元素并输出出来, 从任一存储结构的集合中查找具有最大或最小值的元素, 把一个顺序表或单链表表示的集合按某一条件分解为两个集合等。读者只要掌握集合的典型操作, 对其他任何操作的算法将不难编写出来。

\section*{3.4 稀疏矩阵}

\subsection*{3.4.1 稀疏矩阵的定义}

\section*{1. 稀疏矩阵的概念}

为了说明什么是稀疏矩阵, 首先要清楚矩阵的概念。矩阵 (matrix) 是一个具有$m$行$\times n$列的数表, 共包含有$m \times n$个数（元素）, 每个元素处在确定行和列的交点位置上, 都与一对行号和列号唯一对应。当一个矩阵中的行数和列数相同时, 即$m=n$时则称为$n$阶矩阵或方阵。如图 3-3(a) 就是一个$3 \times 4$的矩阵, 它包含 3 行、4 列, 具有 12 个元素, 每个元素都对应着唯一的行号和列号, 如第 1 行与第 1 列交点位置上的元素 5 对应的行号和列号均为 1 , 第 2 行与第 4 列交点位置上的元素 9 对应的行号和列号分别为 2 和 4 。$\begin{array}{ll}1 & 2 \\ 1 & 5 -284 \\ 2 & 94-19 \\ 3 & 0721\end{array}$(a) 一般矩阵$\begin{array}{lll}1 & 2 & 3 \\ 1 & 300500 \\ 2 & 00-2000 \\ 3 & 104060 \\ 4 & 000000 \\ 5 & 00-1000\end{array}$(b) 稀疏矩阵

图 3-3 矩阵和稀疏矩阵

稀疏矩阵 (sparse matrix) 是矩阵中的一种特殊情况, 其非零元素的个数远远小于零元素的个数。如图 3-3(b) 就是一个$5 \times 6$的稀疏矩阵, 该矩阵共有 30 个元素, 其中非零元素为 7 个, 占元素总数的 7/30。在实际应用中, 稀疏矩阵一般都比较大, 非零元素所占的比例都比较小。如对于一个$100 \times 100$的稀疏矩阵, 若非零元素的个数为 200 , 则非零元素占总元素个数的比例仅为 1/50。

\section*{2. 稀疏矩阵的三元组线性表示}

在计算机中存储矩阵的一般方法是采用二维数组, 其优点是可以随机地访问任一个元素, 因而能够较容易地实现矩阵的各种运算, 如转置运算、加法运算、乘法运算等。但对于稀疏矩阵来说, 采用二维数组的存储方法既浪费大量的存储单元用来存放零元素, 又要在运算中花费大量的时间来进行零元素的无效计算, 显然是不可取的。一种较好的方法是:只考虑存储占元素中极少数的非零元素。
