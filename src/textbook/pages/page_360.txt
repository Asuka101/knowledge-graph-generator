第10章 排 序

\section*{10.1 排序的基本概念}

排序 (sorting) 是数据处理领域一种最常用的运算。排序的主要目的是方便查找。由第9章可知, 对于一个顺序存储的集合或线性表, 若不经过排序而查找, 则时间复杂度为$O(n)$, 若在排序的基础上进行二分查找, 则时间复杂度可降低到$O(\lg n)$, 效果是相当显著的。

排序就是把一组记录（元素）按照某个域的值的递增（即由小到大）或递减（即由大到小）的次序重新排列的过程。通常把用于排序的域称为排序域或排序项，把该域中的每一个值（它与一个记录相对应）称为排序码。为了以后讨论方便，排序域的域名用标识符$\mathrm{stm}$表示。对于具有 ElemType 类型的一条记录$x$来说，x.stm 为它的排序码。

设待排序的一组$n$个记录集合为$\left\{R_{0}, R_{1}, \cdots, R_{n-1}\right\}$, 对应的排序码为$\left\{S_{0}, S_{1}, \cdots, S_{n-1}\right\}$,若排序码的递增次序为$\left\{S_{0}^{\prime}, S_{1}^{\prime}, \cdots, S_{n-1}^{\prime}\right\}$, 即$S_{0}^{\prime} \leqslant S_{1}^{\prime} \leqslant \cdots \leqslant S_{n-1}^{\prime}$, 则排序后的记录次序为$\left\{R_{0}^{\prime}, R_{1}^{\prime}, \cdots, R_{n-1}^{\prime}\right\}$, 其中$R_{i}^{\prime}$的排序码为$S_{i}^{\prime}(0 \leqslant i \leqslant n-1)$; 若排序码的递减次序为$\left\{S_{0}^{\prime \prime}, S_{1}^{\prime \prime}, \cdots, S_{n-1}^{\prime \prime}\right\}$, 即$S_{0}^{\prime \prime} \geqslant S_{1}^{\prime \prime} \geqslant \cdots \geqslant S_{n-1}^{\prime \prime}$, 则排序后的记录次序为$\left\{R_{0}^{\prime \prime}, R_{1}^{\prime \prime}, \cdots, R_{n-1}^{\prime \prime}\right\}$, 其中$R_{i}^{\prime \prime}$的排序码为$S_{i}^{\prime \prime}(0 \leqslant i \leqslant n-1)$。

如表 10-1 所示, 若以每个记录的职工号为关键字, 以基本工资为排序码, 则所有 8 条记录可简记为:$\begin{aligned}& \{(100,2100),(101,2250),(102,1960),(103,1850),(104,2530),(105,2100), \\& (106,1740),(107,1960)\}\end{aligned}$表 10-1 职工登记表

| 职 工 号 | 姓 名 | 性别 | 出生日期 | 基本工资(元) |
| --- | --- | --- | --- | --- |
| 100 | 王大明 | 男 | 1961/04/25 | 2100 |
| 101 | 吴进 | 男 | 1971/03/12 | 2250 |
| 102 | 邢怀学 | 男 | 1963/06/28 | 1960 |
| 103 | 王亚兰 | 女 | 1951/03/26 | 1850 |
| 104 | 赵利 | 女 | 1974/05/03 | 2530 |
| 105 | 刘小平 | 男 | 1965/12/18 | 2100 |
| 106 | 李小敏 | 女 | 1980/03/26 | 1740 |
| 107 | 卢明 | 男 | 1969/12/20 | 1960 |

若按排序码的递增次序对记录进行重排，则得到的排序结果为:$\begin{aligned}& \{(106,1740),(103,1850),(102,1960),(107,1960),(100,2100),(105,2100), \\& (101,2250),(104,2530)\}\end{aligned}$
