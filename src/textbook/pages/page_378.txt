度为$O(n)$; 快速排序也单独属于一类, 其空间复杂度为$O(\ln n)$; 其他排序方法归为第 3 类,其空间复杂度为$O(1)$。由此可知，第 3 类算法的空间复杂度最好，第 2 类次之，第 1 类最差。

3. 排序稳定性

从排序方法的稳定性看, 所有排序方法可分为两类: 一类是稳定的, 它包括直接插入排序、气泡排序和归并排序; 另一类是不稳定的, 它包括希尔排序、直接选择排序、快速排序和堆排序。

4. 算法简单性

从算法简单性看, 一类是简单算法, 它包括直接插入排序、直接选择排序和气泡排序,这些算法都比较简单和直接, 易于理解; 另一类是改进后的算法, 它包括希尔排序、堆排序、快速排序和归并排序 (归并排序可看作对直接插入排序的另一种改进, 它把记录分组排序, 但分组方法同希尔排序不同, 另外, 它把记录的插入和移动改为向另一个数组的复制), 这些算法都比较复杂。

5. 数据集中的记录数

从待排序数据集中的记录数$n$的大小看,$n$越小, 采用简单排序方法越合适,$n$越大采用改进排序方法越合适。因为$n$越小,$n^2$同$n \ln n$的差距越小, 并且简单算法的时间复杂度的系数均小于 1（除气泡排序中最坏情况外）, 改进算法的时间复杂度的系数均大于 1 ,因而也使得它们的差距变小, 另外, 输入和调试简单算法比输入和调试改进算法要少用许多时间, 若把此时间也考虑进去, 当$n$较小时, 选用简单算法比选用改进算法要少花时间。当$n$越大时选用改进算法的效果就越显著, 因为$n$越大,$n^2$和$n \ln n$的差距就越大。例如,当$n=1000$时,$n \ln n$只是$n^2$的约$1/100$。

6. 记录长度的大小

从记录本身长度的大小看, 记录本身的长度越大, 表明占用的存储字节数就越多, 移动记录时所花费的时间就越多, 所以对记录的移动次数较多的算法不利。例如, 在 3 种简单排序算法中, 直接选择排序移动记录的次数为$n$数量级, 其他两种为$n^2$数量级, 所以当记录本身的信息量较大时, 对直接选择排序算法有利, 而对其他两种算法不利。在 4 种改进算法中, 记录本身长度 (信息量) 的大小, 对它们的影响区别不大。

以上从 6 个方面对各种排序方法进行了比较和分析, 那么如何在实际的排序问题中分主次地考虑它们呢? 首先考虑排序对稳定性的要求, 若要求稳定, 则只能在稳定方法中选取,否则可以从所有方法中选取; 其次要考虑待排序记录数$n$的大小, 若$n$较大, 则在改进方法中选取, 否则在简单方法中选取; 然后再考虑其他因素。

综合考虑以上 6 个方面所得出的大致结论如下, 供读者选择内排序方法时参考。

(1) 当待排序记录数$n$较大, 排序码分布较随机, 且对稳定性不做要求时, 则采用快速排序为宜。

(2) 当待排序记录数$n$较大, 内存空间允许, 且要求排序稳定时, 则采用归并排序为宜。
