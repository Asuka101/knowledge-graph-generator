*10.2.2 希尔排序

希尔（Shell）排序又称缩小增量排序（diminishing increment sort），它是对直接插入排序的一种改进方法，是由希尔（D.L.Shell，有的书上翻译成“谢尔”）于 1959 年提出的。希尔排序的过程是：首先以$d_1(0<d_1<n-1)$为步长，把数组 A 中 n 个元素分为$d_1$个组，使下标距离为$d_1$的元素在同一组中，即 A[0], A[$d_1$], A[$2d_1$], … 为第 1 组，A[1], A[$1+d_1$], A[$1+2d_1$], … 为第 2 组，…, A[$d_1-1$], A[$2d_1-1$], A[$3d_1-1$], … 为最后一组（即第$d_1$组），接着在每个组内进行直接插入排序；然后再以$d_2(d_2<d_1)$为步长，在上一步排序的基础上，把 A 中的 n 个元素重新分为$d_2$个组，使下标距离为$d_2$的元素在同一组中，接着再在每个组内进行直接插入排序；以此类推，直到$d_t=1$，把所有 n 个元素看作为一组，进行直接插入排序为止。

在希尔排序中，开始步长（增量）较大，分组较多，每个组内的记录条数较少，因而记录的比较和移动次数都较少，且移动距离较远，越到后来步长越小（最后一步为 1），分组越少，每个组内的记录条数也越多，但同时记录次序也越来越接近有序，因而记录的比较和移动次数也都较少。从理论上和实验上都已证明，在希尔排序中，记录的总的比较次数和总的移动次数比直接插入排序时要少得多，特别是当 n 越大时效果越明显。

对希尔排序的理论分析提出了许多困难的数学问题，特别是如何选择增量（步长）序列才能产生最快的排序效果，至今没有得到解决。希尔本人最初提出取$d_1=\lfloor n/2\rfloor$、$d_{i+1}=\lfloor d_i/2\rfloor$、$d_t=1$，其中$1\leq i\leq t-1$，$t=\lceil\log_2n\rceil$；后来有人提出取$d_1=\lfloor n/3\rfloor$、$d_{i+1}=\lfloor d_i/3\rfloor$、$d_t=1$，其中$1\leq i\leq t-1$，$t=\lceil\log_3n\rceil$等。一般选取增量序列的规则是：取$d_{i+1}$在$\lfloor d_i/3\rfloor$~$\lfloor d_i/2\rfloor$之间，其中$0\leq i\leq t-1$，$d_t=1$，并假定$d_0=n$。同时要使得增量序列中的每两个或多个值之间没有除 1 之外的公因子。若按照这种规则选取增量序列，希尔排序的时间复杂度在$O(n\log n)$和$O(n^2)$之间。

若有 10 个待排序元素的排序码为：
\n$(36, 25, 48, 12, 65, 25, 43, 58, 76, 32)$\n
若按$d_{i+1}=\lfloor d_i/2\rfloor$选取增量序列，则取$d_1=5$、$d_2=2$和$d_3=1$。如图 10-1 所示给出了取每一增量时所得的排序结果。首先$d_1=5$，把 10 个元素分为 5 组，每组均有两个元素，对每一组分别进行直接插入排序；接着$d_2=2$，在上一步分组排序结果的基础上，重新把 10 个元素分为 2 组，每组均有 5 个元素，其中下标为偶数的元素为一组，下标为奇数的元素为另一组，对每一组再分别进行直接插入排序；最后$d_3=1$，在$d_2=2$分组排序结果的基础上，把所有 10 个元素看作为一组进行直接插入排序，得到的结果就是希尔排序的最后结果。

希尔排序是不稳定的，如图 10-1 所示。
\n
希尔排序的算法描述如下，按$d_{i+1}=\lfloor d_i/2\rfloor$选择增量序列，直到最后一个增量值为 1 止。

void ShellSort (ElemType A[], int n)
{
    //利用希尔排序的方法对数组 A 中的 n 的元素进行排序
    ElemType x;
