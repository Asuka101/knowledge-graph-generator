struct List {
    ElemType *list;          //存线性表元素的动态存储空间的指针
    int size;                //存线性表长度
    int MaxSize;             //规定 list 数组的长度
};

//添加上面介绍的 11 个算法

void main()
{
    int a[12]={3,6,9,12,15,18,21,24,27,30,33,36};
    int i; ElemType x;
    List t;
    InitList(t);
    for(i=0;i<12;i++) InsertList(t,a[i],i+1);
    InsertList(t,48,13);InsertList(t,40,0);
    cout<<GetList(t,4)<<' '<<GetList(t,9)<<endl;
    TraverseList(t);
    cout<<"输入待查找的元素值：";
    cin>>x;
    if(FindList(t,x)) cout<<"查找成功!"<<endl;
    else cout<<"查找失败!"<<endl;
    cout<<"输入待删除元素的值：";
    cin>>x;
    if(DeleteList(t,x,0)) cout<<"删除成功!"<<endl;
    else cout<<"删除失败!"<<endl;
    for(i=0; i<6; i++)
        DeleteList(t,x,i+1);
    TraverseList(t);
    cout<<"按值插入，输入待插入元素的值：";
    cin>>x;
    if(InsertList(t,x,0)) cout<<"插入成功!"<<endl;
    else cout<<"插入失败!"<<endl;
    TraverseList(t);
    cout<<"线性表长度:"<<LengthList(t)<<endl;
    if(EmptyList(t)) cout<<"线性表为空!"<<endl;
    else cout<<"线性表不空!"<<endl;
    ClearList(t);
}

运行这个程序，得到的一次运行结果如下。

12 27
3 6 9 12 15 18 21 24 27 30 33 36 40 48
输入待查找的元素值:21
查找成功!
