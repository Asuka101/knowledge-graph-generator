第4章 栈和队列

栈和队列都属于线性表，但由于对它们操作的特殊性，并且是最常用的线性数据结构，
所以需要专门进行讨论。

\section*{4.1 栈}

\subsection*{4.1.1 栈的定义}

栈（stack）又称堆栈，它是一种运算受限的线性表，其限制是仅允许在表的一端进行
插入和删除运算。人们把对栈进行运算的一端称为栈顶，栈顶的第$1$个元素被称为栈顶元
素，相对地，把另一端称为栈底。向一个栈插入新元素又称为进栈或入栈，它是把该元素
放到栈顶元素的上面，使之成为新的栈顶元素；从一个栈删除元素又称为出栈或退栈，它
是把栈顶元素删除掉，使其下面的相邻元素成为新的栈顶元素。

在日常生活中，有许多类似栈的例子。如刷洗盘子时，依次把每个洗净的盘子放到洗
好的一摞盘子上，相当于进栈；取用盘子时，从一摞盘子上一个接一个地向下拿，相当于
出栈。又如向枪支弹夹里装子弹时，子弹被一个接一个地压入，相当于进栈；射击时子弹
总是从顶部一个接一个地被射出，相当于子弹出栈。

由于栈的插入和删除运算仅在栈顶一端进行，后进栈的元素必定先出栈，所以又把栈
称为后进先出表（Last In First Out，LIFO）。

例如，一个栈$S$为（a,b,c），其中表尾的一端为栈顶，字符$c$为栈顶元素。若向$S$压
入一个元素$d$，则$S$变为（a,b,c,d），此时字符$d$为栈顶元素；若接着从栈$S$中依次删除两
个元素，则首先删除的是元素$d$，接着删除的是元素$c$，栈$S$变为（a,b），栈顶元素为$b$。

\subsection*{4.1.2 栈的抽象数据类型}

栈的抽象数据类型中的数据部分为具有 ElemType 元素类型的一个栈，它可以采用任
一种存储结构实现，用 StackType 标识符表示栈对象类型；操作部分应包括元素进栈、元
素出栈、读取栈顶元素、检查栈是否为空等。下面给出栈的抽象数据类型的具体定义。

ADT STACK is
Data:
    一个栈$s$，假定用标识符 StackType 表示栈对象类型
Operation:
