含有数值域外，设置有两个指针域，分别用以指向其前驱结点和后继结点，这样构成的链接表被称为线性双向链接表，简称双向链表或双链表。单链表和双链表都是线性链表。

设一个线性表为：$A=(a_1, a_2, \cdots, a_i, a_{i+1}, \cdots, a_n)$若分别用单链表和双链表表示，则对应的存储结构如图 2-5 所示。

(a) 单链表

(b) 双链表

图 2-5 线性表的链接存储结构示意图

每个结点的指针域同它所指向的后继结点或前驱结点用一个带箭头的线段相连接，表示该指针域的值为所指向结点的存储位置。若一个指针域的值为空（即 NULL），则在图形中通常用符号“∧”表示。由于线性表中的第 1 个元素无前驱元素，最后一个元素无后继元素，所以在对应的链接存储中，第 1 个结点的前驱指针域为空，最后一个结点的后继指针域为空。

在单链表中，由于每个结点只包含有一个指向后继结点的指针，所以当访问过一个结点后，只能接着访问它的后继结点，而无法访问它的前驱结点。在双向链表中，由于每个结点既包含有一个指向后继结点的指针，又包含有一个指向前驱结点的指针，所以当访问过一个结点后，既可以依次向后访问每一个结点，也可以依次向前访问每一个结点。

在线性表的链接存储中，存储第 1 个元素的结点称为表头结点，存储最后一个元素的结点称为表尾结点，其余为中间结点。每个链接表都需要设置一个指针指向表头结点，被称为表头指针。虽然表头指针只指向表头结点，但从表头指针出发，沿着结点的链（即指针域的值）可以依次访问到每一个结点，所以通常就以表头指针来命名一个链接表。若单链表的表头指针为 H，双链表的表头指针为 B，则可分别称它们为 H 单链表和 B 双链表。

在线性表的顺序存储中，逻辑上相邻的元素，其对应的存储位置也相邻，所以当进行插入或删除运算时，通常需要平均移动半个表的元素，这是相当费时的操作。在线性表的链接存储中，逻辑上相邻的元素，其对应的存储位置是通过指针来链接的，因而每个结点的存储位置可以任意安排，不必要求相邻，所以当进行插入或删除运算时，只需修改相关结点的指针域即可，这是既方便又省时的操作，灵活性强。由于链接表的每个结点带有指针域，因而在存储空间上比顺序存储要付出较大的代价。

3. 在单链表上的插入和删除操作

在单链表中插入和删除结点，如图 2-6 所示。

在 a 结点（即存放元素 a 的结点的简称；另外，有时也用该结点的地址称该结点，把 a 结点称为 p 结点，即 p 指针所指向的结点）的后面插入 b 结点的前后状态，其插入操作的过程如下。
(1) 将 a 结点指针域的值 q（即指向后继 c 结点的指针）赋给 b 结点的指针域。
