{
    "entities": [
        {
            "type": "数据结构",
            "ID": "01DS001",
            "name": "数据结构",
            "attributes": {
                "难度": "入门",
                "内容": "研究从解决现实问题中抽象出来的数据如何在计算机系统中很好地表示、存取和处理的方法；数据以及相互之间的联系；用二元组B=(K,R)表示，由数据元素的集合K和K上二元关系的集合R所组成；有数据的逻辑结构和数据的存储结构；包括集合、线、树、图等基本结构；存储方法有顺序、链接、索引、散列等",
                "存储开销": null,
                "核心特性": null,
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "数据结构",
            "ID": "01DS002",
            "name": "字符串",
            "attributes": {
                "难度": "中等",
                "内容": "带有一点结构的复杂数据；字符顺序排列的线性结构；一种特殊的一维字符数组类型；以空字符'0'结束；操作主要有求串长度、串复制、两串连接和两串比较",
                "存储开销": "随长度变化",
                "核心特性": "有序性, 顺序排列",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "数据结构",
            "ID": "01DS003",
            "name": "记录",
            "attributes": {
                "难度": "入门",
                "内容": "带有一点结构的复杂数据；数据处理领域组织数据的基本单位；由一个或多个数据项组成；结构类型；逻辑上是集合结构，物理存储上是顺序结构；在C/C++中称为结构(struct)",
                "存储开销": "各成员占用存储空间之和",
                "核心特性": "成员组合",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "数据结构",
            "ID": "01DS005",
            "name": "线性结构",
            "attributes": {
                "难度": "入门",
                "内容": "数据元素之间的1对1联系，即线性关系；每个数据元素有且仅有一个直接前驱（除第1个外），有且仅有一个直接后继（除最后一个外）；是树形结构的特殊情况",
                "存储开销": null,
                "核心特性": "1:1关系",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "数据结构",
            "ID": "01DS006",
            "name": "树形结构",
            "attributes": {
                "难度": "中等",
                "内容": "数据元素之间的1对N（N≥0）联系，即层次关系；每个结点有且只有一个前驱（除树根外），但可以有任意多个后继；是图形结构的特殊情况",
                "存储开销": null,
                "核心特性": "1:N关系, 层次关系",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "数据结构",
            "ID": "01DS007",
            "name": "图形结构",
            "attributes": {
                "难度": "中等",
                "内容": "结点之间的联系是M对N（M≥0, N≥0）联系，即网状关系；每个结点可以有任意多个前驱和任意多个后继结点",
                "存储开销": null,
                "核心特性": "M:N关系, 网状关系",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "数据结构",
            "ID": "01DS009",
            "name": "文件",
            "attributes": {
                "难度": "入门",
                "内容": "按位置有序的数据集合；在计算机中存储在外存上；存储结构由操作系统自动实现；单从数据排列位置考虑，可认为具有线性结构；分为字符文件和字节文件",
                "存储开销": "随内容变化",
                "核心特性": "有序性, 外部存储",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "数据结构",
            "ID": "01DS010",
            "name": "栈",
            "attributes": {
                "难度": "入门",
                "内容": "可以通过使用...技术转化为非递归算法（堆栈）",
                "存储开销": null,
                "核心特性": "后进先出 (LIFO)",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "数据结构",
            "ID": "01DS011",
            "name": "单链表",
            "attributes": {
                "难度": "入门",
                "内容": "通过指向自身类型的指针next把该类型的结点（对象）链接起来形成",
                "存储开销": "每个结点包含数据大小加指针大小",
                "核心特性": "链接存储, 非顺序物理地址",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "数据结构",
            "ID": "01DS012",
            "name": "数组",
            "attributes": {
                "难度": "入门",
                "内容": "结构类型；数目固定的具有同一类型的数据元素的顺序组合；按照数组中每个元素的下标位置可认为数组具有线性结构；存储结构是顺序结构",
                "存储开销": "元素个数 * 元素大小",
                "核心特性": "固定大小, 同一元素类型, 顺序存储, 可索引",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "01ALG001",
            "name": "算法",
            "attributes": {
                "难度": "入门",
                "内容": "解决特定问题或执行特定计算而设计的一系列明确、有限的步骤；解决特定问题的方法；包含数据结构的基本操作、逻辑设计与应用；实质上是针对所处理问题的需要，在数据的逻辑结构和存储结构的基础上施加的一种运算",
                "时间复杂度": null,
                "空间复杂度": null,
                "设计思想": "包含数据结构的基本操作, 逻辑设计与应用",
                "适用场景": "解决特定问题",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "01ALG004",
            "name": "排序算法",
            "attributes": {
                "难度": "入门",
                "内容": "解决数组排序问题的算法；非数值算法",
                "时间复杂度": null,
                "空间复杂度": null,
                "设计思想": null,
                "适用场景": "数组排序, 数据处理",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "01ALG005",
            "name": "查找算法",
            "attributes": {
                "难度": "入门",
                "内容": "非数值算法",
                "时间复杂度": null,
                "空间复杂度": null,
                "设计思想": null,
                "适用场景": "数据处理",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "01ALG006",
            "name": "插入算法",
            "attributes": {
                "难度": "入门",
                "内容": "非数值算法",
                "时间复杂度": null,
                "空间复杂度": null,
                "设计思想": null,
                "适用场景": "数据处理",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "01ALG007",
            "name": "删除算法",
            "attributes": {
                "难度": "入门",
                "内容": "非数值算法",
                "时间复杂度": null,
                "空间复杂度": null,
                "设计思想": null,
                "适用场景": "数据处理",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "01ALG008",
            "name": "遍历算法",
            "attributes": {
                "难度": "入门",
                "内容": "非数值算法",
                "时间复杂度": null,
                "空间复杂度": null,
                "设计思想": null,
                "适用场景": "数据处理",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "01ALG009",
            "name": "递归算法",
            "attributes": {
                "难度": "中等",
                "内容": "函数直接或间接地调用自身",
                "时间复杂度": null,
                "空间复杂度": "与递归所使用的工作栈空间的大小有关",
                "设计思想": "递归",
                "适用场景": null,
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "01ALG010",
            "name": "非递归算法",
            "attributes": {
                "难度": "中等",
                "内容": "通过使用循环、堆栈等技术将递归算法转化而来",
                "时间复杂度": null,
                "空间复杂度": "可能比递归算法需要较少的存储单元",
                "设计思想": "迭代",
                "适用场景": null,
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "01ALG013",
            "name": "简单选择排序",
            "attributes": {
                "难度": "入门",
                "内容": "在b[i]~b[n-1]之间顺序查找出具有最小值的元素b[k]，然后交换b[i]和b[k]的值",
                "时间复杂度": "O(n^2)",
                "空间复杂度": "O(1)",
                "设计思想": "选择, 交换",
                "适用场景": "数组排序",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "01ALG014",
            "name": "顺序查找",
            "attributes": {
                "难度": "入门",
                "内容": "从一维数组a[n]中顺序查找其值等于给定值item的元素",
                "时间复杂度": "最好 O(1), 最差 O(n), 平均 O(n)",
                "空间复杂度": "O(1)",
                "设计思想": "线性扫描",
                "适用场景": "数组查找",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "01ALG015",
            "name": "二分查找",
            "attributes": {
                "难度": "入门",
                "内容": "在有序表上进行",
                "时间复杂度": "O(lgn)",
                "空间复杂度": "O(1)",
                "设计思想": "分治, 比较",
                "适用场景": "有序表查找",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "01ALG016",
            "name": "快速排序",
            "attributes": {
                "难度": "中等",
                "内容": null,
                "时间复杂度": null,
                "空间复杂度": "O(logn)",
                "设计思想": "分治, 递归",
                "适用场景": "数组排序",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "01ALG017",
            "name": "归并排序",
            "attributes": {
                "难度": "中等",
                "内容": null,
                "时间复杂度": null,
                "空间复杂度": "O(n)",
                "设计思想": "分治, 合并",
                "适用场景": "数组/链表排序",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "01CON010",
            "name": "顺序存储",
            "attributes": {
                "难度": "入门",
                "内容": "数据结构存储方法之一；使数据在存储器中表现出相应的结构；与数据的存储结构对应；数组和记录的物理存储是顺序结构",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "01CON011",
            "name": "链接存储",
            "attributes": {
                "难度": "入门",
                "内容": "数据结构存储方法之一；使数据在存储器中表现出相应的结构；与数据的存储结构对应",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "01CON012",
            "name": "索引存储",
            "attributes": {
                "难度": "入门",
                "内容": "数据结构存储方法之一；使数据在存储器中表现出相应的结构；与数据的存储结构对应",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "01CON013",
            "name": "散列存储",
            "attributes": {
                "难度": "入门",
                "内容": "数据结构存储方法之一；使数据在存储器中表现出相应的结构；与数据的存储结构对应",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "01CON014",
            "name": "数据处理",
            "attributes": {
                "难度": "入门",
                "内容": "利用计算机对数据进行存储、检索、插入、删除、合并、拆分、排序、统计、计算、转换、输入、输出等的处理过程",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "01CON015",
            "name": "数据元素",
            "attributes": {
                "难度": "入门",
                "内容": "一个数据整体中相对独立的单位；简称元素；对于一条记录信息来说，它是所属文件的一个数据元素",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "01CON016",
            "name": "数据项",
            "attributes": {
                "难度": "入门",
                "内容": "一个数据记录由一个或多个数据项组成；可以是简单数据项或组合数据项；记录中的每个数据元素在许多应用场合都被组织成记录的结构，该结构由数据项组成",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "01CON017",
            "name": "简单数据项",
            "attributes": {
                "难度": "入门",
                "内容": "不可再分的数据项，如一个数值、字符等",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "01CON018",
            "name": "组合数据项",
            "attributes": {
                "难度": "入门",
                "内容": "可以再分的数据项，如一个字符串、数组、记录、对象等",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "01CON019",
            "name": "关键数据项",
            "attributes": {
                "难度": "入门",
                "内容": "在一个表或文件中，所有记录的某个数据项的对应值均不同，则每个值就能够唯一地标识一个记录；简称关键项",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "01CON020",
            "name": "关键字",
            "attributes": {
                "难度": "入门",
                "内容": "关键项中的每个值；用来代表所在记录",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "01CON021",
            "name": "组合关键项",
            "attributes": {
                "难度": "入门",
                "内容": "当没有单一关键项时，可把多个有关的数据项联合起来构成；用组合关键项中的每一个组合值来唯一地标识一个记录",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "01CON022",
            "name": "数据的逻辑结构",
            "attributes": {
                "难度": "中等",
                "内容": "数据之间的内在联系而抽象出来的；与如何利用计算机存储和处理无关；包括集合、线、树、图等基本结构",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "01CON023",
            "name": "数据的存储结构",
            "attributes": {
                "难度": "中等",
                "内容": "数据结构必须被存储到计算机存储器中才能够利用计算机处理；存储数据结构的方法；每种存储方法都使数据在存储器中表现出相应的结构；又称物理结构；包括顺序、链接、索引、散列等基本形式",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "01CON024",
            "name": "二元组",
            "attributes": {
                "难度": "入门",
                "内容": "用于更确切地描述一种数据结构；表示为B=(K,R)，由数据元素的集合K和K上二元关系的集合R所组成",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "01CON025",
            "name": "数据元素的集合K",
            "attributes": {
                "难度": "入门",
                "内容": "二元组B=(K,R)的一部分；表示数据结构中的数据元素的集合",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "01CON026",
            "name": "二元关系的集合R",
            "attributes": {
                "难度": "入门",
                "内容": "二元组B=(K,R)的一部分；表示数据结构中数据元素之间二元关系的集合；简称关系",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "01CON027",
            "name": "序偶",
            "attributes": {
                "难度": "入门",
                "内容": "关系R中的一个组成部分；表示为<x,y> (x,y ∈ K)；x是第一元素，y是第二元素",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "01CON028",
            "name": "第一元素",
            "attributes": {
                "难度": "入门",
                "内容": "序偶<x,y>中的x；是第二元素的直接前驱",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "01CON029",
            "name": "第二元素",
            "attributes": {
                "难度": "入门",
                "内容": "序偶<x,y>中的y；是第一元素的直接后继",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "01CON030",
            "name": "直接前驱",
            "attributes": {
                "难度": "入门",
                "内容": "序偶<x,y>中的x被称为y的直接前驱；简称前驱",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "01CON031",
            "name": "直接后继",
            "attributes": {
                "难度": "入门",
                "内容": "序偶<x,y>中的y被称为x的直接后继；简称后继",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "01CON032",
            "name": "图形表示",
            "attributes": {
                "难度": "入门",
                "内容": "数据结构的一种形象表示方法；图形中的每个结点对应一个数据元素，带箭头的连线对应关系中的一个序偶",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "01CON033",
            "name": "结点",
            "attributes": {
                "难度": "入门",
                "内容": "图形表示数据结构中的一个元素；又叫顶点",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "01CON034",
            "name": "有向边",
            "attributes": {
                "难度": "入门",
                "content": "图形表示数据结构中连接两个结点的带箭头的连线；对应关系中的一个序偶；又称为弧",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "01CON035",
            "name": "起始结点",
            "attributes": {
                "难度": "入门",
                "内容": "有向边的开始结点；对应序偶的第一元素",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "01CON036",
            "name": "终止结点",
            "attributes": {
                "难度": "入门",
                "内容": "有向边的结束结点，箭头所指向的结点；对应序偶的第二元素",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "01CON037",
            "name": "箭头",
            "attributes": {
                "难度": "入门",
                "内容": "有向边的一部分，指向终止结点",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "01CON038",
            "name": "无序对",
            "attributes": {
                "难度": "入门",
                "内容": "用于代替两个对称的序偶<x,y>和<y,x>；表示为(x,y)或(y,x)",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "01CON039",
            "name": "无向边",
            "attributes": {
                "难度": "入门",
                "内容": "用于代替两个相反的有向边；对应关系中的一个无序对",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "01CON040",
            "name": "树根结点",
            "attributes": {
                "难度": "入门",
                "内容": "树形结构中最上面的一个没有前驱只有后继的结点；是一种特殊的树枝结点",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "01CON041",
            "name": "树叶结点",
            "attributes": {
                "难度": "入门",
                "内容": "树形结构中最下面一层的只有前驱没有后继的结点；可看做具有0个后继结点",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "01CON042",
            "name": "树枝结点",
            "attributes": {
                "难度": "入门",
                "内容": "树形结构中除树根和树叶之外的结点；树根结点是一种特殊的树枝结点",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "01CON043",
            "name": "数据类型",
            "attributes": {
                "难度": "入门",
                "内容": "对数据的取值范围、数据元素之间的结构以及允许施加操作的一种总体描述；每一种计算机设计语言都定义有自己的数据类型；可分为简单类型和结构类型两大类",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "01CON044",
            "name": "简单类型",
            "attributes": {
                "难度": "入门",
                "内容": "数据类型的一种；其中的每个数据都是无法再分割的整体",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "01CON045",
            "name": "结构类型",
            "attributes": {
                "难度": "入门",
                "内容": "数据类型的一种；由简单类型数据按照一定的规则构造而成；可以包含结构类型；数据可以分解为若干个简单数据或结构数据",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "01CON046",
            "name": "整数类型",
            "attributes": {
                "难度": "入门",
                "内容": "简单类型的一种；有短整型、整型、长整型；表示不同范围的整数",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "01CON047",
            "name": "实数类型",
            "attributes": {
                "难度": "入门",
                "内容": "简单类型的一种；又称浮点类型；包括float, double, long double；表示带小数点的数",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "01CON048",
            "name": "枚举类型",
            "attributes": {
                "难度": "入门",
                "内容": "简单类型的一种；用户自定义类型",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "01CON049",
            "name": "字符类型",
            "attributes": {
                "难度": "入门",
                "内容": "简单类型的一种；表示ASCII字符集和汉字区位码字符集；可以被看作一种整数类型",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "01CON050",
            "name": "指针类型",
            "attributes": {
                "难度": "入门",
                "内容": "简单类型的一种；用来表示内存中存储单元（字节）的位置（地址）；基类型可以为任何类型；用一个类型标识符后缀一个星号(*)表示",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "01CON051",
            "name": "类",
            "attributes": {
                "难度": "入门",
                "内容": "C++语言中实现抽象数据类型的方式；包含数据部分和操作部分；支持私有、保护、公共成员",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "01CON052",
            "name": "型",
            "attributes": {
                "难度": "入门",
                "内容": "数据类型相关概念；指数据类型的结构和定义",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "01CON053",
            "name": "值",
            "attributes": {
                "难度": "入门",
                "内容": "数据类型相关概念；指一种数据类型中的任一具体数据；又称为实例",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "01CON054",
            "name": "实例",
            "attributes": {
                "难度": "入门",
                "内容": "数据类型相关概念；指一种数据类型中的任一具体数据；又称为值；数据对象属于一种数据类型中的特定实例",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "01CON055",
            "name": "抽象数据类型",
            "attributes": {
                "难度": "入门",
                "内容": " Abstract Data Type, ADT；由一种数据结构和在其上的所有操作（运算）所组成；定义其数据的逻辑结构和操作说明，不考虑存储结构和具体实现；具有通用性和可移植性；在C++中通过“类”类型实现",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "01CON056",
            "name": "操作 (ADT)",
            "attributes": {
                "难度": "入门",
                "内容": "抽象数据类型的一部分；在数据结构上施加的运算",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "01CON058",
            "name": "私有 (private)",
            "attributes": {
                "难度": "入门",
                "内容": "C++类成员访问权限修饰符；数据部分通常定义为私有成员，只允许给该类或派生类直接使用",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "01CON059",
            "name": "保护 (protected)",
            "attributes": {
                "难度": "入门",
                "内容": "C++类成员访问权限修饰符；数据部分通常定义为保护成员，只允许给该类或派生类直接使用",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "01CON060",
            "name": "公共 (public)",
            "attributes": {
                "难度": "入门",
                "内容": "C++类成员访问权限修饰符；操作部分通常定义为公共成员函数，既可以提供给该类或派生类使用也可以提供给其他的类或函数使用",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "01CON061",
            "name": "数据成员",
            "attributes": {
                "难度": "入门",
                "内容": "C++类的一部分；通常定义为类的私有或保护成员；构成类的数据部分",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "01CON062",
            "name": "成员函数",
            "attributes": {
                "难度": "入门",
                "内容": "C++类的一部分；通常定义为类的公共成员；构成类的操作部分；只给出操作说明（函数声明）",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "01CON063",
            "name": "信息隐藏",
            "attributes": {
                "难度": "入门",
                "内容": "面向对象程序设计思想之一；通过将数据成员定义为私有或保护实现",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "01CON064",
            "name": "封装",
            "attributes": {
                "难度": "入门",
                "内容": "面向对象程序设计思想之一；通过将数据和操作封装在类中实现",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "01CON065",
            "name": "面向对象程序设计 (OOP)",
            "attributes": {
                "难度": "入门",
                "内容": "一种程序设计思想；符合信息隐藏和封装的思想；C++语言支持",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "01CON070",
            "name": "引用参数",
            "attributes": {
                "难度": "入门",
                "内容": "函数参数的一种方式；在参数类型和参数名之间使用&符号定义；函数被调用时，被看成对应的调用参数（实参）的别名；函数中访问它就是访问对应的实参；内容的改变将反映给对应的实参变量；C++语言增加的特性",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "01CON071",
            "name": "值参数",
            "attributes": {
                "难度": "入门",
                "内容": "函数参数的一种方式；函数被调用时，将为其分配存储空间并用对应实参的值初始化；在函数体中对值参数的访问与对应的实参无关；函数调用结束后自动释放存储空间；C语言和C++语言都支持",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "01CON072",
            "name": "数据对象",
            "attributes": {
                "难度": "入门",
                "content": "一种数据类型中的特定实例；简称对象；该数据类型可以是一般数据类型或抽象数据类型",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "01CON073",
            "name": "有穷性",
            "attributes": {
                "难度": "入门",
                "内容": "算法的特性之一；一个算法必须在执行有穷步之后结束",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "01CON074",
            "name": "确定性",
            "attributes": {
                "难度": "入门",
                "内容": "算法的特性之一；算法中的每一步都必须具有确切的含义，无二义性",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "01CON075",
            "name": "可行性",
            "attributes": {
                "难度": "入门",
                "内容": "算法的特性之一；算法中的每一步都必须是可行的，能够通过手工或机器接受的有限次操作在有限时间内实现",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "01CON076",
            "name": "输入",
            "attributes": {
                "难度": "入门",
                "内容": "算法的特性之一；一个算法可以有0个、1个或多个输入量，在算法被执行之前提供给算法",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "01CON077",
            "name": "输出",
            "attributes": {
                "难度": "入门",
                "内容": "算法的特性之一；一个算法执行结束后至少要有一个输出量，是利用算法对输入量进行运算和处理的结果",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "01CON078",
            "name": "算法描述",
            "attributes": {
                "难度": "入门",
                "内容": "借助各种工具描述算法；可以采用文字叙述、传统流程图、N-S图或PAD图等；最终必须采用一种程序设计语言编写为程序",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "01CON079",
            "name": "流程图",
            "attributes": {
                "难度": "入门",
                "内容": "算法描述工具之一",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "01CON080",
            "name": "N-S图",
            "attributes": {
                "难度": "入门",
                "内容": "算法描述工具之一",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "01CON081",
            "name": "PAD图",
            "attributes": {
                "难度": "入门",
                "内容": "算法描述工具之一",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "01CON082",
            "name": "算法评价",
            "attributes": {
                "难度": "入门",
                "内容": "从解决同一问题的不同算法中选择出较为合适的一种；知道如何对现有算法进行改进或独立创新；评价方面包括正确性、稳健性、可读性、时间复杂度、空间复杂度",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "01CON086",
            "name": "时间复杂度",
            "attributes": {
                "难度": "中等",
                "内容": "算法有效性的量度之一；算法运行时间的相对度量；大致等于计算机执行一种简单操作所需的时间与算法中进行简单操作次数的乘积；通常把算法中包含简单操作次数的多少叫做该算法的时间复杂度；采用数量级的形式表示，如O(n^2)",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "01CON087",
            "name": "空间复杂度",
            "attributes": {
                "难度": "中等",
                "内容": "对一个算法在运行过程中临时占用存储空间大小的量度；衡量算法有效性的指标；包括存储算法本身、输入/输出数据、临时占用的存储空间；通常考虑为局部变量分配的存储空间大小；递归算法的空间复杂度为递归所使用的工作栈空间的大小；一般以数量级的形式给出",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "01CON088",
            "name": "简单操作",
            "attributes": {
                "难度": "中等",
                "内容": "算法运行时间的基础；计算机执行一种简单操作所需的时间随机器而异；算法中进行简单操作次数的多少叫做时间复杂度；示例：赋值、比较、计算、转向、返回、输入和输出",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "01CON089",
            "name": "运行时间",
            "attributes": {
                "难度": "中等",
                "内容": "算法在计算机上从开始到结束运行所花费的时间长短；大致等于简单操作时间与简单操作次数的乘积；时间复杂度是运行时间的相对度量",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "01CON090",
            "name": "数量级",
            "attributes": {
                "难度": "中等",
                "内容": "用于表示算法时间复杂度f(n)的大致增长速度；设f(n)的一个辅助函数g(n)，当n足够大时，存在常数A,B使A≤f(n)/g(n)≤B，则称g(n)是f(n)的同数量级函数；用大O表示法O(g(n))表示",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "01CON091",
            "name": "大O表示法",
            "attributes": {
                "难度": "中等",
                "内容": "表示算法时间复杂度数量级的方式；f(n)=O(g(n))表示f(n)同g(n)只相差一个常数倍；g(n)通常为f(n)的最高次幂；常见形式有O(1), O(sqrtn), O(n), O(lgn), O(ntimeslgn), O(n^2), O(n^3), O(2^n), O(n!)",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "01CON092",
            "name": "最好情况",
            "attributes": {
                "难度": "中等",
                "内容": "分析算法时间复杂度的情况之一；数据输入使得算法执行最快；最容易求出，但实际意义不大",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "01CON093",
            "name": "最差情况",
            "attributes": {
                "难度": "中等",
                "内容": "分析算法时间复杂度的情况之一；又称最坏情况；数据输入使得算法执行最慢；比最好情况有实际意义，可估计相对最长时间",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "01CON094",
            "name": "平均情况",
            "attributes": {
                "难度": "中等",
                "内容": "分析算法时间复杂度的情况之一；考虑所有可能输入数据的平均性能；计算较困难，但最有实际意义；通常用它来表示一个算法的时间复杂度",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "01CON095",
            "name": "额外空间需求",
            "attributes": {
                "难度": "中等",
                "内容": "与空间复杂度相关；算法在运行过程中临时占用的存储空间大小",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "01CON096",
            "name": "临时占用存储空间",
            "attributes": {
                "难度": "中等",
                "内容": "算法在运行过程中占用的存储空间；随算法不同而异；有的算法只需要少量临时工作单元，有的与问题规模n有关",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "01CON097",
            "name": "就地进行",
            "attributes": {
                "难度": "中等",
                "内容": "描述算法空间复杂度的性质；指算法只需要占用少量的临时工作单元，且不随问题规模大小改变（O(1)空间复杂度）；是节省存储的算法",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "01CON098",
            "name": "工作栈",
            "attributes": {
                "难度": "中等",
                "内容": "递归算法运行时需要的附加存储空间；占用较多的临时工作单元；其大小与递归调用的次数有关",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "01CON099",
            "name": "递归调用的次数",
            "attributes": {
                "难度": "中等",
                "内容": "影响递归算法空间复杂度的因素；空间复杂度等于一次调用分配的临时存储空间乘以被调用的次数",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "01CON100",
            "name": "指针值参数",
            "attributes": {
                "难度": "中等",
                "内容": "函数参数的一种方式；形参为数组时实质上是指针值参数；只需要分配存储地址指针的空间；对指针变量所指内容的修改将影响实参",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "01CON101",
            "name": "机器字长空间",
            "attributes": {
                "难度": "中等",
                "内容": "存储空间大小的单位；指针值参数需要分配一个机器字长空间",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "01CON102",
            "name": "运算符重载",
            "attributes": {
                "难度": "入门",
                "内容": "C++语言特性；允许对大多数运算符进行重载以满足应用需要；常用于自定义记录类型上对关系运算符进行重载",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "01CON103",
            "name": "关系运算符",
            "attributes": {
                "难度": "入门",
                "内容": "可以被重载的运算符；如相等运算符(==)、大于运算符(>)",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "01CON104",
            "name": "相等运算符 (==)",
            "attributes": {
                "难度": "入门",
                "内容": "可以被重载的关系运算符；用于比较两个实体是否相等",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "01CON105",
            "name": "大于运算符 (>)",
            "attributes": {
                "难度": "入门",
                "内容": "可以被重载的关系运算符；用于比较两个实体的大小",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "01CON106",
            "name": "成员选择操作符 (.)",
            "attributes": {
                "难度": "入门",
                "内容": "用于访问记录（结构）中的数据域；直接成员选择符；左面的操作数应为一个记录类型的对象（记录变量）",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "01CON107",
            "name": "成员选择操作符 (->)",
            "attributes": {
                "难度": "入门",
                "content": "用于访问记录（结构）中的数据域；间接成员选择符；左面的操作数应为一个指向记录类型对象的指针",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "01CON108",
            "name": "文件流类",
            "attributes": {
                "难度": "入门",
                "内容": "C++中用于文件操作的类；包括输入文件流类ifstream、输出文件流类ofstream和输入/输出文件流类fstream；利用它们可以定义文件流对象对外存文件进行输入/输出",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "01CON109",
            "name": "输入文件流类ifstream",
            "attributes": {
                "难度": "入门",
                "内容": "文件流类的一种；用于定义输入文件流对象；文件中的数据按位置从前到后依次流入内存文件缓冲区",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "01CON110",
            "name": "输出文件流类ofstream",
            "attributes": {
                "难度": "入门",
                "内容": "文件流类的一种；用于定义输出文件流对象；输出到文件中的数据首先写入文件缓冲区，再由操作系统写入外存文件",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "01CON111",
            "name": "输入/输出文件流类fstream",
            "attributes": {
                "难度": "入门",
                "内容": "文件流类的一种；用于定义输入/输出文件流对象；既可对文件进行输入操作也可进行输出操作",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "01CON112",
            "name": "文件指针",
            "attributes": {
                "难度": "入门",
                "内容": "在文件操作中指示当前读写位置；读写数据后自动后移；可使用seekg/seekp函数移动实现随机读写",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "01CON113",
            "name": "流类对象",
            "attributes": {
                "难度": "入门",
                "内容": "在C++中用户使用文件是通过定义与之相对应的文件流对象来实现的；通过文件流对象访问缓冲区，实现对文件的读写操作",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "01CON114",
            "name": "函数",
            "attributes": {
                "难度": "入门",
                "内容": "C/C++程序的基本组成单元之一；具有特定功能；可以不返回值(void)，也可以返回简单类型、记录类型或引用；可以相互调用；可以递归调用",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "01CON115",
            "name": "主函数",
            "attributes": {
                "难度": "入门",
                "内容": "C/C++程序中必有的一个函数模块；定名为main；程序执行时将自动从主函数开始",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "01CON116",
            "name": "重载 (函数)",
            "attributes": {
                "难度": "入门",
                "内容": "C++语言特性；允许函数名相同但参数列表（参数个数或类型）不同",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "01CON117",
            "name": "返回值 (函数)",
            "attributes": {
                "难度": "入门",
                "内容": "函数执行后返回的结果；可以是简单类型、记录类型或引用；void表示不返回值",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "01CON118",
            "name": "指针变量",
            "attributes": {
                "难度": "入门",
                "内容": "存储内存地址的变量；属于指针类型",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "01CON119",
            "name": "函数参数",
            "attributes": {
                "难度": "入门",
                "内容": "函数定义中用于接收外部数据的变量；可分为值参数和引用参数；用于函数调用时传递数据",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "数据结构",
            "ID": "02DS001",
            "name": "线性表",
            "attributes": {
                "难度": "入门",
                "内容": "线性表是具有相同属性的数据元素的一个有限序列，元素之间存在前后位置的线性有序关系。可以用二元组(A, R)表示，A为元素集合，R为元素间的前后关系。线性表长度可变。",
                "存储开销": null,
                "核心特性": "线性有序，长度可变",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": null
            }
        },
        {
            "type": "数据结构",
            "ID": "02DS002",
            "name": "顺序存储结构",
            "attributes": {
                "难度": "入门",
                "内容": "将线性表中的所有元素按照其逻辑顺序依次存储到一块连续的存储空间中，通常利用数组实现。第i个元素存储在第i-1个元素的后面。",
                "存储开销": "连续存储空间，大小为 n * sizeof(ElemType)，可能需要动态扩容。",
                "核心特性": "存储位置相邻与逻辑位置相邻一致，支持随机存取。",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": null
            }
        },
        {
            "type": "数据结构",
            "ID": "02DS003",
            "name": "链接存储结构",
            "attributes": {
                "难度": "入门",
                "内容": "每个存储结点不仅含有所存元素本身的信息（值域），而且含有元素之间逻辑关系的信息（指针域），通过指针链接逻辑上相邻的元素。结点的存储位置可以任意安排。",
                "存储开销": "每个元素需要额外的空间存储指针域，总存储空间可能不连续。",
                "核心特性": "通过指针表示逻辑关系，存储位置不一定相邻，支持顺序存取，插入/删除灵活。",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": null
            }
        },
        {
            "type": "数据结构",
            "ID": "02DS004",
            "name": "数组",
            "attributes": {
                "难度": "入门",
                "内容": "一块可供用户使用的连续存储空间，通过下标访问元素。",
                "存储开销": "连续存储空间，大小固定或动态分配。",
                "核心特性": "基于下标的随机存取。",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": null
            }
        },
        {
            "type": "数据结构",
            "ID": "02DS005",
            "name": "链表",
            "attributes": {
                "难度": "入门",
                "内容": "数据的链接存储表示，由一系列通过指针连接的结点组成。每个结点包含数据域和指针域。",
                "存储开销": "每个结点包含数据和指针域，相对于顺序存储，每个元素有额外的指针开销。",
                "核心特性": "灵活的插入和删除操作，顺序存取。",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": null
            }
        },
        {
            "type": "数据结构",
            "ID": "02DS006",
            "name": "单链表",
            "attributes": {
                "难度": "入门",
                "内容": "链表的一种，每个结点只含有一个指向其后继结点的指针域。",
                "存储开销": "每个结点需要一个指针域。",
                "核心特性": "只能从前往后依次访问，插入/删除只需修改相关结点指针。",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": null
            }
        },
        {
            "type": "数据结构",
            "ID": "02DS007",
            "name": "双向链表",
            "attributes": {
                "难度": "中等",
                "内容": "链表的一种，每个结点含有指向其前驱结点和后继结点的两个指针域。",
                "存储开销": "每个结点需要两个指针域。",
                "核心特性": "可以向前和向后两个方向遍历，插入/删除需修改前后结点指针。",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": null
            }
        },
        {
            "type": "数据结构",
            "ID": "02DS008",
            "name": "循环链表",
            "attributes": {
                "难度": "中等",
                "内容": "链表的一种，表尾结点的指针域指向表头结点或表头附加结点，形成一个环。",
                "存储开销": "与基础链表类型（单链或双向）相同。",
                "核心特性": "从任一结点出发可遍历整个链表，没有明显的表头和表尾界限（逻辑上）。",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": null
            }
        },
        {
            "type": "数据结构",
            "ID": "02DS009",
            "name": "带表头附加结点的线性链表",
            "attributes": {
                "难度": "中等",
                "内容": "在线性链表（单链表或双向链表）的表头增加一个不存储实际元素的附加结点，该结点的指针域指向第一个元素结点。表头指针指向此附加结点。",
                "存储开销": "额外增加一个结点的存储开销。",
                "核心特性": "简化表头插入和删除操作的处理，使其与在其他位置操作一致。",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": null
            }
        },
        {
            "type": "数据结构",
            "ID": "02DS010",
            "name": "多项式表示 (系数序列)",
            "attributes": {
                "难度": "中等",
                "内容": "用线性表存储多项式的所有项的系数，按照x指数的升序排列，即(a_0, a_1, ..., a_n)。通常采用顺序存储结构。",
                "存储开销": "需要存储从0次项到最高次项的所有系数，即使系数为0。",
                "核心特性": "基于指数的隐式顺序。",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": null
            }
        },
        {
            "type": "数据结构",
            "ID": "02DS011",
            "name": "多项式表示 (项列表)",
            "attributes": {
                "难度": "中等",
                "内容": "用线性表存储多项式中的所有非零项，每个元素包含系数域和指数域，并且按照指数的升序排列。通常采用链接存储结构。",
                "存储开销": "只存储非零项，节省空间（对于稀疏多项式），每个项需要额外空间存储指数。",
                "核心特性": "显式存储指数，按指数有序。",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": null
            }
        },
        {
            "type": "数据结构",
            "ID": "02DS012",
            "name": "商品库存表",
            "attributes": {
                "难度": "中等",
                "内容": "一个包含商品记录的线性表示例，每个记录包含商品代号、商品名称、最低库存量和当前库存量等字段。可以存储在文件或内存线性表中。",
                "存储开销": "取决于商品记录的大小和数量，以及线性表的存储方式。",
                "核心特性": "应用示例，记录集合。",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": null
            }
        },
        {
            "type": "算法",
            "ID": "02ALG001",
            "name": "线性表操作: 初始化",
            "attributes": {
                "难度": "入门",
                "内容": "将线性表置为空表，并完成存储空间的初始分配（对于动态分配）。",
                "时间复杂度": "O(1) 或 O(MaxSize) 取决于是否动态分配及初始化。",
                "空间复杂度": "O(1) (额外空间)",
                "设计思想": "设置初始状态",
                "适用场景": "创建新的空线性表",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": null
            }
        },
        {
            "type": "算法",
            "ID": "02ALG002",
            "name": "线性表操作: 清除",
            "attributes": {
                "难度": "入门",
                "内容": "删除线性表中的所有元素，使其成为一个空表，并释放占用的存储空间（对于动态分配）。",
                "时间复杂度": "O(n)",
                "空间复杂度": "O(1) (额外空间)",
                "设计思想": "资源回收",
                "适用场景": "销毁线性表或清空内容",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": null
            }
        },
        {
            "type": "算法",
            "ID": "02ALG003",
            "name": "线性表操作: 求长度",
            "attributes": {
                "难度": "入门",
                "内容": "返回线性表中所含元素的个数。",
                "时间复杂度": "O(1) (对于顺序存储或长度域的链表)，O(n) (对于需要遍历计数的链表)",
                "空间复杂度": "O(1)",
                "设计思想": "状态查询",
                "适用场景": "获取线性表大小",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": null
            }
        },
        {
            "type": "算法",
            "ID": "02ALG004",
            "name": "线性表操作: 判断空",
            "attributes": {
                "难度": "入门",
                "内容": "判断线性表是否包含任何元素。",
                "时间复杂度": "O(1)",
                "空间复杂度": "O(1)",
                "设计思想": "状态查询",
                "适用场景": "检查线性表是否为空",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": null
            }
        },
        {
            "type": "算法",
            "ID": "02ALG005",
            "name": "线性表操作: 获取元素",
            "attributes": {
                "难度": "入门",
                "内容": "返回线性表中指定位置（序号pos）的元素的值。",
                "时间复杂度": "O(1) (顺序存储)，O(n) (链表)",
                "空间复杂度": "O(1)",
                "设计思想": "按位置访问",
                "适用场景": "根据位置检索元素",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": null
            }
        },
        {
            "type": "算法",
            "ID": "02ALG006",
            "name": "线性表操作: 遍历",
            "attributes": {
                "难度": "入门",
                "内容": "从线性表的第一个元素起，按照元素之间的逻辑顺序，依次访问每一个元素，每个元素只被访问一次。",
                "时间复杂度": "O(n)",
                "空间复杂度": "O(1)",
                "设计思想": "序列访问",
                "适用场景": "打印、处理所有元素",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": null
            }
        },
        {
            "type": "算法",
            "ID": "02ALG007",
            "name": "线性表操作: 查找元素",
            "attributes": {
                "难度": "入门",
                "内容": "从线性表中查找具有给定值的第一个元素。",
                "时间复杂度": "O(n) (顺序查找)",
                "空间复杂度": "O(1)",
                "设计思想": "顺序查找",
                "适用场景": "根据值定位元素",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": null
            }
        },
        {
            "type": "算法",
            "ID": "02ALG008",
            "name": "线性表操作: 更新元素",
            "attributes": {
                "难度": "入门",
                "内容": "查找线性表中具有给定值的第一个元素，并用新值修改该元素。",
                "时间复杂度": "O(n) (顺序查找)",
                "空间复杂度": "O(1)",
                "设计思想": "查找并修改",
                "适用场景": "根据值更新元素内容",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": null
            }
        },
        {
            "type": "算法",
            "ID": "02ALG009",
            "name": "线性表操作: 插入元素",
            "attributes": {
                "难度": "中等",
                "内容": "向线性表中按给定条件（位置或保持有序）插入一个新元素。",
                "时间复杂度": "O(n) (顺序存储，需要移动元素；链表，需要查找位置，但插入本身O(1))，特殊情况如顺序表尾插入O(1)。",
                "空间复杂度": "O(1) (不考虑扩容开销)",
                "设计思想": "元素插入",
                "适用场景": "向线性表添加新元素",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": null
            }
        },
        {
            "type": "算法",
            "ID": "02ALG010",
            "name": "线性表操作: 删除元素",
            "attributes": {
                "难度": "中等",
                "内容": "从线性表中删除符合给定条件的第一个元素（位置或值）。",
                "时间复杂度": "O(n) (顺序存储，需要移动元素；链表，需要查找位置，但删除本身O(1))，特殊情况如顺序表尾删除O(1)。",
                "空间复杂度": "O(1) (不考虑缩容回收)",
                "设计思想": "元素移除",
                "适用场景": "从线性表移除元素",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": null
            }
        },
        {
            "type": "算法",
            "ID": "02ALG011",
            "name": "线性表操作: 排序",
            "attributes": {
                "难度": "中等",
                "内容": "对线性表中的所有元素按照给定条件（如值）重新排列，使之成为一个有序表。",
                "时间复杂度": "O(n^2) (对于简单的插入排序实现)",
                "空间复杂度": "O(1)",
                "设计思想": "元素重排",
                "适用场景": "使线性表有序化",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": null
            }
        },
        {
            "type": "算法",
            "ID": "02ALG012",
            "name": "插入排序",
            "attributes": {
                "难度": "中等",
                "内容": "一种简单的排序方法，将线性表分为有序表和无序表，每次从无序表中取出第一个元素，插入到前面有序表中的合适位置。",
                "时间复杂度": "最好情况O(n)，平均和最差情况O(n^2)。",
                "空间复杂度": "O(1)",
                "设计思想": "增量构建有序序列",
                "适用场景": "元素数量较少或基本有序的列表排序",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": null
            }
        },
        {
            "type": "算法",
            "ID": "02ALG013",
            "name": "多项式求值 (PolySum1)",
            "attributes": {
                "难度": "中等",
                "内容": "根据多项式系数序列（顺序存储或链接存储），计算给定x值时多项式的值。",
                "时间复杂度": "O(n * C) 其中n为项数，C为求幂复杂度。",
                "空间复杂度": "O(1)",
                "设计思想": "累加求和，逐项计算",
                "适用场景": "已知多项式系数，计算特定点的值",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": null
            }
        },
        {
            "type": "算法",
            "ID": "02ALG014",
            "name": "多项式求值 (PolySum2)",
            "attributes": {
                "难度": "中等",
                "内容": "根据多项式非零项列表（链接存储），计算给定x值时多项式的值。",
                "时间复杂度": "O(m * C) 其中m为非零项数，C为求幂复杂度。",
                "空间复杂度": "O(1)",
                "设计思想": "累加求和，逐非零项计算",
                "适用场景": "已知多项式非零项，计算特定点的值，尤其适用于稀疏多项式",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": null
            }
        },
        {
            "type": "算法",
            "ID": "02ALG015",
            "name": "多项式相加 (PolyAdd1)",
            "attributes": {
                "难度": "中等",
                "内容": "将表示两个多项式的非零项列表（链接存储）相加，生成结果多项式的非零项列表。通过比较指数、合并同类项实现。",
                "时间复杂度": "O((m+n)^2)，其中m和n为两个多项式的非零项数。",
                "空间复杂度": "O(m+n)",
                "设计思想": "合并有序列表，处理同类项",
                "适用场景": "多项式加法运算",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": null
            }
        },
        {
            "type": "算法",
            "ID": "02ALG016",
            "name": "多项式相加 (PolyAdd2)",
            "attributes": {
                "难度": "中等",
                "内容": "将表示两个多项式的非零项列表（链接存储）相加，生成结果多项式的非零项列表。通过直接链接新结点到结果列表表尾实现。",
                "时间复杂度": "O(m+n)，其中m和n为两个多项式的非零项数。",
                "空间复杂度": "O(m+n)",
                "设计思想": "高效合并有序列表，处理同类项，尾部追加",
                "适用场景": "多项式加法运算，比PolyAdd1效率更高",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": null
            }
        },
        {
            "type": "算法",
            "ID": "02ALG017",
            "name": "商品列表读取",
            "attributes": {
                "难度": "中等",
                "内容": "从商品库存文件读取商品记录，并将其存储到内存中的线性表（商品库存表）中。",
                "时间复杂度": "O(N) (取决于文件大小和线性表插入效率，若插入O(1)则为O(N))",
                "空间复杂度": "O(N) (存储商品记录到内存)",
                "设计思想": "文件I/O，数据加载",
                "适用场景": "将文件数据载入内存进行处理",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": null
            }
        },
        {
            "type": "算法",
            "ID": "02ALG018",
            "name": "商品文件写入",
            "attributes": {
                "难度": "中等",
                "内容": "将内存中的线性表（商品库存表）中的商品记录写入到文件中。",
                "时间复杂度": "O(N) (取决于线性表遍历和文件写入效率)",
                "空间复杂度": "O(1) (额外空间)",
                "设计思想": "文件I/O，数据持久化",
                "适用场景": "将处理后的数据保存到文件",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": null
            }
        },
        {
            "type": "概念",
            "ID": "02CON001",
            "name": "数据元素",
            "attributes": {
                "难度": "入门",
                "内容": "组成线性表的基本单位，具有相同属性。",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": null
            }
        },
        {
            "type": "概念",
            "ID": "02CON002",
            "name": "序列",
            "attributes": {
                "难度": "入门",
                "内容": "数据元素按照一定顺序排列形成的集合。",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": null
            }
        },
        {
            "type": "概念",
            "ID": "02CON003",
            "name": "线性表的长度",
            "attributes": {
                "难度": "入门",
                "内容": "线性表中所含元素的个数，用n表示，n>=0。",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": null
            }
        },
        {
            "type": "概念",
            "ID": "02CON004",
            "name": "空表",
            "attributes": {
                "难度": "入门",
                "内容": "长度为0的线性表，不包含任何元素。",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": null
            }
        },
        {
            "type": "概念",
            "ID": "02CON005",
            "name": "表头元素",
            "attributes": {
                "难度": "入门",
                "内容": "线性表中的第一个元素。",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": null
            }
        },
        {
            "type": "概念",
            "ID": "02CON006",
            "name": "表尾元素",
            "attributes": {
                "难度": "入门",
                "内容": "线性表中的最后一个元素。",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": null
            }
        },
        {
            "type": "概念",
            "ID": "02CON007",
            "name": "关键字",
            "attributes": {
                "难度": "入门",
                "内容": "数据元素中用于标识或排序的特定字段或属性。",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": null
            }
        },
        {
            "type": "概念",
            "ID": "02CON008",
            "name": "有序表",
            "attributes": {
                "难度": "入门",
                "内容": "线性表中存在按值的升序或降序排列的字段，该字段称为有序字段，该线性表称为有序表。",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": null
            }
        },
        {
            "type": "概念",
            "ID": "02CON009",
            "name": "无序表",
            "attributes": {
                "难度": "入门",
                "内容": "线性表中不存在任何有序字段。",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": null
            }
        },
        {
            "type": "概念",
            "ID": "02CON010",
            "name": "字段 (域, 属性)",
            "attributes": {
                "难度": "入门",
                "内容": "构成数据元素（如记录）的组成部分，每个字段存储特定类型的信息。",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": null
            }
        },
        {
            "type": "概念",
            "ID": "02CON011",
            "name": "抽象数据类型 (ADT)",
            "attributes": {
                "难度": "中等",
                "内容": "一个数学模型以及定义在该模型上的一组操作。它只描述数据结构的功能特性，不涉及具体实现细节。包括数据部分和操作部分。",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": null
            }
        },
        {
            "type": "概念",
            "ID": "02CON012",
            "name": "存储类型",
            "attributes": {
                "难度": "入门",
                "内容": "数据结构在计算机存储器中的具体存储方式，如顺序、链接、散列、索引等。",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": null
            }
        },
        {
            "type": "概念",
            "ID": "02CON013",
            "name": "指针",
            "attributes": {
                "难度": "中等",
                "内容": "存储另一个变量内存地址的变量，用于在链接存储结构中表示元素之间的逻辑关系。",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": null
            }
        },
        {
            "type": "概念",
            "ID": "02CON014",
            "name": "NULL (常量)",
            "attributes": {
                "难度": "入门",
                "内容": "表示指针不指向任何有效存储位置的常量，通常用于链表的末尾或空指针域。",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": null
            }
        },
        {
            "type": "概念",
            "ID": "02CON015",
            "name": "静态分配",
            "attributes": {
                "难度": "入门",
                "内容": "在程序编译时确定存储空间大小并分配，生命周期通常与程序运行相同。",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": null
            }
        },
        {
            "type": "概念",
            "ID": "02CON016",
            "name": "动态分配",
            "attributes": {
                "难度": "中等",
                "内容": "在程序运行时根据需要分配存储空间，大小和生命周期可在运行时控制（如使用new/delete或malloc/free）。",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": null
            }
        },
        {
            "type": "概念",
            "ID": "02CON017",
            "name": "随机存取机制",
            "attributes": {
                "难度": "入门",
                "内容": "可以直接访问数据结构中的任何元素，存取时间与元素位置无关。",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": null
            }
        },
        {
            "type": "概念",
            "ID": "02CON018",
            "name": "顺序存取机制",
            "attributes": {
                "难度": "入门",
                "内容": "访问数据结构中的元素需要从特定起始位置（如表头）开始，并按照元素的逻辑顺序依次访问。",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": null
            }
        },
        {
            "type": "概念",
            "ID": "02CON019",
            "name": "多链表",
            "attributes": {
                "难度": "入门",
                "内容": "链表的一种，每个结点包含多个指针域。",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": null
            }
        },
        {
            "type": "概念",
            "ID": "02CON020",
            "name": "多项式 (数学概念)",
            "attributes": {
                "难度": "入门",
                "内容": "由变量、系数以及算子（如加、减、乘）组成的表达式，形式如 P(x) = a_0 + a_1*x^1 + ... + a_n*x^n。",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": null
            }
        },
        {
            "type": "概念",
            "ID": "02CON021",
            "name": "合并过程",
            "attributes": {
                "难度": "入门",
                "内容": "将两个或多个有序序列组合成一个有序序列的过程，常用于排序和多项式运算。",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": null
            }
        },
        {
            "type": "概念",
            "ID": "02CON022",
            "name": "运算符重载",
            "attributes": {
                "难度": "中等",
                "内容": "允许用户自定义运算符的行为，使其能够应用于自定义的数据类型（如结构体）。",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": null
            }
        },
        {
            "type": "数据结构",
            "ID": "03DS001",
            "name": "集合",
            "attributes": {
                "难度": "入门",
                "内容": "由具有相同属性的数据元素组合而成，数据之间没有任何前驱和后继关系。集合中的元素可以按任何次序排列，集合的长度是变化的。",
                "存储开销": "未知",
                "核心特性": "无序性，长度可变",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "数据结构",
            "ID": "03DS002",
            "name": "稀疏矩阵",
            "attributes": {
                "难度": "中等",
                "内容": "矩阵中的一种特殊情况，其非零元素的个数远远小于零元素的个数。",
                "存储开销": "节省 (相比二维数组)",
                "核心特性": "非零元素少",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "数据结构",
            "ID": "03DS003",
            "name": "广义表",
            "attributes": {
                "难度": "高级",
                "内容": "它是线性表的推广。一个广义表是n(n⩾0)个元素的一个有限序列，元素可以是某一确定类型的对象（单元素）或由单元素构成的表（子表）。广义表的定义是递归的，是一种递归的数据结构。",
                "存储开销": "未知",
                "核心特性": "递归结构",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "数据结构",
            "ID": "03DS004",
            "name": "线性表",
            "attributes": {
                "难度": "入门",
                "内容": "n(n⩾0)个元素的有限序列，元素之间有前驱和后继关系。",
                "存储开销": "未知",
                "核心特性": "有序性",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "数据结构",
            "ID": "03DS005",
            "name": "数组",
            "attributes": {
                "难度": "入门",
                "内容": "用于存储集合元素或稀疏矩阵三元组的顺序结构。",
                "存储开销": "固定",
                "核心特性": "可索引性, 随机访问",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "数据结构",
            "ID": "03DS006",
            "name": "单链表",
            "attributes": {
                "难度": "入门",
                "内容": "由存储结点之间的链接实现的存储结构，通常采用单链表。每个元素对应单链表中的一个结点。",
                "存储开销": "可变, 每个结点有额外指针开销",
                "核心特性": "动态可变长度, 顺序访问",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "03ALG001",
            "name": "顺序查找",
            "attributes": {
                "难度": "入门",
                "内容": "从集合中顺序查找值等于待查值item的元素。",
                "时间复杂度": "O(n)",
                "空间复杂度": "O(1)",
                "设计思想": "遍历",
                "适用场景": "无序或短列表",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "03ALG002",
            "name": "简单选择排序",
            "attributes": {
                "难度": "入门",
                "内容": "需要依次进行n-1次循环，每次把无序表中最小值与此表中第一个元素交换其值。",
                "时间复杂度": "O(n^2)",
                "空间复杂度": "O(1)",
                "设计思想": "选择, 交换",
                "适用场景": "小规模数据",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "03ALG003",
            "name": "集合顺序存储插入算法",
            "attributes": {
                "难度": "中等",
                "内容": "顺序查找集合中是否存在待插值，不存在且空间不足则动态重分配，然后插入到表尾，集合长度增1。",
                "时间复杂度": "O(n)",
                "空间复杂度": "O(MaxSize)",
                "设计思想": "查找后插入, 动态扩容",
                "适用场景": "集合顺序存储",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "03ALG004",
            "name": "集合顺序存储删除算法",
            "attributes": {
                "难度": "中等",
                "内容": "顺序查找待删值，若存在则由item带回并删除，把空出的位置用最后一个元素填补，集合长度减1，空间空余过多可释放一半。",
                "时间复杂度": "O(n)",
                "空间复杂度": "O(MaxSize)",
                "设计思想": "查找后删除, 填补, 动态缩容",
                "适用场景": "集合顺序存储",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "03ALG005",
            "name": "集合顺序存储并集算法",
            "attributes": {
                "难度": "中等",
                "内容": "将S1集合复制到S集合中，然后把S2中的每个元素依次插入到集合S中（重复元素不插入）。",
                "时间复杂度": "O(mn)",
                "空间复杂度": "O(MaxSize)",
                "设计思想": "复制, 插入",
                "适用场景": "集合顺序存储",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "03ALG006",
            "name": "集合顺序存储交集算法",
            "attributes": {
                "难度": "中等",
                "内容": "将存放结果的集合S变为空集，然后依次从S2集合中取出每一个元素，利用它去查找S1集合，若存在则把它写入交集S中。",
                "时间复杂度": "O(mn)",
                "空间复杂度": "O(MaxSize)",
                "设计思想": "遍历, 查找, 插入",
                "适用场景": "集合顺序存储",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "03ALG007",
            "name": "集合顺序存储差集算法",
            "attributes": {
                "难度": "中等",
                "内容": "将存放结果的集合S变为空集，然后依次从S1集合中取出每一个元素，利用它去查找S2集合，若不存在则把它写入差集S中。",
                "时间复杂度": "O(mn)",
                "空间复杂度": "O(MaxSize)",
                "设计思想": "遍历, 查找, 插入",
                "适用场景": "集合顺序存储",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "03ALG008",
            "name": "稀疏矩阵普通转置算法",
            "attributes": {
                "难度": "中等",
                "内容": "要对原矩阵的三元组数组进行n次扫描(n为原矩阵的列数)，每次扫描找出对应新矩阵某一行的三元组，行列值互换后写入新矩阵。",
                "时间复杂度": "O(nt)",
                "空间复杂度": "O(t)",
                "设计思想": "按列扫描, 互换写入",
                "适用场景": "稀疏矩阵顺序存储转置",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "03ALG009",
            "name": "稀疏矩阵快速转置算法",
            "attributes": {
                "难度": "中等",
                "内容": "对原矩阵三元组数组进行两次扫描，第一次统计每列非零元素个数并计算新位置，第二次按计算位置写入。",
                "时间复杂度": "O(n+t)",
                "空间复杂度": "O(n+t)",
                "设计思想": "计数, 定位, 写入",
                "适用场景": "稀疏矩阵顺序存储转置",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "03ALG010",
            "name": "稀疏矩阵加法算法（带行指针向量）",
            "attributes": {
                "难度": "中等",
                "内容": "合并两个矩阵对应行的单链表，对具有相同列号的结点进行加法运算，和为零则不保留，和不为零或列号不同则建立新结点链接到结果矩阵。",
                "时间复杂度": "O(t1+t2)",
                "空间复杂度": "O(t1+t2)",
                "设计思想": "合并链表, 按列相加",
                "适用场景": "带行指针向量的稀疏矩阵加法",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "03ALG011",
            "name": "求广义表长度算法",
            "attributes": {
                "难度": "中等",
                "内容": "递归算法，长度等于1加上表头结点的后继单链表的长度，空表长度为0。",
                "时间复杂度": "O(n)",
                "空间复杂度": "O(n)",
                "设计思想": "递归",
                "适用场景": "广义表",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "03ALG012",
            "name": "求广义表深度算法",
            "attributes": {
                "难度": "高级",
                "内容": "递归算法，深度等于所有子表中表的最大深度加1，若一个表为空或仅由单元素组成，则深度为1。",
                "时间复杂度": "O(n)",
                "空间复杂度": "O(m)",
                "设计思想": "递归, 遍历",
                "适用场景": "广义表",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "03ALG013",
            "name": "建立广义表存储结构算法",
            "attributes": {
                "难度": "高级",
                "内容": "递归算法，根据输入字符解析并建立单元素结点或子表结点，通过next和sublist域链接。",
                "时间复杂度": "O(n)",
                "空间复杂度": "O(n)",
                "设计思想": "递归, 解析输入",
                "适用场景": "根据特定格式输入建立广义表",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "03ALG014",
            "name": "打印输出广义表算法",
            "attributes": {
                "难度": "高级",
                "内容": "递归算法，根据结点类型和是否存在后继结点，格式化输出广义表内容。",
                "时间复杂度": "O(n)",
                "空间复杂度": "O(n)",
                "设计思想": "递归, 格式化输出",
                "适用场景": "打印广义表",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "03CON001",
            "name": "空集",
            "attributes": {
                "难度": "入门",
                "内容": "集合中数据元素的个数n=0时则为空集。",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "03CON002",
            "name": "抽象数据类型",
            "attributes": {
                "难度": "入门",
                "内容": "包括数据和操作两个部分。数据部分为一个集合，操作部分包括对集合进行的各种常用运算。",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "03CON003",
            "name": "顺序存储结构",
            "attributes": {
                "难度": "入门",
                "内容": "定义一个数组类型的对象来存储集合元素，同时定义变量存储当前集合长度和数组长度。",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "03CON004",
            "name": "链接存储结构",
            "attributes": {
                "难度": "入门",
                "内容": "通过存储结点之间的链接实现的存储结构，链接形成的结果称为链接表。",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "03CON005",
            "name": "矩阵",
            "attributes": {
                "难度": "入门",
                "内容": "一个具有m行n列的数表，共包含有m×n个数（元素），每个元素与一对行号和列号唯一对应。",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "03CON006",
            "name": "三元组线性表示",
            "attributes": {
                "难度": "中等",
                "内容": "对于稀疏矩阵中的每个非零元素，可用它所在的行号、列号以及元素值这三元组(i,j,a_ij)来表示，并按照行号为主序、列号为辅序进行排列构成线性表。",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "03CON007",
            "name": "三元组",
            "attributes": {
                "难度": "中等",
                "内容": "用来表示稀疏矩阵中的一个非零元素，包含行号、列号和元素值。",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "03CON008",
            "name": "带行指针向量的链接存储",
            "attributes": {
                "难度": "中等",
                "内容": "稀疏矩阵的一种链接存储方法，把具有相同行号的三元组结点按照列号从小到大链接成单链表，使用一个行指针向量保存每行的表头指针。",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "03CON009",
            "name": "十字链接存储",
            "attributes": {
                "难度": "高级",
                "内容": "稀疏矩阵的一种链接存储方法，既带行指针向量又带列指针向量，每个结点既处于同一行的单链表中，又处于同一列的单链表中。",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "03CON010",
            "name": "单元素",
            "attributes": {
                "难度": "入门",
                "内容": "广义表中的元素类型之一，是某一确定类型的对象。",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "03CON011",
            "name": "子表",
            "attributes": {
                "难度": "入门",
                "内容": "广义表中的元素类型之一，是由单元素构成的表。",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "03CON012",
            "name": "带表头附加结点",
            "attributes": {
                "难度": "中等",
                "内容": "广义表链接存储的一种表示方式，在表的第一个结点之前增加一个表结点（表头附加结点），其sublist域指向表头结点，next域为空。",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "03CON013",
            "name": "GLNode",
            "attributes": {
                "难度": "中等",
                "内容": "广义表链接存储中的结点类型定义，包含标志域(tag)、值域或子表指针域(union)、指向后继结点的指针域(next)。",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "03CON014",
            "name": "TripleNode",
            "attributes": {
                "难度": "中等",
                "内容": "稀疏矩阵带行指针向量链接存储中的结点类型定义，包含行号、列号、元素值和指向同一行下一个结点的指针域。",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "03CON015",
            "name": "CrossNode",
            "attributes": {
                "难度": "高级",
                "content": "稀疏矩阵十字链接存储中的结点类型定义，包含行号、列号、元素值、指向同一列下一个结点的指针域(down)和指向同一行下一个结点的指针域(right)。",
                "teachingVideo": "未知",
                "teachingMaterial": "未知",
                "politicalPoint": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "03CON016",
            "name": "稀疏矩阵乘法运算",
            "attributes": {
                "难度": "中等",
                "内容": "计算两个稀疏矩阵的乘积，结果仍是一个矩阵。",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "数据结构",
            "ID": "04DS001",
            "name": "线性表",
            "attributes": {
                "难度": "入门",
                "内容": "用于存储和组织数据的方式，定义了数据元素之间的逻辑关系及操作方式；栈和队列属于线性表。",
                "存储开销": "未知",
                "核心特性": "数据元素之间存在一对一的逻辑关系",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": null
            }
        },
        {
            "type": "数据结构",
            "ID": "04DS002",
            "name": "栈",
            "attributes": {
                "难度": "入门",
                "内容": "又称堆栈，一种运算受限的线性表，其限制是仅允许在表的一端（栈顶）进行插入和删除运算。",
                "存储开销": "未知",
                "核心特性": "后进先出（LIFO）",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": null
            }
        },
        {
            "type": "数据结构",
            "ID": "04DS003",
            "name": "队列",
            "attributes": {
                "难度": "入门",
                "内容": "简称队，一种运算受限的线性表，其限制是仅允许在表的一端（队尾）进行插入，而在表的另一端（队首）进行删除。",
                "存储开销": "未知",
                "核心特性": "先进先出（FIFO）",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": null
            }
        },
        {
            "type": "概念",
            "ID": "04CON001",
            "name": "栈顶",
            "attributes": {
                "难度": "入门",
                "内容": "对栈进行运算（插入和删除）的一端。",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": null
            }
        },
        {
            "type": "概念",
            "ID": "04CON002",
            "name": "栈底",
            "attributes": {
                "难度": "入门",
                "内容": "栈中与栈顶相对的另一端。",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": null
            }
        },
        {
            "type": "概念",
            "ID": "04CON003",
            "name": "后进先出表",
            "attributes": {
                "难度": "入门",
                "内容": "描述栈的特性，后进栈的元素必定先出栈（Last In First Out, LIFO）。",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": null
            }
        },
        {
            "type": "概念",
            "ID": "04CON004",
            "name": "抽象数据类型",
            "attributes": {
                "难度": "中等",
                "内容": "定义了数据结构的数据部分和操作部分，不涉及具体的存储结构实现。",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": null
            }
        },
        {
            "type": "概念",
            "ID": "04CON005",
            "name": "顺序存储结构",
            "attributes": {
                "难度": "入门",
                "内容": "使用一段连续的存储单元依次存储数据元素，通常用数组实现。",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": null
            }
        },
        {
            "type": "数据结构",
            "ID": "04DS004",
            "name": "数组",
            "attributes": {
                "难度": "入门",
                "内容": "一种顺序存储结构，用于存储固定大小的同类型元素集合，通过下标访问。",
                "存储开销": "连续分配，固定大小",
                "核心特性": "可索引，有序",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": null
            }
        },
        {
            "type": "概念",
            "ID": "04CON006",
            "name": "栈顶指针",
            "attributes": {
                "难度": "入门",
                "内容": "在顺序栈中，指示栈顶元素下标位置的整型变量；在链栈中，指向栈顶结点的指针。",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": null
            }
        },
        {
            "type": "数据结构",
            "ID": "04DS005",
            "name": "顺序栈",
            "attributes": {
                "难度": "入门",
                "内容": "采用顺序存储结构（数组）实现的栈，使用数组和栈顶指针来存储和管理元素。",
                "存储开销": "固定或动态分配的连续内存",
                "核心特性": "基于数组实现，栈顶操作时间复杂度O(1)",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": null
            }
        },
        {
            "type": "数据结构",
            "ID": "04DS006",
            "name": "单链表",
            "attributes": {
                "难度": "入门",
                "内容": "一种链接存储结构，由一系列结点组成，每个结点包含数据域和指向下一个结点的指针域。",
                "存储开销": "非连续分配，每个结点有额外指针开销",
                "核心特性": "动态大小，插入删除灵活（但访问慢）",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": null
            }
        },
        {
            "type": "概念",
            "ID": "04CON007",
            "name": "链接存储结构",
            "attributes": {
                "难度": "入门",
                "内容": "数据元素在内存中不必是连续的，通过指针连接各个元素。通常用链表实现。",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": null
            }
        },
        {
            "type": "数据结构",
            "ID": "04DS007",
            "name": "链栈",
            "attributes": {
                "难度": "入门",
                "内容": "采用链接存储结构（单链表）实现的栈，使用表头作为栈顶，由栈顶指针指向表头结点。",
                "存储开销": "动态分配，每个元素有额外指针开销",
                "核心特性": "基于链表实现，栈顶操作时间复杂度O(1)",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": null
            }
        },
        {
            "type": "算法",
            "ID": "04ALG001",
            "name": "括号配对检查算法",
            "attributes": {
                "难度": "入门",
                "内容": "扫描字符串（如程序代码），使用栈来检查大括号、方括号和圆括号是否按规则配对。左括号进栈，右括号与栈顶匹配则出栈。",
                "时间复杂度": "O(n)",
                "空间复杂度": "O(n)",
                "设计思想": "利用栈的后进先出特性",
                "适用场景": "编程语言语法检查、文本处理",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": null
            }
        },
        {
            "type": "概念",
            "ID": "04CON008",
            "name": "中缀表示法",
            "attributes": {
                "难度": "入门",
                "内容": "算术表达式的一种习惯表示方法，运算符位于两个操作数中间，需要考虑优先级和括号。",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": null
            }
        },
        {
            "type": "概念",
            "ID": "04CON009",
            "name": "后缀表示法",
            "attributes": {
                "难度": "入门",
                "内容": "又称逆波兰式，算术表达式的一种表示方法，运算符位于两个操作数后面，无需括号和优先级，计算过程简单。",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": null
            }
        },
        {
            "type": "概念",
            "ID": "04CON010",
            "name": "操作数",
            "attributes": {
                "难度": "入门",
                "内容": "算术表达式中参与运算的数据，可以是常量、变量或表达式。",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": null
            }
        },
        {
            "type": "概念",
            "ID": "04CON011",
            "name": "运算符",
            "attributes": {
                "难度": "入门",
                "内容": "算术表达式中表示运算类型的符号，如加、减、乘、除。",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": null
            }
        },
        {
            "type": "概念",
            "ID": "04CON012",
            "name": "优先级",
            "attributes": {
                "难度": "入门",
                "内容": "运算符的属性，决定了在没有括号的情况下，不同运算符的运算次序（如乘除高于加减）。",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": null
            }
        },
        {
            "type": "算法",
            "ID": "04ALG002",
            "name": "后缀表达式求值算法",
            "attributes": {
                "难度": "中等",
                "内容": "使用栈来计算后缀表达式的值。扫描表达式，操作数进栈，运算符弹出栈顶两个操作数运算后将结果进栈。",
                "时间复杂度": "O(n)",
                "空间复杂度": "O(n)",
                "设计思想": "利用栈的后进先出特性，简化计算顺序",
                "适用场景": "算术表达式计算",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": null
            }
        },
        {
            "type": "算法",
            "ID": "04ALG003",
            "name": "中缀表达式转换为后缀表达式算法",
            "attributes": {
                "难度": "中等",
                "内容": "使用运算符栈将中缀表达式转换为后缀表达式。操作数直接输出，运算符根据优先级和括号进出栈。",
                "时间复杂度": "O(n)",
                "空间复杂度": "O(n)",
                "设计思想": "利用栈管理运算符的优先级和顺序",
                "适用场景": "算术表达式计算前处理",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": null
            }
        },
        {
            "type": "概念",
            "ID": "04CON013",
            "name": "递归",
            "attributes": {
                "难度": "中等",
                "内容": "一种数学概念和解决问题的方法，通过求解与原问题具有同样解法的子问题来解决问题，包含终止条件。",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": null
            }
        },
        {
            "type": "算法",
            "ID": "04ALG004",
            "name": "递归算法",
            "attributes": {
                "难度": "中等",
                "内容": "根据递归条件直接或间接调用算法本身的算法。系统通常使用栈来实现递归函数的执行。",
                "时间复杂度": "取决于具体算法",
                "空间复杂度": "O(深度)",
                "设计思想": "分解问题为同类型子问题",
                "适用场景": "问题结构具有递归性质（如树、图遍历、分治法）",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": null
            }
        },
        {
            "type": "算法",
            "ID": "04ALG005",
            "name": "阶乘求解算法",
            "attributes": {
                "难度": "入门",
                "内容": "计算正整数n的阶乘（n!），递归定义为n * (n-1)!，0! = 1。",
                "时间复杂度": "O(n)",
                "空间复杂度": "O(n)",
                "设计思想": "递归",
                "适用场景": "计算阶乘",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": null
            }
        },
        {
            "type": "算法",
            "ID": "04ALG006",
            "name": "布尔量组合输出算法",
            "attributes": {
                "难度": "中等",
                "内容": "输出n个布尔量的所有可能的2^n种组合。递归实现，每次固定一个布尔量为0或1，然后递归处理剩余部分。",
                "时间复杂度": "O(n * 2^n)",
                "空间复杂度": "O(n)",
                "设计思想": "递归，回溯（隐式）",
                "适用场景": "枚举所有可能的布尔值组合",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": null
            }
        },
        {
            "type": "算法",
            "ID": "04ALG007",
            "name": "全排列算法",
            "attributes": {
                "难度": "中等",
                "内容": "输出n个元素的所有n!种全排列。递归实现，每次选择一个元素固定在当前位置，然后递归处理剩余元素的排列。",
                "时间复杂度": "O(n!)",
                "空间复杂度": "O(n)",
                "设计思想": "递归，回溯",
                "适用场景": "枚举所有可能的元素排列",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": null
            }
        },
        {
            "type": "算法",
            "ID": "04ALG008",
            "name": "迷宫求解算法",
            "attributes": {
                "难度": "中等",
                "内容": "寻找从迷宫入口到出口的路径。递归实现，从当前位置尝试东、南、西、北方向前进，若可通行且未访问，则递归调用，若找到路径则返回。",
                "时间复杂度": "O(m*n)",
                "空间复杂度": "O(m*n)",
                "设计思想": "递归，回溯，深度优先搜索（隐式）",
                "适用场景": "路径寻找问题",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": null
            }
        },
        {
            "type": "算法",
            "ID": "04ALG009",
            "name": "汉诺塔求解算法",
            "attributes": {
                "难度": "中等",
                "内容": "将n个圆盘从一个柱子借助另一个柱子移动到目标柱子，遵循规则。递归实现，将n个盘子的问题分解为两个n-1个盘子的问题。",
                "时间复杂度": "O(2^n)",
                "空间复杂度": "O(n)",
                "设计思想": "递归，分治",
                "适用场景": "经典的递归问题示例",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": null
            }
        },
        {
            "type": "概念",
            "ID": "04CON014",
            "name": "队尾",
            "attributes": {
                "难度": "入门",
                "内容": "队列中允许进行插入（进队）的一端。",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": null
            }
        },
        {
            "type": "概念",
            "ID": "04CON015",
            "name": "队首",
            "attributes": {
                "难度": "入门",
                "内容": "队列中允许进行删除（出队）的一端。",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": null
            }
        },
        {
            "type": "概念",
            "ID": "04CON016",
            "name": "先进先出表",
            "attributes": {
                "难度": "入门",
                "内容": "描述队列的特性，每个元素按照进入的次序离队（First In First Out, FIFO）。",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": null
            }
        },
        {
            "type": "概念",
            "ID": "04CON017",
            "name": "队首指针",
            "attributes": {
                "难度": "入门",
                "内容": "在顺序队列中，通常存储队首元素的前一个位置；在链队中，指向队首结点的指针。",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": null
            }
        },
        {
            "type": "概念",
            "ID": "04CON018",
            "name": "队尾指针",
            "attributes": {
                "难度": "入门",
                "内容": "在顺序队列中，存储队尾元素的位置；在链队中，指向队尾结点的指针。",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": null
            }
        },
        {
            "type": "数据结构",
            "ID": "04DS008",
            "name": "循环队列",
            "attributes": {
                "难度": "入门",
                "内容": "采用顺序存储结构实现的队列，将数组空间视为首尾相接的环，通过取模运算实现队首队尾指针的移动和空间的循环利用。",
                "存储开销": "固定或动态分配的连续内存",
                "核心特性": "基于数组实现，空间循环利用，队首队尾操作时间复杂度O(1)",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": null
            }
        },
        {
            "type": "数据结构",
            "ID": "04DS009",
            "name": "链接队列",
            "attributes": {
                "难度": "入门",
                "内容": "采用链接存储结构实现的队列，使用单链表，front指针指向队首，rear指针指向队尾。",
                "存储开销": "动态分配，每个元素有额外指针开销",
                "核心特性": "基于链表实现，动态大小，队首队尾操作时间复杂度O(1)",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": null
            }
        },
        {
            "type": "数据结构",
            "ID": "04DS010",
            "name": "优先级队列",
            "attributes": {
                "难度": "高级",
                "内容": "一种特殊的队列，每个元素带有优先级号，优先级最高的元素总在队首。插入和删除需要调整元素位置以维护优先级顺序。",
                "存储开销": "未知",
                "核心特性": "元素按优先级排序",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": null
            }
        },
        {
            "type": "数据结构",
            "ID": "04DS011",
            "name": "堆结构",
            "attributes": {
                "难度": "中等",
                "内容": "一种特殊的树形数据结构，常用于实现优先级队列。满足堆属性（父节点与子节点之间有特定的大小关系）。",
                "存储开销": "通常用数组实现，O(n)",
                "核心特性": "树形结构，堆属性，快速查找/删除优先级最高元素",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": null
            }
        },
        {
            "type": "算法",
            "ID": "04ALG010",
            "name": "入栈操作",
            "attributes": {
                "难度": "入门",
                "内容": "向栈顶插入新元素，使之成为新的栈顶元素。",
                "时间复杂度": "O(1)",
                "空间复杂度": "O(1)",
                "设计思想": "基于栈的LIFO特性",
                "适用场景": "栈的应用场景",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": null
            }
        },
        {
            "type": "算法",
            "ID": "04ALG011",
            "name": "出栈操作",
            "attributes": {
                "难度": "入门",
                "内容": "从栈顶删除元素，使其下面的相邻元素成为新的栈顶元素。",
                "时间复杂度": "O(1)",
                "空间复杂度": "O(1)",
                "设计思想": "基于栈的LIFO特性",
                "适用场景": "栈的应用场景",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": null
            }
        },
        {
            "type": "算法",
            "ID": "04ALG012",
            "name": "读取栈顶元素操作",
            "attributes": {
                "难度": "入门",
                "内容": "返回栈顶元素的值，不改变栈的状态。",
                "时间复杂度": "O(1)",
                "空间复杂度": "O(1)",
                "设计思想": "基于栈的LIFO特性",
                "适用场景": "检查栈顶元素",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": null
            }
        },
        {
            "type": "算法",
            "ID": "04ALG013",
            "name": "判断栈是否为空操作",
            "attributes": {
                "难度": "入门",
                "内容": "检查栈中是否包含元素。",
                "时间复杂度": "O(1)",
                "空间复杂度": "O(1)",
                "设计思想": "基于栈的状态标记",
                "适用场景": "栈操作前的条件判断",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": null
            }
        },
        {
            "type": "算法",
            "ID": "04ALG014",
            "name": "初始化栈操作",
            "attributes": {
                "难度": "入门",
                "内容": "将栈置为空状态，并分配初始存储空间（对于动态分配）。",
                "时间复杂度": "O(1)",
                "空间复杂度": "O(1)",
                "设计思想": "准备栈结构",
                "适用场景": "创建新栈",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": null
            }
        },
        {
            "type": "算法",
            "ID": "04ALG015",
            "name": "清除栈操作",
            "attributes": {
                "难度": "入门",
                "内容": "删除栈中所有元素，使之成为空栈，并释放动态存储空间（如果使用）。",
                "时间复杂度": "O(n)",
                "空间复杂度": "O(1)",
                "设计思想": "释放资源，重置状态",
                "适用场景": "销毁栈",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": null
            }
        },
        {
            "type": "算法",
            "ID": "04ALG016",
            "name": "入队操作",
            "attributes": {
                "难度": "入门",
                "内容": "将新元素插入队尾，成为新的队尾元素。",
                "时间复杂度": "O(1)",
                "空间复杂度": "O(1)",
                "设计思想": "基于队列的FIFO特性",
                "适用场景": "队列的应用场景",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": null
            }
        },
        {
            "type": "算法",
            "ID": "04ALG017",
            "name": "出队操作",
            "attributes": {
                "难度": "入门",
                "内容": "从队首删除元素，其后继元素成为新的队首元素。",
                "时间复杂度": "O(1)",
                "空间复杂度": "O(1)",
                "设计思想": "基于队列的FIFO特性",
                "适用场景": "队列的应用场景",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": null
            }
        },
        {
            "type": "算法",
            "ID": "04ALG018",
            "name": "读取队首元素操作",
            "attributes": {
                "难度": "入门",
                "内容": "返回队首元素的值，不改变队列状态。",
                "时间复杂度": "O(1)",
                "空间复杂度": "O(1)",
                "设计思想": "基于队列的FIFO特性",
                "适用场景": "检查队首元素",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": null
            }
        },
        {
            "type": "算法",
            "ID": "04ALG019",
            "name": "判断队列是否为空操作",
            "attributes": {
                "难度": "入门",
                "内容": "检查队列中是否包含元素。",
                "时间复杂度": "O(1)",
                "空间复杂度": "O(1)",
                "设计思想": "基于队列的状态标记",
                "适用场景": "队列操作前的条件判断",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": null
            }
        },
        {
            "type": "算法",
            "ID": "04ALG020",
            "name": "初始化队列操作",
            "attributes": {
                "难度": "入门",
                "内容": "将队列置为空状态，并分配初始存储空间（对于动态分配）。",
                "时间复杂度": "O(1)",
                "空间复杂度": "O(1)",
                "设计思想": "准备队列结构",
                "适用场景": "创建新队列",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": null
            }
        },
        {
            "type": "算法",
            "ID": "04ALG021",
            "name": "清除队列操作",
            "attributes": {
                "难度": "入门",
                "内容": "删除队列中所有元素，使之成为空队，并释放动态存储空间（如果使用）。",
                "时间复杂度": "O(n)",
                "空间复杂度": "O(1)",
                "设计思想": "释放资源，重置状态",
                "适用场景": "销毁队列",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": null
            }
        },
        {
            "type": "算法",
            "ID": "04ALG022",
            "name": "十进制转任意进制算法",
            "attributes": {
                "难度": "入门",
                "内容": "将一个十进制整数转换为二至九之间的任一进制数。采用逐次除基数取余法，余数逆序排列得到结果。",
                "时间复杂度": "O(log_r(num))",
                "空间复杂度": "O(log_r(num))",
                "设计思想": "逐次取余，利用栈的后进先出特性存储和输出余数",
                "适用场景": "进制转换",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": null
            }
        },
        {
            "type": "概念",
            "ID": "04CON019",
            "name": "算术表达式计算",
            "attributes": {
                "难度": "中等",
                "内容": "在计算机中通过栈来实现算术表达式的计算，涉及表达式的表示方法和求值算法。",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": null
            }
        },
        {
            "type": "算法",
            "ID": "04ALG023",
            "name": "Precedence函数",
            "attributes": {
                "难度": "入门",
                "内容": "用于返回算术运算符对应的优先级数值。",
                "时间复杂度": "O(1)",
                "空间复杂度": "O(1)",
                "设计思想": "查表或条件判断",
                "适用场景": "算术表达式处理",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": null
            }
        },
        {
            "type": "概念",
            "ID": "04CON020",
            "name": "访问标记",
            "attributes": {
                "难度": "入门",
                "内容": "在迷宫求解等问题中，用于标识某个位置是否已经被访问过，避免重复访问和无限循环。",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": null
            }
        },
        {
            "type": "概念",
            "ID": "04CON021",
            "name": "位移量",
            "attributes": {
                "难度": "入门",
                "content": "在二维网格问题（如迷宫）中，表示从一个位置移动一步到相邻位置时，行坐标和列坐标的变化量。",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": null
            }
        },
        {
            "type": "算法",
            "ID": "04ALG024",
            "name": "调度算法",
            "attributes": {
                "难度": "高级",
                "内容": "在操作系统等领域应用广泛，用于决定任务执行顺序的算法，常使用优先级队列实现。",
                "时间复杂度": "取决于具体算法",
                "空间复杂度": "取决于具体算法",
                "设计思想": "优先级排序，资源分配",
                "适用场景": "操作系统任务调度，网络流量管理",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": null
            }
        },
        {
            "type": "概念",
            "ID": "04CON022",
            "name": "轮船渡口管理应用",
            "attributes": {
                "难度": "入门",
                "内容": "一个队列的应用示例，模拟轮渡装载客车和货车的排队规则。",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": null
            }
        },
        {
            "type": "数据结构",
            "ID": "05DS001",
            "name": "树",
            "attributes": {
                "难度": "中等",
                "内容": "树（tree）是树形结构的简称，重要的非线性数据结构。或者空树，或者含有一个根结点和m棵互不相交的子树，子树也是树。树的定义是递归的，树是一种递归的数据结构。在日常生活和计算机领域广泛存在应用实例。",
                "存储开销": "",
                "核心特性": "树形结构, 非线性, 递归定义, 有且仅有一个根, 子树互不相交",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": ""
            }
        },
        {
            "type": "概念",
            "ID": "05CON001",
            "name": "结点",
            "attributes": {
                "难度": "入门",
                "内容": "树中包含的数据元素，具有前驱和后继。",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": ""
            }
        },
        {
            "type": "概念",
            "ID": "05CON002",
            "name": "根结点",
            "attributes": {
                "难度": "入门",
                "内容": "在一棵非空树中，有且仅有一个结点没有前驱，该结点被称为树的根（root）。",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": ""
            }
        },
        {
            "type": "概念",
            "ID": "05CON003",
            "name": "子树",
            "attributes": {
                "难度": "入门",
                "内容": "树中除根结点外，其余结点被分为互不相交的m棵（m>=0）子树，每棵子树又是一棵树，并且每棵子树的根结点是整个树根结点的后继。",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": ""
            }
        },
        {
            "type": "概念",
            "ID": "05CON004",
            "name": "前驱",
            "attributes": {
                "难度": "入门",
                "内容": "在一棵树中，每个结点被定义为它的每个子树的根结点的前驱。",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": ""
            }
        },
        {
            "type": "概念",
            "ID": "05CON005",
            "name": "后继",
            "attributes": {
                "难度": "入门",
                "内容": "在一棵树中，每个结点的每个子树的根结点就成为它的后继。",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": ""
            }
        },
        {
            "type": "概念",
            "ID": "05CON006",
            "name": "二元组表示法",
            "attributes": {
                "难度": "入门",
                "内容": "表示树的一种方法，用(K, R)表示，K为结点集合，R为二元关系集合（表示父子关系）。",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": ""
            }
        },
        {
            "type": "概念",
            "ID": "05CON007",
            "name": "树形表示法",
            "attributes": {
                "难度": "入门",
                "内容": "表示树的一种方法，也是最常用的一种，结点之间的关系通过连线表示，方向隐含为从上向下或从左向右。",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": ""
            }
        },
        {
            "type": "概念",
            "ID": "05CON008",
            "name": "集合图表示",
            "attributes": {
                "难度": "入门",
                "内容": "表示树的一种方法，每棵树对应一个圆形，圆内包含根结点和子树。",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": ""
            }
        },
        {
            "type": "概念",
            "ID": "05CON009",
            "name": "凹入表示",
            "attributes": {
                "难度": "入门",
                "内容": "表示树的一种方法，每棵树的根对应着一个条形，子树的根对应着一个较短的条形，且树根在上，子树的根在下。",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": ""
            }
        },
        {
            "type": "概念",
            "ID": "05CON010",
            "name": "广义表表示",
            "attributes": {
                "难度": "入门",
                "内容": "表示树的一种方法，每棵树的根作为由子树构成的表的名字而放在表的前面。",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": ""
            }
        },
        {
            "type": "概念",
            "ID": "05CON011",
            "name": "结点的度",
            "attributes": {
                "难度": "入门",
                "内容": "每个结点具有的子树数或者说后继结点数。",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": ""
            }
        },
        {
            "type": "概念",
            "ID": "05CON012",
            "name": "树的度",
            "attributes": {
                "难度": "入门",
                "内容": "树中所有结点的度的最大值。",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": ""
            }
        },
        {
            "type": "概念",
            "ID": "05CON013",
            "name": "叶子结点",
            "attributes": {
                "难度": "入门",
                "内容": "度等于0的结点，也称终端结点。",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": ""
            }
        },
        {
            "type": "概念",
            "ID": "05CON014",
            "name": "分支结点",
            "attributes": {
                "难度": "入门",
                "内容": "度大于0的结点，也称非终端结点。按度数可分为单分支结点、双分支结点等。",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": ""
            }
        },
        {
            "type": "概念",
            "ID": "05CON015",
            "name": "孩子结点",
            "attributes": {
                "难度": "入门",
                "内容": "每个结点的子树的根，或者说每个结点的后继，也称儿子或子女（child）。",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": ""
            }
        },
        {
            "type": "概念",
            "ID": "05CON016",
            "name": "双亲结点",
            "attributes": {
                "难度": "入门",
                "内容": "孩子结点的双亲，也称父亲或父母（parent）。",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": ""
            }
        },
        {
            "type": "概念",
            "ID": "05CON017",
            "name": "兄弟",
            "attributes": {
                "难度": "入门",
                "内容": "具有同一双亲的孩子互称兄弟（brothers）。",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": ""
            }
        },
        {
            "type": "概念",
            "ID": "05CON018",
            "name": "子孙",
            "attributes": {
                "难度": "入门",
                "内容": "一个结点的所有子树中的结点。",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": ""
            }
        },
        {
            "type": "概念",
            "ID": "05CON019",
            "name": "祖先",
            "attributes": {
                "难度": "入门",
                "内容": "从树根结点到达该结点的路径上经过的所有结点。",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": ""
            }
        },
        {
            "type": "概念",
            "ID": "05CON020",
            "name": "结点的层数",
            "attributes": {
                "难度": "入门",
                "内容": "从树根开始定义，根结点为第1层，它的孩子结点为第2层，以此类推。",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": ""
            }
        },
        {
            "type": "概念",
            "ID": "05CON021",
            "name": "树的深度",
            "attributes": {
                "难度": "入门",
                "内容": "树中所有结点的最大层数，也称高度（height）。",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": ""
            }
        },
        {
            "type": "数据结构",
            "ID": "05DS002",
            "name": "有序树",
            "attributes": {
                "难度": "入门",
                "内容": "若树中各结点的子树是按照一定的次序从左向右安排的，则称之为有序树。",
                "存储开销": "",
                "核心特性": "子树有序",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": ""
            }
        },
        {
            "type": "数据结构",
            "ID": "05DS003",
            "name": "无序树",
            "attributes": {
                "难度": "入门",
                "内容": "若树中各结点的子树不是按照一定的次序从左向右安排的，则称之为无序树。任何无序树都可以当作任一次序的有序树来处理。",
                "存储开销": "",
                "核心特性": "子树无序",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": ""
            }
        },
        {
            "type": "概念",
            "ID": "05CON022",
            "name": "森林",
            "attributes": {
                "难度": "入门",
                "内容": "m (m>=0) 棵互不相交的树的集合。对于树中每个分支结点来说，其子树的集合就是森林。",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": ""
            }
        },
        {
            "type": "数据结构",
            "ID": "05DS004",
            "name": "满k叉树",
            "attributes": {
                "难度": "入门",
                "内容": "深度为h的k叉树，当结点数等于(k^h-1)/(k-1)时，则称该树为满k叉树。此时树中的每一层都达到最多结点数。",
                "存储开销": "",
                "核心特性": "每一层都满, 固定度k",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": ""
            }
        },
        {
            "type": "概念",
            "ID": "05CON023",
            "name": "向上取整",
            "attributes": {
                "难度": "入门",
                "内容": "lceilxrceil，取大于等于x的最小整数。",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": ""
            }
        },
        {
            "type": "概念",
            "ID": "05CON024",
            "name": "向下取整",
            "attributes": {
                "难度": "入门",
                "内容": "lfloorxrfloor，取小于等于x的最大整数。",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": ""
            }
        },
        {
            "type": "数据结构",
            "ID": "05DS005",
            "name": "二叉树",
            "attributes": {
                "难度": "入门",
                "内容": "树的度为2的有序树，是一种最简单、而且最重要的树，在计算机领域有着广泛的应用。递归定义：或者空树，或者由一个根结点和两棵互不相交的左子树和右子树组成，左右子树也是二叉树。",
                "存储开销": "",
                "核心特性": "度为2, 有序, 递归定义",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": ""
            }
        },
        {
            "type": "概念",
            "ID": "05CON025",
            "name": "左子树",
            "attributes": {
                "难度": "入门",
                "内容": "二叉树根结点的左边子树。",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": ""
            }
        },
        {
            "type": "概念",
            "ID": "05CON026",
            "name": "右子树",
            "attributes": {
                "难度": "入门",
                "内容": "二叉树根结点的右边子树。",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": ""
            }
        },
        {
            "type": "概念",
            "ID": "05CON027",
            "name": "左孩子",
            "attributes": {
                "难度": "入门",
                "content": "二叉树中，每个结点的左子树的根结点，也称left child。",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": ""
            }
        },
        {
            "type": "概念",
            "ID": "05CON028",
            "name": "右孩子",
            "attributes": {
                "难度": "入门",
                "内容": "二叉树中，每个结点的右子树的根结点，也称right child。",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": ""
            }
        },
        {
            "type": "数据结构",
            "ID": "05DS006",
            "name": "满二叉树",
            "attributes": {
                "难度": "入门",
                "内容": "深度为h的二叉树，当第i层的结点数为2^i-1个时，称此层的结点数是满的。当树中的每一层都满时，则称此树为满二叉树。其结点数n为2^h-1个。满二叉树是完全二叉树的特例。",
                "存储开销": "",
                "核心特性": "每一层都满, 二叉树特例",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": ""
            }
        },
        {
            "type": "数据结构",
            "ID": "05DS007",
            "name": "完全二叉树",
            "attributes": {
                "难度": "入门",
                "内容": "在一棵二叉树中，除最后一层外，若其余层都是满的，并且最后一层或者是满的，或者是在右边缺少连续若干个结点。满二叉树是完全二叉树的特例。具有n个(n>0)结点的完全二叉树的深度为lceillog_2(n+1)rceil或lfloorlog_2nrfloor+1。结点编号有特定性质。",
                "存储开销": "",
                "核心特性": "最后一层节点靠左对齐, 二叉树特例",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": ""
            }
        },
        {
            "type": "概念",
            "ID": "05CON029",
            "name": "编号",
            "attributes": {
                "难度": "入门",
                "内容": "在完全二叉树中，从树根为1（或0）开始，按照层数从小到大、同一层从左到右的次序进行的结点标识，可用于通过计算确定父子及左右孩子关系。",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": ""
            }
        },
        {
            "type": "数据结构",
            "ID": "05DS008",
            "name": "理想平衡二叉树",
            "attributes": {
                "难度": "中等",
                "content": "在一棵二叉树中，若除最后一层外，其余层都是满的，而最后一层上的结点可以任意分布。包含满二叉树和完全二叉树。",
                "存储开销": "",
                "核心特性": "除最后一层外满, 最后一层任意分布, 二叉树特例",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": ""
            }
        },
        {
            "type": "概念",
            "ID": "05CON030",
            "name": "抽象数据类型",
            "attributes": {
                "难度": "入门",
                "内容": "数据部分和操作部分组成。",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": ""
            }
        },
        {
            "type": "概念",
            "ID": "05CON031",
            "name": "树的抽象数据类型",
            "attributes": {
                "难度": "入门",
                "内容": "描述树（包括二叉树和多元树）的数据部分和操作部分，数据部分为树，操作包括初始化、建立、遍历、查找、输出、清除、判空等常用运算。",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": ""
            }
        },
        {
            "type": "概念",
            "ID": "05CON032",
            "name": "顺序存储结构",
            "attributes": {
                "难度": "入门",
                "内容": "数据结构的存储方式，使用一个一维数组存储结点，通过下标计算结点关系，适用于完全二叉树，对于一般树可能浪费空间。",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": ""
            }
        },
        {
            "type": "概念",
            "ID": "05CON033",
            "name": "链接存储结构",
            "attributes": {
                "难度": "入门",
                "内容": "数据结构的存储方式，使用指针连接结点，每个结点通常包含值域和指向孩子（或双亲）的指针域，适用于一般树。",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": ""
            }
        },
        {
            "type": "概念",
            "ID": "05CON034",
            "name": "二叉链表",
            "attributes": {
                "难度": "入门",
                "内容": "二叉树的链接存储结构，每个结点有值域、左指针域和右指针域。",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": ""
            }
        },
        {
            "type": "概念",
            "ID": "05CON035",
            "name": "带双亲指针的二叉链表",
            "attributes": {
                "难度": "入门",
                "内容": "在二叉链表结点中增加一个parent指针域，用来指向其双亲结点。",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": ""
            }
        },
        {
            "type": "算法",
            "ID": "05ALG001",
            "name": "初始化二叉树",
            "attributes": {
                "难度": "入门",
                "内容": "将二叉树置为一棵空树，即把树根指针置空。",
                "时间复杂度": "O(1)",
                "空间复杂度": "O(1)",
                "设计思想": "",
                "适用场景": "创建或重置二叉树",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": ""
            }
        },
        {
            "type": "算法",
            "ID": "05ALG002",
            "name": "建立二叉树",
            "attributes": {
                "难度": "入门",
                "内容": "根据广义表表示的二叉树建立对应的存储结构，使用栈辅助处理括号和子树链接。",
                "时间复杂度": "O(n) (n为广义表字符串长度)",
                "空间复杂度": "O(h) (h为树深，即广义表括号嵌套最大层数加1)",
                "设计思想": "栈的应用, 根据广义表结构解析",
                "适用场景": "从文本描述构建二叉树",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": ""
            }
        },
        {
            "type": "算法",
            "ID": "05ALG003",
            "name": "遍历二叉树",
            "attributes": {
                "难度": "入门",
                "内容": "按照一定次序访问二叉树中所有结点，并且每个结点的值仅被访问一次。",
                "时间复杂度": "O(n)",
                "空间复杂度": "O(h) (递归栈) 或 O(n) (按层队列)",
                "设计思想": "",
                "适用场景": "访问二叉树中所有结点",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": ""
            }
        },
        {
            "type": "算法",
            "ID": "05ALG004",
            "name": "查找二叉树",
            "attributes": {
                "难度": "入门",
                "内容": "从二叉树中查找值为item的结点，若存在该结点则由item带回它的完整值并返回true，否则返回false。递归实现，类似于前序遍历。",
                "时间复杂度": "O(n) (最坏情况)",
                "空间复杂度": "O(h) (递归栈)",
                "设计思想": "递归, 深度优先搜索",
                "适用场景": "在二叉树中查找特定元素",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": ""
            }
        },
        {
            "type": "算法",
            "ID": "05ALG005",
            "name": "输出二叉树",
            "attributes": {
                "难度": "入门",
                "内容": "按照树的一种表示方法输出一棵二叉树，通常采用广义表的形式打印。递归实现，类似于前序遍历。",
                "时间复杂度": "O(n)",
                "空间复杂度": "O(h) (递归栈)",
                "设计思想": "递归",
                "适用场景": "打印或序列化二叉树结构",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": ""
            }
        },
        {
            "type": "算法",
            "ID": "05ALG006",
            "name": "清除二叉树",
            "attributes": {
                "难度": "入门",
                "内容": "清除二叉树中的所有结点，使之变为一棵空树。递归过程，类似于后序递归遍历。",
                "时间复杂度": "O(n)",
                "空间复杂度": "O(h) (递归栈)",
                "设计思想": "递归, 后序遍历",
                "适用场景": "销毁二叉树",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": ""
            }
        },
        {
            "type": "算法",
            "ID": "05ALG007",
            "name": "求二叉树的深度",
            "attributes": {
                "难度": "入门",
                "内容": "计算二叉树的深度。若为空树，深度为0；否则等于左右子树最大深度加1。递归算法。",
                "时间复杂度": "O(n)",
                "空间复杂度": "O(h) (递归栈)",
                "设计思想": "递归",
                "适用场景": "获取二叉树的结构信息",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": ""
            }
        },
        {
            "type": "算法",
            "ID": "05ALG008",
            "name": "前序遍历",
            "attributes": {
                "难度": "入门",
                "内容": "二叉树遍历方案DLR，先访问根结点，后遍历左、右子树。也称先根遍历。递归算法。",
                "时间复杂度": "O(n)",
                "空间复杂度": "O(h)",
                "设计思想": "递归",
                "适用场景": "复制二叉树, 构建表达式树",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": ""
            }
        },
        {
            "type": "算法",
            "ID": "05ALG009",
            "name": "中序遍历",
            "attributes": {
                "难度": "入门",
                "content": "二叉树遍历方案LDR，访问根结点的操作在遍历左子树之后和遍历右子树之前。也称中根遍历。递归算法。",
                "时间复杂度": "O(n)",
                "空间复杂度": "O(h)",
                "设计思想": "递归",
                "适用场景": "对于二叉搜索树可得到有序序列",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": ""
            }
        },
        {
            "type": "算法",
            "ID": "05ALG010",
            "name": "后序遍历",
            "attributes": {
                "难度": "入门",
                "内容": "二叉树遍历方案LRD，访问根结点的操作在遍历左、右子树之后。也称后根遍历。递归算法。",
                "时间复杂度": "O(n)",
                "空间复杂度": "O(h)",
                "设计思想": "递归",
                "适用场景": "删除二叉树结点",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": ""
            }
        },
        {
            "type": "数据结构",
            "ID": "05DS009",
            "name": "队列",
            "attributes": {
                "难度": "入门",
                "内容": "一种线性数据结构，遵循先进先出（FIFO）原则。按层遍历算法需要使用一个队列。",
                "存储开销": "",
                "核心特性": "FIFO",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": ""
            }
        },
        {
            "type": "算法",
            "ID": "05ALG011",
            "name": "按层遍历",
            "attributes": {
                "难度": "入门",
                "内容": "二叉树遍历方案，按照从上到下、同一层从左到右的次序访问各结点。也称广度优先遍历。非递归算法，使用队列实现。",
                "时间复杂度": "O(n)",
                "空间复杂度": "O(n) (队列最大长度)",
                "设计思想": "广度优先搜索",
                "适用场景": "查找最短路径（概念上）, 打印树结构",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": ""
            }
        },
        {
            "type": "数据结构",
            "ID": "05DS010",
            "name": "栈",
            "attributes": {
                "难度": "入门",
                "内容": "一种线性数据结构，遵循后进先出（LIFO）原则。建立二叉树/树的广义表表示需要使用栈。",
                "存储开销": "",
                "核心特性": "LIFO",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": ""
            }
        },
        {
            "type": "数据结构",
            "ID": "05DS011",
            "name": "多元树",
            "attributes": {
                "难度": "中等",
                "内容": "度大于等于3的树，通常称为多叉树。",
                "存储开销": "",
                "核心特性": "度>=3",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": ""
            }
        },
        {
            "type": "概念",
            "ID": "05CON036",
            "name": "树的顺序存储结构",
            "attributes": {
                "难度": "入门",
                "内容": "树的存储方式，使用一个一维数组存储结点，通过下标计算结点关系。适合满树和完全树，否则将非常浪费存储空间。",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": ""
            }
        },
        {
            "type": "概念",
            "ID": "05CON037",
            "name": "树的链接存储结构",
            "attributes": {
                "难度": "入门",
                "内容": "树的存储方式，通常采用标准方式、广义标准方式或二叉树方式。",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": ""
            }
        },
        {
            "type": "概念",
            "ID": "05CON038",
            "name": "标准方式 (树链接存储)",
            "attributes": {
                "难度": "入门",
                "内容": "树的链接存储方式，树中每个结点除了包含值域外，还包含k个指针域，用来分别指向k个孩子结点，其中k为树的度。",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": ""
            }
        },
        {
            "type": "概念",
            "ID": "05CON039",
            "name": "广义标准方式 (树链接存储)",
            "attributes": {
                "难度": "入门",
                "内容": "树的链接存储方式，在标准方式的每个结点中增加一个指向其双亲结点的指针域。",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": ""
            }
        },
        {
            "type": "概念",
            "ID": "05CON040",
            "name": "二叉树方式 (树存储)",
            "attributes": {
                "难度": "中等",
                "内容": "树的存储方式，首先将树转换为对应的二叉树形式，然后再采用二叉链表存储。转换规则：第一个孩子转换为左孩子，其余兄弟转换为右孩子链。一般只适合表示无序树。",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": ""
            }
        },
        {
            "type": "算法",
            "ID": "05ALG012",
            "name": "初始化树",
            "attributes": {
                "难度": "入门",
                "内容": "初始化树，即把树根指针置空。",
                "时间复杂度": "O(1)",
                "空间复杂度": "O(1)",
                "设计思想": "",
                "适用场景": "创建或重置树",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": ""
            }
        },
        {
            "type": "算法",
            "ID": "05ALG013",
            "name": "建立树",
            "attributes": {
                "难度": "中等",
                "内容": "根据广义表字符串建立k叉树对应的存储结构，需要设置两个栈（存储根结点指针的栈和存储孩子结点序号的栈）。",
                "时间复杂度": "O(n) (n为广义表字符串长度)",
                "空间复杂度": "O(h) (h为树深)",
                "设计思想": "栈的应用, 根据广义表结构解析",
                "适用场景": "从文本描述构建k叉树",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": ""
            }
        },
        {
            "type": "算法",
            "ID": "05ALG014",
            "name": "遍历树",
            "attributes": {
                "难度": "入门",
                "内容": "按照一定次序访问树中所有结点，使得每个结点的值均被访问一次。包括先根遍历、后根遍历和按层遍历。",
                "时间复杂度": "O(n)",
                "空间复杂度": "O(h) 或 O(n)",
                "设计思想": "",
                "适用场景": "访问树中所有结点",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": ""
            }
        },
        {
            "type": "算法",
            "ID": "05ALG015",
            "name": "查找树",
            "attributes": {
                "难度": "入门",
                "内容": "从树中查找值为item的结点，若存在则由item带回完整值并返回true，否则返回false。类似于树的先根遍历算法。",
                "时间复杂度": "O(n) (最坏情况)",
                "空间复杂度": "O(h) (递归栈)",
                "设计思想": "递归, 深度优先搜索",
                "适用场景": "在树中查找特定元素",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": ""
            }
        },
        {
            "type": "算法",
            "ID": "05ALG016",
            "name": "输出树",
            "attributes": {
                "难度": "入门",
                "内容": "以广义表形式输出树。类似于树的先根遍历算法。",
                "时间复杂度": "O(n)",
                "空间复杂度": "O(h) (递归栈)",
                "设计思想": "递归",
                "适用场景": "打印或序列化树结构",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": ""
            }
        },
        {
            "type": "算法",
            "ID": "05ALG017",
            "name": "判空树",
            "attributes": {
                "难度": "入门",
                "内容": "判断树是否为空，若为空则返回true，否则返回false。",
                "时间复杂度": "O(1)",
                "空间复杂度": "O(1)",
                "设计思想": "",
                "适用场景": "检查树状态",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": ""
            }
        },
        {
            "type": "算法",
            "ID": "05ALG018",
            "name": "清除树",
            "attributes": {
                "难度": "入门",
                "content": "清除树中的所有结点，使之变为一棵空树。类似于树的后根遍历。",
                "时间复杂度": "O(n)",
                "空间复杂度": "O(h) (递归栈)",
                "design_thought": "递归, 后根遍历",
                "applicable_scenarios": "销毁树",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": ""
            }
        },
        {
            "type": "算法",
            "ID": "05ALG019",
            "name": "求树的深度",
            "attributes": {
                "难度": "入门",
                "内容": "计算树的深度。树为空则深度为0，否则等于所有子树的最大深度加1。递归算法。",
                "时间复杂度": "O(n)",
                "空间复杂度": "O(h) (递归栈)",
                "设计思想": "递归",
                "适用场景": "获取树的结构信息",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": ""
            }
        },
        {
            "type": "算法",
            "ID": "05ALG020",
            "name": "先根遍历 (树)",
            "attributes": {
                "难度": "入门",
                "内容": "树的遍历方法，先访问根结点，然后从左到右依次先根遍历每棵子树。也称深度优先遍历。",
                "时间复杂度": "O(n)",
                "空间复杂度": "O(h)",
                "设计思想": "递归, 深度优先搜索",
                "适用场景": "复制树",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": ""
            }
        },
        {
            "type": "算法",
            "ID": "05ALG021",
            "name": "后根遍历 (树)",
            "attributes": {
                "难度": "入门",
                "内容": "树的遍历方法，从左到右依次后根遍历根结点的每棵子树，然后再访问根结点。",
                "时间复杂度": "O(n)",
                "空间复杂度": "O(h)",
                "设计思想": "递归",
                "适用场景": "删除树结点",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": ""
            }
        },
        {
            "type": "算法",
            "ID": "05ALG022",
            "name": "按层遍历 (树)",
            "attributes": {
                "难度": "入门",
                "内容": "树的遍历方法，先访问第1层结点，再从左到右访问第2层结点，依次按层访问。也称广度优先遍历。非递归算法，使用队列实现。",
                "时间复杂度": "O(n)",
                "空间复杂度": "O(n) (队列最大长度)",
                "设计思想": "广度优先搜索",
                "适用场景": "查找",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": ""
            }
        },
        {
            "type": "概念",
            "ID": "05CON041",
            "name": "数学归纳法",
            "attributes": {
                "难度": "入门",
                "内容": "一种数学证明方法，用于证明关于自然数的命题，本章用于证明树的性质。",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": ""
            }
        },
        {
            "type": "概念",
            "ID": "05CON042",
            "name": "对数",
            "attributes": {
                "难度": "入门",
                "内容": "数学函数，用于推导树的深度与结点数之间的关系。",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": ""
            }
        },
        {
            "type": "数据结构",
            "ID": "06DS001",
            "name": "特殊二叉树",
            "attributes": {
                "难度": "入门",
                "内容": "包括二叉搜索树、堆、哈夫曼树、线索二叉树和平衡二叉树等，具有不同的应用。",
                "存储开销": null,
                "核心特性": null,
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "数据结构",
            "ID": "06DS002",
            "name": "二叉搜索树",
            "attributes": {
                "难度": "中等",
                "内容": "又称二叉排序树，或空树，或非空二叉树，满足左子树所有结点的关键字均小于根结点，右子树所有结点的关键字均大于（或大于等于）根结点，且左右子树本身也是二叉搜索树。中序遍历得到有序序列。",
                "存储开销": "取决于存储结构（顺序/链接），链接存储有额外指针开销",
                "核心特性": "有序性，方便查找、插入、删除",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "数据结构",
            "ID": "06DS003",
            "name": "堆",
            "attributes": {
                "难度": "中等",
                "内容": "一棵完全二叉树，分为小根堆（根小于等于孩子）和大根堆（根大于等于孩子）。堆顶结点具有最小值（小根堆）或最大值（大根堆）。",
                "存储开销": "适宜采用顺序存储（数组），空间利用率高",
                "核心特性": "堆顶最大/最小值，方便优先级操作",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "数据结构",
            "ID": "06DS004",
            "name": "小根堆",
            "attributes": {
                "难度": "中等",
                "内容": "堆的一种，完全二叉树，根结点值小于等于左右孩子结点值。",
                "存储开销": "取决于存储结构",
                "核心特性": "堆顶最小值",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "数据结构",
            "ID": "06DS005",
            "name": "大根堆",
            "attributes": {
                "难度": "中等",
                "内容": "堆的一种，完全二叉树，根结点值大于等于左右孩子结点值。",
                "存储开销": "取决于存储结构",
                "核心特性": "堆顶最大值",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "数据结构",
            "ID": "06DS006",
            "name": "哈夫曼树",
            "attributes": {
                "难度": "中等",
                "内容": "又称最优二叉树，由n个带权叶子结点构成，带权路径长度WPL最小。只存在双支结点和叶子结点。",
                "存储开销": "取决于存储结构",
                "核心特性": "带权路径长度最小，用于构建最优前缀编码",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "数据结构",
            "ID": "06DS007",
            "name": "线索二叉树",
            "attributes": {
                "难度": "中等",
                "内容": "对二叉树进行线索化后得到，利用结点的空指针域存放某种遍历次序的前驱或后继结点的指针（线索）。",
                "存储开销": "基于二叉链表存储，增加线索标志域和线索指针",
                "核心特性": "方便快速找到遍历次序前驱/后继，节省遍历空间",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "数据结构",
            "ID": "06DS008",
            "name": "中序线索二叉树",
            "attributes": {
                "难度": "中等",
                "内容": "线索二叉树的一种，按照中序遍历次序加线索。",
                "存储开销": "同线索二叉树",
                "核心特性": "方便快速找到中序前驱/后继",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "数据结构",
            "ID": "06DS009",
            "name": "平衡二叉树",
            "attributes": {
                "难度": "高级",
                "内容": "简称平衡树，又称AVL树，是对二叉搜索树的一种改进。任意结点的左、右子树高度至多相差1。",
                "存储开销": "取决于存储结构",
                "核心特性": "平衡性（高度较低），查找性能稳定",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "数据结构",
            "ID": "06DS010",
            "name": "优先级队列",
            "attributes": {
                "难度": "中等",
                "内容": "一种抽象数据类型，每次操作（删除）处理优先级最高的元素。",
                "存储开销": "常使用堆实现",
                "核心特性": "元素具有优先级，按优先级出队",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "数据结构",
            "ID": "06DS011",
            "name": "二叉链表",
            "attributes": {
                "难度": "入门",
                "内容": "二叉树的一种链式存储结构，结点包含数据域和左、右孩子指针域。",
                "存储开销": "每个结点需要额外的指针空间",
                "核心特性": "灵活，方便表示任意二叉树结构",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "数据结构",
            "ID": "06DS012",
            "name": "顺序存储",
            "attributes": {
                "难度": "入门",
                "内容": "使用连续的内存空间（如数组）存储数据结构元素。",
                "存储开销": "可能存在空间浪费或利用率高",
                "核心特性": "支持随机访问（通过下标）",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "数据结构",
            "ID": "06DS013",
            "name": "链接存储",
            "attributes": {
                "难度": "入门",
                "内容": "使用指针将数据元素连接起来，不要求物理位置连续。",
                "存储开销": "每个元素需要额外的指针空间",
                "核心特性": "灵活，方便插入和删除，不支持随机访问（一般）",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "06ALG001",
            "name": "二叉搜索树查找算法",
            "attributes": {
                "难度": "入门",
                "内容": "在二叉搜索树中查找给定元素的算法，利用二叉搜索树的有序性。有递归和非递归实现。",
                "时间复杂度": "O(logn) 平均，O(n) 最差",
                "空间复杂度": "O(logn) 平均（递归），O(n) 最差（递归），O(1) 非递归",
                "设计思想": "递归/迭代，利用关键字比较决定搜索方向",
                "适用场景": "在二叉搜索树中查找元素",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "06ALG002",
            "name": "二叉搜索树更新算法",
            "attributes": {
                "难度": "入门",
                "内容": "在二叉搜索树中查找并修改给定元素的算法。",
                "时间复杂度": "O(logn) 平均，O(n) 最差",
                "空间复杂度": "O(logn) 平均（递归），O(n) 最差（递归），O(1) 非递归",
                "设计思想": "基于查找算法",
                "适用场景": "在二叉搜索树中更新元素",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "06ALG003",
            "name": "二叉搜索树插入算法",
            "attributes": {
                "难度": "中等",
                "内容": "向二叉搜索树中插入新元素并保持其性质的算法。有递归和非递归实现。",
                "时间复杂度": "O(logn) 平均，O(n) 最差",
                "空间复杂度": "O(logn) 平均（递归），O(n) 最差（递归），O(1) 非递归",
                "设计思想": "递归/迭代，寻找合适的叶子结点位置插入",
                "适用场景": "构建二叉搜索树，动态添加元素",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "06ALG004",
            "name": "二叉搜索树删除算法",
            "attributes": {
                "难度": "高级",
                "内容": "从二叉搜索树中删除元素并保持其性质的算法，处理叶子、单支、双支结点删除情况，双支结点删除常用中序前驱/后继替换。",
                "时间复杂度": "O(logn) 平均，O(n) 最差",
                "空间复杂度": "O(logn) 平均（递归），O(n) 最差（递归）",
                "设计思想": "根据待删除结点类型不同处理，双支结点删除常用中序前驱/后继替换",
                "适用场景": "从二叉搜索树中移除元素",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "06ALG005",
            "name": "中序遍历算法",
            "attributes": {
                "难度": "入门",
                "内容": "二叉树遍历算法之一，先遍历左子树，然后访问根结点，最后遍历右子树。",
                "时间复杂度": "O(n)",
                "空间复杂度": "O(树高) 递归，O(1) 线索化",
                "设计思想": "递归或迭代（使用栈/线索）",
                "适用场景": "获取二叉搜索树的有序序列，线索化二叉树",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "06ALG006",
            "name": "堆插入算法",
            "attributes": {
                "难度": "中等",
                "内容": "向堆中插入新元素并保持堆性质的算法，将元素放在堆尾，然后向上调整（上滤/上浮）。",
                "时间复杂度": "O(logn)",
                "空间复杂度": "O(1)",
                "设计思想": "将新元素放在堆尾，然后向上调整（上滤/上浮）",
                "适用场景": "动态构建堆，向优先级队列添加元素",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "06ALG007",
            "name": "堆删除算法",
            "attributes": {
                "难度": "中等",
                "内容": "从堆中删除堆顶元素并保持堆性质的算法，用堆尾元素替换堆顶，然后向下调整（下滤/下沉）。",
                "时间复杂度": "O(logn)",
                "空间复杂度": "O(1)",
                "设计思想": "用堆尾元素替换堆顶，然后向下调整（下滤/下沉）",
                "适用场景": "从优先级队列取出优先级最高元素",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "06ALG008",
            "name": "构造哈夫曼树算法",
            "attributes": {
                "难度": "中等",
                "内容": "根据n个带权叶子结点构造带权路径长度最小的二叉树的算法。",
                "时间复杂度": "O(ntimeslgn)",
                "空间复杂度": "O(n)",
                "设计思想": "贪心策略，每次合并权值最小的两棵树",
                "适用场景": "构建哈夫曼树",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "06ALG009",
            "name": "计算带权路径长度算法",
            "attributes": {
                "难度": "入门",
                "内容": "计算一棵二叉树的带权路径长度的算法，递归遍历树，累加叶子结点的带权路径长度。",
                "时间复杂度": "O(n)",
                "空间复杂度": "O(树高) 递归",
                "设计思想": "递归遍历树，累加叶子结点的带权路径长度",
                "适用场景": "评估树的WPL",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "06ALG010",
            "name": "哈夫曼编码算法",
            "attributes": {
                "难度": "中等",
                "内容": "根据哈夫曼树生成字符的无前缀二进制编码的算法，遍历哈夫曼树，记录从根到叶子的路径（0/1）作为编码。",
                "时间复杂度": "O(n)",
                "空间复杂度": "O(树高)",
                "设计思想": "遍历哈夫曼树，记录从根到叶子的路径（0/1）作为编码",
                "适用场景": "数据压缩，生成最优前缀编码",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "06ALG011",
            "name": "线索化算法",
            "attributes": {
                "难度": "中等",
                "内容": "在二叉树空指针域中添加遍历次序前驱/后继线索的算法。",
                "时间复杂度": "O(n)",
                "空间复杂度": "O(树高) 递归",
                "设计思想": "基于遍历算法（如中序），记录前驱结点，填充空指针域",
                "适用场景": "方便非递归遍历，节省空间",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "06ALG012",
            "name": "中序线索化算法",
            "attributes": {
                "难度": "中等",
                "内容": "按照中序遍历次序对二叉树进行线索化的算法。",
                "时间复杂度": "O(n)",
                "空间复杂度": "O(树高) 递归",
                "设计思想": "基于中序遍历，记录中序前驱，填充空指针域",
                "适用场景": "构建中序线索二叉树",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "06ALG013",
            "name": "中序线索二叉树遍历算法",
            "attributes": {
                "难度": "中等",
                "内容": "利用中序线索遍历线索二叉树的算法。",
                "时间复杂度": "O(n)",
                "空间复杂度": "O(1)",
                "设计思想": "利用线索直接寻找中序后继",
                "适用场景": "遍历中序线索二叉树",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "06ALG014",
            "name": "平衡二叉树插入算法",
            "attributes": {
                "难度": "高级",
                "内容": "向平衡二叉树中插入新元素并保持平衡性质的算法，先按二叉搜索树插入，然后检查平衡因子，若不平衡则进行旋转调整。",
                "时间复杂度": "O(logn)",
                "空间复杂度": "O(logn) 递归",
                "设计思想": "先按二叉搜索树插入，然后检查平衡因子，若不平衡则进行旋转调整",
                "适用场景": "动态构建平衡二叉树",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "06ALG015",
            "name": "平衡二叉树删除算法",
            "attributes": {
                "难度": "高级",
                "内容": "从平衡二叉树中删除元素并保持平衡性质的算法，处理删除并进行旋转调整，可能需要多次向上调整。",
                "时间复杂度": "O(logn)",
                "空间复杂度": "O(logn) 递归",
                "设计思想": "先按二叉搜索树删除，然后检查平衡因子，若不平衡则进行旋转调整，可能需要多次向上调整",
                "适用场景": "从平衡二叉树中移除元素",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "06ALG016",
            "name": "LL型调整算法",
            "attributes": {
                "难度": "高级",
                "内容": "平衡二叉树调整操作之一，处理左孩子的左子树插入引起的不平衡。",
                "时间复杂度": "O(1)",
                "空间复杂度": "O(1)",
                "设计思想": "单右旋",
                "适用场景": "平衡二叉树插入/删除后的调整",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "06ALG017",
            "name": "RR型调整算法",
            "attributes": {
                "难度": "高级",
                "内容": "平衡二叉树调整操作之一，处理右孩子的右子树插入引起的不平衡。",
                "时间复杂度": "O(1)",
                "空间复杂度": "O(1)",
                "设计思想": "单左旋",
                "适用场景": "平衡二叉树插入/删除后的调整",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "06ALG018",
            "name": "LR型调整算法",
            "attributes": {
                "难度": "高级",
                "内容": "平衡二叉树调整操作之一，处理左孩子的右子树插入引起的不平衡。",
                "时间复杂度": "O(1)",
                "空间复杂度": "O(1)",
                "设计思想": "先左旋再右旋 (双旋)",
                "适用场景": "平衡二叉树插入/删除后的调整",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "06ALG019",
            "name": "RL型调整算法",
            "attributes": {
                "难度": "高级",
                "内容": "平衡二叉树调整操作之一，处理右孩子的左子树插入引起的不平衡。",
                "时间复杂度": "O(1)",
                "空间复杂度": "O(1)",
                "设计思想": "先右旋再左旋 (双旋)",
                "适用场景": "平衡二叉树插入/删除后的调整",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "06CON001",
            "name": "关键字",
            "attributes": {
                "难度": "入门",
                "内容": "用于数据结构中元素比较和排序的特定数据域或值。",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "06CON002",
            "name": "权",
            "attributes": {
                "难度": "入门",
                "内容": "赋给树中结点的实数值，具有某种应用意义。",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "06CON003",
            "name": "树的带权路径长度",
            "attributes": {
                "难度": "中等",
                "内容": "树中所有叶子结点的带权路径长度之和。",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "06CON004",
            "name": "无前缀编码",
            "attributes": {
                "难度": "中等",
                "内容": "一种编码方式，要求字符集中任一字符的编码都不能是其他字符编码的前缀。",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "06CON005",
            "name": "二叉树",
            "attributes": {
                "难度": "入门",
                "内容": "每个结点最多有两个子树的树结构。",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "06CON006",
            "name": "完全二叉树",
            "attributes": {
                "难度": "入门",
                "内容": "除最后一层外，其它各层结点数都达到最大值，且最后一层所有结点都集中在左侧。",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "06CON007",
            "name": "中序前驱",
            "attributes": {
                "难度": "中等",
                "内容": "在树的中序遍历序列中，某个结点前面的那个结点。",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "06CON008",
            "name": "中序后继",
            "attributes": {
                "难度": "中等",
                "内容": "在树的中序遍历序列中，某个结点后面的那个结点。",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "06CON009",
            "name": "线索",
            "attributes": {
                "难度": "中等",
                "内容": "在二叉树的空指针域中存储的指向按某种遍历次序排列的前驱或后继结点的指针。",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "06CON010",
            "name": "左线索",
            "attributes": {
                "难度": "中等",
                "内容": "在结点的空左指针域中存放的指向其遍历次序前驱结点的线索。",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "06CON011",
            "name": "右线索",
            "attributes": {
                "难度": "中等",
                "内容": "在结点的空右指针域中存放的指向其遍历次序后继结点的线索。",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "06CON012",
            "name": "线索化",
            "attributes": {
                "难度": "中等",
                "内容": "按照某种遍历次序对二叉树中的所有结点的空指针域加线索的过程。",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "06CON013",
            "name": "线索标志域",
            "attributes": {
                "难度": "中等",
                "内容": "二叉树结点结构中用于区分对应指针域存放的是孩子指针还是线索的标志位。",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "06CON014",
            "name": "平衡因子",
            "attributes": {
                "难度": "中等",
                "内容": "二叉树中某个结点的左子树高度减去右子树高度的值。",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "06CON015",
            "name": "最小不平衡子树",
            "attributes": {
                "难度": "高级",
                "内容": "以离插入结点最近、且平衡因子绝对值大于1的结点做根的子树。",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "06CON016",
            "name": "平衡二叉树调整",
            "attributes": {
                "难度": "高级",
                "内容": "向平衡二叉树插入或删除结点后，为恢复平衡对树结构进行的修改操作，通常涉及旋转。",
                "教学视频": "未知",
                "教学材料": "未知",
                "思政点": "未知"
            }
        },
        {
            "type": "数据结构",
            "ID": "07DS001",
            "name": "图",
            "attributes": {
                "难度": "中等",
                "内容": "复杂的非线性数据结构，由顶点集和边集组成。是线性表和树的推广，包含线性表和树在内。",
                "存储开销": "未知",
                "核心特性": "非线性, 由顶点和边构成, 包含线性和树结构",
                "教学视频": "未知",
                "教学材料": "未知"
            }
        },
        {
            "type": "数据结构",
            "ID": "07DS002",
            "name": "线性表",
            "attributes": {
                "难度": "入门",
                "内容": "可看作图的简单情况，限制是只允许每个结点有一个前驱和一个后继。",
                "存储开销": "未知",
                "核心特性": "线性结构, 顺序性",
                "教学视频": "未知",
                "教学材料": "未知"
            }
        },
        {
            "type": "数据结构",
            "ID": "07DS003",
            "name": "树",
            "attributes": {
                "难度": "入门",
                "内容": "可看作图的简单情况，限制是只允许每个结点有一个前驱。",
                "存储开销": "未知",
                "核心特性": "非线性结构, 层次性, 无回路",
                "教学视频": "未知",
                "教学材料": "未知"
            }
        },
        {
            "type": "数据结构",
            "ID": "07DS004",
            "name": "有向图",
            "attributes": {
                "难度": "中等",
                "内容": "边集由有向边组成。",
                "存储开销": "未知",
                "核心特性": "边有方向",
                "教学视频": "未知",
                "教学材料": "未知"
            }
        },
        {
            "type": "数据结构",
            "ID": "07DS005",
            "name": "无向图",
            "attributes": {
                "难度": "中等",
                "内容": "边集由无向边组成。",
                "存储开销": "未知",
                "核心特性": "边无方向",
                "教学视频": "未知",
                "教学材料": "未知"
            }
        },
        {
            "type": "数据结构",
            "ID": "07DS006",
            "name": "完全图",
            "attributes": {
                "难度": "入门",
                "内容": "若无向图中的每两个顶点之间都存在一条边，有向图中的每两个顶点之间都存在方向相反的两条边。",
                "存储开销": "未知",
                "核心特性": "任意两顶点之间都有边",
                "教学视频": "未知",
                "教学材料": "未知"
            }
        },
        {
            "type": "数据结构",
            "ID": "07DS007",
            "name": "稠密图",
            "attributes": {
                "难度": "入门",
                "内容": "接近完全图。",
                "存储开销": "未知",
                "核心特性": "边数接近最大可能边数",
                "教学视频": "未知",
                "教学材料": "未知"
            }
        },
        {
            "type": "数据结构",
            "ID": "07DS008",
            "name": "稀疏图",
            "attributes": {
                "难度": "入门",
                "内容": "含有较少的边数（e << n(n-1)）。",
                "存储开销": "未知",
                "核心特性": "边数远小于最大可能边数",
                "教学视频": "未知",
                "教学材料": "未知"
            }
        },
        {
            "type": "数据结构",
            "ID": "07DS009",
            "name": "连通图",
            "attributes": {
                "难度": "入门",
                "内容": "在无向图中，任意两个顶点都连通（有路径）。",
                "存储开销": "未知",
                "核心特性": "任意两点间都有路径 (仅限无向图)",
                "教学视频": "未知",
                "教学材料": "未知"
            }
        },
        {
            "type": "数据结构",
            "ID": "07DS010",
            "name": "非连通图",
            "attributes": {
                "难度": "入门",
                "内容": "在无向图中，存在顶点之间不连通的情况。",
                "存储开销": "未知",
                "核心特性": "存在不连通的顶点对 (仅限无向图)",
                "教学视频": "未知",
                "教学材料": "未知"
            }
        },
        {
            "type": "数据结构",
            "ID": "07DS011",
            "name": "强连通图",
            "attributes": {
                "难度": "中等",
                "内容": "在有向图中，任意两个顶点v_i和v_j都连通，即从v_i到v_j和从v_j到v_i都存在路径。",
                "存储开销": "未知",
                "核心特性": "任意两点间相互可达 (仅限有向图)",
                "教学视频": "未知",
                "教学材料": "未知"
            }
        },
        {
            "type": "数据结构",
            "ID": "07DS012",
            "name": "带权图",
            "attributes": {
                "难度": "中等",
                "内容": "边上带有权的图，也常称做网。",
                "存储开销": "未知",
                "核心特性": "边的权值",
                "教学视频": "未知",
                "教学材料": "未知"
            }
        },
        {
            "type": "数据结构",
            "ID": "07DS013",
            "name": "邻接矩阵",
            "attributes": {
                "难度": "入门",
                "内容": "表示图形中顶点之间相邻关系的n阶方阵。",
                "存储开销": "O(n^2)",
                "核心特性": "便于查找边和权 (O(1)), 便于求度和邻接点 (O(n)), 适用于稠密图",
                "教学视频": "未知",
                "教学材料": "未知"
            }
        },
        {
            "type": "数据结构",
            "ID": "07DS014",
            "name": "邻接表",
            "attributes": {
                "难度": "入门",
                "内容": "对图中的每个顶点建立一个邻接关系的单链表，并把表头指针用数组存储。",
                "存储开销": "O(n+e)",
                "核心特性": "适用于稀疏图, 便于查找出边/出边邻接点 (O(e/n)), 不便于查找入边/入边邻接点 (O(n+e))",
                "教学视频": "未知",
                "教学材料": "未知"
            }
        },
        {
            "type": "数据结构",
            "ID": "07DS015",
            "name": "边集数组",
            "attributes": {
                "难度": "入门",
                "内容": "利用一维数组存储图中所有边的一种图的表示方法，每个元素存储边的起点、终点和权。",
                "存储开销": "O(e)",
                "核心特性": "适合对边依次处理, 不适合对顶点或任一条边的运算, 适用于稀疏图",
                "教学视频": "未知",
                "教学材料": "未知"
            }
        },
        {
            "type": "数据结构",
            "ID": "07DS016",
            "name": "逆邻接表",
            "attributes": {
                "难度": "中等",
                "内容": "适用于有向图，每个顶点的单链表存储所有入边的信息。",
                "存储开销": "O(n+e)",
                "核心特性": "适用于有向图, 便于查找入边/入边邻接点",
                "教学视频": "未知",
                "教学材料": "未知"
            }
        },
        {
            "type": "数据结构",
            "ID": "07DS017",
            "name": "十字邻接表",
            "attributes": {
                "难度": "中等",
                "内容": "适用于有向图，结合邻接表和逆邻接表，每个边结点包含起点、终点、权、入边链域和出边链域。",
                "存储开销": "O(n+e)",
                "核心特性": "适用于有向图, 便于查找出边和入边信息",
                "教学视频": "未知",
                "教学材料": "未知"
            }
        },
        {
            "type": "数据结构",
            "ID": "07DS018",
            "name": "队列",
            "attributes": {
                "难度": "入门",
                "内容": "一种数据结构，用于广度优先搜索中存储待访问顶点。",
                "存储开销": "未知",
                "核心特性": "先进先出 (FIFO)",
                "教学视频": "未知",
                "教学材料": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "07ALG001",
            "name": "初始化图",
            "attributes": {
                "难度": "入门",
                "内容": "初始化图的存储空间。",
                "时间复杂度": "未知",
                "空间复杂度": "未知",
                "设计思想": "未知",
                "适用场景": "创建新图",
                "教学视频": "未知",
                "教学材料": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "07ALG002",
            "name": "建立图",
            "attributes": {
                "难度": "入门",
                "内容": "根据图的边集建立图的存储结构。",
                "时间复杂度": "未知",
                "空间复杂度": "未知",
                "设计思想": "未知",
                "适用场景": "从边集数据构建图表示",
                "教学视频": "未知",
                "教学材料": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "07ALG003",
            "name": "图的遍历",
            "attributes": {
                "难度": "中等",
                "内容": "从指定初始点出发，按照一定搜索方法对图中所有顶点做一次访问。",
                "时间复杂度": "未知",
                "空间复杂度": "未知",
                "设计思想": "未知",
                "适用场景": "访问图中所有顶点",
                "教学视频": "未知",
                "教学材料": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "07ALG004",
            "name": "查找图",
            "attributes": {
                "难度": "入门",
                "内容": "从图中查找给定值顶点。",
                "时间复杂度": "未知",
                "空间复杂度": "未知",
                "设计思想": "未知",
                "适用场景": "查找特定顶点",
                "教学视频": "未知",
                "教学材料": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "07ALG005",
            "name": "输出图",
            "attributes": {
                "难度": "入门",
                "内容": "按照图的一种表示方法输出一个图。",
                "时间复杂度": "未知",
                "空间复杂度": "未知",
                "设计思想": "未知",
                "适用场景": "显示图的结构",
                "教学视频": "未知",
                "教学材料": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "07ALG006",
            "name": "清除图",
            "attributes": {
                "难度": "入门",
                "内容": "清除图中动态分配的存储空间。",
                "时间复杂度": "未知",
                "空间复杂度": "未知",
                "设计思想": "未知",
                "适用场景": "释放图占用的内存",
                "教学视频": "未知",
                "教学材料": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "07ALG007",
            "name": "最小生成树",
            "attributes": {
                "难度": "中等",
                "内容": "求图中的最小生成树。",
                "时间复杂度": "未知",
                "空间复杂度": "未知",
                "设计思想": "未知",
                "适用场景": "连接所有顶点的最小总权值边集",
                "教学视频": "未知",
                "教学材料": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "07ALG008",
            "name": "最短路径",
            "attributes": {
                "难度": "中等",
                "内容": "求图中顶点之间的最短路径。",
                "时间复杂度": "未知",
                "空间复杂度": "未知",
                "设计思想": "未知",
                "适用场景": "寻找两点间权值之和最小的路径",
                "教学视频": "未知",
                "教学材料": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "07ALG009",
            "name": "拓扑排序",
            "attributes": {
                "难度": "中等",
                "内容": "求有向图中顶点之间的拓扑序列。",
                "时间复杂度": "未知",
                "空间复杂度": "未知",
                "设计思想": "未知",
                "适用场景": "有向无环图 (DAG) 的顶点排序",
                "教学视频": "未知",
                "教学材料": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "07ALG010",
            "name": "关键路径",
            "attributes": {
                "难度": "高级",
                "内容": "求有向带权图中的关键路径。",
                "时间复杂度": "未知",
                "空间复杂度": "未知",
                "设计思想": "未知",
                "适用场景": "项目管理，查找完成项目所需的最短时间",
                "教学视频": "未知",
                "教学材料": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "07ALG011",
            "name": "初始化邻接矩阵",
            "attributes": {
                "难度": "入门",
                "内容": "初始化邻接矩阵表示的图的存储空间。",
                "时间复杂度": "O(n^2)",
                "空间复杂度": "O(1)",
                "设计思想": "循环赋值",
                "适用场景": "初始化邻接矩阵表示的图",
                "教学视频": "未知",
                "教学材料": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "07ALG012",
            "name": "建立邻接矩阵",
            "attributes": {
                "难度": "入门",
                "内容": "根据图的边集生成图的邻接矩阵。",
                "时间复杂度": "O(e)",
                "空间复杂度": "O(1)",
                "设计思想": "读取边信息并更新矩阵",
                "适用场景": "从边集数据构建邻接矩阵",
                "教学视频": "未知",
                "教学材料": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "07ALG013",
            "name": "输出邻接矩阵",
            "attributes": {
                "难度": "入门",
                "内容": "输出用邻接矩阵表示一个图的顶点集和边集。",
                "时间复杂度": "O(n^2)",
                "空间复杂度": "O(1)",
                "设计思想": "遍历矩阵输出边信息",
                "适用场景": "显示邻接矩阵表示的图",
                "教学视频": "未知",
                "教学材料": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "07ALG014",
            "name": "初始化邻接表",
            "attributes": {
                "难度": "入门",
                "内容": "初始化图邻接表的存储空间。",
                "时间复杂度": "O(n)",
                "空间复杂度": "O(1)",
                "设计思想": "循环赋值",
                "适用场景": "初始化邻接表表示的图",
                "教学视频": "未知",
                "教学材料": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "07ALG015",
            "name": "建立邻接表",
            "attributes": {
                "难度": "入门",
                "内容": "根据图的边集生成其邻接表。",
                "时间复杂度": "O(e)",
                "空间复杂度": "O(e)",
                "设计思想": "链表头插法",
                "适用场景": "从边集数据构建邻接表",
                "教学视频": "未知",
                "教学材料": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "07ALG016",
            "name": "输出邻接表",
            "attributes": {
                "难度": "入门",
                "内容": "把邻接表表示的图用顶点集和边集的形式输出。",
                "时间复杂度": "O(n+e)",
                "空间复杂度": "O(1)",
                "设计思想": "遍历链表输出边信息",
                "适用场景": "显示邻接表表示的图",
                "教学视频": "未知",
                "教学材料": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "07ALG017",
            "name": "初始化边集数组",
            "attributes": {
                "难度": "入门",
                "内容": "初始化图的边集数组的存储空间。",
                "时间复杂度": "O(e)",
                "空间复杂度": "O(1)",
                "设计思想": "循环赋值",
                "适用场景": "初始化边集数组表示的图",
                "教学视频": "未知",
                "教学材料": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "07ALG018",
            "name": "建立边集数组",
            "attributes": {
                "难度": "入门",
                "内容": "根据图的边集生成图的边集数组。",
                "时间复杂度": "O(e)",
                "空间复杂度": "O(1)",
                "设计思想": "顺序填充数组",
                "适用场景": "从边集数据构建边集数组",
                "教学视频": "未知",
                "教学材料": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "07ALG019",
            "name": "输出边集数组",
            "attributes": {
                "难度": "入门",
                "内容": "根据图的边集数组表示输出图的二元组表示（顶点集和边集）。",
                "时间复杂度": "O(e)",
                "空间复杂度": "O(1)",
                "设计思想": "遍历数组输出边信息",
                "适用场景": "显示边集数组表示的图",
                "教学视频": "未知",
                "教学材料": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "07ALG020",
            "name": "深度优先搜索",
            "attributes": {
                "难度": "中等",
                "内容": "类似于对树的先根遍历，是一个递归过程。从一个顶点出发，访问其未访问邻接点并递归，回溯直到所有可达顶点被访问。",
                "时间复杂度": "未知",
                "空间复杂度": "未知",
                "设计思想": "递归, 回溯",
                "适用场景": "图遍历, 查找路径, 判断连通性, 拓扑排序",
                "教学视频": "未知",
                "教学材料": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "07ALG021",
            "name": "邻接矩阵深度优先搜索",
            "attributes": {
                "难度": "中等",
                "内容": "使用邻接矩阵表示图进行深度优先搜索。",
                "时间复杂度": "O(n^2)",
                "空间复杂度": "O(n)",
                "设计思想": "递归, 遍历邻接矩阵行",
                "适用场景": "图遍历 (使用邻接矩阵)",
                "教学视频": "未知",
                "教学材料": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "07ALG022",
            "name": "邻接表深度优先搜索",
            "attributes": {
                "难度": "中等",
                "内容": "使用邻接表表示图进行深度优先搜索。",
                "时间复杂度": "O(n+e)",
                "空间复杂度": "O(n)",
                "设计思想": "递归, 遍历邻接表链表",
                "适用场景": "图遍历 (使用邻接表)",
                "教学视频": "未知",
                "教学材料": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "07ALG023",
            "name": "广度优先搜索",
            "attributes": {
                "难度": "中等",
                "内容": "类似于对树的按层遍历。从初始点出发，依次访问所有未访问过的邻接点，使用队列实现。",
                "时间复杂度": "未知",
                "空间复杂度": "未知",
                "设计思想": "层次遍历, 使用队列",
                "适用场景": "图遍历, 查找最短路径 (无权图), 爬虫",
                "教学视频": "未知",
                "教学材料": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "07ALG024",
            "name": "邻接矩阵广度优先搜索",
            "attributes": {
                "难度": "中等",
                "内容": "使用邻接矩阵表示图进行广度优先搜索。",
                "时间复杂度": "O(n^2)",
                "空间复杂度": "O(n)",
                "设计思想": "层次遍历, 使用队列, 遍历邻接矩阵行",
                "适用场景": "图遍历 (使用邻接矩阵)",
                "教学视频": "未知",
                "教学材料": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "07ALG025",
            "name": "邻接表广度优先搜索",
            "attributes": {
                "难度": "中等",
                "内容": "使用邻接表表示图进行广度优先搜索。",
                "时间复杂度": "O(n+e)",
                "空间复杂度": "O(n)",
                "设计思想": "层次遍历, 使用队列, 遍历邻接表链表",
                "适用场景": "图遍历 (使用邻接表)",
                "教学视频": "未知",
                "教学材料": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "07CON001",
            "name": "数据结构",
            "attributes": {
                "难度": "入门",
                "内容": "用于存储和组织数据的方式，定义了数据元素之间的逻辑关系及操作方式。",
                "教学视频": "未知",
                "教学材料": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "07CON002",
            "name": "顶点集",
            "attributes": {
                "难度": "入门",
                "内容": "图G=(V,E)中的顶点集合V。",
                "教学视频": "未知",
                "教学材料": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "07CON003",
            "name": "边集",
            "attributes": {
                "难度": "入门",
                "内容": "图G=(V,E)中的边集合E，是顶点集V上二元关系的集合。",
                "教学视频": "未知",
                "教学材料": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "07CON004",
            "name": "二元关系",
            "attributes": {
                "难度": "入门",
                "内容": "定义数据元素之间的逻辑关系。",
                "教学视频": "未知",
                "教学材料": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "07CON005",
            "name": "顶点",
            "attributes": {
                "难度": "入门",
                "内容": "图的基本组成单元。",
                "教学视频": "未知",
                "教学材料": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "07CON006",
            "name": "边",
            "attributes": {
                "难度": "入门",
                "内容": "连接图中两个顶点之间的关系，可以是序偶（有向）或无序对（无向）。",
                "教学视频": "未知",
                "教学材料": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "07CON007",
            "name": "序偶",
            "attributes": {
                "难度": "入门",
                "内容": "对应有向图中的一条有向边。",
                "教学视频": "未知",
                "教学材料": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "07CON008",
            "name": "无序对",
            "attributes": {
                "难度": "入门",
                "内容": "对应无向图中的一条无向边。",
                "教学视频": "未知",
                "教学材料": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "07CON009",
            "name": "孤立顶点",
            "attributes": {
                "难度": "入门",
                "内容": "边集为空时，图中的顶点均为孤立顶点。",
                "教学视频": "未知",
                "教学材料": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "07CON010",
            "name": "端点",
            "attributes": {
                "难度": "入门",
                "内容": "在无向图中，若存在边(v_i,v_j)，则v_i、v_j为此边的两个端点。",
                "教学视频": "未知",
                "教学材料": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "07CON011",
            "name": "邻接点",
            "attributes": {
                "难度": "入门",
                "内容": "若存在边(v_i,v_j)或<v_i,v_j>，则称v_i和v_j互为邻接点。",
                "教学视频": "未知",
                "教学材料": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "07CON012",
            "name": "出边",
            "attributes": {
                "难度": "入门",
                "内容": "在有向图中，若存在边<v_i,v_j>，此边是顶点v_i的一条出边。",
                "教学视频": "未知",
                "教学材料": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "07CON013",
            "name": "入边",
            "attributes": {
                "难度": "入门",
                "内容": "在有向图中，若存在边<v_i,v_j>，此边是顶点v_j的一条入边。",
                "教学视频": "未知",
                "教学材料": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "07CON014",
            "name": "起点",
            "attributes": {
                "难度": "入门",
                "内容": "在有向图中，若存在边<v_i,v_j>，称v_i为此边的起始点。",
                "教学视频": "未知",
                "教学材料": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "07CON015",
            "name": "终点",
            "attributes": {
                "难度": "入门",
                "content": "在有向图中，若存在边<v_i,v_j>，称v_j为此边的终止端点。",
                "教学视频": "未知",
                "教学材料": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "07CON016",
            "name": "出边邻接点",
            "attributes": {
                "难度": "入门",
                "内容": "在有向图中，若存在边<v_i,v_j>，称v_j是v_i的出边邻接点。",
                "教学视频": "未知",
                "教学材料": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "07CON017",
            "name": "入边邻接点",
            "attributes": {
                "难度": "入门",
                "内容": "在有向图中，若存在边<v_i,v_j>，称v_i是v_j的入边邻接点。",
                "教学视频": "未知",
                "教学材料": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "07CON018",
            "name": "顶点的度",
            "attributes": {
                "难度": "入门",
                "内容": "无向图中为以该顶点为一个端点的边的数目；有向图中等于入度和出度之和。",
                "教学视频": "未知",
                "教学材料": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "07CON019",
            "name": "入度",
            "attributes": {
                "难度": "入门",
                "内容": "有向图中该顶点的入边的数目。",
                "教学视频": "未知",
                "教学材料": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "07CON020",
            "name": "出度",
            "attributes": {
                "难度": "入门",
                "内容": "有向图中该顶点的出边的数目。",
                "教学视频": "未知",
                "教学材料": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "07CON021",
            "name": "子图",
            "attributes": {
                "难度": "入门",
                "内容": "若图G'=(V',E')满足V'是V的子集且E'是E的子集，且E'中顶点包含在V'中，则G'是G=(V,E)的子图。",
                "教学视频": "未知",
                "教学材料": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "07CON022",
            "name": "路径",
            "attributes": {
                "难度": "入门",
                "内容": "从顶点v到顶点v'的一个顶点序列v_i1,v_i2,...,v_im。",
                "教学视频": "未知",
                "教学材料": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "07CON023",
            "name": "路径长度",
            "attributes": {
                "难度": "入门",
                "内容": "路径上经过的边的数目。",
                "教学视频": "未知",
                "教学材料": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "07CON024",
            "name": "简单路径",
            "attributes": {
                "难度": "入门",
                "内容": "路径上所有顶点均不同。",
                "教学视频": "未知",
                "教学材料": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "07CON025",
            "name": "回路",
            "attributes": {
                "难度": "入门",
                "内容": "路径上的前后两端点相同。",
                "教学视频": "未知",
                "教学材料": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "07CON026",
            "name": "简单回路",
            "attributes": {
                "难度": "入门",
                "内容": "回路中除前后两端点相同外，其余顶点均不同。",
                "教学视频": "未知",
                "教学材料": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "07CON027",
            "name": "连通",
            "attributes": {
                "难度": "入门",
                "内容": "在无向图中，若从顶点v_i到顶点v_j有路径，则称v_i和v_j是连通的。",
                "教学视频": "未知",
                "教学材料": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "07CON028",
            "name": "连通分量",
            "attributes": {
                "难度": "入门",
                "内容": "无向图的极大连通子图。",
                "教学视频": "未知",
                "教学材料": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "07CON029",
            "name": "强连通分量",
            "attributes": {
                "难度": "中等",
                "内容": "有向图的极大强连通子图。",
                "教学视频": "未知",
                "教学材料": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "07CON030",
            "name": "权",
            "attributes": {
                "难度": "入门",
                "内容": "图中每条边可以标上的具有某种含义的数值。",
                "教学视频": "未知",
                "教学材料": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "07CON031",
            "name": "递归",
            "attributes": {
                "难度": "入门",
                "内容": "函数调用自身的一种编程技术，用于实现深度优先搜索等算法。",
                "教学视频": "未知",
                "教学材料": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "08CON001",
            "name": "图",
            "attributes": {
                "难度": "入门",
                "内容": "用于表示顶点和边之间关系的结构，可以是有向或无向、带权或无权",
                "教学视频": "未知",
                "教学材料": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "08CON002",
            "name": "连通图",
            "attributes": {
                "难度": "入门",
                "内容": "图中任意两个顶点之间都存在路径",
                "教学视频": "未知",
                "教学材料": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "08CON003",
            "name": "子图",
            "attributes": {
                "难度": "入门",
                "内容": "从原图G中取一部分顶点和一部分边构成",
                "教学视频": "未知",
                "教学材料": "未知"
            }
        },
        {
            "type": "数据结构",
            "ID": "08DS001",
            "name": "生成树",
            "attributes": {
                "难度": "入门",
                "内容": "连通图G的子图G'，包含G的全部顶点且不形成回路，含有n-1条边",
                "存储开销": null,
                "核心特性": "连通所有顶点，不形成回路，包含n个顶点和n-1条边",
                "教学视频": "未知",
                "教学材料": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "08CON004",
            "name": "回路",
            "attributes": {
                "难度": "入门",
                "内容": "图中从一个顶点出发沿边行走回到该顶点的路径",
                "教学视频": "未知",
                "教学材料": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "08ALG001",
            "name": "深度优先搜索",
            "attributes": {
                "难度": "入门",
                "内容": "一种图或树的遍历方法，用于生成深度优先生成树",
                "时间复杂度": null,
                "空间复杂度": null,
                "设计思想": "深度优先",
                "适用场景": "生成树",
                "教学视频": "未知",
                "教学材料": "未知"
            }
        },
        {
            "type": "数据结构",
            "ID": "08DS002",
            "name": "深度优先生成树",
            "attributes": {
                "难度": "入门",
                "内容": "从图中顶点v_0出发利用深度优先搜索遍历得到的生成树",
                "存储开销": null,
                "核心特性": "由DFS生成",
                "教学视频": "未知",
                "教学材料": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "08ALG002",
            "name": "广度优先搜索",
            "attributes": {
                "难度": "入门",
                "内容": "一种图或树的遍历方法，用于生成广度优先生成树",
                "时间复杂度": null,
                "空间复杂度": null,
                "设计思想": "广度优先",
                "适用场景": "生成树",
                "教学视频": "未知",
                "教学材料": "未知"
            }
        },
        {
            "type": "数据结构",
            "ID": "08DS003",
            "name": "广度优先生成树",
            "attributes": {
                "难度": "入门",
                "内容": "从图中顶点v_0出发利用广度优先搜索遍历得到的生成树",
                "存储开销": null,
                "核心特性": "由BFS生成",
                "教学视频": "未知",
                "教学材料": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "08CON005",
            "name": "极小连通子图",
            "attributes": {
                "难度": "入门",
                "内容": "能够连通图中所有顶点的最少边数的子图",
                "教学视频": "未知",
                "教学材料": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "08CON006",
            "name": "连通网",
            "attributes": {
                "难度": "入门",
                "内容": "无向连通带权图",
                "教学视频": "未知",
                "教学材料": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "08CON007",
            "name": "权",
            "attributes": {
                "难度": "入门",
                "内容": "图中边上的数值，表示某种度量（如造价、距离、时间等）",
                "教学视频": "未知",
                "教学材料": "未知"
            }
        },
        {
            "type": "数据结构",
            "ID": "08DS004",
            "name": "最小生成树",
            "attributes": {
                "难度": "入门",
                "内容": "连通网中权最小的生成树",
                "存储开销": null,
                "核心特性": "权最小",
                "适用场景": "连接所有节点且总成本最低的问题",
                "教学视频": "未知",
                "教学材料": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "08ALG003",
            "name": "普里姆算法",
            "attributes": {
                "难度": "中等",
                "内容": "构造最小生成树的算法之一，从一个顶点开始，逐步添加最短边和新顶点",
                "时间复杂度": "O(n^2)",
                "空间复杂度": "O(1)",
                "设计思想": "贪心",
                "适用场景": "求连通网的最小生成树",
                "教学视频": "未知",
                "教学材料": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "08ALG004",
            "name": "克鲁斯卡尔算法",
            "attributes": {
                "难度": "中等",
                "内容": "构造最小生成树的算法之一，将图的边按权值从小到大依次选取，若选取的边使生成树T不形成回路，则保留",
                "时间复杂度": "O(n^2)",
                "空间复杂度": "O(n^2)",
                "设计思想": "贪心",
                "适用场景": "求连通网的最小生成树",
                "教学视频": "未知",
                "教学材料": "未知"
            }
        },
        {
            "type": "数据结构",
            "ID": "08DS005",
            "name": "邻接矩阵",
            "attributes": {
                "难度": "入门",
                "内容": "用二维数组表示图中顶点之间连接关系的矩阵",
                "存储开销": "O(V^2)",
                "核心特性": "便于判断任意两顶点之间是否存在边及权值",
                "教学视频": "未知",
                "教学材料": "未知"
            }
        },
        {
            "type": "数据结构",
            "ID": "08DS006",
            "name": "边集数组",
            "attributes": {
                "难度": "入门",
                "内容": "用数组存储图中所有边的信息（如端点和权值）",
                "存储开销": "O(E)",
                "核心特性": "存储边及权值",
                "教学视频": "未知",
                "教学材料": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "08CON008",
            "name": "排序算法",
            "attributes": {
                "难度": "入门",
                "内容": "用于将数据元素按特定顺序排列的算法",
                "教学视频": "未知",
                "教学材料": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "08CON009",
            "name": "连通分量",
            "attributes": {
                "难度": "入门",
                "内容": "无向图中的极大连通子图",
                "教学视频": "未知",
                "教学材料": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "08CON010",
            "name": "最短路径",
            "attributes": {
                "难度": "入门",
                "内容": "图中从一个顶点到另一顶点边数最少（无权图）或带权路径长度最短（带权图）的路径",
                "教学视频": "未知",
                "教学材料": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "08CON011",
            "name": "路径长度",
            "attributes": {
                "难度": "入门",
                "内容": "无权图中路径上边的数目；带权图中路径上边的权值之和",
                "教学视频": "未知",
                "教学材料": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "08CON012",
            "name": "带权路径长度",
            "attributes": {
                "难度": "入门",
                "内容": "带权图中一条路径上所有边的权值之和",
                "教学视频": "未知",
                "教学材料": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "08CON013",
            "name": "有向图",
            "attributes": {
                "难度": "入门",
                "内容": "图的边有方向",
                "教学视频": "未知",
                "教学材料": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "08CON014",
            "name": "源点",
            "attributes": {
                "难度": "入门",
                "内容": "计算最短路径时指定的起始顶点或AOE网中整个工程的开始事件",
                "教学视频": "未知",
                "教学材料": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "08CON015",
            "name": "终点",
            "attributes": {
                "难度": "入门",
                "内容": "计算最短路径时指定的结束顶点",
                "教学视频": "未知",
                "教学材料": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "08ALG005",
            "name": "狄克斯特拉算法",
            "attributes": {
                "难度": "中等",
                "内容": "求图中从某一源点到其余各顶点最短路径的算法，按最短路径长度升序依次求出",
                "时间复杂度": "O(n^2)",
                "空间复杂度": "O(n)",
                "设计思想": "贪心",
                "适用场景": "求带权图中从单个源点到所有其他顶点的最短路径",
                "教学视频": "未知",
                "教学材料": "未知"
            }
        },
        {
            "type": "数据结构",
            "ID": "08DS007",
            "name": "邻接表",
            "attributes": {
                "难度": "入门",
                "内容": "用链表数组表示图中每个顶点的邻居及边信息",
                "存储开销": "O(V+E)",
                "核心特性": "便于遍历顶点的邻居",
                "教学视频": "未知",
                "教学材料": "未知"
            }
        },
        {
            "type": "数据结构",
            "ID": "08DS008",
            "name": "单链表",
            "attributes": {
                "难度": "入门",
                "内容": "一种线性数据结构，每个节点包含数据和指向下一个节点的指针",
                "存储开销": "O(N)",
                "核心特性": "动态大小，插入/删除效率高",
                "教学视频": "未知",
                "教学材料": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "08ALG006",
            "name": "弗洛伊德算法",
            "attributes": {
                "难度": "中等",
                "内容": "求图中每对顶点之间最短路径的算法，通过逐步考虑中间点来优化路径长度",
                "时间复杂度": "O(n^3)",
                "空间复杂度": "O(n^2)",
                "设计思想": "动态规划",
                "适用场景": "求图中所有顶点对之间的最短路径",
                "教学视频": "未知",
                "教学材料": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "08CON016",
            "name": "活动",
            "attributes": {
                "难度": "入门",
                "内容": "工程中的子工程或任务",
                "教学视频": "未知",
                "教学材料": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "08CON017",
            "name": "前序活动",
            "attributes": {
                "难度": "入门",
                "内容": "必须在当前活动之前完成的活动",
                "教学视频": "未知",
                "教学材料": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "08CON018",
            "name": "顶点活动网",
            "attributes": {
                "难度": "入门",
                "内容": "有向图，顶点代表活动，有向边代表活动间先后关系，起点是终点的前序活动",
                "核心特性": "顶点表示活动，边表示先后关系",
                "教学视频": "未知",
                "教学材料": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "08CON019",
            "name": "有向无环图",
            "attributes": {
                "难度": "入门",
                "内容": "不带有回路的有向图",
                "教学视频": "未知",
                "教学材料": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "08CON020",
            "name": "拓扑序列",
            "attributes": {
                "难度": "中等",
                "内容": "AOV网中所有活动排列成的线性序列，使得每个活动的所有前驱活动都排在该活动的前面",
                "核心特性": "满足前驱活动先于当前活动",
                "教学视频": "未知",
                "教学材料": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "08ALG007",
            "name": "拓扑排序",
            "attributes": {
                "难度": "中等",
                "内容": "由AOV网构造拓扑序列的过程，循环执行选择和删除入度为0的顶点",
                "时间复杂度": "O(n+e)",
                "空间复杂度": "O(n)",
                "设计思想": "迭代删除入度为0的顶点",
                "适用场景": "对具有先决条件的活动进行排序",
                "教学视频": "未知",
                "教学材料": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "08CON021",
            "name": "入度",
            "attributes": {
                "难度": "入门",
                "内容": "指向一个顶点的边的数目",
                "教学视频": "未知",
                "教学材料": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "08CON022",
            "name": "出度",
            "attributes": {
                "难度": "入门",
                "内容": "从一个顶点出发的边的数目",
                "教学视频": "未知",
                "教学材料": "未知"
            }
        },
        {
            "type": "数据结构",
            "ID": "08DS009",
            "name": "栈",
            "attributes": {
                "难度": "入门",
                "内容": "一种后进先出（LIFO）的数据结构",
                "存储开销": "O(N)",
                "核心特性": "后进先出 (LIFO)",
                "教学视频": "未知",
                "教学材料": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "08CON023",
            "name": "边活动网",
            "attributes": {
                "难度": "中等",
                "内容": "有向带权图，边表示活动，边上的权表示活动持续时间，顶点表示事件",
                "核心特性": "边表示活动，顶点表示事件",
                "教学视频": "未知",
                "教学材料": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "08CON024",
            "name": "事件",
            "attributes": {
                "难度": "中等",
                "内容": "AOE网中活动的转接点，表示入边活动完成且出边活动开始",
                "教学视频": "未知",
                "教学材料": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "08CON025",
            "name": "汇点",
            "attributes": {
                "难度": "中等",
                "内容": "AOE网中表示整个工程结束的特殊顶点，只有入边没有出边",
                "教学视频": "未知",
                "教学材料": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "08CON026",
            "name": "活动持续时间",
            "attributes": {
                "难度": "中等",
                "内容": "完成AOE网中某个活动所需的时间，由边上的权表示",
                "教学视频": "未知",
                "教学材料": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "08CON027",
            "name": "事件最早发生时间",
            "attributes": {
                "难度": "中等",
                "内容": "顶点v_j事件的最早发生时间，等于从源点v_0到v_j的所有路径中最长路径长度",
                "教学视频": "未知",
                "教学材料": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "08CON028",
            "name": "活动最早开始时间",
            "attributes": {
                "难度": "中等",
                "内容": "一个活动的起点事件的最早发生时间",
                "教学视频": "未知",
                "教学材料": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "08CON029",
            "name": "事件最迟发生时间",
            "attributes": {
                "难度": "中等",
                "内容": "顶点v_k事件最晚必须发生的时间，不影响整个工程按时完成",
                "教学视频": "未知",
                "教学材料": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "08CON030",
            "name": "活动最迟开始时间",
            "attributes": {
                "难度": "中等",
                "内容": "活动最晚必须开始的时间，不影响整个工程按时完成，等于其终点事件的最迟发生时间减去活动持续时间",
                "教学视频": "未知",
                "教学材料": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "08CON031",
            "name": "逆拓扑有序",
            "attributes": {
                "难度": "中等",
                "内容": "按照拓扑序列的相反次序排列",
                "教学视频": "未知",
                "教学材料": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "08CON032",
            "name": "活动时间余量",
            "attributes": {
                "难度": "中等",
                "内容": "活动最迟开始时间减去最早开始时间",
                "教学视频": "未知",
                "教学材料": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "08CON033",
            "name": "关键活动",
            "attributes": {
                "难度": "中等",
                "内容": "开始时间余量为0的活动，必须按时完成，否则将拖延整个工期",
                "核心特性": "开始时间余量为0",
                "教学视频": "未知",
                "教学材料": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "08CON034",
            "name": "关键路径",
            "attributes": {
                "难度": "中等",
                "内容": "由关键活动形成的从源点到汇点的路径",
                "核心特性": "决定整个工程的最短完成时间",
                "教学视频": "未知",
                "教学材料": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "08ALG008",
            "name": "关键路径算法",
            "attributes": {
                "难度": "高级",
                "内容": "计算AOE网中所有事件的最早/最迟发生时间，所有活动的最早/最迟开始时间及时间余量，从而找出关键活动和关键路径",
                "时间复杂度": "O(n+e)",
                "空间复杂度": "O(n)",
                "设计思想": "结合拓扑排序计算事件时间，然后计算活动时间",
                "适用场景": "工程项目管理，确定项目最短工期和关键任务",
                "教学视频": "未知",
                "教学材料": "未知"
            }
        }
    ],
    "relations": [
        {
            "type": "理论依赖",
            "ID": "01REL001",
            "source": "01DS001",
            "target": "01CON022"
        },
        {
            "type": "理论依赖",
            "ID": "01REL002",
            "source": "01DS001",
            "target": "01CON023"
        },
        {
            "type": "继承",
            "ID": "01REL003",
            "source": "01DS006",
            "target": "01DS007"
        },
        {
            "type": "继承",
            "ID": "01REL004",
            "source": "01DS005",
            "target": "01DS006"
        },
        {
            "type": "使用",
            "ID": "01REL005",
            "source": "01CON082",
            "target": "01CON086"
        },
        {
            "type": "使用",
            "ID": "01REL006",
            "source": "01CON082",
            "target": "01CON087"
        },
        {
            "type": "操作绑定",
            "ID": "01REL007",
            "source": "01ALG014",
            "target": "01DS012"
        },
        {
            "type": "操作绑定",
            "ID": "01REL008",
            "source": "01ALG015",
            "target": "01DS012"
        },
        {
            "type": "操作绑定",
            "ID": "01REL009",
            "source": "01ALG004",
            "target": "01DS012"
        },
        {
            "type": "操作绑定",
            "ID": "01REL010",
            "source": "01ALG013",
            "target": "01DS012"
        },
        {
            "type": "操作绑定",
            "ID": "01REL011",
            "source": "01ALG006",
            "target": "01DS001"
        },
        {
            "type": "操作绑定",
            "ID": "01REL012",
            "source": "01ALG007",
            "target": "01DS001"
        },
        {
            "type": "操作绑定",
            "ID": "01REL013",
            "source": "01ALG008",
            "target": "01DS001"
        },
        {
            "type": "使用",
            "ID": "01REL014",
            "source": "01ALG016",
            "target": "01CON098"
        },
        {
            "type": "操作绑定",
            "ID": "01REL015",
            "source": "01ALG017",
            "target": "01DS012"
        },
        {
            "type": "使用",
            "ID": "01REL016",
            "source": "01ALG009",
            "target": "01CON098"
        },
        {
            "type": "使用",
            "ID": "01REL017",
            "source": "01ALG010",
            "target": "01DS010"
        },
        {
            "type": "变体",
            "ID": "01REL018",
            "source": "01ALG010",
            "target": "01ALG009"
        },
        {
            "type": "使用",
            "ID": "01REL019",
            "source": "01CON055",
            "target": "01DS001"
        },
        {
            "type": "使用",
            "ID": "01REL020",
            "source": "01CON055",
            "target": "01CON056"
        },
        {
            "type": "使用",
            "ID": "01REL021",
            "source": "01CON051",
            "target": "01CON055"
        },
        {
            "type": "使用",
            "ID": "01REL022",
            "source": "01CON051",
            "target": "01CON061"
        },
        {
            "type": "使用",
            "ID": "01REL023",
            "source": "01CON051",
            "target": "01CON062"
        },
        {
            "type": "理论依赖",
            "ID": "01REL024",
            "source": "01CON055",
            "target": "01CON063"
        },
        {
            "type": "理论依赖",
            "ID": "01REL025",
            "source": "01CON055",
            "target": "01CON064"
        },
        {
            "type": "理论依赖",
            "ID": "01REL026",
            "source": "01CON051",
            "target": "01CON065"
        },
        {
            "type": "使用",
            "ID": "01REL027",
            "source": "01CON045",
            "target": "01DS012"
        },
        {
            "type": "使用",
            "ID": "01REL028",
            "source": "01CON045",
            "target": "01DS002"
        },
        {
            "type": "使用",
            "ID": "01REL029",
            "source": "01CON045",
            "target": "01DS003"
        },
        {
            "type": "使用",
            "ID": "01REL030",
            "source": "01CON045",
            "target": "01DS009"
        },
        {
            "type": "使用",
            "ID": "01REL031",
            "source": "01CON044",
            "target": "01CON050"
        },
        {
            "type": "使用",
            "ID": "01REL032",
            "source": "01CON044",
            "target": "01CON046"
        },
        {
            "type": "使用",
            "ID": "01REL033",
            "source": "01CON044",
            "target": "01CON047"
        },
        {
            "type": "使用",
            "ID": "01REL034",
            "source": "01CON044",
            "target": "01CON048"
        },
        {
            "type": "使用",
            "ID": "01REL035",
            "source": "01CON044",
            "target": "01CON049"
        },
        {
            "type": "使用",
            "ID": "01REL036",
            "source": "01CON072",
            "target": "01CON054"
        },
        {
            "type": "使用",
            "ID": "01REL037",
            "source": "01CON072",
            "target": "01CON043"
        },
        {
            "type": "使用",
            "ID": "01REL038",
            "source": "01CON072",
            "target": "01CON055"
        },
        {
            "type": "使用",
            "ID": "01REL039",
            "source": "01CON014",
            "target": "01DS001"
        },
        {
            "type": "使用",
            "ID": "01REL040",
            "source": "01CON014",
            "target": "01ALG001"
        },
        {
            "type": "使用",
            "ID": "01REL041",
            "source": "01CON024",
            "target": "01CON025"
        },
        {
            "type": "使用",
            "ID": "01REL042",
            "source": "01CON024",
            "target": "01CON026"
        },
        {
            "type": "理论依赖",
            "ID": "01REL043",
            "source": "01DS001",
            "target": "01CON024"
        },
        {
            "type": "使用",
            "ID": "01REL044",
            "target": "01CON027"
        },
        {
            "type": "理论依赖",
            "ID": "01REL045",
            "source": "01CON030",
            "target": "01CON027"
        },
        {
            "type": "理论依赖",
            "ID": "01REL046",
            "source": "01CON031",
            "target": "01CON027"
        },
        {
            "type": "使用",
            "ID": "01REL047",
            "source": "01CON032",
            "target": "01CON033"
        },
        {
            "type": "使用",
            "ID": "01REL048",
            "source": "01CON032",
            "target": "01CON034"
        },
        {
            "type": "使用",
            "ID": "01REL049",
            "source": "01CON032",
            "target": "01CON039"
        },
        {
            "type": "理论依赖",
            "ID": "01REL050",
            "source": "01CON086",
            "target": "01CON088"
        },
        {
            "type": "理论依赖",
            "ID": "01REL051",
            "source": "01CON086",
            "target": "01CON089"
        },
        {
            "type": "理论依赖",
            "ID": "01REL052",
            "source": "01CON086",
            "target": "01CON090"
        },
        {
            "type": "理论依赖",
            "ID": "01REL053",
            "source": "01CON086",
            "target": "01CON091"
        },
        {
            "type": "理论依赖",
            "ID": "01REL054",
            "source": "01CON087",
            "target": "01CON096"
        },
        {
            "type": "理论依赖",
            "ID": "01REL055",
            "source": "01CON087",
            "target": "01CON095"
        },
        {
            "type": "理论依赖",
            "ID": "01REL056",
            "source": "01CON087",
            "target": "01CON097"
        },
        {
            "type": "理论依赖",
            "ID": "01REL057",
            "source": "01CON087",
            "target": "01CON098"
        },
        {
            "type": "理论依赖",
            "ID": "01REL058",
            "source": "01CON087",
            "target": "01CON099"
        },
        {
            "type": "使用",
            "ID": "01REL059",
            "source": "01CON119",
            "target": "01CON070"
        },
        {
            "type": "使用",
            "ID": "01REL060",
            "source": "01CON119",
            "target": "01CON071"
        },
        {
            "type": "使用",
            "ID": "01REL061",
            "source": "01CON102",
            "target": "01CON103"
        },
        {
            "type": "使用",
            "ID": "01REL062",
            "source": "01CON102",
            "target": "01CON104"
        },
        {
            "type": "使用",
            "ID": "01REL063",
            "source": "01CON102",
            "target": "01CON105"
        },
        {
            "type": "使用",
            "ID": "01REL064",
            "source": "01CON108",
            "target": "01CON109"
        },
        {
            "type": "使用",
            "ID": "01REL065",
            "source": "01CON108",
            "target": "01CON110"
        },
        {
            "type": "使用",
            "ID": "01REL066",
            "source": "01CON108",
            "target": "01CON111"
        },
        {
            "type": "使用",
            "ID": "01REL067",
            "source": "01CON113",
            "target": "01CON108"
        },
        {
            "type": "使用",
            "ID": "01REL068",
            "source": "01DS009",
            "target": "01CON113"
        },
        {
            "type": "使用",
            "ID": "01REL069",
            "source": "01DS009",
            "target": "01CON112"
        },
        {
            "type": "使用",
            "ID": "01REL070",
            "source": "01DS009",
            "target": "01CON108"
        },
        {
            "type": "使用",
            "ID": "01REL071",
            "source": "01CON023",
            "target": "01CON010"
        },
        {
            "type": "使用",
            "ID": "01REL072",
            "source": "01CON023",
            "target": "01CON011"
        },
        {
            "type": "使用",
            "ID": "01REL073",
            "source": "01CON023",
            "target": "01CON012"
        },
        {
            "type": "使用",
            "ID": "01REL074",
            "source": "01CON023",
            "target": "01CON013"
        },
        {
            "type": "使用",
            "ID": "01REL075",
            "source": "01DS003",
            "target": "01CON015"
        },
        {
            "type": "使用",
            "ID": "01REL076",
            "source": "01DS003",
            "target": "01CON016"
        },
        {
            "type": "使用",
            "ID": "01REL077",
            "source": "01DS003",
            "target": "01CON017"
        },
        {
            "type": "使用",
            "ID": "01REL078",
            "source": "01DS003",
            "target": "01CON018"
        },
        {
            "type": "使用",
            "ID": "01REL079",
            "source": "01DS003",
            "target": "01CON019"
        },
        {
            "type": "使用",
            "ID": "01REL080",
            "source": "01DS003",
            "target": "01CON020"
        },
        {
            "type": "使用",
            "ID": "01REL081",
            "source": "01DS003",
            "target": "01CON021"
        },
        {
            "type": "使用",
            "ID": "01REL082",
            "source": "01DS006",
            "target": "01CON040"
        },
        {
            "type": "使用",
            "ID": "01REL083",
            "source": "01DS006",
            "target": "01CON041"
        },
        {
            "type": "使用",
            "ID": "01REL084",
            "source": "01DS006",
            "target": "01CON042"
        },
        {
            "type": "理论依赖",
            "ID": "01REL085",
            "source": "01CON043",
            "target": "01CON052"
        },
        {
            "type": "理论依赖",
            "ID": "01REL086",
            "source": "01CON043",
            "target": "01CON053"
        },
        {
            "type": "理论依赖",
            "ID": "01REL087",
            "source": "01ALG001",
            "target": "01CON073"
        },
        {
            "type": "理论依赖",
            "ID": "01REL088",
            "source": "01ALG001",
            "target": "01CON074"
        },
        {
            "type": "理论依赖",
            "ID": "01REL089",
            "source": "01ALG001",
            "target": "01CON075"
        },
        {
            "type": "理论依赖",
            "ID": "01REL090",
            "source": "01ALG001",
            "target": "01CON076"
        },
        {
            "type": "理论依赖",
            "ID": "01REL091",
            "source": "01ALG001",
            "target": "01CON077"
        },
        {
            "type": "使用",
            "ID": "01REL092",
            "source": "01CON078",
            "target": "01CON079"
        },
        {
            "type": "使用",
            "ID": "01REL093",
            "source": "01CON078",
            "target": "01CON080"
        },
        {
            "type": "使用",
            "ID": "01REL094",
            "source": "01CON078",
            "target": "01CON081"
        },
        {
            "type": "使用",
            "ID": "01REL095",
            "source": "01ALG001",
            "target": "01CON078"
        },
        {
            "type": "理论依赖",
            "ID": "01REL096",
            "source": "01CON086",
            "target": "01CON092"
        },
        {
            "type": "理论依赖",
            "ID": "01REL097",
            "source": "01CON086",
            "target": "01CON093"
        },
        {
            "type": "理论依赖",
            "ID": "01REL098",
            "source": "01CON086",
            "target": "01CON094"
        },
        {
            "type": "理论依赖",
            "ID": "01REL099",
            "source": "01CON087",
            "target": "01CON092"
        },
        {
            "type": "理论依赖",
            "ID": "01REL100",
            "source": "01CON087",
            "target": "01CON093"
        },
        {
            "type": "理论依赖",
            "ID": "01REL101",
            "source": "01CON087",
            "target": "01CON094"
        },
        {
            "type": "理论依赖",
            "ID": "01REL102",
            "source": "01CON087",
            "target": "01CON100"
        },
        {
            "type": "理论依赖",
            "ID": "01REL103",
            "source": "01CON087",
            "target": "01CON101"
        },
        {
            "type": "使用",
            "ID": "01REL104",
            "source": "01DS003",
            "target": "01CON106"
        },
        {
            "type": "使用",
            "ID": "01REL105",
            "source": "01DS003",
            "target": "01CON107"
        },
        {
            "type": "使用",
            "ID": "01REL106",
            "source": "01CON050",
            "target": "01CON107"
        },
        {
            "type": "使用",
            "ID": "01REL107",
            "source": "01ALG001",
            "target": "01CON114"
        },
        {
            "type": "使用",
            "ID": "01REL108",
            "source": "01CON114",
            "target": "01CON115"
        },
        {
            "type": "理论依赖",
            "ID": "01REL109",
            "source": "01CON114",
            "target": "01CON116"
        },
        {
            "type": "理论依赖",
            "ID": "01REL110",
            "source": "01CON114",
            "target": "01CON117"
        },
        {
            "type": "使用",
            "ID": "01REL111",
            "source": "01CON050",
            "target": "01CON118"
        },
        {
            "type": "理论依赖",
            "ID": "01REL112",
            "source": "01CON114",
            "target": "01CON119"
        },
        {
            "type": "继承",
            "ID": "02REL001",
            "source": "02DS002",
            "target": "02DS001"
        },
        {
            "type": "继承",
            "ID": "02REL002",
            "source": "02DS003",
            "target": "02DS001"
        },
        {
            "type": "继承",
            "ID": "02REL003",
            "source": "02DS005",
            "target": "02DS003"
        },
        {
            "type": "继承",
            "ID": "02REL004",
            "source": "02DS006",
            "target": "02DS005"
        },
        {
            "type": "继承",
            "ID": "02REL005",
            "source": "02DS007",
            "target": "02DS005"
        },
        {
            "type": "变体",
            "ID": "02REL006",
            "source": "02DS008",
            "target": "02DS006"
        },
        {
            "type": "变体",
            "ID": "02REL007",
            "source": "02DS008",
            "target": "02DS007"
        },
        {
            "type": "变体",
            "ID": "02REL008",
            "source": "02DS009",
            "target": "02DS005"
        },
        {
            "type": "继承",
            "ID": "02REL009",
            "source": "02DS010",
            "target": "02DS001"
        },
        {
            "type": "继承",
            "ID": "02REL010",
            "source": "02DS011",
            "target": "02DS001"
        },
        {
            "type": "继承",
            "ID": "02REL011",
            "source": "02DS012",
            "target": "02DS001"
        },
        {
            "type": "使用",
            "ID": "02REL012",
            "source": "02DS002",
            "target": "02DS004"
        },
        {
            "type": "使用",
            "ID": "02REL013",
            "source": "02DS003",
            "target": "02CON013"
        },
        {
            "type": "操作绑定",
            "ID": "02REL014",
            "source": "02ALG001",
            "target": "02DS001"
        },
        {
            "type": "操作绑定",
            "ID": "02REL015",
            "source": "02ALG002",
            "target": "02DS001"
        },
        {
            "type": "操作绑定",
            "ID": "02REL016",
            "source": "02ALG003",
            "target": "02DS001"
        },
        {
            "type": "操作绑定",
            "ID": "02REL017",
            "source": "02ALG004",
            "target": "02DS001"
        },
        {
            "type": "操作绑定",
            "ID": "02REL018",
            "source": "02ALG005",
            "target": "02DS001"
        },
        {
            "type": "操作绑定",
            "ID": "02REL019",
            "source": "02ALG006",
            "target": "02DS001"
        },
        {
            "type": "操作绑定",
            "ID": "02REL020",
            "source": "02ALG007",
            "target": "02DS001"
        },
        {
            "type": "操作绑定",
            "ID": "02REL021",
            "source": "02ALG008",
            "target": "02DS001"
        },
        {
            "type": "操作绑定",
            "ID": "02REL022",
            "source": "02ALG009",
            "target": "02DS001"
        },
        {
            "type": "操作绑定",
            "ID": "02REL023",
            "source": "02ALG010",
            "target": "02DS001"
        },
        {
            "type": "操作绑定",
            "ID": "02REL024",
            "source": "02ALG011",
            "target": "02DS001"
        },
        {
            "type": "操作绑定",
            "ID": "02REL025",
            "source": "02ALG012",
            "target": "02DS001"
        },
        {
            "type": "操作绑定",
            "ID": "02REL026",
            "source": "02ALG013",
            "target": "02DS010"
        },
        {
            "type": "操作绑定",
            "ID": "02REL027",
            "source": "02ALG014",
            "target": "02DS011"
        },
        {
            "type": "操作绑定",
            "ID": "02REL028",
            "source": "02ALG015",
            "target": "02DS011"
        },
        {
            "type": "操作绑定",
            "ID": "02REL029",
            "source": "02ALG016",
            "target": "02DS011"
        },
        {
            "type": "使用",
            "ID": "02REL030",
            "source": "02ALG017",
            "target": "02DS012"
        },
        {
            "type": "使用",
            "ID": "02REL031",
            "source": "02ALG018",
            "target": "02DS012"
        },
        {
            "type": "优化",
            "ID": "02REL032",
            "source": "02ALG016",
            "target": "02ALG015"
        },
        {
            "type": "理论依赖",
            "ID": "02REL033",
            "source": "02ALG013",
            "target": "02CON020"
        },
        {
            "type": "理论依赖",
            "ID": "02REL034",
            "source": "02ALG014",
            "target": "02CON020"
        },
        {
            "type": "理论依赖",
            "ID": "02REL035",
            "source": "02ALG015",
            "target": "02CON020"
        },
        {
            "type": "理论依赖",
            "ID": "02REL036",
            "source": "02ALG016",
            "target": "02CON020"
        },
        {
            "type": "理论依赖",
            "ID": "02REL037",
            "source": "02ALG012",
            "target": "02CON021"
        },
        {
            "type": "理论依赖",
            "ID": "02REL038",
            "source": "02ALG015",
            "target": "02CON021"
        },
        {
            "type": "理论依赖",
            "ID": "02REL039",
            "source": "02ALG016",
            "target": "02CON021"
        },
        {
            "type": "理论依赖",
            "ID": "03REL001",
            "source": "03DS001",
            "target": "03CON002"
        },
        {
            "type": "理论依赖",
            "ID": "03REL002",
            "source": "03DS001",
            "target": "03CON001"
        },
        {
            "type": "使用",
            "ID": "03REL003",
            "source": "03DS001",
            "target": "03CON003"
        },
        {
            "type": "使用",
            "ID": "03REL004",
            "source": "03DS001",
            "target": "03CON004"
        },
        {
            "type": "使用",
            "ID": "03REL005",
            "source": "03CON003",
            "target": "03DS005"
        },
        {
            "type": "使用",
            "ID": "03REL006",
            "source": "03CON004",
            "target": "03DS006"
        },
        {
            "type": "操作绑定",
            "ID": "03REL007",
            "source": "03ALG003",
            "target": "03DS001"
        },
        {
            "type": "操作绑定",
            "ID": "03REL008",
            "source": "03ALG004",
            "target": "03DS001"
        },
        {
            "type": "操作绑定",
            "ID": "03REL009",
            "source": "03ALG005",
            "target": "03DS001"
        },
        {
            "type": "操作绑定",
            "ID": "03REL010",
            "source": "03ALG006",
            "target": "03DS001"
        },
        {
            "type": "操作绑定",
            "ID": "03REL011",
            "source": "03ALG007",
            "target": "03DS001"
        },
        {
            "type": "使用",
            "ID": "03REL012",
            "source": "03ALG003",
            "target": "03ALG001"
        },
        {
            "type": "使用",
            "ID": "03REL013",
            "source": "03ALG004",
            "target": "03ALG001"
        },
        {
            "type": "使用",
            "ID": "03REL014",
            "source": "03ALG006",
            "target": "03ALG001"
        },
        {
            "type": "使用",
            "ID": "03REL015",
            "source": "03ALG007",
            "target": "03ALG001"
        },
        {
            "type": "操作绑定",
            "ID": "03REL016",
            "source": "03ALG001",
            "target": "03DS005"
        },
        {
            "type": "操作绑定",
            "ID": "03REL017",
            "source": "03ALG002",
            "target": "03DS005"
        },
        {
            "type": "变体",
            "ID": "03REL018",
            "source": "03DS002",
            "target": "03CON005"
        },
        {
            "type": "使用",
            "ID": "03REL019",
            "source": "03DS002",
            "target": "03CON006"
        },
        {
            "type": "使用",
            "ID": "03REL020",
            "source": "03CON006",
            "target": "03CON007"
        },
        {
            "type": "使用",
            "ID": "03REL021",
            "source": "03DS002",
            "target": "03CON003"
        },
        {
            "type": "使用",
            "ID": "03REL022",
            "source": "03DS002",
            "target": "03CON004"
        },
        {
            "type": "操作绑定",
            "ID": "03REL023",
            "source": "03ALG008",
            "target": "03DS002"
        },
        {
            "type": "操作绑定",
            "ID": "03REL024",
            "source": "03ALG009",
            "target": "03DS002"
        },
        {
            "type": "优化",
            "ID": "03REL025",
            "source": "03ALG009",
            "target": "03ALG008"
        },
        {
            "type": "操作绑定",
            "ID": "03REL026",
            "source": "03ALG010",
            "target": "03DS002"
        },
        {
            "type": "使用",
            "ID": "03REL027",
            "source": "03CON008",
            "target": "03CON014"
        },
        {
            "type": "使用",
            "ID": "03REL028",
            "source": "03CON008",
            "target": "03DS005"
        },
        {
            "type": "使用",
            "ID": "03REL029",
            "source": "03CON009",
            "target": "03CON015"
        },
        {
            "type": "使用",
            "ID": "03REL030",
            "source": "03CON009",
            "target": "03DS005"
        },
        {
            "type": "理论依赖",
            "ID": "03REL031",
            "source": "03ALG010",
            "target": "03CON008"
        },
        {
            "type": "继承",
            "ID": "03REL032",
            "source": "03DS003",
            "target": "03DS004"
        },
        {
            "type": "使用",
            "ID": "03REL033",
            "source": "03DS003",
            "target": "03CON004"
        },
        {
            "type": "使用",
            "ID": "03REL034",
            "source": "03CON004",
            "target": "03CON013"
        },
        {
            "type": "变体",
            "ID": "03REL035",
            "source": "03CON012",
            "target": "03CON004"
        },
        {
            "type": "理论依赖",
            "ID": "03REL036",
            "source": "03DS003",
            "target": "03CON010"
        },
        {
            "type": "理论依赖",
            "ID": "03REL037",
            "source": "03DS003",
            "target": "03CON011"
        },
        {
            "type": "操作绑定",
            "ID": "03REL038",
            "source": "03ALG011",
            "target": "03DS003"
        },
        {
            "type": "操作绑定",
            "ID": "03REL039",
            "source": "03ALG012",
            "target": "03DS003"
        },
        {
            "type": "操作绑定",
            "ID": "03REL040",
            "source": "03ALG013",
            "target": "03DS003"
        },
        {
            "type": "操作绑定",
            "ID": "03REL041",
            "source": "03ALG014",
            "target": "03DS003"
        },
        {
            "type": "理论依赖",
            "ID": "03REL042",
            "source": "03CON016",
            "target": "03DS002"
        },
        {
            "type": "继承",
            "ID": "04REL001",
            "source": "04DS002",
            "target": "04DS001"
        },
        {
            "type": "继承",
            "ID": "04REL002",
            "source": "04DS003",
            "target": "04DS001"
        },
        {
            "type": "操作绑定",
            "ID": "04REL003",
            "source": "04ALG010",
            "target": "04DS002"
        },
        {
            "type": "操作绑定",
            "ID": "04REL004",
            "source": "04ALG011",
            "target": "04DS002"
        },
        {
            "type": "使用",
            "ID": "04REL005",
            "source": "04DS005",
            "target": "04DS004"
        },
        {
            "type": "使用",
            "ID": "04REL006",
            "source": "04DS005",
            "target": "04CON006"
        },
        {
            "type": "使用",
            "ID": "04REL007",
            "source": "04DS007",
            "target": "04DS006"
        },
        {
            "type": "使用",
            "ID": "04REL008",
            "source": "04DS007",
            "target": "04CON006"
        },
        {
            "type": "使用",
            "ID": "04REL009",
            "source": "04ALG001",
            "target": "04DS002"
        },
        {
            "type": "使用",
            "ID": "04REL010",
            "source": "04ALG022",
            "target": "04DS002"
        },
        {
            "type": "使用",
            "ID": "04REL011",
            "source": "04CON019",
            "target": "04DS002"
        },
        {
            "type": "理论依赖",
            "ID": "04REL012",
            "source": "04CON019",
            "target": "04CON008"
        },
        {
            "type": "理论依赖",
            "ID": "04REL013",
            "source": "04CON019",
            "target": "04CON009"
        },
        {
            "type": "使用",
            "ID": "04REL014",
            "source": "04ALG002",
            "target": "04DS002"
        },
        {
            "type": "使用",
            "ID": "04REL015",
            "source": "04ALG003",
            "target": "04DS002"
        },
        {
            "type": "使用",
            "ID": "04REL016",
            "source": "04ALG003",
            "target": "04ALG023"
        },
        {
            "type": "理论依赖",
            "ID": "04REL017",
            "source": "04ALG023",
            "target": "04CON012"
        },
        {
            "type": "理论依赖",
            "ID": "04REL018",
            "source": "04ALG004",
            "target": "04CON013"
        },
        {
            "type": "使用",
            "ID": "04REL019",
            "source": "04ALG004",
            "target": "04DS002"
        },
        {
            "type": "继承",
            "ID": "04REL020",
            "source": "04ALG005",
            "target": "04ALG004"
        },
        {
            "type": "使用",
            "ID": "04REL021",
            "source": "04ALG005",
            "target": "04CON013"
        },
        {
            "type": "继承",
            "ID": "04REL022",
            "source": "04ALG006",
            "target": "04ALG004"
        },
        {
            "type": "使用",
            "ID": "04REL023",
            "source": "04ALG006",
            "target": "04CON013"
        },
        {
            "type": "继承",
            "ID": "04REL024",
            "source": "04ALG007",
            "target": "04ALG004"
        },
        {
            "type": "使用",
            "ID": "04REL025",
            "source": "04ALG007",
            "target": "04CON013"
        },
        {
            "type": "继承",
            "ID": "04REL026",
            "source": "04ALG008",
            "target": "04ALG004"
        },
        {
            "type": "使用",
            "ID": "04REL027",
            "source": "04ALG008",
            "target": "04CON013"
        },
        {
            "type": "使用",
            "ID": "04REL028",
            "source": "04ALG008",
            "target": "04CON020"
        },
        {
            "type": "使用",
            "ID": "04REL029",
            "source": "04ALG008",
            "target": "04CON021"
        },
        {
            "type": "继承",
            "ID": "04REL030",
            "source": "04ALG009",
            "target": "04ALG004"
        },
        {
            "type": "使用",
            "ID": "04REL031",
            "source": "04ALG009",
            "target": "04CON013"
        },
        {
            "type": "操作绑定",
            "ID": "04REL032",
            "source": "04ALG016",
            "target": "04DS003"
        },
        {
            "type": "操作绑定",
            "ID": "04REL033",
            "source": "04ALG017",
            "target": "04DS003"
        },
        {
            "type": "操作绑定",
            "ID": "04REL034",
            "source": "04ALG012",
            "target": "04DS002"
        },
        {
            "type": "操作绑定",
            "ID": "04REL035",
            "source": "04ALG013",
            "target": "04DS002"
        },
        {
            "type": "操作绑定",
            "ID": "04REL036",
            "source": "04ALG014",
            "target": "04DS002"
        },
        {
            "type": "操作绑定",
            "ID": "04REL037",
            "source": "04ALG015",
            "target": "04DS002"
        },
        {
            "type": "操作绑定",
            "ID": "04REL038",
            "source": "04ALG018",
            "target": "04DS003"
        },
        {
            "type": "操作绑定",
            "ID": "04REL039",
            "source": "04ALG019",
            "target": "04DS003"
        },
        {
            "type": "操作绑定",
            "ID": "04REL040",
            "source": "04ALG020",
            "target": "04DS003"
        },
        {
            "type": "操作绑定",
            "ID": "04REL041",
            "source": "04ALG021",
            "target": "04DS003"
        },
        {
            "type": "使用",
            "ID": "04REL042",
            "source": "04DS008",
            "target": "04DS004"
        },
        {
            "type": "使用",
            "ID": "04REL043",
            "source": "04DS008",
            "target": "04CON017"
        },
        {
            "type": "使用",
            "ID": "04REL044",
            "source": "04DS008",
            "target": "04CON018"
        },
        {
            "type": "继承",
            "ID": "04REL045",
            "source": "04DS008",
            "target": "04DS005"
        },
        {
            "type": "使用",
            "ID": "04REL046",
            "source": "04DS009",
            "target": "04DS006"
        },
        {
            "type": "使用",
            "ID": "04REL047",
            "source": "04DS009",
            "target": "04CON017"
        },
        {
            "type": "使用",
            "ID": "04REL048",
            "source": "04DS009",
            "target": "04CON018"
        },
        {
            "type": "使用",
            "ID": "04REL049",
            "source": "04DS010",
            "target": "04DS011"
        },
        {
            "type": "使用",
            "ID": "04REL050",
            "source": "04ALG024",
            "target": "04DS010"
        },
        {
            "type": "使用",
            "ID": "04REL051",
            "source": "04CON022",
            "target": "04DS003"
        },
        {
            "type": "理论依赖",
            "ID": "04REL052",
            "source": "04DS002",
            "target": "04CON001"
        },
        {
            "type": "理论依赖",
            "ID": "04REL053",
            "source": "04DS002",
            "target": "04CON002"
        },
        {
            "type": "理论依赖",
            "ID": "04REL054",
            "source": "04DS003",
            "target": "04CON015"
        },
        {
            "type": "理论依赖",
            "ID": "04REL055",
            "source": "04DS003",
            "target": "04CON014"
        },
        {
            "type": "理论依赖",
            "ID": "04REL056",
            "source": "04DS002",
            "target": "04CON003"
        },
        {
            "type": "理论依赖",
            "ID": "04REL057",
            "source": "04DS003",
            "target": "04CON016"
        },
        {
            "type": "理论依赖",
            "ID": "04REL058",
            "source": "04DS002",
            "target": "04CON004"
        },
        {
            "type": "理论依赖",
            "ID": "04REL059",
            "source": "04DS003",
            "target": "04CON004"
        },
        {
            "type": "理论依赖",
            "ID": "04REL060",
            "source": "04DS005",
            "target": "04CON005"
        },
        {
            "type": "理论依赖",
            "ID": "04REL061",
            "source": "04DS007",
            "target": "04CON007"
        },
        {
            "type": "理论依赖",
            "ID": "04REL062",
            "source": "04DS008",
            "target": "04CON005"
        },
        {
            "type": "理论依赖",
            "ID": "04REL063",
            "source": "04DS009",
            "target": "04CON007"
        },
        {
            "type": "继承",
            "ID": "05REL001",
            "source": "05DS002",
            "target": "05DS001"
        },
        {
            "type": "继承",
            "ID": "05REL002",
            "source": "05DS003",
            "target": "05DS001"
        },
        {
            "type": "继承",
            "ID": "05REL003",
            "source": "05DS005",
            "target": "05DS001"
        },
        {
            "type": "继承",
            "ID": "05REL004",
            "source": "05DS011",
            "target": "05DS001"
        },
        {
            "type": "继承",
            "ID": "05REL005",
            "source": "05DS007",
            "target": "05DS005"
        },
        {
            "type": "继承",
            "ID": "05REL006",
            "source": "05DS006",
            "target": "05DS007"
        },
        {
            "type": "继承",
            "ID": "05REL007",
            "source": "05DS008",
            "target": "05DS005"
        },
        {
            "type": "变体",
            "ID": "05REL008",
            "source": "05CON035",
            "target": "05CON034"
        },
        {
            "type": "变体",
            "ID": "05REL009",
            "source": "05CON039",
            "target": "05CON038"
        },
        {
            "type": "操作绑定",
            "ID": "05REL010",
            "source": "05ALG001",
            "target": "05DS005"
        },
        {
            "type": "操作绑定",
            "ID": "05REL011",
            "source": "05ALG002",
            "target": "05DS005"
        },
        {
            "type": "操作绑定",
            "ID": "05REL012",
            "source": "05ALG003",
            "target": "05DS005"
        },
        {
            "type": "操作绑定",
            "ID": "05REL013",
            "source": "05ALG004",
            "target": "05DS005"
        },
        {
            "type": "操作绑定",
            "ID": "05REL014",
            "source": "05ALG005",
            "target": "05DS005"
        },
        {
            "type": "操作绑定",
            "ID": "05REL015",
            "source": "05ALG006",
            "target": "05DS005"
        },
        {
            "type": "操作绑定",
            "ID": "05REL016",
            "source": "05ALG007",
            "target": "05DS005"
        },
        {
            "type": "操作绑定",
            "ID": "05REL017",
            "source": "05ALG008",
            "target": "05DS005"
        },
        {
            "type": "操作绑定",
            "ID": "05REL018",
            "source": "05ALG009",
            "target": "05DS005"
        },
        {
            "type": "操作绑定",
            "ID": "05REL019",
            "source": "05ALG010",
            "target": "05DS005"
        },
        {
            "type": "操作绑定",
            "ID": "05REL020",
            "source": "05ALG011",
            "target": "05DS005"
        },
        {
            "type": "操作绑定",
            "ID": "05REL021",
            "source": "05ALG012",
            "target": "05DS001"
        },
        {
            "type": "操作绑定",
            "ID": "05REL022",
            "source": "05ALG013",
            "target": "05DS001"
        },
        {
            "type": "操作绑定",
            "ID": "05REL023",
            "source": "05ALG014",
            "target": "05DS001"
        },
        {
            "type": "操作绑定",
            "ID": "05REL024",
            "source": "05ALG015",
            "target": "05DS001"
        },
        {
            "type": "操作绑定",
            "ID": "05REL025",
            "source": "05ALG016",
            "target": "05DS001"
        },
        {
            "type": "操作绑定",
            "ID": "05REL026",
            "source": "05ALG017",
            "target": "05DS001"
        },
        {
            "type": "操作绑定",
            "ID": "05REL027",
            "source": "05ALG018",
            "target": "05DS001"
        },
        {
            "type": "操作绑定",
            "ID": "05REL028",
            "source": "05ALG019",
            "target": "05DS001"
        },
        {
            "type": "操作绑定",
            "ID": "05REL029",
            "source": "05ALG020",
            "target": "05DS001"
        },
        {
            "type": "操作绑定",
            "ID": "05REL030",
            "source": "05ALG021",
            "target": "05DS001"
        },
        {
            "type": "操作绑定",
            "ID": "05REL031",
            "source": "05ALG022",
            "target": "05DS001"
        },
        {
            "type": "使用",
            "ID": "05REL032",
            "source": "05ALG011",
            "target": "05DS009"
        },
        {
            "type": "使用",
            "ID": "05REL033",
            "source": "05ALG002",
            "target": "05DS010"
        },
        {
            "type": "使用",
            "ID": "05REL034",
            "source": "05ALG013",
            "target": "05DS010"
        },
        {
            "type": "使用",
            "ID": "05REL035",
            "source": "05CON040",
            "target": "05DS005"
        },
        {
            "type": "使用",
            "ID": "05REL036",
            "source": "05CON040",
            "target": "05CON034"
        },
        {
            "type": "使用",
            "ID": "05REL037",
            "source": "05ALG022",
            "target": "05DS009"
        },
        {
            "type": "理论依赖",
            "ID": "05REL038",
            "source": "05DS004",
            "target": "05CON041"
        },
        {
            "type": "理论依赖",
            "ID": "05REL039",
            "source": "05CON021",
            "target": "05CON042"
        },
        {
            "type": "理论依赖",
            "ID": "05REL040",
            "source": "05CON021",
            "target": "05CON023"
        },
        {
            "type": "理论依赖",
            "ID": "05REL041",
            "source": "05DS007",
            "target": "05CON042"
        },
        {
            "type": "理论依赖",
            "ID": "05REL042",
            "source": "05DS007",
            "target": "05CON023"
        },
        {
            "type": "理论依赖",
            "ID": "05REL043",
            "source": "05DS007",
            "target": "05CON024"
        },
        {
            "type": "理论依赖",
            "ID": "05REL044",
            "source": "05DS001",
            "target": "05CON001"
        },
        {
            "type": "理论依赖",
            "ID": "05REL045",
            "source": "05DS001",
            "target": "05CON002"
        },
        {
            "type": "理论依赖",
            "ID": "05REL046",
            "source": "05DS001",
            "target": "05CON003"
        },
        {
            "type": "理论依赖",
            "ID": "05REL047",
            "source": "05DS005",
            "target": "05CON025"
        },
        {
            "type": "理论依赖",
            "ID": "05REL048",
            "source": "05DS005",
            "target": "05CON026"
        },
        {
            "type": "理论依赖",
            "ID": "05REL049",
            "source": "05DS005",
            "target": "05CON027"
        },
        {
            "type": "理论依赖",
            "ID": "05REL050",
            "source": "05DS005",
            "target": "05CON028"
        },
        {
            "type": "理论依赖",
            "ID": "05REL051",
            "source": "05CON034",
            "target": "05CON033"
        },
        {
            "type": "理论依赖",
            "ID": "05REL052",
            "source": "05CON035",
            "target": "05CON033"
        },
        {
            "type": "理论依赖",
            "ID": "05REL053",
            "source": "05CON038",
            "target": "05CON037"
        },
        {
            "type": "理论依赖",
            "ID": "05REL054",
            "source": "05CON039",
            "target": "05CON037"
        },
        {
            "type": "理论依赖",
            "ID": "05REL055",
            "source": "05CON040",
            "target": "05CON037"
        },
        {
            "type": "继承",
            "ID": "06REL001",
            "source": "06DS001",
            "target": "06DS002"
        },
        {
            "type": "继承",
            "ID": "06REL002",
            "source": "06DS001",
            "target": "06DS003"
        },
        {
            "type": "继承",
            "ID": "06REL003",
            "source": "06DS001",
            "target": "06DS006"
        },
        {
            "type": "继承",
            "ID": "06REL004",
            "source": "06DS001",
            "target": "06DS007"
        },
        {
            "type": "继承",
            "ID": "06REL005",
            "source": "06DS001",
            "target": "06DS009"
        },
        {
            "type": "变体",
            "ID": "06REL006",
            "source": "06DS003",
            "target": "06DS004"
        },
        {
            "type": "变体",
            "ID": "06REL007",
            "source": "06DS003",
            "target": "06DS005"
        },
        {
            "type": "变体",
            "ID": "06REL008",
            "source": "06DS007",
            "target": "06DS008"
        },
        {
            "type": "变体",
            "ID": "06REL009",
            "source": "06CON016",
            "target": "06ALG016"
        },
        {
            "type": "变体",
            "ID": "06REL010",
            "source": "06CON016",
            "target": "06ALG017"
        },
        {
            "type": "变体",
            "ID": "06REL011",
            "source": "06CON016",
            "target": "06ALG018"
        },
        {
            "type": "变体",
            "ID": "06REL012",
            "source": "06CON016",
            "target": "06ALG019"
        },
        {
            "type": "操作绑定",
            "ID": "06REL013",
            "source": "06ALG001",
            "target": "06DS002"
        },
        {
            "type": "操作绑定",
            "ID": "06REL014",
            "source": "06ALG002",
            "target": "06DS002"
        },
        {
            "type": "操作绑定",
            "ID": "06REL015",
            "source": "06ALG003",
            "target": "06DS002"
        },
        {
            "type": "操作绑定",
            "ID": "06REL016",
            "source": "06ALG004",
            "target": "06DS002"
        },
        {
            "type": "操作绑定",
            "ID": "06REL017",
            "source": "06ALG005",
            "target": "06CON005"
        },
        {
            "type": "操作绑定",
            "ID": "06REL018",
            "source": "06ALG006",
            "target": "06DS003"
        },
        {
            "type": "操作绑定",
            "ID": "06REL019",
            "source": "06ALG007",
            "target": "06DS003"
        },
        {
            "type": "操作绑定",
            "ID": "06REL020",
            "source": "06ALG008",
            "target": "06DS006"
        },
        {
            "type": "操作绑定",
            "ID": "06REL021",
            "source": "06ALG009",
            "target": "06DS006"
        },
        {
            "type": "操作绑定",
            "ID": "06REL022",
            "source": "06ALG011",
            "target": "06CON005"
        },
        {
            "type": "操作绑定",
            "ID": "06REL023",
            "source": "06ALG012",
            "target": "06CON005"
        },
        {
            "type": "操作绑定",
            "ID": "06REL024",
            "source": "06ALG012",
            "target": "06DS008"
        },
        {
            "type": "操作绑定",
            "ID": "06REL025",
            "source": "06ALG013",
            "target": "06DS008"
        },
        {
            "type": "操作绑定",
            "ID": "06REL026",
            "source": "06ALG014",
            "target": "06DS009"
        },
        {
            "type": "操作绑定",
            "ID": "06REL027",
            "source": "06ALG015",
            "target": "06DS009"
        },
        {
            "type": "操作绑定",
            "ID": "06REL028",
            "source": "06CON016",
            "target": "06DS009"
        },
        {
            "type": "使用",
            "ID": "06REL029",
            "source": "06DS010",
            "target": "06DS003"
        },
        {
            "type": "使用",
            "ID": "06REL030",
            "source": "06ALG010",
            "target": "06DS006"
        },
        {
            "type": "使用",
            "ID": "06REL031",
            "source": "06DS003",
            "target": "06DS012"
        },
        {
            "type": "使用",
            "ID": "06REL032",
            "source": "06DS011",
            "target": "06DS013"
        },
        {
            "type": "使用",
            "ID": "06REL033",
            "source": "06DS007",
            "target": "06DS011"
        },
        {
            "type": "理论依赖",
            "ID": "06REL034",
            "source": "06DS002",
            "target": "06CON001"
        },
        {
            "type": "理论依赖",
            "ID": "06REL035",
            "source": "06DS006",
            "target": "06CON002"
        },
        {
            "type": "理论依赖",
            "ID": "06REL036",
            "source": "06DS006",
            "target": "06CON003"
        },
        {
            "type": "理论依赖",
            "ID": "06REL037",
            "source": "06ALG010",
            "target": "06CON004"
        },
        {
            "type": "理论依赖",
            "ID": "06REL038",
            "source": "06DS003",
            "target": "06CON006"
        },
        {
            "type": "理论依赖",
            "ID": "06REL039",
            "source": "06DS007",
            "target": "06CON009"
        },
        {
            "type": "理论依赖",
            "ID": "06REL040",
            "source": "06DS007",
            "target": "06CON013"
        },
        {
            "type": "理论依赖",
            "ID": "06REL041",
            "source": "06DS008",
            "target": "06CON007"
        },
        {
            "type": "理论依赖",
            "ID": "06REL042",
            "source": "06DS008",
            "target": "06CON008"
        },
        {
            "type": "理论依赖",
            "ID": "06REL043",
            "source": "06DS009",
            "target": "06CON014"
        },
        {
            "type": "理论依赖",
            "ID": "06REL044",
            "source": "06CON016",
            "target": "06CON015"
        },
        {
            "type": "理论依赖",
            "ID": "06REL045",
            "source": "06DS002",
            "target": "06CON005"
        },
        {
            "type": "理论依赖",
            "ID": "06REL046",
            "source": "06DS003",
            "target": "06CON005"
        },
        {
            "type": "理论依赖",
            "ID": "06REL047",
            "source": "06DS006",
            "target": "06CON005"
        },
        {
            "type": "理论依赖",
            "ID": "06REL048",
            "source": "06DS007",
            "target": "06CON005"
        },
        {
            "type": "理论依赖",
            "ID": "06REL049",
            "source": "06DS009",
            "target": "06CON005"
        },
        {
            "type": "优化",
            "ID": "06REL050",
            "source": "06DS009",
            "target": "06DS002"
        },
        {
            "type": "理论依赖",
            "ID": "07REL001",
            "source": "07DS001",
            "target": "07CON001"
        },
        {
            "type": "使用",
            "ID": "07REL002",
            "source": "07DS001",
            "target": "07CON002"
        },
        {
            "type": "使用",
            "ID": "07REL003",
            "source": "07DS001",
            "target": "07CON003"
        },
        {
            "type": "理论依赖",
            "ID": "07REL004",
            "source": "07CON003",
            "target": "07CON004"
        },
        {
            "type": "使用",
            "ID": "07REL005",
            "source": "07DS004",
            "target": "07CON007"
        },
        {
            "type": "使用",
            "ID": "07REL006",
            "source": "07DS005",
            "target": "07CON008"
        },
        {
            "type": "继承",
            "ID": "07REL007",
            "source": "07DS002",
            "target": "07DS001"
        },
        {
            "type": "继承",
            "ID": "07REL008",
            "source": "07DS003",
            "target": "07DS001"
        },
        {
            "type": "继承",
            "ID": "07REL009",
            "source": "07DS004",
            "target": "07DS001"
        },
        {
            "type": "继承",
            "ID": "07REL010",
            "source": "07DS005",
            "target": "07DS001"
        },
        {
            "type": "继承",
            "ID": "07REL011",
            "source": "07DS006",
            "target": "07DS001"
        },
        {
            "type": "继承",
            "ID": "07REL012",
            "source": "07DS007",
            "target": "07DS001"
        },
        {
            "type": "继承",
            "ID": "07REL013",
            "source": "07DS008",
            "target": "07DS001"
        },
        {
            "type": "继承",
            "ID": "07REL014",
            "source": "07DS009",
            "target": "07DS005"
        },
        {
            "type": "继承",
            "ID": "07REL015",
            "source": "07DS010",
            "target": "07DS005"
        },
        {
            "type": "理论依赖",
            "ID": "07REL016",
            "source": "07CON028",
            "target": "07DS009"
        },
        {
            "type": "继承",
            "ID": "07REL017",
            "source": "07DS011",
            "target": "07DS004"
        },
        {
            "type": "理论依赖",
            "ID": "07REL018",
            "source": "07CON029",
            "target": "07DS011"
        },
        {
            "type": "继承",
            "ID": "07REL019",
            "source": "07DS012",
            "target": "07DS001"
        },
        {
            "type": "使用",
            "ID": "07REL020",
            "source": "07DS012",
            "target": "07CON030"
        },
        {
            "type": "操作绑定",
            "ID": "07REL021",
            "source": "07ALG001",
            "target": "07DS001"
        },
        {
            "type": "操作绑定",
            "ID": "07REL022",
            "source": "07ALG002",
            "target": "07DS001"
        },
        {
            "type": "操作绑定",
            "ID": "07REL023",
            "source": "07ALG003",
            "target": "07DS001"
        },
        {
            "type": "操作绑定",
            "ID": "07REL024",
            "source": "07ALG004",
            "target": "07DS001"
        },
        {
            "type": "操作绑定",
            "ID": "07REL025",
            "source": "07ALG005",
            "target": "07DS001"
        },
        {
            "type": "操作绑定",
            "ID": "07REL026",
            "source": "07ALG006",
            "target": "07DS001"
        },
        {
            "type": "操作绑定",
            "ID": "07REL027",
            "source": "07ALG007",
            "target": "07DS001"
        },
        {
            "type": "操作绑定",
            "ID": "07REL028",
            "source": "07ALG008",
            "target": "07DS001"
        },
        {
            "type": "操作绑定",
            "ID": "07REL029",
            "source": "07ALG009",
            "target": "07DS004"
        },
        {
            "type": "操作绑定",
            "ID": "07REL030",
            "source": "07ALG010",
            "target": "07DS012"
        },
        {
            "type": "使用",
            "ID": "07REL031",
            "source": "07DS001",
            "target": "07DS013"
        },
        {
            "type": "使用",
            "ID": "07REL032",
            "source": "07DS001",
            "target": "07DS014"
        },
        {
            "type": "使用",
            "ID": "07REL033",
            "source": "07DS001",
            "target": "07DS015"
        },
        {
            "type": "操作绑定",
            "ID": "07REL034",
            "source": "07ALG011",
            "target": "07DS013"
        },
        {
            "type": "操作绑定",
            "ID": "07REL035",
            "source": "07ALG012",
            "target": "07DS013"
        },
        {
            "type": "操作绑定",
            "ID": "07REL036",
            "source": "07ALG013",
            "target": "07DS013"
        },
        {
            "type": "操作绑定",
            "ID": "07REL037",
            "source": "07ALG014",
            "target": "07DS014"
        },
        {
            "type": "操作绑定",
            "ID": "07REL038",
            "source": "07ALG015",
            "target": "07DS014"
        },
        {
            "type": "操作绑定",
            "ID": "07REL039",
            "source": "07ALG016",
            "target": "07DS014"
        },
        {
            "type": "操作绑定",
            "ID": "07REL040",
            "source": "07ALG017",
            "target": "07DS015"
        },
        {
            "type": "操作绑定",
            "ID": "07REL041",
            "source": "07ALG018",
            "target": "07DS015"
        },
        {
            "type": "操作绑定",
            "ID": "07REL042",
            "source": "07ALG019",
            "target": "07DS015"
        },
        {
            "type": "变体",
            "ID": "07REL043",
            "source": "07DS016",
            "target": "07DS014"
        },
        {
            "type": "变体",
            "ID": "07REL044",
            "source": "07DS017",
            "target": "07DS014"
        },
        {
            "type": "使用",
            "ID": "07REL045",
            "source": "07DS016",
            "target": "07DS004"
        },
        {
            "type": "使用",
            "ID": "07REL046",
            "source": "07DS017",
            "target": "07DS004"
        },
        {
            "type": "继承",
            "ID": "07REL047",
            "source": "07ALG020",
            "target": "07ALG003"
        },
        {
            "type": "继承",
            "ID": "07REL048",
            "source": "07ALG023",
            "target": "07ALG003"
        },
        {
            "type": "使用",
            "ID": "07REL049",
            "source": "07ALG020",
            "target": "07CON031"
        },
        {
            "type": "使用",
            "ID": "07REL050",
            "source": "07ALG023",
            "target": "07DS018"
        },
        {
            "type": "操作绑定",
            "ID": "07REL051",
            "source": "07ALG021",
            "target": "07DS013"
        },
        {
            "type": "操作绑定",
            "ID": "07REL052",
            "source": "07ALG022",
            "target": "07DS014"
        },
        {
            "type": "操作绑定",
            "ID": "07REL053",
            "source": "07ALG024",
            "target": "07DS013"
        },
        {
            "type": "操作绑定",
            "ID": "07REL054",
            "source": "07ALG025",
            "target": "07DS014"
        },
        {
            "type": "继承",
            "ID": "07REL055",
            "source": "07ALG021",
            "target": "07ALG020"
        },
        {
            "type": "继承",
            "ID": "07REL056",
            "source": "07ALG022",
            "target": "07ALG020"
        },
        {
            "type": "继承",
            "ID": "07REL057",
            "source": "07ALG024",
            "target": "07ALG023"
        },
        {
            "type": "继承",
            "ID": "07REL058",
            "source": "07ALG025",
            "target": "07ALG023"
        },
        {
            "type": "操作绑定",
            "ID": "07REL059",
            "source": "07ALG003",
            "target": "07DS010"
        },
        {
            "type": "继承",
            "ID": "08REL001",
            "source": "08CON002",
            "target": "08CON001"
        },
        {
            "type": "理论依赖",
            "ID": "08REL002",
            "source": "08CON003",
            "target": "08CON001"
        },
        {
            "type": "继承",
            "ID": "08REL003",
            "source": "08DS001",
            "target": "08CON003"
        },
        {
            "type": "理论依赖",
            "ID": "08REL004",
            "source": "08DS001",
            "target": "08CON002"
        },
        {
            "type": "操作绑定",
            "ID": "08REL005",
            "source": "08ALG001",
            "target": "08CON001"
        },
        {
            "type": "继承",
            "ID": "08REL006",
            "source": "08DS002",
            "target": "08DS001"
        },
        {
            "type": "理论依赖",
            "ID": "08REL007",
            "source": "08DS002",
            "target": "08ALG001"
        },
        {
            "type": "操作绑定",
            "ID": "08REL008",
            "source": "08ALG002",
            "target": "08CON001"
        },
        {
            "type": "继承",
            "ID": "08REL009",
            "source": "08DS003",
            "target": "08DS001"
        },
        {
            "type": "理论依赖",
            "ID": "08REL010",
            "source": "08DS003",
            "target": "08ALG002"
        },
        {
            "type": "理论依赖",
            "ID": "08REL011",
            "source": "08DS001",
            "target": "08CON005"
        },
        {
            "type": "继承",
            "ID": "08REL012",
            "source": "08CON006",
            "target": "08CON002"
        },
        {
            "type": "理论依赖",
            "ID": "08REL013",
            "source": "08CON006",
            "target": "08CON007"
        },
        {
            "type": "继承",
            "ID": "08REL014",
            "source": "08DS004",
            "target": "08DS001"
        },
        {
            "type": "理论依赖",
            "ID": "08REL015",
            "source": "08DS004",
            "target": "08CON006"
        },
        {
            "type": "理论依赖",
            "ID": "08REL016",
            "source": "08DS004",
            "target": "08CON007"
        },
        {
            "type": "操作绑定",
            "ID": "08REL017",
            "source": "08ALG003",
            "target": "08DS004"
        },
        {
            "type": "使用",
            "ID": "08REL018",
            "source": "08ALG003",
            "target": "08CON006"
        },
        {
            "type": "操作绑定",
            "ID": "08REL019",
            "source": "08ALG004",
            "target": "08DS004"
        },
        {
            "type": "使用",
            "ID": "08REL020",
            "source": "08ALG004",
            "target": "08CON006"
        },
        {
            "type": "使用",
            "ID": "08REL021",
            "source": "08ALG003",
            "target": "08DS005"
        },
        {
            "type": "使用",
            "ID": "08REL022",
            "source": "08CON001",
            "target": "08DS005"
        },
        {
            "type": "使用",
            "ID": "08REL023",
            "source": "08ALG004",
            "target": "08DS006"
        },
        {
            "type": "使用",
            "ID": "08REL024",
            "source": "08CON001",
            "target": "08DS006"
        },
        {
            "type": "使用",
            "ID": "08REL025",
            "source": "08ALG004",
            "target": "08CON008"
        },
        {
            "type": "使用",
            "ID": "08REL026",
            "source": "08ALG004",
            "target": "08CON009"
        },
        {
            "type": "理论依赖",
            "ID": "08REL027",
            "source": "08CON001",
            "target": "08CON009"
        },
        {
            "type": "理论依赖",
            "ID": "08REL028",
            "source": "08CON010",
            "target": "08CON001"
        },
        {
            "type": "理论依赖",
            "ID": "08REL029",
            "source": "08CON010",
            "target": "08CON007"
        },
        {
            "type": "理论依赖",
            "ID": "08REL030",
            "source": "08CON010",
            "target": "08CON011"
        },
        {
            "type": "继承",
            "ID": "08REL031",
            "source": "08CON012",
            "target": "08CON011"
        },
        {
            "type": "理论依赖",
            "ID": "08REL032",
            "source": "08CON012",
            "target": "08CON007"
        },
        {
            "type": "继承",
            "ID": "08REL033",
            "source": "08CON013",
            "target": "08CON001"
        },
        {
            "type": "理论依赖",
            "ID": "08REL034",
            "source": "08CON010",
            "target": "08CON014"
        },
        {
            "type": "理论依赖",
            "ID": "08REL035",
            "source": "08CON010",
            "target": "08CON015"
        },
        {
            "type": "操作绑定",
            "ID": "08REL036",
            "source": "08ALG005",
            "target": "08CON010"
        },
        {
            "type": "使用",
            "ID": "08REL037",
            "source": "08ALG005",
            "target": "08CON001"
        },
        {
            "type": "使用",
            "ID": "08REL038",
            "source": "08ALG005",
            "target": "08DS005"
        },
        {
            "type": "理论依赖",
            "ID": "08REL039",
            "source": "08ALG005",
            "target": "08CON014"
        },
        {
            "type": "使用",
            "ID": "08REL040",
            "source": "08CON001",
            "target": "08DS007"
        },
        {
            "type": "使用",
            "ID": "08REL041",
            "source": "08DS007",
            "target": "08DS008"
        },
        {
            "type": "操作绑定",
            "ID": "08REL042",
            "source": "08ALG006",
            "target": "08CON010"
        },
        {
            "type": "使用",
            "ID": "08REL043",
            "source": "08ALG006",
            "target": "08CON001"
        },
        {
            "type": "使用",
            "ID": "08REL044",
            "source": "08ALG006",
            "target": "08DS005"
        },
        {
            "type": "理论依赖",
            "ID": "08REL045",
            "source": "08CON016",
            "target": "08CON017"
        },
        {
            "type": "继承",
            "ID": "08REL046",
            "source": "08CON018",
            "target": "08CON013"
        },
        {
            "type": "理论依赖",
            "ID": "08REL047",
            "source": "08CON018",
            "target": "08CON016"
        },
        {
            "type": "理论依赖",
            "ID": "08REL048",
            "source": "08CON018",
            "target": "08CON017"
        },
        {
            "type": "继承",
            "ID": "08REL049",
            "source": "08CON019",
            "target": "08CON013"
        },
        {
            "type": "理论依赖",
            "ID": "08REL050",
            "source": "08CON019",
            "target": "08CON004"
        },
        {
            "type": "理论依赖",
            "ID": "08REL051",
            "source": "08CON018",
            "target": "08CON019"
        },
        {
            "type": "理论依赖",
            "ID": "08REL052",
            "source": "08CON020",
            "target": "08CON018"
        },
        {
            "type": "理论依赖",
            "ID": "08REL053",
            "source": "08CON020",
            "target": "08CON017"
        },
        {
            "type": "操作绑定",
            "ID": "08REL054",
            "source": "08ALG007",
            "target": "08CON020"
        },
        {
            "type": "使用",
            "ID": "08REL055",
            "source": "08ALG007",
            "target": "08CON018"
        },
        {
            "type": "理论依赖",
            "ID": "08REL056",
            "source": "08ALG007",
            "target": "08CON021"
        },
        {
            "type": "理论依赖",
            "ID": "08REL057",
            "source": "08CON001",
            "target": "08CON021"
        },
        {
            "type": "理论依赖",
            "ID": "08REL058",
            "source": "08CON001",
            "target": "08CON022"
        },
        {
            "type": "使用",
            "ID": "08REL059",
            "source": "08ALG007",
            "target": "08DS009"
        },
        {
            "type": "继承",
            "ID": "08REL060",
            "source": "08CON023",
            "target": "08CON013"
        },
        {
            "type": "理论依赖",
            "ID": "08REL061",
            "source": "08CON023",
            "target": "08CON007"
        },
        {
            "type": "理论依赖",
            "ID": "08REL062",
            "source": "08CON023",
            "target": "08CON016"
        },
        {
            "type": "理论依赖",
            "ID": "08REL063",
            "source": "08CON023",
            "target": "08CON024"
        },
        {
            "type": "理论依赖",
            "ID": "08REL064",
            "source": "08CON023",
            "target": "08CON014"
        },
        {
            "type": "理论依赖",
            "ID": "08REL065",
            "source": "08CON023",
            "target": "08CON025"
        },
        {
            "type": "理论依赖",
            "ID": "08REL066",
            "source": "08CON026",
            "target": "08CON007"
        },
        {
            "type": "理论依赖",
            "ID": "08REL067",
            "source": "08CON023",
            "target": "08CON026"
        },
        {
            "type": "理论依赖",
            "ID": "08REL068",
            "source": "08CON027",
            "target": "08CON024"
        },
        {
            "type": "理论依赖",
            "ID": "08REL069",
            "source": "08CON027",
            "target": "08CON023"
        },
        {
            "type": "理论依赖",
            "ID": "08REL070",
            "source": "08CON027",
            "target": "08CON026"
        },
        {
            "type": "理论依赖",
            "ID": "08REL071",
            "source": "08CON028",
            "target": "08CON016"
        },
        {
            "type": "理论依赖",
            "ID": "08REL072",
            "source": "08CON028",
            "target": "08CON027"
        },
        {
            "type": "理论依赖",
            "ID": "08REL073",
            "source": "08CON029",
            "target": "08CON024"
        },
        {
            "type": "理论依赖",
            "ID": "08REL074",
            "source": "08CON029",
            "target": "08CON023"
        },
        {
            "type": "理论依赖",
            "ID": "08REL075",
            "source": "08CON029",
            "target": "08CON026"
        },
        {
            "type": "理论依赖",
            "ID": "08REL076",
            "source": "08CON030",
            "target": "08CON016"
        },
        {
            "type": "理论依赖",
            "ID": "08REL077",
            "source": "08CON030",
            "target": "08CON029"
        },
        {
            "type": "理论依赖",
            "ID": "08REL078",
            "source": "08CON030",
            "target": "08CON026"
        },
        {
            "type": "理论依赖",
            "ID": "08REL079",
            "source": "08CON029",
            "target": "08CON031"
        },
        {
            "type": "理论依赖",
            "ID": "08REL080",
            "source": "08CON032",
            "target": "08CON028"
        },
        {
            "type": "理论依赖",
            "ID": "08REL081",
            "source": "08CON032",
            "target": "08CON030"
        },
        {
            "type": "理论依赖",
            "ID": "08REL082",
            "source": "08CON033",
            "target": "08CON032"
        },
        {
            "type": "理论依赖",
            "ID": "08REL083",
            "source": "08CON034",
            "target": "08CON033"
        },
        {
            "type": "理论依赖",
            "ID": "08REL084",
            "source": "08CON034",
            "target": "08CON023"
        },
        {
            "type": "理论依赖",
            "ID": "08REL085",
            "source": "08CON034",
            "target": "08CON014"
        },
        {
            "type": "理论依赖",
            "ID": "08REL086",
            "source": "08CON034",
            "target": "08CON025"
        },
        {
            "type": "操作绑定",
            "ID": "08REL087",
            "source": "08ALG008",
            "target": "08CON034"
        },
        {
            "type": "使用",
            "ID": "08REL088",
            "source": "08ALG008",
            "target": "08CON023"
        },
        {
            "type": "使用",
            "ID": "08REL089",
            "source": "08ALG008",
            "target": "08CON027"
        },
        {
            "type": "使用",
            "ID": "08REL090",
            "source": "08ALG008",
            "target": "08CON029"
        },
        {
            "type": "使用",
            "ID": "08REL091",
            "source": "08ALG008",
            "target": "08CON028"
        },
        {
            "type": "使用",
            "ID": "08REL092",
            "source": "08ALG008",
            "target": "08CON030"
        },
        {
            "type": "使用",
            "ID": "08REL093",
            "source": "08ALG008",
            "target": "08CON032"
        },
        {
            "type": "使用",
            "ID": "08REL094",
            "source": "08ALG008",
            "target": "08ALG007"
        },
        {
            "type": "使用",
            "ID": "08REL095",
            "source": "08ALG008",
            "target": "08DS007"
        }
    ]
}