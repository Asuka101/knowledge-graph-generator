{
  "entities": [
    {
      "type": "数据结构",
      "ID": "02DS001",
      "name": "线性表",
      "attributes": {
        "难度": "入门",
        "内容": "具有相同属性的数据元素的一个有限序列。元素之间存在一对一的线性关系，有表头元素和表尾元素，除表头外每个元素有唯一前驱，除表尾外每个元素有唯一后继。是包括顺序表、链表等具体数据结构的一种抽象数据类型（ADT）。",
        "存储开销": "取决于具体实现（顺序或链式）",
        "核心特性": "序列性、有限性、元素类型相同"
      }
    },
    {
      "type": "概念",
      "ID": "02CON001",
      "name": "抽象数据类型",
      "attributes": {
        "难度": "中等",
        "内容": "指一个数学模型以及定义在该模型上的一组操作。它只定义数据的逻辑结构和操作，而不考虑其具体实现。线性表就是一个典型的抽象数据类型。"
      }
    },
    {
      "type": "数据结构",
      "ID": "02DS002",
      "name": "顺序表",
      "attributes": {
        "难度": "入门",
        "内容": "线性表的一种实现方式，指用一组地址连续的存储单元依次存储线性表的数据元素。通常使用数组实现。",
        "存储开销": "存储密度高，需要预先分配连续空间，可能存在空间浪费或不足。",
        "核心特性": "支持随机访问（O(1)时间复杂度访问元素），插入和删除操作平均需要移动大量元素（O(n)时间复杂度）。"
      }
    },
    {
      "type": "数据结构",
      "ID": "02DS003",
      "name": "数组",
      "attributes": {
        "难度": "入门",
        "内容": "一种基础数据结构，由相同类型的元素（Element）的集合所组成，并且被分配一块连续的内存来存储。利用元素的索引可以计算出该元素对应的存储地址。",
        "存储开销": "连续存储，大小固定（静态数组）或可变（动态数组）。",
        "核心特性": "随机访问（通过下标）"
      }
    },
    {
      "type": "算法",
      "ID": "02ALG001",
      "name": "初始化列表",
      "attributes": {
        "难度": "入门",
        "内容": "创建一个空的线性表。对于顺序表，通常是分配存储空间并将长度设为0；对于链表，通常是将头指针设为空或指向头结点。",
        "时间复杂度": "O(1)（链表）或 O(1)/O(MaxSize)（顺序表，取决于是否需要初始化空间）",
        "空间复杂度": "O(1) 或 O(MaxSize)（取决于实现）",
        "设计思想": "初始化",
        "适用场景": "使用线性表前"
      }
    },
    {
      "type": "算法",
      "ID": "02ALG002",
      "name": "清除列表",
      "attributes": {
        "难度": "入门",
        "内容": "删除线性表中的所有元素，使其成为空表。对于顺序表，通常是将长度设为0；对于链表，需要遍历并释放所有结点。",
        "时间复杂度": "O(1)（顺序表）或 O(n)（链表）",
        "空间复杂度": "O(1)",
        "设计思想": "资源释放/重置",
        "适用场景": "重用列表结构或释放内存"
      }
    },
    {
      "type": "算法",
      "ID": "02ALG003",
      "name": "获取列表长度",
      "attributes": {
        "难度": "入门",
        "内容": "返回线性表中元素的个数。",
        "时间复杂度": "O(1)（顺序表，若长度字段已维护）或 O(n)（链表，若无长度字段）",
        "空间复杂度": "O(1)",
        "设计思想": "计数/查询",
        "适用场景": "获取列表大小信息"
      }
    },
    {
      "type": "算法",
      "ID": "02ALG004",
      "name": "判空列表",
      "attributes": {
        "难度": "入门",
        "内容": "判断线性表是否包含元素。",
        "时间复杂度": "O(1)",
        "空间复杂度": "O(1)",
        "设计思想": "状态检查",
        "适用场景": "在操作前检查列表状态"
      }
    },
    {
      "type": "算法",
      "ID": "02ALG005",
      "name": "获取元素",
      "attributes": {
        "难度": "入门",
        "内容": "返回线性表中指定位置（序号）的元素值。",
        "时间复杂度": "O(1)（顺序表）或 O(n)（链表）",
        "空间复杂度": "O(1)",
        "设计思想": "按位置访问",
        "适用场景": "读取特定位置的数据"
      }
    },
    {
      "type": "算法",
      "ID": "02ALG006",
      "name": "遍历列表",
      "attributes": {
        "难度": "入门",
        "内容": "按逻辑顺序访问线性表中的每一个元素。",
        "时间复杂度": "O(n)",
        "空间复杂度": "O(1)",
        "设计思想": "顺序访问",
        "适用场景": "处理或显示所有元素"
      }
    },
    {
      "type": "算法",
      "ID": "02ALG007",
      "name": "查找元素",
      "attributes": {
        "难度": "入门",
        "内容": "在线性表中查找第一个值等于给定值的元素。",
        "时间复杂度": "O(n)（顺序查找）",
        "空间复杂度": "O(1)",
        "设计思想": "搜索",
        "适用场景": "定位特定元素"
      }
    },
    {
      "type": "算法",
      "ID": "02ALG008",
      "name": "更新元素",
      "attributes": {
        "难度": "入门",
        "内容": "修改线性表中第一个值等于给定值的元素。",
        "时间复杂度": "O(n)（顺序查找定位）",
        "空间复杂度": "O(1)",
        "设计思想": "搜索与修改",
        "适用场景": "修改特定元素的值"
      }
    },
    {
      "type": "算法",
      "ID": "02ALG009",
      "name": "插入元素",
      "attributes": {
        "难度": "入门",
        "内容": "在线性表的指定位置插入一个新的元素。顺序表需要移动后续元素，链表需要修改指针。",
        "时间复杂度": "O(n)（顺序表平均情况，链表查找位置）",
        "空间复杂度": "O(1)（通常）或 O(n)（顺序表扩容时）",
        "设计思想": "修改结构",
        "适用场景": "向列表中添加数据"
      }
    },
    {
      "type": "算法",
      "ID": "02ALG010",
      "name": "删除元素",
      "attributes": {
        "难度": "入门",
        "内容": "从线性表中删除指定位置或指定值的元素。顺序表需要移动后续元素，链表需要修改指针。",
        "时间复杂度": "O(n)（顺序表平均情况，链表查找位置）",
        "空间复杂度": "O(1)",
        "设计思想": "修改结构",
        "适用场景": "从列表中移除数据"
      }
    },
    {
      "type": "算法",
      "ID": "02ALG011",
      "name": "排序列表",
      "attributes": {
        "难度": "中等",
        "内容": "将线性表中的元素按照某种规则（如升序或降序）重新排列。",
        "时间复杂度": "取决于具体排序算法，如插入排序为 O(n^2)",
        "空间复杂度": "取决于具体排序算法，如插入排序为 O(1)",
        "设计思想": "排序",
        "适用场景": "需要有序数据时"
      }
    },
    {
      "type": "概念",
      "ID": "02CON002",
      "name": "时间复杂度",
      "attributes": {
        "难度": "中等",
        "内容": "衡量算法执行时间随输入规模增长的趋势，通常使用大O表示法。"
      }
    },
    {
      "type": "概念",
      "ID": "02CON003",
      "name": "空间复杂度",
      "attributes": {
        "难度": "中等",
        "内容": "衡量算法执行过程中临时占用的存储空间随输入规模增长的趋势。"
      }
    },
    {
      "type": "算法",
      "ID": "02ALG012",
      "name": "插入排序",
      "attributes": {
        "难度": "入门",
        "内容": "一种简单的排序算法，通过构建有序序列，对于未排序数据，在已排序序列中从后向前扫描，找到相应位置并插入。分为直接插入排序、折半插入排序、希尔排序等。",
        "时间复杂度": "O(n^2)（平均和最坏），O(n)（最好）",
        "空间复杂度": "O(1)",
        "设计思想": "增量构建",
        "适用场景": "基本有序或小规模数据"
      }
    },
    {
      "type": "数据结构",
      "ID": "02DS004",
      "name": "链表",
      "attributes": {
        "难度": "入门",
        "内容": "线性表的一种实现方式，通过一组任意的存储单元（可以不连续）来存储线性表的数据元素。每个存储单元称为结点，除了存储数据外，还存储指向下一个（或上一个）结点的指针。",
        "存储开销": "每个元素需要额外的指针空间。",
        "核心特性": "插入和删除操作通常只需修改指针（O(1)时间复杂度，若位置已知），访问元素需要顺序遍历（O(n)时间复杂度）。"
      }
    },
    {
      "type": "概念",
      "ID": "02CON004",
      "name": "结点",
      "attributes": {
        "难度": "入门",
        "内容": "链式存储结构中的基本单元，通常包含数据域（存储数据元素）和指针域（存储后继或前驱结点的地址）。"
      }
    },
    {
      "type": "概念",
      "ID": "02CON005",
      "name": "指针",
      "attributes": {
        "难度": "入门",
        "内容": "一个变量，其值为另一个变量的地址，即内存位置的直接地址。在链表中用于链接结点。"
      }
    },
    {
      "type": "数据结构",
      "ID": "02DS005",
      "name": "单链表",
      "attributes": {
        "难度": "入门",
        "内容": "链表的一种，每个结点只包含一个指向其直接后继结点的指针域。",
        "存储开销": "每个结点一个指针域。",
        "核心特性": "只能单向遍历。"
      }
    },
    {
      "type": "数据结构",
      "ID": "02DS006",
      "name": "双向链表",
      "attributes": {
        "难度": "中等",
        "内容": "链表的一种，每个结点包含两个指针域，一个指向直接前驱结点，一个指向直接后继结点。",
        "存储开销": "每个结点两个指针域。",
        "核心特性": "可以双向遍历，方便查找前驱结点。"
      }
    },
    {
      "type": "数据结构",
      "ID": "02DS007",
      "name": "循环链表",
      "attributes": {
        "难度": "中等",
        "内容": "链表的一种变体，表中最后一个结点的指针域指向头结点（或第一个元素结点），形成一个环。可以是循环单链表或循环双向链表。",
        "存储开销": "与单链表或双向链表相同。",
        "核心特性": "从任一结点出发可遍历整个链表。"
      }
    },
    {
      "type": "算法",
      "ID": "02ALG013",
      "name": "多项式求值",
      "attributes": {
        "难度": "入门",
        "内容": "计算给定x值时一个多项式P(x)的值。可以使用线性表（顺序表或链表）表示多项式系数或非零项（系数+指数）来进行计算。",
        "时间复杂度": "O(n)（若使用秦九韶算法）或更高（取决于幂运算实现和多项式表示）",
        "空间复杂度": "O(1)（若不考虑存储多项式的空间）",
        "设计思想": "数值计算、累加",
        "适用场景": "数学计算"
      }
    },
    {
      "type": "算法",
      "ID": "02ALG014",
      "name": "多项式加法",
      "attributes": {
        "难度": "中等",
        "内容": "计算两个多项式 P1(x) 和 P2(x) 的和 P3(x)。通常使用链表表示非零项，通过合并两个有序链表（按指数排序）来实现。",
        "时间复杂度": "O(m+n)，其中m和n分别为两个多项式的项数。",
        "空间复杂度": "O(m+n)（用于存储结果多项式）",
        "设计思想": "合并、归并",
        "适用场景": "符号计算、代数运算"
      }
    },
    {
      "type": "算法",
      "ID": "02ALG015",
      "name": "顺序查找",
      "attributes": {
        "难度": "入门",
        "内容": "在线性表中从头到尾依次比较元素，直到找到目标元素或遍历完整个表。适用于顺序表和链表。",
        "时间复杂度": "O(n)（平均和最坏），O(1)（最好）",
        "空间复杂度": "O(1)",
        "设计思想": "线性扫描、比较",
        "适用场景": "无序或小规模列表的查找"
      }
    },
    {
      "type": "概念",
      "ID": "02CON006",
      "name": "数据结构",
      "attributes": {
        "难度": "入门",
        "内容": "计算机存储、组织数据的方式。数据结构是指相互之间存在一种或多种特定关系的数据元素的集合。通常包括逻辑结构和物理结构。"
      }
    },
    {
      "type": "概念",
      "ID": "02CON007",
      "name": "算法",
      "attributes": {
        "难度": "入门",
        "内容": "解决特定问题求解步骤的描述，在计算机中表现为指令的有限序列，并且每条指令表示一个或多个操作。具有输入、输出、有穷性、确定性和可行性五个基本特征。"
      }
    }
  ],
  "relations": [
    {
      "type": "理论依赖",
      "source": "02DS001",
      "target": "02CON001"
    },
    {
      "type": "理论依赖",
      "source": "02DS001",
      "target": "02CON006"
    },
    {
      "type": "继承",
      "source": "02DS002",
      "target": "02DS001"
    },
    {
      "type": "使用",
      "source": "02DS002",
      "target": "02DS003"
    },
    {
      "type": "继承",
      "source": "02DS004",
      "target": "02DS001"
    },
    {
      "type": "使用",
      "source": "02DS004",
      "target": "02CON004"
    },
    {
      "type": "使用",
      "source": "02DS004",
      "target": "02CON005"
    },
    {
      "type": "继承",
      "source": "02DS005",
      "target": "02DS004"
    },
    {
      "type": "继承",
      "source": "02DS006",
      "target": "02DS004"
    },
    {
      "type": "继承",
      "source": "02DS007",
      "target": "02DS005"
    },
    {
      "type": "继承",
      "source": "02DS007",
      "target": "02DS004"
    },
    {
      "type": "操作绑定",
      "source": "02ALG001",
      "target": "02DS001"
    },
    {
      "type": "操作绑定",
      "source": "02ALG002",
      "target": "02DS001"
    },
    {
      "type": "操作绑定",
      "source": "02ALG003",
      "target": "02DS001"
    },
    {
      "type": "操作绑定",
      "source": "02ALG004",
      "target": "02DS001"
    },
    {
      "type": "操作绑定",
      "source": "02ALG005",
      "target": "02DS001"
    },
    {
      "type": "操作绑定",
      "source": "02ALG006",
      "target": "02DS001"
    },
    {
      "type": "操作绑定",
      "source": "02ALG007",
      "target": "02DS001"
    },
    {
      "type": "操作绑定",
      "source": "02ALG008",
      "target": "02DS001"
    },
    {
      "type": "操作绑定",
      "source": "02ALG009",
      "target": "02DS001"
    },
    {
      "type": "操作绑定",
      "source": "02ALG010",
      "target": "02DS001"
    },
    {
      "type": "操作绑定",
      "source": "02ALG011",
      "target": "02DS001"
    },
    {
      "type": "使用",
      "source": "02ALG007",
      "target": "02ALG015"
    },
    {
      "type": "使用",
      "source": "02ALG008",
      "target": "02ALG015"
    },
     {
      "type": "使用",
      "source": "02ALG011",
      "target": "02ALG012"
    },
    {
      "type": "理论依赖",
      "source": "02ALG012",
      "target": "02CON002"
    },
    {
      "type": "理论依赖",
      "source": "02ALG012",
      "target": "02CON003"
    },
    {
      "type": "理论依赖",
      "source": "02ALG012",
      "target": "02CON007"
    },
    {
      "type": "使用",
      "source": "02ALG013",
      "target": "02DS001"
    },
    {
      "type": "使用",
      "source": "02ALG014",
      "target": "02DS001"
    },
    {
      "type": "使用",
      "source": "02ALG014",
      "target": "02DS005"
    },
    {
      "type": "理论依赖",
      "source": "02ALG015",
      "target": "02CON002"
    },
     {
      "type": "理论依赖",
      "source": "02ALG015",
      "target": "02CON007"
    }
  ]
}