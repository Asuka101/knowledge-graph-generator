{
  "entities": [
    {
      "type": "概念",
      "ID": "01CON001",
      "name": "数据",
      "attributes": {
        "难度": "入门",
        "内容": "对现实世界事物及其活动的符号记录，需要编码为二进制形式以便计算机处理。"
      }
    },
    {
      "type": "概念",
      "ID": "01CON002",
      "name": "数据元素",
      "attributes": {
        "难度": "入门",
        "内容": "数据的基本单位，一个数据整体中相对独立的单位。"
      }
    },
    {
      "type": "概念",
      "ID": "01CON003",
      "name": "数据记录",
      "attributes": {
        "难度": "入门",
        "内容": "数据处理中组织数据的基本单位，由一个或多个数据项组成。"
      }
    },
    {
      "type": "概念",
      "ID": "01CON004",
      "name": "数据项",
      "attributes": {
        "难度": "入门",
        "内容": "组成数据记录的部分，可以是简单数据项或组合数据项。"
      }
    },
    {
      "type": "概念",
      "ID": "01CON005",
      "name": "关键项",
      "attributes": {
        "难度": "入门",
        "内容": "能唯一标识一个记录的数据项或数据项的组合。"
      }
    },
    {
      "type": "概念",
      "ID": "01CON006",
      "name": "关键字",
      "attributes": {
        "难度": "入门",
        "内容": "关键项中的具体值，用于唯一标识记录。"
      }
    },
    {
      "type": "概念",
      "ID": "01CON007",
      "name": "数据处理",
      "attributes": {
        "难度": "入门",
        "内容": "利用计算机对数据进行存储、检索、插入、删除、合并、拆分、排序、统计、计算、转换、输入、输出等的过程。"
      }
    },
    {
      "type": "概念",
      "ID": "01CON008",
      "name": "数据结构",
      "attributes": {
        "难度": "入门",
        "内容": "指数据以及数据元素之间的相互联系（关系），通常指逻辑结构。由数据元素的集合K和K上关系的集合R组成。"
      }
    },
    {
      "type": "概念",
      "ID": "01CON009",
      "name": "逻辑结构",
      "attributes": {
        "难度": "入门",
        "内容": "数据元素之间的内在联系，与计算机存储和处理无关。基本结构包括集合、线、树、图等。"
      }
    },
    {
      "type": "概念",
      "ID": "01CON010",
      "name": "存储结构",
      "attributes": {
        "难度": "入门",
        "内容": "数据的逻辑结构在计算机存储器中的表现形式，也称物理结构。基本方法有顺序、链接、索引、散列等。"
      }
    },
    {
      "type": "概念",
      "ID": "01CON011",
      "name": "关系",
      "attributes": {
        "难度": "入门",
        "内容": "数据元素之间的二元联系，通常表示为序偶的集合。"
      }
    },
    {
      "type": "概念",
      "ID": "01CON012",
      "name": "直接前驱",
      "attributes": {
        "难度": "入门",
        "内容": "在关系序偶<x,y>中，x是y的直接前驱。"
      }
    },
    {
      "type": "概念",
      "ID": "01CON013",
      "name": "直接后继",
      "attributes": {
        "难度": "入门",
        "内容": "在关系序偶<x,y>中，y是x的直接后继。"
      }
    },
    {
      "type": "概念",
      "ID": "01CON014",
      "name": "结点",
      "attributes": {
        "难度": "入门",
        "内容": "数据结构图形表示中对应数据元素的单元，也叫顶点。"
      }
    },
    {
      "type": "概念",
      "ID": "01CON015",
      "name": "有向边",
      "attributes": {
        "难度": "入门",
        "内容": "数据结构图形表示中带箭头的连线，对应关系中的序偶，也称弧。"
      }
    },
    {
      "type": "数据结构",
      "ID": "01DS001",
      "name": "集合结构",
      "attributes": {
        "难度": "入门",
        "内容": "数据元素之间除了“同属一个集合”外，没有其他关系的数据结构。",
        "存储开销": "取决于存储方式",
        "核心特性": "无序性（逻辑上）"
      }
    },
    {
      "type": "数据结构",
      "ID": "01DS002",
      "name": "线性结构",
      "attributes": {
        "难度": "入门",
        "内容": "数据元素之间存在一对一的线性关系的数据结构。除首尾元素外，每个元素有且仅有一个直接前驱和一个直接后继。",
        "存储开销": "取决于存储方式（顺序或链式）",
        "核心特性": "有序性（逻辑上），1:1关系"
      }
    },
    {
      "type": "数据结构",
      "ID": "01DS003",
      "name": "树形结构",
      "attributes": {
        "难度": "入门",
        "内容": "数据元素之间存在一对多的层次关系的数据结构。除根结点外，每个结点有且仅有一个直接前驱，可以有任意多个直接后继。",
        "存储开销": "取决于存储方式",
        "核心特性": "层次性，1:N关系"
      }
    },
    {
      "type": "概念",
      "ID": "01CON016",
      "name": "树根结点",
      "attributes": {
        "难度": "入门",
        "内容": "树形结构中没有前驱只有后继的结点。"
      }
    },
    {
      "type": "概念",
      "ID": "01CON017",
      "name": "树叶结点",
      "attributes": {
        "难度": "入门",
        "内容": "树形结构中只有前驱没有后继的结点。"
      }
    },
    {
      "type": "概念",
      "ID": "01CON018",
      "name": "树枝结点",
      "attributes": {
        "难度": "入门",
        "内容": "树形结构中除树根和树叶之外的结点。"
      }
    },
    {
      "type": "数据结构",
      "ID": "01DS004",
      "name": "图形结构",
      "attributes": {
        "难度": "入门",
        "内容": "数据元素之间存在多对多的关系的数据结构。每个结点可以有任意多个前驱和后继。",
        "存储开销": "取决于存储方式（邻接矩阵或邻接表）",
        "核心特性": "网状性，M:N关系"
      }
    },
    {
      "type": "概念",
      "ID": "01CON019",
      "name": "非线性结构",
      "attributes": {
        "难度": "入门",
        "内容": "数据元素之间存在非一对一关系的结构统称，主要包括树形结构和图形结构。"
      }
    },
    {
      "type": "概念",
      "ID": "01CON020",
      "name": "数据类型",
      "attributes": {
        "难度": "入门",
        "内容": "对数据的取值范围、数据元素之间的结构以及允许施加操作的一种总体描述。"
      }
    },
    {
      "type": "概念",
      "ID": "01CON021",
      "name": "简单类型",
      "attributes": {
        "难度": "入门",
        "内容": "数据无法再分割的整体的数据类型，如整数、字符等。"
      }
    },
    {
      "type": "概念",
      "ID": "01CON022",
      "name": "结构类型",
      "attributes": {
        "难度": "入门",
        "内容": "由简单类型或其他结构类型数据按一定规则构造而成的数据类型，如数组、记录等。"
      }
    },
    {
      "type": "数据结构",
      "ID": "01DS005",
      "name": "数组",
      "attributes": {
        "难度": "入门",
        "内容": "数目固定的具有同一类型的数据元素的顺序组合，具有线性结构特点，可通过下标访问。",
        "存储开销": "连续存储空间，大小固定",
        "核心特性": "可索引性，定长"
      }
    },
    {
      "type": "数据结构",
      "ID": "01DS006",
      "name": "记录",
      "attributes": {
        "难度": "入门",
        "内容": "多个不同（或相同）类型的数组据线性结构排列而成，可通过成员运算符访问域。",
        "存储开销": "连续存储空间，大小固定，等于各域之和",
        "核心特性": "组合性，异构性"
      }
    },
    {
      "type": "概念",
      "ID": "01CON023",
      "name": "抽象数据类型",
      "attributes": {
        "难度": "入门",
        "内容": "由一种数据结构和在其上的所有操作所组成，强调逻辑结构和操作说明，隐藏实现细节。"
      }
    },
    {
      "type": "概念",
      "ID": "01CON024",
      "name": "数据对象",
      "attributes": {
        "难度": "入门",
        "内容": "属于一种数据类型中的特定实例或值。"
      }
    },
    {
      "type": "概念",
      "ID": "01CON025",
      "name": "算法",
      "attributes": {
        "难度": "入门",
        "内容": "解决特定问题或执行特定计算而设计的一系列明确、有限的步骤。具有有穷性、确定性、可行性、输入、输出五个特性。"
      }
    },
    {
      "type": "算法",
      "ID": "01ALG001",
      "name": "累加求和",
      "attributes": {
        "难度": "入门",
        "内容": "计算一组数（如数组元素）的总和。",
        "时间复杂度": "O(n)",
        "空间复杂度": "O(1)",
        "设计思想": "迭代",
        "适用场景": "求和计算"
      }
    },
    {
      "type": "算法",
      "ID": "01ALG002",
      "name": "矩阵相加",
      "attributes": {
        "难度": "入门",
        "内容": "将两个相同维度的矩阵对应位置的元素相加。",
        "时间复杂度": "O(n^2)",
        "空间复杂度": "O(1)",
        "设计思想": "迭代",
        "适用场景": "矩阵运算"
      }
    },
    {
      "type": "算法",
      "ID": "01ALG003",
      "name": "简单选择排序",
      "attributes": {
        "难度": "入门",
        "内容": "每次从未排序部分选取最小（或最大）元素放到已排序部分的末尾。",
        "时间复杂度": "O(n^2)",
        "空间复杂度": "O(1)",
        "设计思想": "选择",
        "适用场景": "小规模数据排序"
      }
    },
    {
      "type": "算法",
      "ID": "01ALG004",
      "name": "顺序查找",
      "attributes": {
        "难度": "入门",
        "内容": "按顺序逐个比较元素，直到找到目标元素或遍历完所有元素。",
        "时间复杂度": "O(n) (平均/最差), O(1) (最好)",
        "空间复杂度": "O(1)",
        "设计思想": "线性扫描",
        "适用场景": "无序或小规模数据查找"
      }
    },
    {
      "type": "概念",
      "ID": "01CON026",
      "name": "时间复杂度",
      "attributes": {
        "难度": "入门",
        "内容": "算法运行时间的相对度量，通常表示为问题规模n的函数，常用大O表示法（数量级）。"
      }
    },
    {
      "type": "概念",
      "ID": "01CON027",
      "name": "空间复杂度",
      "attributes": {
        "难度": "入门",
        "内容": "算法在运行过程中临时占用存储空间大小的量度，衡量算法对内存资源的需求。"
      }
    },
    {
      "type": "概念",
      "ID": "01CON028",
      "name": "正确性",
      "attributes": {
        "难度": "入门",
        "内容": "算法在合理输入下能在有限时间内得出正确结果的特性。"
      }
    },
    {
      "type": "概念",
      "ID": "01CON029",
      "name": "稳健性",
      "attributes": {
        "难度": "入门",
        "内容": "算法对不合理数据输入的反应和处理能力。"
      }
    },
    {
      "type": "概念",
      "ID": "01CON030",
      "name": "可读性",
      "attributes": {
        "难度": "入门",
        "内容": "算法供人阅读和理解的容易程度。"
      }
    },
    {
      "type": "概念",
      "ID": "01CON031",
      "name": "数量级",
      "attributes": {
        "难度": "入门",
        "内容": "时间复杂度或空间复杂度的一种简化表示，关注函数随规模增长的主要趋势，如O(n), O(n^2)。"
      }
    },
    {
      "type": "概念",
      "ID": "01CON032",
      "name": "递归",
      "attributes": {
        "难度": "中等",
        "内容": "一个函数直接或间接调用自身的过程或结构。"
      }
    },
    {
      "type": "概念",
      "ID": "01CON033",
      "name": "非递归",
      "attributes": {
        "难度": "入门",
        "内容": "不使用递归调用实现的算法，通常使用循环等结构。"
      }
    },
    {
      "type": "概念",
      "ID": "01CON034",
      "name": "顺序存储",
      "attributes": {
        "难度": "入门",
        "内容": "把逻辑上相邻的数据元素存储在物理位置也相邻的存储单元中的方法。"
      }
    },
    {
      "type": "概念",
      "ID": "01CON035",
      "name": "链式存储",
      "attributes": {
        "难度": "入门",
        "内容": "数据元素的存储单元不一定连续，通过指针域将元素链接起来的存储方法。"
      }
    },
    {
      "type": "概念",
      "ID": "01CON036",
      "name": "索引存储",
      "attributes": {
        "难度": "中等",
        "内容": "在存储数据信息的同时，还建立附加的索引表来标识结点的地址的存储方法。"
      }
    },
    {
      "type": "概念",
      "ID": "01CON037",
      "name": "散列存储",
      "attributes": {
        "难度": "中等",
        "内容": "根据结点的关键字直接计算出该结点的存储地址的存储方法，也称哈希存储。"
      }
    },
    {
      "type": "概念",
      "ID": "01CON038",
      "name": "有穷性",
      "attributes": {
        "难度": "入门",
        "内容": "算法必须在执行有穷步之后结束。"
      }
    },
    {
      "type": "概念",
      "ID": "01CON039",
      "name": "确定性",
      "attributes": {
        "难度": "入门",
        "内容": "算法中的每一步都必须具有确切的含义，无二义性。"
      }
    },
    {
      "type": "概念",
      "ID": "01CON040",
      "name": "可行性",
      "attributes": {
        "难度": "入门",
        "内容": "算法中的每一步都必须是可行的，能够通过有限次操作在有限时间内实现。"
      }
    },
    {
      "type": "概念",
      "ID": "01CON041",
      "name": "输入",
      "attributes": {
        "难度": "入门",
        "内容": "算法可以有零个或多个输入量。"
      }
    },
    {
      "type": "概念",
      "ID": "01CON042",
      "name": "输出",
      "attributes": {
        "难度": "入门",
        "内容": "算法执行结束后至少要有一个输出量。"
      }
    }
  ],
  "relations": [
    {
      "type": "理论依赖",
      "source": "01CON008",
      "target": "01CON001"
    },
    {
      "type": "理论依赖",
      "source": "01CON008",
      "target": "01CON002"
    },
    {
      "type": "理论依赖",
      "source": "01CON008",
      "target": "01CON011"
    },
    {
      "type": "理论依赖",
      "source": "01CON008",
      "target": "01CON009"
    },
    {
      "type": "理论依赖",
      "source": "01CON008",
      "target": "01CON010"
    },
    {
      "type": "理论依赖",
      "source": "01CON002",
      "target": "01CON001"
    },
    {
      "type": "理论依赖",
      "source": "01CON003",
      "target": "01CON004"
    },
    {
      "type": "理论依赖",
      "source": "01CON005",
      "target": "01CON003"
    },
    {
      "type": "理论依赖",
      "source": "01CON006",
      "target": "01CON005"
    },
    {
      "type": "理论依赖",
      "source": "01CON009",
      "target": "01DS001"
    },
    {
      "type": "理论依赖",
      "source": "01CON009",
      "target": "01DS002"
    },
    {
      "type": "理论依赖",
      "source": "01CON009",
      "target": "01DS003"
    },
    {
      "type": "理论依赖",
      "source": "01CON009",
      "target": "01DS004"
    },
    {
      "type": "理论依赖",
      "source": "01CON010",
      "target": "01CON034"
    },
    {
      "type": "理论依赖",
      "source": "01CON010",
      "target": "01CON035"
    },
    {
      "type": "理论依赖",
      "source": "01CON010",
      "target": "01CON036"
    },
    {
      "type": "理论依赖",
      "source": "01CON010",
      "target": "01CON037"
    },
    {
      "type": "理论依赖",
      "source": "01CON011",
      "target": "01CON012"
    },
    {
      "type": "理论依赖",
      "source": "01CON011",
      "target": "01CON013"
    },
    {
      "type": "理论依赖",
      "source": "01DS001",
      "target": "01CON009"
    },
    {
      "type": "理论依赖",
      "source": "01DS002",
      "target": "01CON009"
    },
    {
      "type": "理论依赖",
      "source": "01DS002",
      "target": "01CON012"
    },
    {
      "type": "理论依赖",
      "source": "01DS002",
      "target": "01CON013"
    },
    {
      "type": "理论依赖",
      "source": "01DS003",
      "target": "01CON009"
    },
    {
      "type": "理论依赖",
      "source": "01DS003",
      "target": "01CON019"
    },
    {
      "type": "理论依赖",
      "source": "01DS003",
      "target": "01CON012"
    },
    {
      "type": "理论依赖",
      "source": "01DS003",
      "target": "01CON013"
    },
    {
      "type": "理论依赖",
      "source": "01DS003",
      "target": "01CON014"
    },
    {
      "type": "理论依赖",
      "source": "01DS003",
      "target": "01CON016"
    },
    {
      "type": "理论依赖",
      "source": "01DS003",
      "target": "01CON017"
    },
    {
      "type": "理论依赖",
      "source": "01DS003",
      "target": "01CON018"
    },
    {
      "type": "理论依赖",
      "source": "01DS004",
      "target": "01CON009"
    },
    {
      "type": "理论依赖",
      "source": "01DS004",
      "target": "01CON019"
    },
    {
      "type": "理论依赖",
      "source": "01DS004",
      "target": "01CON012"
    },
    {
      "type": "理论依赖",
      "source": "01DS004",
      "target": "01CON013"
    },
    {
      "type": "理论依赖",
      "source": "01DS004",
      "target": "01CON014"
    },
    {
      "type": "理论依赖",
      "source": "01DS004",
      "target": "01CON015"
    },
    {
      "type": "继承",
      "source": "01DS003",
      "target": "01DS004"
    },
    {
      "type": "继承",
      "source": "01DS002",
      "target": "01DS003"
    },
    {
      "type": "理论依赖",
      "source": "01CON020",
      "target": "01CON021"
    },
    {
      "type": "理论依赖",
      "source": "01CON020",
      "target": "01CON022"
    },
    {
      "type": "理论依赖",
      "source": "01CON022",
      "target": "01DS005"
    },
    {
      "type": "理论依赖",
      "source": "01CON022",
      "target": "01DS006"
    },
    {
      "type": "理论依赖",
      "source": "01CON023",
      "target": "01CON008"
    },
    {
      "type": "理论依赖",
      "source": "01CON023",
      "target": "01CON020"
    },
    {
      "type": "理论依赖",
      "source": "01CON024",
      "target": "01CON020"
    },
    {
      "type": "理论依赖",
      "source": "01CON025",
      "target": "01CON007"
    },
    {
      "type": "理论依赖",
      "source": "01CON025",
      "target": "01CON038"
    },
    {
      "type": "理论依赖",
      "source": "01CON025",
      "target": "01CON039"
    },
    {
      "type": "理论依赖",
      "source": "01CON025",
      "target": "01CON040"
    },
    {
      "type": "理论依赖",
      "source": "01CON025",
      "target": "01CON041"
    },
    {
      "type": "理论依赖",
      "source": "01CON025",
      "target": "01CON042"
    },
    {
      "type": "理论依赖",
      "source": "01CON025",
      "target": "01CON026"
    },
    {
      "type": "理论依赖",
      "source": "01CON025",
      "target": "01CON027"
    },
    {
      "type": "理论依赖",
      "source": "01CON025",
      "target": "01CON028"
    },
    {
      "type": "理论依赖",
      "source": "01CON025",
      "target": "01CON029"
    },
    {
      "type": "理论依赖",
      "source": "01CON025",
      "target": "01CON030"
    },
    {
      "type": "理论依赖",
      "source": "01ALG001",
      "target": "01CON025"
    },
    {
      "type": "使用",
      "source": "01ALG001",
      "target": "01DS005"
    },
    {
      "type": "理论依赖",
      "source": "01ALG002",
      "target": "01CON025"
    },
    {
      "type": "使用",
      "source": "01ALG002",
      "target": "01DS005"
    },
    {
      "type": "理论依赖",
      "source": "01ALG003",
      "target": "01CON025"
    },
    {
      "type": "使用",
      "source": "01ALG003",
      "target": "01DS005"
    },
    {
      "type": "理论依赖",
      "source": "01ALG004",
      "target": "01CON025"
    },
    {
      "type": "使用",
      "source": "01ALG004",
      "target": "01DS005"
    },
    {
      "type": "理论依赖",
      "source": "01CON026",
      "target": "01CON031"
    },
    {
      "type": "理论依赖",
      "source": "01CON027",
      "target": "01CON031"
    },
    {
      "type": "理论依赖",
      "source": "01CON025",
      "target": "01CON032"
    },
    {
      "type": "理论依赖",
      "source": "01CON025",
      "target": "01CON033"
    }
  ]
}