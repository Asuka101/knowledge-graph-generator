{
  "entities": [
    {
      "type": "数据结构",
      "ID": "01DS001",
      "name": "数据结构",
      "attributes": {
        "难度": "入门",
        "内容": "指数据以及相互之间的联系。它是根据人们解决实际问题的需要从问题本身所含数据之间的内在联系而抽象出来的逻辑结构。也指数据的逻辑结构和存储结构的总称，专门研究数据如何在计算机系统中表示、存取和处理。",
        "存储开销": "依赖于所选的具体存储结构（顺序、链接、索引、散列等）",
        "核心特性": "定义数据元素间的逻辑关系及操作方式",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "01CON001",
      "name": "数据",
      "attributes": {
        "难度": "入门",
        "内容": "人们利用便于书写、记忆和交流的符号对现实世界的事物及其活动所做的记录。包括数值、字符、字符串、图像、音频、视频等。在计算机中通常需要编码为二进制形式。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "01CON002",
      "name": "数据元素",
      "attributes": {
        "难度": "入门",
        "内容": "数据的基本单位，是一个数据整体中相对独立的单位。通常由若干数据项组成。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "01CON003",
      "name": "数据记录",
      "attributes": {
        "难度": "入门",
        "内容": "数据处理领域组织数据的基本单位，由一个或多个数据项组成。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "01CON004",
      "name": "数据项",
      "attributes": {
        "难度": "入门",
        "内容": "组成数据记录的最小单位，可以是简单数据项（不可再分）或组合数据项。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "01CON005",
      "name": "关键项",
      "attributes": {
        "难度": "入门",
        "内容": "能唯一标识一个记录的数据项（或数据项的组合）。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "01CON006",
      "name": "关键字",
      "attributes": {
        "难度": "入门",
        "内容": "关键项中的具体值，用于唯一标识一个记录。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "01CON007",
      "name": "数据处理",
      "attributes": {
        "难度": "入门",
        "内容": "利用计算机对数据进行存储、检索、插入、删除、合并、拆分、排序、统计、计算、转换、输入、输出等的处理过程。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "01CON008",
      "name": "逻辑结构",
      "attributes": {
        "难度": "入门",
        "内容": "数据元素之间的内在联系和组织方式，与计算机存储无关。基本类型包括集合、线性结构、树形结构、图形结构。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "01DS002",
      "name": "集合",
      "attributes": {
        "难度": "入门",
        "内容": "一种逻辑结构，其中数据元素除了同属于一个集合外，没有其他特定关系。",
        "存储开销": "通常使用数组或链表实现，开销依赖于实现方式",
        "核心特性": "元素间无特定顺序或关系",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "01DS003",
      "name": "线性结构",
      "attributes": {
        "难度": "入门",
        "内容": "一种逻辑结构，其中数据元素之间存在一对一的线性关系。除首尾元素外，每个元素有且仅有一个直接前驱和一个直接后继。",
        "存储开销": "顺序存储（数组）或链式存储（链表），开销不同",
        "核心特性": "元素间一对一关系，有序",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "01DS004",
      "name": "树形结构",
      "attributes": {
        "难度": "入门",
        "内容": "一种逻辑结构，其中数据元素之间存在一对多的层次关系。除根结点外，每个元素有且仅有一个直接前驱（父结点），但可以有零个或多个直接后继（子结点）。",
        "存储开销": "通常使用链式存储或数组表示，开销依赖具体实现",
        "核心特性": "元素间一对多关系，层次性",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "01DS005",
      "name": "图形结构",
      "attributes": {
        "难度": "入门",
        "内容": "一种逻辑结构，其中数据元素（顶点）之间存在多对多的关系。任何两个元素之间都可能存在关系。",
        "存储开销": "常用邻接矩阵或邻接表存储，开销与顶点和边数相关",
        "核心特性": "元素间多对多关系，网状",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "01CON009",
      "name": "存储结构",
      "attributes": {
        "难度": "入门",
        "内容": "数据的逻辑结构在计算机内存中的表示方式，也称物理结构。基本方法有顺序存储、链接存储、索引存储、散列存储。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "01CON010",
      "name": "顺序存储结构",
      "attributes": {
        "难度": "入门",
        "内容": "将逻辑上相邻的数据元素存储在物理位置也相邻的存储单元中的存储方式。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "01CON011",
      "name": "链接存储结构",
      "attributes": {
        "难度": "入门",
        "内容": "数据元素的存储单元不一定连续，通过指针将逻辑上相邻的元素链接起来的存储方式。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "01CON012",
      "name": "索引存储结构",
      "attributes": {
        "难度": "入门",
        "内容": "在存储元素信息的同时，建立附加的索引表来标识元素的地址的存储方式。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "01CON013",
      "name": "散列存储结构",
      "attributes": {
        "难度": "入门",
        "内容": "根据元素的关键字直接计算出该元素的存储地址的存储方式，也称哈希存储。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "01CON014",
      "name": "关系",
      "attributes": {
        "难度": "入门",
        "内容": "数据元素之间的联系，在数据结构的二元组表示 B=(K,R) 中，R是数据元素集合K上的二元关系的集合。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "01CON015",
      "name": "直接前驱",
      "attributes": {
        "难度": "入门",
        "内容": "在具有线性关系或层次关系的数据结构中，一个元素的前一个元素。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "01CON016",
      "name": "直接后继",
      "attributes": {
        "难度": "入门",
        "内容": "在具有线性关系或层次关系的数据结构中，一个元素的后一个元素。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "01CON017",
      "name": "结点",
      "attributes": {
        "难度": "入门",
        "内容": "数据结构中表示数据元素的图形单元，也称顶点。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "01CON018",
      "name": "有向边",
      "attributes": {
        "难度": "入门",
        "内容": "在图形表示中，连接两个结点并带有方向的线段，表示元素间的有序关系（序偶），也称弧。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "01CON019",
      "name": "树根结点",
      "attributes": {
        "难度": "入门",
        "内容": "在树形结构中，没有直接前驱（父结点）的唯一结点。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "01CON020",
      "name": "树叶结点",
      "attributes": {
        "难度": "入门",
        "内容": "在树形结构中，没有直接后继（子结点）的结点。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "01CON021",
      "name": "树枝结点",
      "attributes": {
        "难度": "入门",
        "内容": "在树形结构中，除了树根结点和树叶结点之外的结点，也称内部结点。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "01CON022",
      "name": "非线性结构",
      "attributes": {
        "难度": "入门",
        "内容": "数据元素之间存在一对多或多对多关系的逻辑结构，如树形结构和图形结构。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "01CON023",
      "name": "数据类型",
      "attributes": {
        "难度": "入门",
        "内容": "对数据的取值范围、数据元素之间的结构以及允许施加操作的一种总体描述。分为简单类型和结构类型。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "01CON024",
      "name": "抽象数据类型",
      "attributes": {
        "难度": "入门",
        "内容": "由一种数据结构（逻辑结构）和在其上定义的一组操作所组成。强调数据封装和信息隐藏，不关注具体实现。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "01CON025",
      "name": "数据对象",
      "attributes": {
        "难度": "入门",
        "内容": "属于一种数据类型的特定实例。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "01CON026",
      "name": "算法",
      "attributes": {
        "难度": "入门",
        "内容": "解决特定问题的方法或步骤序列。应具备有穷性、确定性、可行性、输入、输出五个特性。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "01ALG001",
      "name": "求n个元素中的最大值",
      "attributes": {
        "难度": "入门",
        "内容": "遍历n个元素，通过比较找到并记录当前遇到的最大值。",
        "时间复杂度": "O(n)",
        "空间复杂度": "O(1)",
        "设计思想": "迭代比较",
        "适用场景": "查找无序序列中的最大元素",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "01CON027",
      "name": "时间复杂度",
      "attributes": {
        "难度": "入门",
        "内容": "衡量算法运行时间随问题规模增长而增长的趋势，通常用大O表示法表示其数量级。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "01CON028",
      "name": "空间复杂度",
      "attributes": {
        "难度": "入门",
        "内容": "衡量算法运行过程中临时占用存储空间大小随问题规模增长而增长的趋势，通常用大O表示法表示。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "01ALG002",
      "name": "累加求和",
      "attributes": {
        "难度": "入门",
        "内容": "遍历数组（或序列），将每个元素的值累加到一个和变量中。",
        "时间复杂度": "O(n)",
        "空间复杂度": "O(1)",
        "设计思想": "迭代累加",
        "适用场景": "计算序列元素的总和",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "01ALG003",
      "name": "矩阵相加",
      "attributes": {
        "难度": "入门",
        "内容": "对两个相同维度的矩阵，将对应位置的元素相加，结果存入新的矩阵。",
        "时间复杂度": "O(n^2) (对于n*n矩阵)",
        "空间复杂度": "O(n^2) (若需存储结果矩阵)",
        "设计思想": "遍历对应元素",
        "适用场景": "线性代数中的矩阵加法运算",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "01ALG004",
      "name": "简单选择排序",
      "attributes": {
        "难度": "入门",
        "内容": "在未排序序列中找到最小（或最大）元素，存放到排序序列的起始位置，然后，再从剩余未排序元素中继续寻找最小（大）元素，然后放到已排序序列的末尾。以此类推，直到所有元素均排序完毕。",
        "时间复杂度": "O(n^2)",
        "空间复杂度": "O(1)",
        "设计思想": "选择、交换",
        "适用场景": "小规模数据排序",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "01CON029",
      "name": "数量级",
      "attributes": {
        "难度": "入门",
        "内容": "表示函数增长趋势的级别，常用于描述算法复杂度，如 O(1), O(n), O(n^2), O(logn) 等。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "01ALG005",
      "name": "顺序查找",
      "attributes": {
        "难度": "入门",
        "内容": "从数据序列的一端开始，逐个比较元素，直到找到目标元素或遍历完整个序列。",
        "时间复杂度": "O(n) (平均和最坏情况)",
        "空间复杂度": "O(1)",
        "设计思想": "线性遍历、比较",
        "适用场景": "无序或小规模序列的查找",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "01DS006",
      "name": "数组",
      "attributes": {
        "难度": "入门",
        "内容": "数目固定的具有同一类型的数据元素的顺序组合。元素在内存中通常是连续存储的。",
        "存储开销": "O(n)，n为元素个数",
        "核心特性": "连续存储，可通过下标随机访问元素",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "01DS007",
      "name": "字符串",
      "attributes": {
        "难度": "入门",
        "内容": "由零个或多个字符组成的有限序列。通常实现为字符数组，并以特殊结束符（如'\\0'）标记结尾。",
        "存储开销": "O(n)，n为字符个数",
        "核心特性": "字符序列，支持查找、连接、复制等操作",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "01DS008",
      "name": "记录",
      "attributes": {
        "难度": "入门",
        "内容": "由多个不同（或相同）类型的数据项（域）组成的组合体，也称结构体。",
        "存储开销": "等于各成员占用空间之和",
        "核心特性": "聚合不同类型的数据",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "01CON030",
      "name": "文件",
      "attributes": {
        "难度": "入门",
        "内容": "存储在外存上、按位置有序的数据集合。可通过文件流对象进行访问。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "01DS009",
      "name": "单链表",
      "attributes": {
        "难度": "入门",
        "内容": "一种链式存储的线性结构，每个结点包含数据域和指向下一个结点的指针域。",
        "存储开销": "O(n)，n为结点数，包含数据和指针开销",
        "核心特性": "非连续存储，插入删除操作（在已知位置）效率高",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    }
  ],
  "relations": [
    {
      "type": "理论依赖",
      "ID": "01REL001",
      "source": "01DS001",
      "target": "01CON008"
    },
    {
      "type": "理论依赖",
      "ID": "01REL002",
      "source": "01DS001",
      "target": "01CON009"
    },
    {
      "type": "理论依赖",
      "ID": "01REL003",
      "source": "01CON002",
      "target": "01CON001"
    },
    {
      "type": "理论依赖",
      "ID": "01REL004",
      "source": "01CON003",
      "target": "01CON001"
    },
    {
      "type": "理论依赖",
      "ID": "01REL005",
      "source": "01CON004",
      "target": "01CON003"
    },
    {
      "type": "理论依赖",
      "ID": "01REL006",
      "source": "01CON006",
      "target": "01CON005"
    },
    {
      "type": "理论依赖",
      "ID": "01REL007",
      "source": "01DS002",
      "target": "01CON008"
    },
    {
      "type": "理论依赖",
      "ID": "01REL008",
      "source": "01DS003",
      "target": "01CON008"
    },
    {
      "type": "理论依赖",
      "ID": "01REL009",
      "source": "01DS004",
      "target": "01CON008"
    },
    {
      "type": "理论依赖",
      "ID": "01REL010",
      "source": "01DS005",
      "target": "01CON008"
    },
    {
      "type": "理论依赖",
      "ID": "01REL011",
      "source": "01CON010",
      "target": "01CON009"
    },
    {
      "type": "理论依赖",
      "ID": "01REL012",
      "source": "01CON011",
      "target": "01CON009"
    },
    {
      "type": "理论依赖",
      "ID": "01REL013",
      "source": "01CON012",
      "target": "01CON009"
    },
    {
      "type": "理论依赖",
      "ID": "01REL014",
      "source": "01CON013",
      "target": "01CON009"
    },
    {
      "type": "理论依赖",
      "ID": "01REL015",
      "source": "01DS001",
      "target": "01CON014"
    },
    {
      "type": "理论依赖",
      "ID": "01REL016",
      "source": "01DS003",
      "target": "01CON015"
    },
    {
      "type": "理论依赖",
      "ID": "01REL017",
      "source": "01DS003",
      "target": "01CON016"
    },
    {
      "type": "继承",
      "ID": "01REL018",
      "source": "01DS004",
      "target": "01DS005"
    },
    {
      "type": "继承",
      "ID": "01REL019",
      "source": "01DS003",
      "target": "01DS004"
    },
    {
      "type": "理论依赖",
      "ID": "01REL020",
      "source": "01DS004",
      "target": "01CON017"
    },
    {
      "type": "理论依赖",
      "ID": "01REL021",
      "source": "01DS005",
      "target": "01CON017"
    },
    {
      "type": "理论依赖",
      "ID": "01REL022",
      "source": "01DS005",
      "target": "01CON018"
    },
    {
      "type": "理论依赖",
      "ID": "01REL023",
      "source": "01DS004",
      "target": "01CON019"
    },
    {
      "type": "理论依赖",
      "ID": "01REL024",
      "source": "01DS004",
      "target": "01CON020"
    },
    {
      "type": "理论依赖",
      "ID": "01REL025",
      "source": "01DS004",
      "target": "01CON021"
    },
    {
      "type": "理论依赖",
      "ID": "01REL026",
      "source": "01CON019",
      "target": "01CON017"
    },
    {
      "type": "理论依赖",
      "ID": "01REL027",
      "source": "01CON020",
      "target": "01CON017"
    },
    {
      "type": "理论依赖",
      "ID": "01REL028",
      "source": "01CON021",
      "target": "01CON017"
    },
    {
      "type": "理论依赖",
      "ID": "01REL029",
      "source": "01DS004",
      "target": "01CON022"
    },
    {
      "type": "理论依赖",
      "ID": "01REL030",
      "source": "01DS005",
      "target": "01CON022"
    },
    {
      "type": "理论依赖",
      "ID": "01REL031",
      "source": "01CON024",
      "target": "01DS001"
    },
    {
      "type": "理论依赖",
      "ID": "01REL032",
      "source": "01CON024",
      "target": "01CON026"
    },
    {
      "type": "理论依赖",
      "ID": "01REL033",
      "source": "01CON025",
      "target": "01CON023"
    },
    {
      "type": "理论依赖",
      "ID": "01REL034",
      "source": "01CON027",
      "target": "01CON026"
    },
    {
      "type": "理论依赖",
      "ID": "01REL035",
      "source": "01CON028",
      "target": "01CON026"
    },
    {
      "type": "理论依赖",
      "ID": "01REL036",
      "source": "01CON027",
      "target": "01CON029"
    },
    {
      "type": "理论依赖",
      "ID": "01REL037",
      "source": "01CON028",
      "target": "01CON029"
    },
    {
      "type": "使用",
      "ID": "01REL038",
      "source": "01ALG002",
      "target": "01DS006"
    },
    {
      "type": "使用",
      "ID": "01REL039",
      "source": "01ALG003",
      "target": "01DS006"
    },
    {
      "type": "使用",
      "ID": "01REL040",
      "source": "01ALG004",
      "target": "01DS006"
    },
    {
      "type": "使用",
      "ID": "01REL041",
      "source": "01ALG005",
      "target": "01DS006"
    },
    {
      "type": "理论依赖",
      "ID": "01REL042",
      "source": "01DS006",
      "target": "01CON010"
    },
    {
      "type": "理论依赖",
      "ID": "01REL043",
      "source": "01DS009",
      "target": "01CON011"
    },
    {
      "type": "继承",
      "ID": "01REL044",
      "source": "01DS009",
      "target": "01DS003"
    },
    {
      "type": "使用",
      "ID": "01REL045",
      "source": "01DS007",
      "target": "01DS006"
    }
  ]
}