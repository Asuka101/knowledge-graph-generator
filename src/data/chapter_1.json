{
  "entities": [
    {
      "type": "概念",
      "ID": "01CON001",
      "name": "数据",
      "attributes": {
        "难度": "入门",
        "内容": "对现实世界事物及其活动的符号记录，如数值、单词、图像等。在计算机中需编码为二进制形式。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "01CON002",
      "name": "数据元素",
      "attributes": {
        "难度": "入门",
        "内容": "数据的基本单位，是数据整体中相对独立的单位。例如表格中的一行、字符串中的一个字符。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "01CON003",
      "name": "数据记录",
      "attributes": {
        "难度": "入门",
        "内容": "数据处理领域组织数据的基本单位，通常由一个或多个数据项组成。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "01CON004",
      "name": "数据项",
      "attributes": {
        "难度": "入门",
        "内容": "组成数据记录的成分，可以是不可再分的简单数据项（如数值、字符）或可再分的组合数据项（如字符串、数组）。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "01CON005",
      "name": "关键项",
      "attributes": {
        "难度": "入门",
        "内容": "在表或文件中，其值能唯一标识一个记录的数据项。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "01CON006",
      "name": "关键字",
      "attributes": {
        "难度": "入门",
        "内容": "关键项中的具体值，用于唯一标识其所在的记录。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "01CON007",
      "name": "数据处理",
      "attributes": {
        "难度": "入门",
        "内容": "利用计算机对数据进行存储、检索、插入、删除、排序等操作的过程。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "01DS001",
      "name": "数据结构",
      "attributes": {
        "难度": "入门",
        "内容": "指数据以及数据元素之间的相互联系（逻辑结构），以及数据在计算机中的存储方式（存储结构）。逻辑结构包括集合、线性结构、树形结构、图形结构等。通常用二元组 B=(K,R) 表示。",
        "存储开销": "取决于具体的逻辑结构和选用的存储结构。",
        "核心特性": "描述数据元素间的逻辑关系和存储方式。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "01CON008",
      "name": "逻辑结构",
      "attributes": {
        "难度": "入门",
        "内容": "数据元素之间抽象化的相互关系，与具体存储无关。基本类型包括集合、线性结构、树形结构、图形结构。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "01CON009",
      "name": "存储结构",
      "attributes": {
        "难度": "入门",
        "内容": "数据的逻辑结构在计算机存储器中的表示方式，也称物理结构。基本方法有顺序存储、链接存储、索引存储、散列存储。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "01CON020",
      "name": "结点",
      "attributes": {
        "难度": "入门",
        "内容": "在数据结构的图形表示中，代表一个数据元素的图形单元，也称顶点。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "01CON021",
      "name": "边",
      "attributes": {
        "难度": "入门",
        "内容": "在数据结构的图形表示中，连接两个结点的线，表示它们之间的关系。可以是有向边（弧）或无向边。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "01CON022",
      "name": "前驱",
      "attributes": {
        "难度": "入门",
        "内容": "在具有顺序关系的数据结构中，一个元素之前的直接相邻元素。在序偶<x,y>中，x是y的前驱。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "01CON023",
      "name": "后继",
      "attributes": {
        "难度": "入门",
        "内容": "在具有顺序关系的数据结构中，一个元素之后的直接相邻元素。在序偶<x,y>中，y是x的后继。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "01DS002",
      "name": "集合",
      "attributes": {
        "难度": "入门",
        "内容": "一种逻辑结构，其中数据元素之间除了同属一个集合外，没有其他特定关系。",
        "存储开销": "取决于存储方式。",
        "核心特性": "元素间无特定关系。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "01DS003",
      "name": "线性结构",
      "attributes": {
        "难度": "入门",
        "内容": "一种逻辑结构，其中数据元素之间存在一对一的线性关系。除首尾元素外，每个元素有且仅有一个直接前驱和一个直接后继。",
        "存储开销": "顺序存储通常为O(n)，链式存储通常为O(n)。",
        "核心特性": "元素间一对一关系，有序。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "01DS004",
      "name": "树形结构",
      "attributes": {
        "难度": "入门",
        "内容": "一种逻辑结构，其中数据元素之间存在一对多的层次关系。除根结点外，每个元素有且仅有一个直接前驱，但可以有零个或多个直接后继。",
        "存储开销": "通常为O(n)。",
        "核心特性": "元素间一对多关系，层次性。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "01DS005",
      "name": "图形结构",
      "attributes": {
        "难度": "入门",
        "内容": "一种逻辑结构，其中数据元素之间存在多对多的关系。每个元素可以有任意多个直接前驱和任意多个直接后继。",
        "存储开销": "邻接矩阵O(n^2)，邻接表O(n+e)。",
        "核心特性": "元素间多对多关系，网状。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "01CON010",
      "name": "非线性结构",
      "attributes": {
        "难度": "入门",
        "内容": "相对于线性结构而言，指数据元素之间存在一对多或多对多关系的逻辑结构，主要包括树形结构和图形结构。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "01CON011",
      "name": "数据类型",
      "attributes": {
        "难度": "入门",
        "内容": "对数据的取值范围、数据元素之间的结构以及允许施加操作的一种总体描述。分为简单类型和结构类型。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "01CON012",
      "name": "抽象数据类型",
      "attributes": {
        "难度": "入门",
        "内容": "由一种数据结构和在其上定义的一组操作所组成。强调逻辑结构和操作说明，不关注具体实现细节，体现信息隐藏和封装思想。通常通过类来实现。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "01CON013",
      "name": "数据对象",
      "attributes": {
        "难度": "入门",
        "内容": "属于某种数据类型的特定实例。例如，整数25是一个整型数据对象。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "01ALG001",
      "name": "算法",
      "attributes": {
        "难度": "入门",
        "内容": "解决特定问题的方法或一系列步骤。具有有穷性、确定性、可行性、输入、输出五个特性。可分为数值算法和非数值算法，递归算法和非递归算法。",
        "时间复杂度": "衡量算法运行时间效率的度量。",
        "空间复杂度": "衡量算法运行所需存储空间的度量。",
        "设计思想": "解决问题的策略，如递归、迭代等。",
        "适用场景": "解决特定类型的数值或非数值问题。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "01CON014",
      "name": "时间复杂度",
      "attributes": {
        "难度": "入门",
        "内容": "算法运行时间的相对度量，通常表示为问题规模n的函数，常用大O表示法（数量级）来描述，如O(1), O(logn), O(n), O(nlogn), O(n^2), O(2^n), O(n!)等。分析时可考虑最好、最差、平均情况。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "01CON015",
      "name": "空间复杂度",
      "attributes": {
        "难度": "入门",
        "内容": "算法在运行过程中临时占用存储空间大小的量度。包括算法本身、输入输出数据和临时工作单元所占空间。常用大O表示法描述，如O(1), O(logn), O(n)。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "01ALG004",
      "name": "累加求和",
      "attributes": {
        "难度": "入门",
        "内容": "计算一组数（如数组元素）总和的算法。通常使用循环实现。",
        "时间复杂度": "O(n)",
        "空间复杂度": "O(1)",
        "设计思想": "迭代",
        "适用场景": "求和计算。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "01ALG005",
      "name": "矩阵相加",
      "attributes": {
        "难度": "入门",
        "内容": "将两个相同维度的矩阵对应位置的元素相加得到结果矩阵的算法。通常使用嵌套循环实现。",
        "时间复杂度": "O(n^2) (对于n x n矩阵)",
        "空间复杂度": "O(n^2) (若需存储结果矩阵) 或 O(1) (若原地修改)",
        "设计思想": "迭代",
        "适用场景": "线性代数计算。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "01ALG002",
      "name": "简单选择排序",
      "attributes": {
        "难度": "入门",
        "内容": "一种基本的排序算法。在每一轮中从未排序的部分选择最小（或最大）的元素，放到已排序部分的末尾。",
        "时间复杂度": "O(n^2)",
        "空间复杂度": "O(1)",
        "设计思想": "选择",
        "适用场景": "数据量较小或对空间复杂度要求高的场景。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "01ALG003",
      "name": "顺序查找",
      "attributes": {
        "难度": "入门",
        "内容": "一种基本的查找算法。从数据列表的一端开始，逐个检查元素，直到找到目标元素或检查完所有元素。",
        "时间复杂度": "最好O(1)，最差O(n)，平均O(n)",
        "空间复杂度": "O(1)",
        "设计思想": "迭代/线性扫描",
        "适用场景": "无序列表或列表较小的情况。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "01CON016",
      "name": "顺序存储",
      "attributes": {
        "难度": "入门",
        "内容": "一种基本的存储结构，将逻辑上相邻的数据元素存储在物理位置也相邻的存储单元中。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "01CON017",
      "name": "链接存储",
      "attributes": {
        "难度": "入门",
        "内容": "一种基本的存储结构，数据元素的存储单元不一定连续，通过指针将逻辑上相邻的元素链接起来。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "01CON018",
      "name": "索引存储",
      "attributes": {
        "难度": "入门",
        "内容": "一种存储结构，在存储数据元素的同时，建立附加的索引表来指示元素的存储位置。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "01CON019",
      "name": "散列存储",
      "attributes": {
        "难度": "入门",
        "内容": "一种存储结构，根据元素的关键字通过散列函数直接计算出其存储地址。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "01CON024",
      "name": "递归",
      "attributes": {
        "难度": "中等",
        "内容": "一种算法设计技术，函数或过程直接或间接调用自身来解决问题。通常将大问题分解为相似的子问题。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    }
  ],
  "relations": [
    {
      "type": "理论依赖",
      "ID": "01REL001",
      "source": "01DS001",
      "target": "01CON001"
    },
    {
      "type": "理论依赖",
      "ID": "01REL002",
      "source": "01DS001",
      "target": "01CON002"
    },
    {
      "type": "理论依赖",
      "ID": "01REL003",
      "source": "01DS001",
      "target": "01CON008"
    },
    {
      "type": "理论依赖",
      "ID": "01REL004",
      "source": "01DS001",
      "target": "01CON009"
    },
    {
      "type": "理论依赖",
      "ID": "01REL005",
      "source": "01CON003",
      "target": "01CON004"
    },
    {
      "type": "理论依赖",
      "ID": "01REL006",
      "source": "01CON003",
      "target": "01CON005"
    },
    {
      "type": "理论依赖",
      "ID": "01REL007",
      "source": "01CON003",
      "target": "01CON006"
    },
    {
      "type": "理论依赖",
      "ID": "01REL008",
      "source": "01CON005",
      "target": "01CON006"
    },
    {
      "type": "理论依赖",
      "ID": "01REL009",
      "source": "01CON008",
      "target": "01DS002"
    },
    {
      "type": "理论依赖",
      "ID": "01REL010",
      "source": "01CON008",
      "target": "01DS003"
    },
    {
      "type": "理论依赖",
      "ID": "01REL011",
      "source": "01CON008",
      "target": "01DS004"
    },
    {
      "type": "理论依赖",
      "ID": "01REL012",
      "source": "01CON008",
      "target": "01DS005"
    },
    {
      "type": "理论依赖",
      "ID": "01REL013",
      "source": "01CON009",
      "target": "01CON016"
    },
    {
      "type": "理论依赖",
      "ID": "01REL014",
      "source": "01CON009",
      "target": "01CON017"
    },
    {
      "type": "理论依赖",
      "ID": "01REL015",
      "source": "01CON009",
      "target": "01CON018"
    },
    {
      "type": "理论依赖",
      "ID": "01REL016",
      "source": "01CON009",
      "target": "01CON019"
    },
    {
      "type": "理论依赖",
      "ID": "01REL017",
      "source": "01DS001",
      "target": "01CON020"
    },
    {
      "type": "理论依赖",
      "ID": "01REL018",
      "source": "01DS001",
      "target": "01CON021"
    },
    {
      "type": "理论依赖",
      "ID": "01REL019",
      "source": "01DS003",
      "target": "01CON022"
    },
    {
      "type": "理论依赖",
      "ID": "01REL020",
      "source": "01DS003",
      "target": "01CON023"
    },
    {
      "type": "理论依赖",
      "ID": "01REL021",
      "source": "01DS004",
      "target": "01CON022"
    },
    {
      "type": "理论依赖",
      "ID": "01REL022",
      "source": "01DS004",
      "target": "01CON023"
    },
    {
      "type": "理论依赖",
      "ID": "01REL023",
      "source": "01DS005",
      "target": "01CON022"
    },
    {
      "type": "理论依赖",
      "ID": "01REL024",
      "source": "01DS005",
      "target": "01CON023"
    },
    {
      "type": "继承",
      "ID": "01REL025",
      "source": "01DS004",
      "target": "01DS005"
    },
    {
      "type": "继承",
      "ID": "01REL026",
      "source": "01DS003",
      "target": "01DS004"
    },
    {
      "type": "理论依赖",
      "ID": "01REL027",
      "source": "01CON010",
      "target": "01DS004"
    },
    {
      "type": "理论依赖",
      "ID": "01REL028",
      "source": "01CON010",
      "target": "01DS005"
    },
    {
      "type": "理论依赖",
      "ID": "01REL029",
      "source": "01CON012",
      "target": "01DS001"
    },
    {
      "type": "理论依赖",
      "ID": "01REL030",
      "source": "01CON012",
      "target": "01ALG001"
    },
    {
      "type": "理论依赖",
      "ID": "01REL031",
      "source": "01CON012",
      "target": "01CON011"
    },
    {
      "type": "理论依赖",
      "ID": "01REL032",
      "source": "01CON012",
      "target": "01CON013"
    },
    {
      "type": "理论依赖",
      "ID": "01REL033",
      "source": "01ALG001",
      "target": "01CON014"
    },
    {
      "type": "理论依赖",
      "ID": "01REL034",
      "source": "01ALG001",
      "target": "01CON015"
    },
    {
      "type": "理论依赖",
      "ID": "01REL035",
      "source": "01ALG001",
      "target": "01CON007"
    },
    {
      "type": "理论依赖",
      "ID": "01REL036",
      "source": "01ALG001",
      "target": "01CON024"
    },
    {
      "type": "理论依赖",
      "ID": "01REL037",
      "source": "01ALG002",
      "target": "01CON014"
    },
    {
      "type": "理论依赖",
      "ID": "01REL038",
      "source": "01ALG002",
      "target": "01CON015"
    },
    {
      "type": "理论依赖",
      "ID": "01REL039",
      "source": "01ALG003",
      "target": "01CON014"
    },
    {
      "type": "理论依赖",
      "ID": "01REL040",
      "source": "01ALG003",
      "target": "01CON015"
    },
    {
      "type": "理论依赖",
      "ID": "01REL041",
      "source": "01ALG004",
      "target": "01CON014"
    },
    {
      "type": "理论依赖",
      "ID": "01REL042",
      "source": "01ALG004",
      "target": "01CON015"
    },
    {
      "type": "理论依赖",
      "ID": "01REL043",
      "source": "01ALG005",
      "target": "01CON014"
    },
    {
      "type": "理论依赖",
      "ID": "01REL044",
      "source": "01ALG005",
      "target": "01CON015"
    }
  ]
}