{
  "entities": [
    {
      "type": "数据结构",
      "ID": "05DS001",
      "name": "树",
      "attributes": {
        "难度": "入门",
        "内容": "一种重要的非线性数据结构。树或者是一棵空树，或者是一棵非空树，非空树有且仅有一个根结点，其余结点被分为m棵互不相交的子树。树的定义是递归的。",
        "存储开销": "未知",
        "核心特性": "树形结构，有且仅有一个根结点，除根结点外每个结点有唯一前驱，可有任意多个后继。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "05DS002",
      "name": "二叉树",
      "attributes": {
        "难度": "入门",
        "内容": "树的度为2的有序树。或者是一棵空树，或者是一棵由一个根结点和两棵互不相交的左子树和右子树所组成的非空树。最简单、最重要的树。",
        "存储开销": "未知",
        "核心特性": "度至多为2，左子树和右子树有严格的次序区分，可以是空树或只有一个结点。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "05DS003",
      "name": "队列",
      "attributes": {
        "难度": "入门",
        "内容": "一种线性数据结构，用于实现按层遍历算法，遵循先进先出（FIFO）原则。",
        "存储开销": "未知",
        "核心特性": "先进先出（FIFO）。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "05DS004",
      "name": "栈",
      "attributes": {
        "难度": "入门",
        "内容": "一种线性数据结构，用于实现二叉树和树的建立算法，遵循后进先出（LIFO）原则。系统栈用于支持递归算法。",
        "存储开销": "未知",
        "核心特性": "后进先出（LIFO）。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "05DS005",
      "name": "数组",
      "attributes": {
        "难度": "入门",
        "内容": "一种顺序存储的数据结构，通过下标访问元素。可用于实现树和二叉树的顺序存储或模拟链接存储。",
        "存储开销": "固定大小，连续存储。",
        "核心特性": "顺序存储，随机访问。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "05DS006",
      "name": "单链表",
      "attributes": {
        "难度": "入门",
        "内容": "一种链接存储的线性数据结构，结点包含数据域和指向下一个结点的指针域。与二叉链表进行类比。",
        "存储开销": "每个结点需要额外存储指针。",
        "核心特性": "链接存储，顺序访问。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "05DS007",
      "name": "顺序队列",
      "attributes": {
        "难度": "入门",
        "内容": "使用数组实现的队列。",
        "存储开销": "固定大小数组，可能存在空间浪费或溢出问题。",
        "核心特性": "FIFO，数组实现。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "05DS008",
      "name": "k叉树",
      "attributes": {
        "难度": "入门",
        "内容": "树的度为k的树，通常称为多元树或多叉树。",
        "存储开销": "未知",
        "核心特性": "树的度至多为k。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "05ALG001",
      "name": "前序遍历",
      "attributes": {
        "难度": "入门",
        "内容": "二叉树遍历方法之一，次序为：访问根结点 -> 前序遍历左子树 -> 前序遍历右子树。也称先根遍历。",
        "时间复杂度": "O(n)",
        "空间复杂度": "O(h)",
        "设计思想": "递归，深度优先。",
        "适用场景": "复制树，打印树结构。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "05ALG002",
      "name": "中序遍历",
      "attributes": {
        "难度": "入门",
        "内容": "二叉树遍历方法之一，次序为：中序遍历左子树 -> 访问根结点 -> 中序遍历右子树。也称中根遍历。",
        "时间复杂度": "O(n)",
        "空间复杂度": "O(h)",
        "设计思想": "递归，深度优先。",
        "适用场景": "对于二叉搜索树，中序遍历得到有序序列。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "05ALG003",
      "name": "后序遍历",
      "attributes": {
        "难度": "入门",
        "内容": "二叉树遍历方法之一，次序为：后序遍历左子树 -> 后序遍历右子树 -> 访问根结点。也称后根遍历。",
        "时间复杂度": "O(n)",
        "空间复杂度": "O(h)",
        "设计思想": "递归，深度优先。",
        "适用场景": "删除树，计算表达式树的值。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "05ALG004",
      "name": "按层遍历",
      "attributes": {
        "难度": "入门",
        "内容": "二叉树和树的遍历方法之一，按照从上到下、同一层从左到右的次序访问各结点。需要使用队列。",
        "时间复杂度": "O(n)",
        "空间复杂度": "O(n)",
        "设计思想": "非递归，广度优先。",
        "适用场景": "查找最短路径，按层输出。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "05ALG005",
      "name": "深度优先遍历",
      "attributes": {
        "难度": "入门",
        "内容": "树的遍历方法之一，先访问根结点，然后从左到右依次深度优先遍历每棵子树。与二叉树的前序遍历、中序遍历、后序遍历思想类似。",
        "时间复杂度": "O(n)",
        "空间复杂度": "O(h)",
        "设计思想": "递归。",
        "适用场景": "查找路径，拓扑排序。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "05ALG006",
      "name": "初始化二叉树",
      "attributes": {
        "难度": "入门",
        "内容": "将二叉树置为一棵空树，即把树根指针置空。",
        "时间复杂度": "O(1)",
        "空间复杂度": "O(1)",
        "设计思想": "直接赋值。",
        "适用场景": "创建新的空二叉树。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "05ALG007",
      "name": "建立二叉树",
      "attributes": {
        "难度": "中等",
        "内容": "根据广义表表示的二叉树字符串建立对应的链接存储结构。需要使用栈辅助解析。",
        "时间复杂度": "O(n)",
        "空间复杂度": "O(h)",
        "设计思想": "栈辅助解析广义表。",
        "适用场景": "从文本表示构建内存中的二叉树结构。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "05ALG008",
      "name": "查找二叉树",
      "attributes": {
        "难度": "入门",
        "内容": "从二叉树中查找指定值的结点。类似前序遍历算法。",
        "时间复杂度": "O(n)",
        "空间复杂度": "O(h)",
        "设计思想": "递归，深度优先搜索。",
        "适用场景": "查找特定结点。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "05ALG009",
      "name": "输出二叉树",
      "attributes": {
        "难度": "入门",
        "内容": "按照广义表形式输出二叉树。可在前序遍历算法基础上修改得到。",
        "时间复杂度": "O(n)",
        "空间复杂度": "O(h)",
        "设计思想": "递归，结构化输出。",
        "适用场景": "打印二叉树的逻辑结构。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "05ALG010",
      "name": "清除二叉树",
      "attributes": {
        "难度": "入门",
        "内容": "清除二叉树中的所有结点，使之变为一棵空树。是一个递归过程，类似于后序递归遍历。",
        "时间复杂度": "O(n)",
        "空间复杂度": "O(h)",
        "设计思想": "递归，先处理子树再处理根。",
        "适用场景": "释放内存空间。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "05ALG011",
      "name": "初始化树",
      "attributes": {
        "难度": "入门",
        "内容": "初始化树，即把树根指针置空。",
        "时间复杂度": "O(1)",
        "空间复杂度": "O(1)",
        "设计思想": "直接赋值。",
        "适用场景": "创建新的空树。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "05ALG012",
      "name": "建立树",
      "attributes": {
        "难度": "中等",
        "内容": "根据广义表字符串建立k叉树的链接存储结构（标准方式）。需要设置两个栈。",
        "时间复杂度": "O(n)",
        "空间复杂度": "O(h)",
        "设计思想": "栈辅助解析广义表。",
        "适用场景": "从文本表示构建内存中的k叉树结构。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "05ALG013",
      "name": "查找树",
      "attributes": {
        "难度": "入门",
        "内容": "从树中查找指定值的结点。类似树的先根遍历算法。",
        "时间复杂度": "O(n)",
        "空间复杂度": "O(h)",
        "设计思想": "递归，深度优先搜索。",
        "适用场景": "查找特定结点。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "05ALG014",
      "name": "输出树",
      "attributes": {
        "难度": "入门",
        "内容": "以广义表形式输出树。类似于树的先根遍历算法。",
        "时间复杂度": "O(n)",
        "空间复杂度": "O(h)",
        "设计思想": "递归，结构化输出。",
        "适用场景": "打印树的逻辑结构。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "05ALG015",
      "name": "清除树",
      "attributes": {
        "难度": "入门",
        "内容": "清除树中的所有结点，使之变为一棵空树。类似于树的后根遍历。",
        "时间复杂度": "O(n)",
        "空间复杂度": "O(h)",
        "设计思想": "递归，先处理子树再处理根。",
        "适用场景": "释放内存空间。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "05ALG016",
      "name": "判空树",
      "attributes": {
        "难度": "入门",
        "内容": "判断一棵树是否为空。检查树根指针是否为空。",
        "时间复杂度": "O(1)",
        "空间复杂度": "O(1)",
        "设计思想": "直接检查。",
        "适用场景": "在其他算法中作为前置条件检查。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "05ALG017",
      "name": "求二叉树深度",
      "attributes": {
        "难度": "入门",
        "内容": "求出一棵二叉树的深度（或高度）。空树深度为0，非空树深度等于左子树和右子树中的最大深度加1。",
        "时间复杂度": "O(n)",
        "空间复杂度": "O(h)",
        "设计思想": "递归。",
        "适用场景": "计算树的属性。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "05ALG018",
      "name": "求树深度",
      "attributes": {
        "难度": "入门",
        "内容": "求出一棵树（k叉树）的深度。空树深度为0，非空树深度等于所有子树的最大深度加1。",
        "时间复杂度": "O(n)",
        "空间复杂度": "O(h)",
        "设计思想": "递归。",
        "适用场景": "计算树的属性。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "05CON001",
      "name": "根结点",
      "attributes": {
        "难度": "入门",
        "内容": "树中唯一没有前驱的结点。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "05CON002",
      "name": "子树",
      "attributes": {
        "难度": "入门",
        "内容": "树中某个结点的后继（孩子）作为根组成的树。m棵互不相交的子树构成树的其余部分。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "05CON003",
      "name": "结点",
      "attributes": {
        "难度": "入门",
        "内容": "树形结构的基本组成单元，包含数据元素和指向相关结点的连接。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "05CON004",
      "name": "前驱",
      "attributes": {
        "难度": "入门",
        "内容": "在树中，指向当前结点的父结点。除根结点外，每个结点有且仅有一个前驱。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "05CON005",
      "name": "后继",
      "attributes": {
        "难度": "入门",
        "内容": "在树中，当前结点的孩子结点。每个结点可以有任意多个后继。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "05CON006",
      "name": "递归",
      "attributes": {
        "难度": "入门",
        "内容": "定义自身或调用自身的过程。树和二叉树的定义是递归的，许多树和二叉树的算法也采用递归实现。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "05CON007",
      "name": "二元组表示法",
      "attributes": {
        "难度": "入门",
        "内容": "用集合K（结点集合）和关系R（前驱-后继对集合）来定义树。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "05CON008",
      "name": "树形表示法",
      "attributes": {
        "难度": "入门",
        "内容": "最常用的树的图形表示方法，通过连线表示结点之间的关系，方向隐含为从上向下或从左向右。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "05CON009",
      "name": "集合图表示法",
      "attributes": {
        "难度": "入门",
        "内容": "树的一种表示方法，每棵树对应一个圆形，圆内包含根结点和子树。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "05CON010",
      "name": "凹入表示法",
      "attributes": {
        "难度": "入门",
        "内容": "树的一种表示方法，通过缩进表示结点层级关系。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "05CON011",
      "name": "广义表表示法",
      "attributes": {
        "难度": "入门",
        "内容": "树的一种文本表示方法，每棵树的根作为由子树构成的表的名字而放在表的前面，子树用圆括号括起来。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "05CON012",
      "name": "结点的度",
      "attributes": {
        "难度": "入门",
        "内容": "每个结点具有的子树数或者说后继结点数。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "05CON013",
      "name": "树的度",
      "attributes": {
        "难度": "入门",
        "内容": "树中所有结点的度的最大值。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "05CON014",
      "name": "叶子结点",
      "attributes": {
        "难度": "入门",
        "内容": "度等于0的结点。也称终端结点。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "05CON015",
      "name": "分支结点",
      "attributes": {
        "难度": "入门",
        "内容": "度大于0的结点。也称非终端结点。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "05CON016",
      "name": "单分支结点",
      "attributes": {
        "难度": "入门",
        "内容": "度为1的分支结点。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "05CON017",
      "name": "双分支结点",
      "attributes": {
        "难度": "入门",
        "内容": "度为2的分支结点。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "05CON018",
      "name": "三分支结点",
      "attributes": {
        "难度": "入门",
        "内容": "度为3的分支结点。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "05CON019",
      "name": "孩子结点",
      "attributes": {
        "难度": "入门",
        "内容": "结点的子树的根，或者说每个结点的后继。也称儿子或子女。具有同一双亲的孩子互称兄弟。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "05CON020",
      "name": "双亲结点",
      "attributes": {
        "难度": "入门",
        "内容": "孩子结点的父结点，或结点的唯一前驱。也称父亲或父母。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "05CON021",
      "name": "兄弟结点",
      "attributes": {
        "难度": "入门",
        "内容": "具有同一双亲的孩子互称兄弟。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "05CON022",
      "name": "子孙",
      "attributes": {
        "难度": "入门",
        "内容": "一个结点的所有子树中的所有结点。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "05CON023",
      "name": "祖先",
      "attributes": {
        "难度": "入门",
        "内容": "从树根结点到达该结点的路径上经过的所有结点。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "05CON024",
      "name": "结点的层数",
      "attributes": {
        "难度": "入门",
        "内容": "结点在树中的层次，从树根开始定义，根结点为第1层。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "05CON025",
      "name": "树的深度",
      "attributes": {
        "难度": "入门",
        "内容": "树中所有结点的最大层数。也称高度。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "05CON026",
      "name": "有序树",
      "attributes": {
        "难度": "入门",
        "内容": "树中各结点的子树是按照一定的次序从左向右安排的树。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "05CON027",
      "name": "无序树",
      "attributes": {
        "难度": "入门",
        "内容": "树中各结点的子树次序无关紧要的树。任何无序树都可以当作任一次序的有序树来处理。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "05CON028",
      "name": "森林",
      "attributes": {
        "难度": "入门",
        "内容": "m棵互不相交的树的集合。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "05CON029",
      "name": "满k叉树",
      "attributes": {
        "难度": "入门",
        "内容": "深度为h的k叉树，结点数等于(k^h-1)/(k-1)。每一层都达到最多结点数。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "05CON030",
      "name": "满二叉树",
      "attributes": {
        "难度": "入门",
        "内容": "深度为h，结点数为2^h-1的二叉树。树中的每一层都满。是完全二叉树的特例。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "05CON031",
      "name": "完全二叉树",
      "attributes": {
        "难度": "入门",
        "内容": "一棵二叉树，除最后一层外，若其余层都是满的，并且最后一层或者是满的，或者是在右边缺少连续若干个结点。结点按层从左到右编号。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "05CON032",
      "name": "理想平衡树",
      "attributes": {
        "难度": "入门",
        "内容": "一棵二叉树，若除最后一层外，其余层都是满的，而最后一层上的结点可以任意分布。包含满二叉树和完全二叉树。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "05CON033",
      "name": "抽象数据类型",
      "attributes": {
        "难度": "入门",
        "内容": "定义数据结构的数据部分和操作部分的规范。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "05CON034",
      "name": "值域",
      "attributes": {
        "难度": "入门",
        "内容": "存储数据元素的结点字段。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "05CON035",
      "name": "左指针域",
      "attributes": {
        "难度": "入门",
        "内容": "在二叉树的链接存储中，指向左孩子结点的指针字段。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "05CON036",
      "name": "右指针域",
      "attributes": {
        "难度": "入门",
        "内容": "在二叉树的链接存储中，指向右孩子结点的指针字段。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "05CON037",
      "name": "双亲指针域",
      "attributes": {
        "难度": "入门",
        "内容": "在链接存储中，指向双亲结点的指针字段。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "05CON038",
      "name": "树根指针",
      "attributes": {
        "难度": "入门",
        "内容": "指向树根结点的指针。也称根指针。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "05CON039",
      "name": "空闲链表",
      "attributes": {
        "难度": "入门",
        "内容": "由空闲结点的右指针域链接而成，用于管理数组模拟链接存储中的空闲空间。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "05CON040",
      "name": "树遍历",
      "attributes": {
        "难度": "入门",
        "内容": "按照一定次序访问树中所有结点，并且每个结点的值仅被访问一次的过程。包括前序、中序、后序和按层等方案。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "05CON041",
      "name": "左孩子",
      "attributes": {
        "难度": "入门",
        "内容": "二叉树中，根结点左子树的根结点。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "05CON042",
      "name": "右孩子",
      "attributes": {
        "难度": "入门",
        "内容": "二叉树中，根结点右子树的根结点。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "05CON043",
      "name": "时间复杂度",
      "attributes": {
        "难度": "入门",
        "内容": "衡量算法执行时间随问题规模增长的变化趋势，通常用大 O 表示法。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "05CON044",
      "name": "空间复杂度",
      "attributes": {
        "难度": "入门",
        "内容": "衡量算法所需额外存储空间随问题规模增长的变化趋势，通常用大 O 表示法。递归算法的空间复杂度主要取决于系统栈的最大深度。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "05CON045",
      "name": "系统栈",
      "attributes": {
        "难度": "入门",
        "内容": "计算机系统用于支持函数调用（特别是递归）的栈，存储局部变量、返回地址等信息。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "05CON046",
      "name": "二叉树的链接存储结构",
      "attributes": {
        "难度": "入门",
        "内容": "通常在每个结点中设置值域、左指针域和右指针域来存储二叉树，也可增加双亲指针域。也称二叉链表。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "05CON047",
      "name": "树的链接存储结构",
      "attributes": {
        "难度": "入门",
        "内容": "树的存储方式，包括标准方式、广义标准方式和二叉树方式。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "05CON048",
      "name": "顺序存储结构",
      "attributes": {
        "难度": "入门",
        "内容": "使用连续的存储单元（如数组）来存储数据结构。对于满树或完全树合适，对于一般树可能浪费空间。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "05CON049",
      "name": "链接存储结构",
      "attributes": {
        "难度": "入门",
        "内容": "使用指针将分散的存储单元连接起来存储数据结构。克服了顺序存储结构的某些缺点。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "05CON050",
      "name": "树的标准链接存储方式",
      "attributes": {
        "难度": "入门",
        "内容": "树的链接存储方法之一，每个结点包含值域和k个指针域，用来分别指向k个孩子结点。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "05CON051",
      "name": "树的广义标准链接存储方式",
      "attributes": {
        "难度": "入门",
        "内容": "在树的标准链接存储方式的每个结点中增加一个指向其双亲结点的指针域。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "05CON052",
      "name": "树的二叉树链接存储方式",
      "attributes": {
        "难度": "入门",
        "内容": "将树转换为对应的二叉树形式，然后再采用二叉链表存储这棵二叉树。通常只适合表示无序树。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    }
  ],
  "relations": [
    {
      "type": "继承",
      "ID": "05REL001",
      "source": "05DS002",
      "target": "05DS001"
    },
    {
      "type": "继承",
      "ID": "05REL002",
      "source": "05DS008",
      "target": "05DS001"
    },
    {
      "type": "继承",
      "ID": "05REL003",
      "source": "05CON030",
      "target": "05CON031"
    },
    {
      "type": "继承",
      "ID": "05REL004",
      "source": "05CON031",
      "target": "05CON032"
    },
    {
      "type": "操作绑定",
      "ID": "05REL005",
      "source": "05ALG001",
      "target": "05DS002"
    },
    {
      "type": "操作绑定",
      "ID": "05REL006",
      "source": "05ALG002",
      "target": "05DS002"
    },
    {
      "type": "操作绑定",
      "ID": "05REL007",
      "source": "05ALG003",
      "target": "05DS002"
    },
    {
      "type": "操作绑定",
      "ID": "05REL008",
      "source": "05ALG004",
      "target": "05DS002"
    },
    {
      "type": "操作绑定",
      "ID": "05REL009",
      "source": "05ALG006",
      "target": "05DS002"
    },
    {
      "type": "操作绑定",
      "ID": "05REL010",
      "source": "05ALG007",
      "target": "05DS002"
    },
    {
      "type": "操作绑定",
      "ID": "05REL011",
      "source": "05ALG008",
      "target": "05DS002"
    },
    {
      "type": "操作绑定",
      "ID": "05REL012",
      "source": "05ALG009",
      "target": "05DS002"
    },
    {
      "type": "操作绑定",
      "ID": "05REL013",
      "source": "05ALG010",
      "target": "05DS002"
    },
    {
      "type": "操作绑定",
      "ID": "05REL014",
      "source": "05ALG017",
      "target": "05DS002"
    },
    {
      "type": "操作绑定",
      "ID": "05REL015",
      "source": "05ALG011",
      "target": "05DS001"
    },
    {
      "type": "操作绑定",
      "ID": "05REL016",
      "source": "05ALG012",
      "target": "05DS008"
    },
    {
      "type": "操作绑定",
      "ID": "05REL017",
      "source": "05ALG013",
      "target": "05DS008"
    },
    {
      "type": "操作绑定",
      "ID": "05REL018",
      "source": "05ALG014",
      "target": "05DS008"
    },
    {
      "type": "操作绑定",
      "ID": "05REL019",
      "source": "05ALG015",
      "target": "05DS001"
    },
    {
      "type": "操作绑定",
      "ID": "05REL020",
      "source": "05ALG016",
      "target": "05DS001"
    },
    {
      "type": "操作绑定",
      "ID": "05REL021",
      "source": "05ALG018",
      "target": "05DS008"
    },
    {
      "type": "操作绑定",
      "ID": "05REL022",
      "source": "05ALG005",
      "target": "05DS001"
    },
    {
      "type": "使用",
      "ID": "05REL023",
      "source": "05ALG004",
      "target": "05DS003"
    },
    {
      "type": "使用",
      "ID": "05REL024",
      "source": "05CON006",
      "target": "05CON045"
    },
    {
      "type": "使用",
      "ID": "05REL025",
      "source": "05ALG007",
      "target": "05DS004"
    },
    {
      "type": "使用",
      "ID": "05REL026",
      "source": "05ALG012",
      "target": "05DS004"
    },
    {
      "type": "使用",
      "ID": "05REL027",
      "source": "05CON048",
      "target": "05DS005"
    },
    {
      "type": "使用",
      "ID": "05REL028",
      "source": "05CON052",
      "target": "05CON046"
    },
    {
      "type": "使用",
      "ID": "05REL029",
      "source": "05DS007",
      "target": "05DS005"
    },
    {
      "type": "理论依赖",
      "ID": "05REL030",
      "source": "05DS001",
      "target": "05CON006"
    },
    {
      "type": "理论依赖",
      "ID": "05REL031",
      "source": "05DS002",
      "target": "05CON006"
    },
    {
      "type": "理论依赖",
      "ID": "05REL032",
      "source": "05ALG001",
      "target": "05CON006"
    },
    {
      "type": "理论依赖",
      "ID": "05REL033",
      "source": "05ALG002",
      "target": "05CON006"
    },
    {
      "type": "理论依赖",
      "ID": "05REL034",
      "source": "05ALG003",
      "target": "05CON006"
    },
    {
      "type": "理论依赖",
      "ID": "05REL035",
      "source": "05ALG008",
      "target": "05CON006"
    },
    {
      "type": "理论依赖",
      "ID": "05REL036",
      "source": "05ALG009",
      "target": "05CON006"
    },
    {
      "type": "理论依赖",
      "ID": "05REL037",
      "source": "05ALG010",
      "target": "05CON006"
    },
    {
      "type": "理论依赖",
      "ID": "05REL038",
      "source": "05ALG017",
      "target": "05CON006"
    },
    {
      "type": "理论依赖",
      "ID": "05REL039",
      "source": "05ALG013",
      "target": "05CON006"
    },
    {
      "type": "理论依赖",
      "ID": "05REL040",
      "source": "05ALG014",
      "target": "05CON006"
    },
    {
      "type": "理论依赖",
      "ID": "05REL041",
      "source": "05ALG015",
      "target": "05CON006"
    },
    {
      "type": "理论依赖",
      "ID": "05REL042",
      "source": "05ALG018",
      "target": "05CON006"
    },
    {
      "type": "理论依赖",
      "ID": "05REL043",
      "source": "05ALG005",
      "target": "05CON006"
    },
    {
      "type": "理论依赖",
      "ID": "05REL044",
      "source": "05CON046",
      "target": "05CON003"
    },
    {
      "type": "理论依赖",
      "ID": "05REL045",
      "source": "05CON047",
      "target": "05CON003"
    },
    {
      "type": "理论依赖",
      "ID": "05REL046",
      "source": "05CON048",
      "target": "05CON003"
    },
    {
      "type": "理论依赖",
      "ID": "05REL047",
      "source": "05CON033",
      "target": "05DS001"
    },
    {
      "type": "理论依赖",
      "ID": "05REL048",
      "source": "05CON033",
      "target": "05DS002"
    },
    {
      "type": "理论依赖",
      "ID": "05REL049",
      "source": "05CON040",
      "target": "05DS001"
    },
    {
      "type": "理论依赖",
      "ID": "05REL050",
      "source": "05CON040",
      "target": "05DS002"
    },
    {
      "type": "理论依赖",
      "ID": "05REL051",
      "source": "05ALG001",
      "target": "05CON040"
    },
    {
      "type": "理论依赖",
      "ID": "05REL052",
      "source": "05ALG002",
      "target": "05CON040"
    },
    {
      "type": "理论依赖",
      "ID": "05REL053",
      "source": "05ALG003",
      "target": "05CON040"
    },
    {
      "type": "理论依赖",
      "ID": "05REL054",
      "source": "05ALG004",
      "target": "05CON040"
    },
    {
      "type": "理论依赖",
      "ID": "05REL055",
      "source": "05ALG005",
      "target": "05CON040"
    },
    {
      "type": "理论依赖",
      "ID": "05REL056",
      "source": "05CON029",
      "target": "05DS008"
    },
    {
      "type": "理论依赖",
      "ID": "05REL057",
      "source": "05CON030",
      "target": "05DS002"
    },
    {
      "type": "理论依赖",
      "ID": "05REL058",
      "source": "05CON031",
      "target": "05DS002"
    },
    {
      "type": "理论依赖",
      "ID": "05REL059",
      "source": "05CON032",
      "target": "05DS002"
    },
    {
      "type": "理论依赖",
      "ID": "05REL060",
      "source": "05CON025",
      "target": "05CON024"
    },
    {
      "type": "理论依赖",
      "ID": "05REL061",
      "source": "05CON012",
      "target": "05CON019"
    },
    {
      "type": "理论依赖",
      "ID": "05REL062",
      "source": "05CON014",
      "target": "05CON012"
    },
    {
      "type": "理论依赖",
      "ID": "05REL063",
      "source": "05CON015",
      "target": "05CON012"
    },
    {
      "type": "理论依赖",
      "ID": "05REL064",
      "source": "05CON026",
      "target": "05CON002"
    },
    {
      "type": "理论依赖",
      "ID": "05REL065",
      "source": "05CON027",
      "target": "05CON002"
    },
    {
      "type": "理论依赖",
      "ID": "05REL066",
      "source": "05CON028",
      "target": "05DS001"
    },
    {
      "type": "理论依赖",
      "ID": "05REL067",
      "source": "05CON041",
      "target": "05CON019"
    },
    {
      "type": "理论依赖",
      "ID": "05REL068",
      "source": "05CON042",
      "target": "05CON019"
    },
    {
      "type": "理论依赖",
      "ID": "05REL069",
      "source": "05CON020",
      "target": "05CON004"
    },
    {
      "type": "理论依赖",
      "ID": "05REL070",
      "source": "05CON019",
      "target": "05CON005"
    },
    {
      "type": "理论依赖",
      "ID": "05REL071",
      "source": "05CON046",
      "target": "05CON035"
    },
    {
      "type": "理论依赖",
      "ID": "05REL072",
      "source": "05CON046",
      "target": "05CON036"
    },
    {
      "type": "理论依赖",
      "ID": "05REL073",
      "source": "05CON046",
      "target": "05CON037"
    },
    {
      "type": "理论依赖",
      "ID": "05REL074",
      "source": "05CON047",
      "target": "05CON050"
    },
    {
      "type": "理论依赖",
      "ID": "05REL075",
      "source": "05CON047",
      "target": "05CON051"
    },
    {
      "type": "理论依赖",
      "ID": "05REL076",
      "source": "05CON047",
      "target": "05CON052"
    },
    {
      "type": "理论依赖",
      "ID": "05REL077",
      "source": "05CON050",
      "target": "05CON034"
    },
    {
      "type": "理论依赖",
      "ID": "05REL078",
      "source": "05CON051",
      "target": "05CON034"
    },
    {
      "type": "理论依赖",
      "ID": "05REL079",
      "source": "05CON051",
      "target": "05CON037"
    },
    {
      "type": "理论依赖",
      "ID": "05REL080",
      "source": "05CON052",
      "target": "05CON046"
    },
    {
      "type": "理论依赖",
      "ID": "05REL081",
      "source": "05ALG004",
      "target": "05DS003"
    },
    {
      "type": "理论依赖",
      "ID": "05REL082",
      "source": "05ALG007",
      "target": "05DS004"
    },
    {
      "type": "理论依赖",
      "ID": "05REL083",
      "source": "05ALG012",
      "target": "05DS004"
    },
    {
      "type": "理论依赖",
      "ID": "05REL084",
      "source": "05CON048",
      "target": "05DS005"
    },
    {
      "type": "理论依赖",
      "ID": "05REL085",
      "source": "05DS007",
      "target": "05DS005"
    }
  ]
}