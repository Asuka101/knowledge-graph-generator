{
  "entities": [
    {
      "type": "数据结构",
      "ID": "03DS001",
      "name": "集合",
      "attributes": {
        "难度": "入门",
        "内容": "由具有相同属性的数据元素组合而成的数据结构，数据元素之间没有任何前驱和后继关系。集合中元素不重复且无序。支持初始化、清空、求长度、判空、判断元素归属、插入、删除、并集、交集、差集等操作。",
        "存储开销": "顺序存储（数组）通常为O(MaxSize)，链式存储（链表）为O(n)，n为元素个数。",
        "核心特性": "无序性, 唯一性",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "03DS002",
      "name": "稀疏矩阵",
      "attributes": {
        "难度": "中等",
        "内容": "矩阵中非零元素的个数远小于零元素个数的特殊矩阵。为了节省存储空间，通常只存储非零元素及其位置（行号、列号）。",
        "存储开销": "依赖于存储方式，如三元组顺序表O(t)，三元组链表O(t)，行指针向量O(m+t)，十字链表O(m+n+t)，其中t为非零元个数，m为行数，n为列数。",
        "核心特性": "稀疏性, 空间优化",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "03DS003",
      "name": "广义表",
      "attributes": {
        "难度": "中等",
        "内容": "n(n>=0)个元素的一个有限序列，元素可以是原子（单元素）或子表（本身也是广义表）。是线性表的推广，具有递归定义。",
        "存储开销": "通常采用链式存储，空间复杂度与结点总数（原子+子表）成正比。",
        "核心特性": "递归结构, 异质元素（原子或列表）",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "03CON001",
      "name": "抽象数据类型",
      "attributes": {
        "难度": "入门",
        "内容": "定义了一个数据模型以及在该模型上的一组操作，不涉及具体实现细节。它强调数据的使用方式（操作）而非存储方式。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "03CON002",
      "name": "顺序存储结构",
      "attributes": {
        "难度": "入门",
        "内容": "将逻辑上相邻的数据元素存储在物理位置也相邻的存储单元中的存储方式。通常使用数组实现。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "03CON003",
      "name": "链接存储结构",
      "attributes": {
        "难度": "入门",
        "内容": "数据元素的存储位置不要求连续，通过指针将逻辑上相邻的元素链接起来的存储方式。如链表。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "03DS004",
      "name": "数组",
      "attributes": {
        "难度": "入门",
        "内容": "一种线性数据结构，用于存储固定大小的相同类型元素的集合。元素通过索引访问，物理存储通常是连续的。",
        "存储开销": "O(N)，N为数组大小。",
        "核心特性": "定长, 可索引, 连续存储",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "03DS005",
      "name": "单链表",
      "attributes": {
        "难度": "入门",
        "内容": "一种线性数据结构，由一系列结点组成，每个结点包含数据域和指向下一个结点的指针域。结点在内存中可以非连续存储。",
        "存储开销": "O(n)，n为结点数。",
        "核心特性": "动态大小, 非连续存储, 顺序访问",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "03DS006",
      "name": "三元组线性表",
      "attributes": {
        "难度": "入门",
        "内容": "用于表示稀疏矩阵的一种线性结构，表中每个元素是一个三元组(行号, 列号, 值)，代表矩阵中的一个非零元素。可以采用顺序或链式存储。",
        "存储开销": "O(t)，t为非零元素个数。",
        "核心特性": "紧凑存储稀疏数据",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "03DS007",
      "name": "行指针向量",
      "attributes": {
        "难度": "中等",
        "内容": "在稀疏矩阵的某种链式存储中使用的辅助结构，是一个数组（向量），其第i个元素存储指向矩阵第i行第一个非零元素结点的指针。",
        "存储开销": "O(m)，m为矩阵行数。",
        "核心特性": "辅助索引",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "03CON007",
      "name": "十字链接存储",
      "attributes": {
        "难度": "中等",
        "内容": "稀疏矩阵的一种链式存储方法。每个非零元素结点同时处于所在行的链表和所在列的链表中，结点包含指向同行下一个结点和同列下一个结点的指针。需要行、列两个指针向量。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "03CON004",
      "name": "递归",
      "attributes": {
        "难度": "中等",
        "内容": "一种解决问题的方法，函数或过程直接或间接调用自身。通常包括基本情况（终止条件）和递归步骤（将问题分解为更小的同类问题）。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "03ALG001",
      "name": "简单选择排序",
      "attributes": {
        "难度": "入门",
        "内容": "一种简单的排序算法。在未排序序列中找到最小（大）元素，存放到排序序列的起始位置，然后，再从剩余未排序元素中继续寻找最小（大）元素，然后放到已排序序列的末尾。",
        "时间复杂度": "O(n^2)",
        "空间复杂度": "O(1)",
        "设计思想": "选择",
        "适用场景": "数据量较小的情况。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "03ALG002",
      "name": "集合初始化",
      "attributes": {
        "难度": "入门",
        "内容": "创建一个空集合。对于顺序存储，设置长度为0；对于动态数组，分配初始空间并将长度置0；对于链式存储，将头指针置空。",
        "时间复杂度": "O(1) 或 O(初始大小)（动态分配）",
        "空间复杂度": "O(1) 或 O(初始大小)",
        "设计思想": "初始化",
        "适用场景": "使用集合前的准备。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "03ALG003",
      "name": "清除集合",
      "attributes": {
        "难度": "入门",
        "内容": "删除集合中的所有元素，使其变为空集。对于动态存储，需要释放分配的空间。",
        "时间复杂度": "O(1) 或 O(n)（释放链表结点）",
        "空间复杂度": "O(1)",
        "设计思想": "资源管理",
        "适用场景": "重置集合或释放资源。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "03ALG004",
      "name": "求集合长度",
      "attributes": {
        "难度": "入门",
        "内容": "返回集合中元素的个数。对于顺序存储，返回长度变量的值；对于链式存储，遍历链表计数。",
        "时间复杂度": "O(1)（顺序）或 O(n)（链式）",
        "空间复杂度": "O(1)",
        "设计思想": "计数",
        "适用场景": "获取集合大小信息。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "03ALG005",
      "name": "判断集合是否为空",
      "attributes": {
        "难度": "入门",
        "内容": "检查集合中是否包含元素。通常通过判断长度是否为0或头指针是否为空实现。",
        "时间复杂度": "O(1)",
        "空间复杂度": "O(1)",
        "设计思想": "状态检查",
        "适用场景": "在进行某些操作（如删除）前检查集合状态。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "03ALG006",
      "name": "判断元素是否属于集合",
      "attributes": {
        "难度": "入门",
        "内容": "检查给定元素是否存在于集合中。通常需要遍历集合进行查找。",
        "时间复杂度": "O(n)",
        "空间复杂度": "O(1)",
        "设计思想": "查找",
        "适用场景": "确认元素成员资格。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "03ALG007",
      "name": "输出集合",
      "attributes": {
        "难度": "入门",
        "内容": "将集合中的所有元素按某种方式（如任意顺序或排序后）显示出来。",
        "时间复杂度": "O(n) 或 O(n^2)（若需要排序）",
        "空间复杂度": "O(1) 或 O(n)（若排序需要额外空间）",
        "设计思想": "遍历, 输出",
        "适用场景": "查看集合内容。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "03ALG008",
      "name": "查找集合元素",
      "attributes": {
        "难度": "入门",
        "内容": "在集合中查找特定元素（通常基于关键字），若找到则返回该元素的完整信息。",
        "时间复杂度": "O(n)",
        "空间复杂度": "O(1)",
        "设计思想": "查找",
        "适用场景": "获取集合中特定元素的信息。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "03ALG009",
      "name": "修改集合元素",
      "attributes": {
        "难度": "入门",
        "内容": "在集合中查找特定元素（通常基于关键字），若找到则用新值更新该元素。",
        "时间复杂度": "O(n)",
        "空间复杂度": "O(1)",
        "设计思想": "查找, 更新",
        "适用场景": "更新集合中元素的数据。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "03ALG010",
      "name": "向集合插入元素",
      "attributes": {
        "难度": "入门",
        "内容": "将一个新元素添加到集合中。需要先检查元素是否已存在（保证唯一性），若不存在则添加。顺序存储可能涉及空间扩展。",
        "时间复杂度": "O(n)（查找）+ O(1)或O(n)（插入/扩展）",
        "空间复杂度": "O(1)（平均）",
        "设计思想": "查找, 插入, 唯一性约束",
        "适用场景": "向集合添加新成员。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "03ALG011",
      "name": "从集合删除元素",
      "attributes": {
        "难度": "入门",
        "内容": "从集合中移除指定的元素。需要先查找元素，找到后执行删除操作（顺序存储可能用末尾元素填补，链式存储修改指针）。",
        "时间复杂度": "O(n)",
        "空间复杂度": "O(1)",
        "设计思想": "查找, 删除",
        "适用场景": "从集合移除成员。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "03ALG012",
      "name": "求集合并集",
      "attributes": {
        "难度": "入门",
        "内容": "计算两个集合的并集，结果包含所有出现在至少一个集合中的元素。",
        "时间复杂度": "O(n*m)（基于查找插入）",
        "空间复杂度": "O(n+m)（结果集）",
        "设计思想": "合并, 去重",
        "适用场景": "合并两个集合的信息。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "03ALG013",
      "name": "求集合交集",
      "attributes": {
        "难度": "入门",
        "内容": "计算两个集合的交集，结果包含所有同时出现在两个集合中的元素。",
        "时间复杂度": "O(n*m)（基于查找）",
        "空间复杂度": "O(min(n,m))（结果集）",
        "设计思想": "查找共同元素",
        "适用场景": "找出两个集合的共同部分。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "03ALG014",
      "name": "求集合差集",
      "attributes": {
        "难度": "入门",
        "内容": "计算两个集合S1和S2的差集 (S1 - S2)，结果包含所有属于S1但不属于S2的元素。",
        "时间复杂度": "O(n*m)（基于查找）",
        "空间复杂度": "O(n)（结果集）",
        "设计思想": "查找并排除",
        "适用场景": "找出第一个集合独有的元素。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "03ALG015",
      "name": "稀疏矩阵初始化",
      "attributes": {
        "难度": "入门",
        "内容": "创建一个空的稀疏矩阵表示结构。设置行数、列数、非零元个数为0，初始化存储结构（如清空三元组表或指针向量）。",
        "时间复杂度": "O(1) 或 O(m+n)（初始化指针向量）",
        "空间复杂度": "O(1) 或 O(m+n)",
        "设计思想": "初始化",
        "适用场景": "使用稀疏矩阵前的准备。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "03ALG016",
      "name": "稀疏矩阵转置",
      "attributes": {
        "难度": "中等",
        "内容": "计算稀疏矩阵的转置矩阵。普通方法逐列扫描原矩阵三元组表生成新表，时间复杂度O(n*t)。",
        "时间复杂度": "O(n*t) (普通方法)",
        "空间复杂度": "O(t) (结果矩阵)",
        "设计思想": "行列互换",
        "适用场景": "需要矩阵转置形式时。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "03ALG017",
      "name": "快速稀疏矩阵转置",
      "attributes": {
        "难度": "中等",
        "内容": "一种优化的稀疏矩阵转置算法。通过预先计算每列（转置后的行）的非零元个数和起始位置，一次遍历即可完成转置。",
        "时间复杂度": "O(n+t)",
        "空间复杂度": "O(n+t) (需要辅助数组和结果矩阵)",
        "设计思想": "空间换时间, 预计算",
        "适用场景": "高效计算稀疏矩阵转置。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "03ALG018",
      "name": "稀疏矩阵加法",
      "attributes": {
        "难度": "中等",
        "内容": "计算两个相同维度的稀疏矩阵的和。通常按行（或按三元组顺序）合并两个矩阵的非零元素，对应位置元素相加，若和非零则加入结果矩阵。",
        "时间复杂度": "O(t1+t2) (对于有序链式存储)",
        "空间复杂度": "O(t1+t2) (结果矩阵)",
        "设计思想": "合并, 对应相加",
        "适用场景": "稀疏矩阵相加运算。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "03ALG019",
      "name": "稀疏矩阵乘法",
      "attributes": {
        "难度": "高级",
        "内容": "计算两个稀疏矩阵的乘积。需要满足第一个矩阵的列数等于第二个矩阵的行数。实现通常比密集矩阵乘法复杂，需有效利用稀疏性。",
        "时间复杂度": "依赖具体实现，通常优于密集矩阵的O(m*n*p)",
        "空间复杂度": "依赖结果矩阵的稀疏度",
        "设计思想": "点积, 稀疏优化",
        "适用场景": "大型稀疏矩阵相乘。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "03ALG020",
      "name": "稀疏矩阵输入",
      "attributes": {
        "难度": "入门",
        "内容": "从外部（如键盘）读取数据并构建稀疏矩阵的存储结构。通常按三元组格式输入。",
        "时间复杂度": "O(t) 或 O(t*logt)（若需排序）或 O(t*m)（链表尾插）",
        "空间复杂度": "O(t)",
        "设计思想": "数据读取, 结构构建",
        "适用场景": "从外部源创建稀疏矩阵。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "03ALG021",
      "name": "稀疏矩阵输出",
      "attributes": {
        "难度": "入门",
        "内容": "将稀疏矩阵的内容（通常是三元组线性表）按指定格式输出。",
        "时间复杂度": "O(t)",
        "空间复杂度": "O(1)",
        "设计思想": "遍历, 格式化输出",
        "适用场景": "展示稀疏矩阵内容。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "03ALG022",
      "name": "求广义表长度",
      "attributes": {
        "难度": "入门",
        "内容": "计算广义表顶层元素的个数。可以通过遍历顶层链表实现，递归或非递归均可。",
        "时间复杂度": "O(n) (n为顶层元素个数)",
        "空间复杂度": "O(1) (非递归) 或 O(n) (递归)",
        "设计思想": "遍历计数",
        "适用场景": "获取广义表顶层大小。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "03ALG023",
      "name": "求广义表深度",
      "attributes": {
        "难度": "中等",
        "内容": "计算广义表中括号嵌套的最大层数。通常使用递归实现，深度等于所有子表最大深度加1，空表或原子表深度为1。",
        "时间复杂度": "O(N) (N为结点总数)",
        "空间复杂度": "O(m) (m为广义表深度，递归栈开销)",
        "设计思想": "递归遍历",
        "适用场景": "分析广义表的嵌套层级。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "03ALG024",
      "name": "建立广义表",
      "attributes": {
        "难度": "中等",
        "内容": "根据输入的字符串表示（如'(a,(b,c))'）构建广义表的链式存储结构。通常使用递归实现。",
        "时间复杂度": "O(L) (L为输入字符串长度或结点数)",
        "空间复杂度": "O(L) (递归栈开销)",
        "设计思想": "递归解析, 结构构建",
        "适用场景": "从字符串表示创建广义表。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "03ALG025",
      "name": "打印广义表",
      "attributes": {
        "难度": "中等",
        "内容": "将广义表的链式存储结构转换回其字符串表示形式并输出。通常使用递归实现。",
        "时间复杂度": "O(N) (N为结点总数)",
        "空间复杂度": "O(m) (m为广义表深度，递归栈开销)",
        "设计思想": "递归遍历, 格式化输出",
        "适用场景": "可视化广义表结构。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "03CON005",
      "name": "矩阵",
      "attributes": {
        "难度": "入门",
        "内容": "一个m行n列的二维数表，包含m*n个元素，每个元素由其行号和列号唯一确定。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "03CON006",
      "name": "三元组",
      "attributes": {
        "难度": "入门",
        "内容": "由三个部分组成的数据单元。在稀疏矩阵中特指(行号, 列号, 值)结构，用于表示一个非零元素。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "03DS009",
      "name": "线性表",
      "attributes": {
        "难度": "入门",
        "内容": "n(n>=0)个数据元素的有限序列。元素之间存在一对一的线性关系。是列表、栈、队列等的基础。",
        "存储开销": "顺序O(MaxSize)，链式O(n)。",
        "核心特性": "线性关系, 有限性, 序列",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "03DS010",
      "name": "动态数组",
      "attributes": {
        "难度": "入门",
        "内容": "一种大小可变的数组。在容量不足时能自动扩展存储空间（通常是重新分配更大空间并复制元素）。",
        "存储开销": "O(n)，n为当前元素个数，但可能预留额外空间。",
        "核心特性": "动态大小, 可索引",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    }
  ],
  "relations": [
    {
      "type": "使用",
      "ID": "03REL001",
      "source": "03DS001",
      "target": "03CON002"
    },
    {
      "type": "使用",
      "ID": "03REL002",
      "source": "03DS001",
      "target": "03CON003"
    },
    {
      "type": "使用",
      "ID": "03REL003",
      "source": "03CON002",
      "target": "03DS004"
    },
    {
      "type": "使用",
      "ID": "03REL004",
      "source": "03CON003",
      "target": "03DS005"
    },
    {
      "type": "变体",
      "ID": "03REL005",
      "source": "03DS010",
      "target": "03DS004"
    },
    {
      "type": "使用",
      "ID": "03REL006",
      "source": "03DS001",
      "target": "03DS010"
    },
    {
      "type": "使用",
      "ID": "03REL007",
      "source": "03DS001",
      "target": "03DS005"
    },
    {
      "type": "操作绑定",
      "ID": "03REL008",
      "source": "03ALG002",
      "target": "03DS001"
    },
    {
      "type": "操作绑定",
      "ID": "03REL009",
      "source": "03ALG003",
      "target": "03DS001"
    },
    {
      "type": "操作绑定",
      "ID": "03REL010",
      "source": "03ALG004",
      "target": "03DS001"
    },
    {
      "type": "操作绑定",
      "ID": "03REL011",
      "source": "03ALG005",
      "target": "03DS001"
    },
    {
      "type": "操作绑定",
      "ID": "03REL012",
      "source": "03ALG006",
      "target": "03DS001"
    },
    {
      "type": "操作绑定",
      "ID": "03REL013",
      "source": "03ALG007",
      "target": "03DS001"
    },
    {
      "type": "操作绑定",
      "ID": "03REL014",
      "source": "03ALG008",
      "target": "03DS001"
    },
    {
      "type": "操作绑定",
      "ID": "03REL015",
      "source": "03ALG009",
      "target": "03DS001"
    },
    {
      "type": "操作绑定",
      "ID": "03REL016",
      "source": "03ALG010",
      "target": "03DS001"
    },
    {
      "type": "操作绑定",
      "ID": "03REL017",
      "source": "03ALG011",
      "target": "03DS001"
    },
    {
      "type": "操作绑定",
      "ID": "03REL018",
      "source": "03ALG012",
      "target": "03DS001"
    },
    {
      "type": "操作绑定",
      "ID": "03REL019",
      "source": "03ALG013",
      "target": "03DS001"
    },
    {
      "type": "操作绑定",
      "ID": "03REL020",
      "source": "03ALG014",
      "target": "03DS001"
    },
    {
      "type": "使用",
      "ID": "03REL021",
      "source": "03ALG007",
      "target": "03ALG001"
    },
    {
      "type": "继承",
      "ID": "03REL022",
      "source": "03DS002",
      "target": "03CON005"
    },
    {
      "type": "使用",
      "ID": "03REL023",
      "source": "03DS002",
      "target": "03DS006"
    },
    {
      "type": "理论依赖",
      "ID": "03REL024",
      "source": "03DS006",
      "target": "03CON006"
    },
    {
      "type": "使用",
      "ID": "03REL025",
      "source": "03DS006",
      "target": "03CON002"
    },
    {
      "type": "使用",
      "ID": "03REL026",
      "source": "03DS006",
      "target": "03CON003"
    },
    {
      "type": "使用",
      "ID": "03REL027",
      "source": "03DS002",
      "target": "03DS007"
    },
    {
      "type": "使用",
      "ID": "03REL028",
      "source": "03DS002",
      "target": "03CON007"
    },
    {
      "type": "操作绑定",
      "ID": "03REL029",
      "source": "03ALG015",
      "target": "03DS002"
    },
    {
      "type": "操作绑定",
      "ID": "03REL030",
      "source": "03ALG016",
      "target": "03DS002"
    },
    {
      "type": "操作绑定",
      "ID": "03REL031",
      "source": "03ALG017",
      "target": "03DS002"
    },
    {
      "type": "操作绑定",
      "ID": "03REL032",
      "source": "03ALG018",
      "target": "03DS002"
    },
    {
      "type": "操作绑定",
      "ID": "03REL033",
      "source": "03ALG019",
      "target": "03DS002"
    },
    {
      "type": "操作绑定",
      "ID": "03REL034",
      "source": "03ALG020",
      "target": "03DS002"
    },
    {
      "type": "操作绑定",
      "ID": "03REL035",
      "source": "03ALG021",
      "target": "03DS002"
    },
    {
      "type": "优化",
      "ID": "03REL036",
      "source": "03ALG017",
      "target": "03ALG016"
    },
    {
      "type": "变体",
      "ID": "03REL037",
      "source": "03DS003",
      "target": "03DS009"
    },
    {
      "type": "使用",
      "ID": "03REL038",
      "source": "03DS003",
      "target": "03CON003"
    },
    {
      "type": "理论依赖",
      "ID": "03REL039",
      "source": "03DS003",
      "target": "03CON004"
    },
    {
      "type": "操作绑定",
      "ID": "03REL040",
      "source": "03ALG022",
      "target": "03DS003"
    },
    {
      "type": "操作绑定",
      "ID": "03REL041",
      "source": "03ALG023",
      "target": "03DS003"
    },
    {
      "type": "操作绑定",
      "ID": "03REL042",
      "source": "03ALG024",
      "target": "03DS003"
    },
    {
      "type": "操作绑定",
      "ID": "03REL043",
      "source": "03ALG025",
      "target": "03DS003"
    },
    {
      "type": "使用",
      "ID": "03REL044",
      "source": "03ALG022",
      "target": "03CON004"
    },
    {
      "type": "使用",
      "ID": "03REL045",
      "source": "03ALG023",
      "target": "03CON004"
    },
    {
      "type": "使用",
      "ID": "03REL046",
      "source": "03ALG024",
      "target": "03CON004"
    },
    {
      "type": "使用",
      "ID": "03REL047",
      "source": "03ALG025",
      "target": "03CON004"
    },
    {
      "type": "理论依赖",
      "ID": "03REL048",
      "source": "03DS001",
      "target": "03CON001"
    },
    {
      "type": "理论依赖",
      "ID": "03REL049",
      "source": "03DS002",
      "target": "03CON001"
    }
  ]
}