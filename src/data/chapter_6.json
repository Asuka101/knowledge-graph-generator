{
  "entities": [
    {
      "type": "数据结构",
      "ID": "06DS001",
      "name": "二叉搜索树",
      "attributes": {
        "难度": "中等",
        "内容": "定义：或空树，或非空且左子树所有结点关键字小于根结点，右子树所有结点关键字大于等于根结点，左右子树本身也是二叉搜索树。特性：中序遍历得到有序序列。适用场景：需要高效查找、插入和删除有序数据的场景。",
        "存储开销": "取决于树的形态，最坏O(n)，平均O(logn)",
        "核心特性": "有序性，可索引性（通过关键字比较）",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "06DS002",
      "name": "堆",
      "attributes": {
        "难度": "中等",
        "内容": "定义：一种完全二叉树，分为小根堆（父节点值小于等于子节点值）和大根堆（父节点值大于等于子节点值）。特性：堆顶元素是最小值（小根堆）或最大值（大根堆）。适用场景：优先级队列、堆排序。",
        "存储开销": "O(n)（顺序存储）",
        "核心特性": "完全二叉树结构，局部有序（父子关系）",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "06DS003",
      "name": "哈夫曼树",
      "attributes": {
        "难度": "中等",
        "内容": "定义：又称最优二叉树，n个带权叶子结点构成的所有二叉树中，带权路径长度（WPL）最小的二叉树。特性：只有双支结点和叶子结点，权值越大的结点离树根越近。适用场景：哈夫曼编码。",
        "存储开销": "O(n)",
        "核心特性": "WPL最小",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "06DS004",
      "name": "线索二叉树",
      "attributes": {
        "难度": "高级",
        "内容": "定义：在二叉树的空指针域存放该结点在某种遍历次序下的前驱或后继结点指针（线索）。特性：便于非递归遍历，节省系统栈空间。适用场景：需要高效非递归遍历的二叉树。",
        "存储开销": "O(n) + O(n) (线索标志域)",
        "核心特性": "空指针域利用，线索",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "06DS005",
      "name": "平衡二叉树",
      "attributes": {
        "难度": "高级",
        "内容": "定义：又称平衡树或AVL树，一种二叉搜索树，其中每个结点的左、右子树高度差（平衡因子）的绝对值至多为1。特性：查找、插入、删除的时间复杂度稳定在O(logn)。适用场景：需要稳定高效查找的动态数据集。",
        "存储开销": "O(n)",
        "核心特性": "自平衡，高度限制",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "06DS006",
      "name": "完全二叉树",
      "attributes": {
        "难度": "入门",
        "内容": "定义：深度为k，有n个结点的二叉树，当且仅当其每个结点都与深度为k的满二叉树中从上到下、从左到右编号为1至n的结点一一对应。特性：适合顺序存储。适用场景：堆。",
        "存储开销": "O(n)",
        "核心特性": "紧凑结构",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "06DS007",
      "name": "单支树",
      "attributes": {
        "难度": "入门",
        "内容": "定义：树中每个结点至多有一个孩子。特性：退化的二叉树，高度等于结点数。适用场景：无（通常作为最坏情况示例）。",
        "存储开销": "O(n)",
        "核心特性": "线性结构",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "06DS008",
      "name": "理想平衡树",
      "attributes": {
        "难度": "中等",
        "内容": "定义：一种理论上的二叉树，左右子树结点数尽可能相等，高度最小。特性：高度为O(logn)。适用场景：理论分析和比较。",
        "存储开销": "O(n)",
        "核心特性": "最小高度",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "06DS009",
      "name": "二叉树",
      "attributes": {
        "难度": "入门",
        "内容": "定义：每个结点至多有两个子树（左子树和右子树），子树有左右之分。特性：递归定义。适用场景：各种树结构的基石。",
        "存储开销": "O(n)",
        "核心特性": "树结构，分支限制",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "06DS010",
      "name": "线性表",
      "attributes": {
        "难度": "入门",
        "内容": "定义：由零个或多个数据元素组成的有限序列。特性：元素之间存在一对一的线性关系。适用场景：序列数据的存储和处理。",
        "存储开销": "O(n)",
        "核心特性": "线性顺序",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "06DS011",
      "name": "集合",
      "attributes": {
        "难度": "入门",
        "内容": "定义：具有某种特定性质的、确定的、无序对象的总体。特性：元素无序，不重复。适用场景：数学概念，数据去重。",
        "存储开销": "取决于实现方式",
        "核心特性": "无序，唯一性",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "06DS012",
      "name": "单链表",
      "attributes": {
        "难度": "入门",
        "内容": "定义：通过指针将结点链接起来的线性表，每个结点只有一个后继结点。特性：插入和删除操作较高效。适用场景：动态列表。",
        "存储开销": "O(n)",
        "核心特性": "链式存储",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "06DS013",
      "name": "优先级队列",
      "attributes": {
        "难度": "中等",
        "内容": "定义：一种抽象数据类型，其中每个元素都带有优先级，具有最高优先级的元素先被取出。特性：高效获取和移除最高优先级元素。适用场景：任务调度、事件模拟。",
        "存储开销": "取决于实现方式，通常O(n)（使用堆）",
        "核心特性": "优先级",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "06DS014",
      "name": "森林",
      "attributes": {
        "难度": "入门",
        "内容": "定义：m（m>=0）棵互不相交的树的集合。特性：可以与二叉树相互转换。适用场景：表示多个树结构的集合。",
        "存储开销": "O(n)",
        "核心特性": "树的集合",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "06DS015",
      "name": "二叉链表",
      "attributes": {
        "难度": "入门",
        "内容": "定义：二叉树的一种链式存储结构，每个结点包含数据域、左孩子指针域和右孩子指针域。特性：链式存储。适用场景：表示二叉树。",
        "存储开销": "O(n)",
        "核心特性": "链式结构",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "06ALG001",
      "name": "递归查找 (二叉搜索树)",
      "attributes": {
        "难度": "中等",
        "内容": "原理：根据待查找值与当前结点值的比较结果，递归地在左子树或右子树中查找。伪代码：提供。适用场景：在二叉搜索树中查找元素。",
        "时间复杂度": "平均O(logn)，最差O(n)",
        "空间复杂度": "平均O(logn)，最差O(n)",
        "设计思想": "递归，分治",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "06ALG002",
      "name": "非递归查找 (二叉搜索树)",
      "attributes": {
        "难度": "中等",
        "内容": "原理：使用循环迭代，根据待查找值与当前结点值的比较结果，沿着左或右指针向下查找。伪代码：提供。适用场景：在二叉搜索树中查找元素（节省栈空间）。",
        "时间复杂度": "平均O(logn)，最差O(n)",
        "空间复杂度": "O(1)",
        "设计思想": "迭代",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "06ALG003",
      "name": "递归插入 (二叉搜索树)",
      "attributes": {
        "难度": "中等",
        "内容": "原理：递归找到合适的插入位置（空指针处），创建新结点并链接。伪代码：提供。适用场景：向二叉搜索树中插入元素。",
        "时间复杂度": "平均O(logn)，最差O(n)",
        "空间复杂度": "平均O(logn)，最差O(n)",
        "设计思想": "递归",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "06ALG004",
      "name": "非递归插入 (二叉搜索树)",
      "attributes": {
        "难度": "中等",
        "内容": "原理：迭代找到插入位置（空指针处），创建新结点并链接。伪代码：提供。适用场景：向二叉搜索树中插入元素（节省栈空间）。",
        "时间复杂度": "平均O(logn)，最差O(n)",
        "空间复杂度": "O(1)",
        "设计思想": "迭代",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "06ALG005",
      "name": "生成二叉搜索树算法",
      "attributes": {
        "难度": "中等",
        "内容": "原理：依次将数组中的元素插入到空的二叉搜索树中。伪代码：提供。适用场景：从一组数据构建二叉搜索树。",
        "时间复杂度": "平均O(n log n)",
        "空间复杂度": "O(1) (额外空间)",
        "设计思想": "迭代插入",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "06ALG006",
      "name": "删除算法 (二叉搜索树)",
      "attributes": {
        "难度": "高级",
        "内容": "原理：分三种情况处理：删除叶子结点、删除只有单支的结点、删除双支结点（通常用中序前驱或后继替换并删除）。伪代码：部分提供（递归）。适用场景：从二叉搜索树中删除元素。",
        "时间复杂度": "平均O(logn)，最差O(n)",
        "空间复杂度": "平均O(logn)，最差O(n)（递归）；O(1)（非递归）",
        "设计思想": "分情况讨论",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "06ALG007",
      "name": "初始化堆算法",
      "attributes": {
        "难度": "入门",
        "内容": "原理：分配存储空间，设置堆的当前长度为0。伪代码：提供。适用场景：创建空的堆。",
        "时间复杂度": "O(1)",
        "空间复杂度": "O(MaxSize)",
        "设计思想": "初始化",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "06ALG008",
      "name": "清除堆算法",
      "attributes": {
        "难度": "入门",
        "内容": "原理：释放堆占用的存储空间，重置堆的状态为初始空状态。伪代码：提供。适用场景：销毁堆。",
        "时间复杂度": "O(1)",
        "空间复杂度": "O(1)",
        "设计思想": "资源释放",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "06ALG009",
      "name": "判断堆是否为空算法",
      "attributes": {
        "难度": "入门",
        "内容": "原理：检查堆的当前长度是否为0。伪代码：提供。适用场景：检查堆的状态。",
        "时间复杂度": "O(1)",
        "空间复杂度": "O(1)",
        "设计思想": "状态检查",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "06ALG010",
      "name": "向堆中插入元素算法",
      "attributes": {
        "难度": "中等",
        "内容": "原理：将新元素添加到堆的末尾，然后通过比较和交换向上调整，直到满足堆的性质。伪代码：提供。适用场景：向堆中添加元素。",
        "时间复杂度": "O(logn)",
        "空间复杂度": "O(1) (不计空间扩展)",
        "设计思想": "向上堆化",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "06ALG011",
      "name": "从堆中删除堆顶元素算法",
      "attributes": {
        "难度": "中等",
        "内容": "原理：删除堆顶元素，将堆尾元素移动到堆顶，然后通过比较和交换向下调整，直到满足堆的性质。伪代码：提供。适用场景：从堆中移除优先级最高的元素。",
        "时间复杂度": "O(logn)",
        "空间复杂度": "O(1)",
        "设计思想": "向下堆化",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "06ALG012",
      "name": "构造哈夫曼树算法",
      "attributes": {
        "难度": "高级",
        "内容": "原理：重复选择森林中根结点权值最小的两棵树合并，直到只剩一棵树。伪代码：提供。适用场景：根据权值构建哈夫曼树。",
        "时间复杂度": "O(n log n)",
        "空间复杂度": "O(n)",
        "设计思想": "贪心",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "06ALG013",
      "name": "求带权路径长度算法",
      "attributes": {
        "难度": "中等",
        "内容": "原理：递归计算并累加树中所有叶子结点的带权路径长度。伪代码：提供。适用场景：计算树的带权路径长度。",
        "时间复杂度": "O(n)",
        "空间复杂度": "O(树高)",
        "设计思想": "递归遍历",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "06ALG014",
      "name": "哈夫曼编码算法",
      "attributes": {
        "难度": "高级",
        "内容": "原理：根据哈夫曼树，从树根到每个叶子结点的路径（左分支0，右分支1）形成该叶子结点对应字符的编码。伪代码：提供。适用场景：生成哈夫曼编码。",
        "时间复杂度": "O(n * 树高)",
        "空间复杂度": "O(树高)",
        "设计思想": "树遍历",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "06ALG015",
      "name": "中序线索化算法",
      "attributes": {
        "难度": "高级",
        "内容": "原理：在中序遍历二叉树的过程中，将结点的空左指针域指向其前驱结点，空右指针域指向其后继结点。伪代码：提供。适用场景：为二叉树添加中序线索，构建中序线索二叉树。",
        "时间复杂度": "O(n)",
        "空间复杂度": "O(树高)",
        "设计思想": "中序遍历，指针修改",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "06ALG016",
      "name": "插入算法 (带线索标志域的二叉搜索树, 不链接线索)",
      "attributes": {
        "难度": "中等",
        "内容": "原理：执行标准的二叉搜索树插入操作，同时初始化新结点的线索标志域。伪代码：提供。适用场景：构建带线索标志域但尚未线索化的二叉搜索树。",
        "时间复杂度": "平均O(logn)，最差O(n)",
        "空间复杂度": "平均O(logn)，最差O(n)",
        "设计思想": "递归插入",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "06ALG017",
      "name": "插入算法 (带线索的二叉搜索树, 链接线索)",
      "attributes": {
        "难度": "高级",
        "内容": "原理：迭代查找插入位置，创建新结点，将其链接到父结点，并更新父结点和新结点的线索。伪代码：提供。适用场景：向已线索化（或同时线索化）的二叉搜索树插入元素。",
        "时间复杂度": "平均O(logn)，最差O(n)",
        "空间复杂度": "O(1)",
        "设计思想": "迭代插入，线索管理",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "06ALG018",
      "name": "建立算法 (带线索标志域的二叉搜索树, 不链接线索)",
      "attributes": {
        "难度": "中等",
        "内容": "原理：依次将数组中的元素插入到空的带线索标志域的二叉搜索树中。伪代码：提供。适用场景：从一组数据构建带线索标志域的二叉搜索树。",
        "时间复杂度": "平均O(n log n)",
        "空间复杂度": "O(1) (额外空间)",
        "设计思想": "迭代插入",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "06ALG019",
      "name": "建立算法 (带线索的二叉搜索树, 链接线索)",
      "attributes": {
        "难度": "高级",
        "内容": "原理：依次将数组中的元素插入到空的线索二叉搜索树中，并在插入时维护线索。伪代码：提供。适用场景：从一组数据构建线索二叉搜索树。",
        "时间复杂度": "平均O(n log n)",
        "空间复杂度": "O(1) (额外空间)",
        "设计思想": "迭代插入，线索管理",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "06ALG020",
      "name": "求中序后继结点算法",
      "attributes": {
        "难度": "中等",
        "内容": "原理：根据右线索标志判断，若为真则直接指向后继；若为假，则后继是右子树中最左下（中序第一个）的结点。伪代码：提供。适用场景：在线索二叉树中查找结点的中序后继。",
        "时间复杂度": "平均O(1)，最差O(树高)",
        "空间复杂度": "O(1)",
        "设计思想": "线索利用",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "06ALG021",
      "name": "中序线索遍历算法",
      "attributes": {
        "难度": "中等",
        "内容": "原理：找到中序序列的第一个结点，然后重复使用求中序后继结点的算法依次访问后续结点。伪代码：提供。适用场景：非递归遍历线索二叉树。",
        "时间复杂度": "O(n)",
        "空间复杂度": "O(1)",
        "设计思想": "迭代遍历，线索利用",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "06ALG022",
      "name": "LL型调整操作",
      "attributes": {
        "难度": "高级",
        "内容": "原理：当在A结点的左孩子的左子树上插入引起A的平衡因子变为2时，进行单次右旋调整。伪代码：描述旋转过程。适用场景：平衡特定失衡类型的AVL子树。",
        "时间复杂度": "O(1)",
        "空间复杂度": "O(1)",
        "设计思想": "局部旋转",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "06ALG023",
      "name": "RR型调整操作",
      "attributes": {
        "难度": "高级",
        "内容": "原理：当在A结点的右孩子的右子树上插入引起A的平衡因子变为-2时，进行单次左旋调整。伪代码：描述旋转过程。适用场景：平衡特定失衡类型的AVL子树。",
        "时间复杂度": "O(1)",
        "空间复杂度": "O(1)",
        "设计思想": "局部旋转",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "06ALG024",
      "name": "LR型调整操作",
      "attributes": {
        "难度": "高级",
        "内容": "原理：当在A结点的左孩子的右子树上插入引起A的平衡因子变为2时，进行先左旋后右旋的组合调整。伪代码：描述旋转过程。适用场景：平衡特定失衡类型的AVL子树。",
        "时间复杂度": "O(1)",
        "空间复杂度": "O(1)",
        "设计思想": "组合旋转",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "06ALG025",
      "name": "RL型调整操作",
      "attributes": {
        "难度": "高级",
        "内容": "原理：当在A结点的右孩子的左子树上插入引起A的平衡因子变为-2时，进行先右旋后左旋的组合调整。伪代码：描述旋转过程。适用场景：平衡特定失衡类型的AVL子树。",
        "时间复杂度": "O(1)",
        "空间复杂度": "O(1)",
        "设计思想": "组合旋转",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "06ALG026",
      "name": "插入算法 (平衡二叉树)",
      "attributes": {
        "难度": "高级",
        "内容": "原理：执行二叉搜索树的插入操作，然后向上回溯，检查平衡因子，若出现不平衡则进行相应的平衡调整（LL, RR, LR, RL）。伪代码：未提供完整。适用场景：向平衡二叉树插入元素。",
        "时间复杂度": "O(logn)",
        "空间复杂度": "O(logn) (递归)",
        "设计思想": "插入+自平衡",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "06ALG027",
      "name": "删除算法 (平衡二叉树)",
      "attributes": {
        "难度": "高级",
        "内容": "原理：执行二叉搜索树的删除操作，然后向上回溯，检查平衡因子，若出现不平衡则进行相应的平衡调整，可能需要多次向上调整。伪代码：未提供。适用场景：从平衡二叉树删除元素。",
        "时间复杂度": "O(logn)",
        "空间复杂度": "O(logn) (递归)",
        "设计思想": "删除+自平衡",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "06CON001",
      "name": "特殊二叉树",
      "attributes": {
        "难度": "入门",
        "内容": "定义：具有特定性质和用途的二叉树的统称。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "06CON002",
      "name": "关键字",
      "attributes": {
        "难度": "入门",
        "内容": "定义：用于数据元素之间比较或排序的数值或字段。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "06CON003",
      "name": "递归",
      "attributes": {
        "难度": "中等",
        "内容": "定义：算法或函数直接或间接调用自身来解决问题的方法。示例说明：二叉搜索树的递归查找和插入算法。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "06CON004",
      "name": "非递归",
      "attributes": {
        "难度": "中等",
        "内容": "定义：使用循环或迭代来解决问题的方法，避免函数自身调用。示例说明：二叉搜索树的非递归查找和插入算法。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "06CON005",
      "name": "时间复杂度",
      "attributes": {
        "难度": "中等",
        "内容": "定义：衡量算法执行时间随问题规模增长的速度。示例说明：通常使用大O表示法。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "06CON006",
      "name": "空间复杂度",
      "attributes": {
        "难度": "中等",
        "内容": "定义：衡量算法执行过程中所需的额外存储空间随问题规模增长的速度。示例说明：通常使用大O表示法，包括递归调用的栈空间。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "06CON007",
      "name": "抽象数据类型",
      "attributes": {
        "难度": "中等",
        "内容": "定义：一组数据以及定义在该组数据上的一组操作的总称，不考虑底层实现细节。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "06CON008",
      "name": "存储结构",
      "attributes": {
        "难度": "入门",
        "内容": "定义：数据及其关系在计算机内存中的组织方式。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "06CON009",
      "name": "顺序存储",
      "attributes": {
        "难度": "入门",
        "内容": "定义：将数据元素存储在地址连续的存储单元中。适用场景：完全二叉树、数组。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "06CON010",
      "name": "链接存储",
      "attributes": {
        "难度": "入门",
        "内容": "定义：通过指针将数据元素分散存储在不连续的存储单元中。适用场景：二叉树、链表。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "06CON011",
      "name": "路径",
      "attributes": {
        "难度": "入门",
        "内容": "定义：树中从一个结点到另一个结点经过的结点序列。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "06CON012",
      "name": "路径长度",
      "attributes": {
        "难度": "入门",
        "内容": "定义：树中从一个结点到另一个结点经过的分支数。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "06CON013",
      "name": "结点的权",
      "attributes": {
        "难度": "入门",
        "内容": "定义：赋给树中结点的实数。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "06CON014",
      "name": "带权路径长度 (WPL)",
      "attributes": {
        "难度": "中等",
        "内容": "定义：树中所有叶子结点的带权路径长度之和。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "06CON015",
      "name": "编码",
      "attributes": {
        "难度": "入门",
        "内容": "定义：将电文中的字符序列转换成二进制的0、1序列的过程。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "06CON016",
      "name": "二进制编码",
      "attributes": {
        "难度": "入门",
        "内容": "定义：使用0和1表示数据的编码方式。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "06CON017",
      "name": "等长编码",
      "attributes": {
        "难度": "入门",
        "内容": "定义：字符集中所有字符的编码长度相同。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "06CON018",
      "name": "不等长编码",
      "attributes": {
        "难度": "入门",
        "内容": "定义：字符集中不同字符的编码长度不同。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "06CON019",
      "name": "无前缀编码",
      "attributes": {
        "难度": "中等",
        "内容": "定义：字符集中任一字符的编码都不是其他字符编码的前缀。特性：保证译码的无二义性。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "06CON020",
      "name": "译码",
      "attributes": {
        "难度": "入门",
        "内容": "定义：将接收到的二进制0、1序列转换成对应的字符序列的过程。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "06CON021",
      "name": "前缀 (编码前缀)",
      "attributes": {
        "难度": "入门",
        "内容": "定义：一个编码是另一个编码的起始部分。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "06CON022",
      "name": "二义性",
      "attributes": {
        "难度": "入门",
        "内容": "定义：在译码过程中无法确定字符边界或对应字符的情况。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "06CON023",
      "name": "线索",
      "attributes": {
        "难度": "中等",
        "内容": "定义：在二叉树中，利用结点的空左或右指针域存放其在某种遍历次序下的前驱或后继结点的指针。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "06CON024",
      "name": "左线索",
      "attributes": {
        "难度": "中等",
        "内容": "定义：存放于空左指针域中，指向该结点在某次遍历次序下的前驱结点的线索。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "06CON025",
      "name": "右线索",
      "attributes": {
        "难度": "中等",
        "内容": "定义：存放于空右指针域中，指向该结点在某次遍历次序下的后继结点的线索。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "06CON026",
      "name": "线索标志域",
      "attributes": {
        "难度": "中等",
        "内容": "定义：结点结构中用于区分对应指针域存放的是孩子指针还是线索的标记域。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "06CON027",
      "name": "平衡因子",
      "attributes": {
        "难度": "中等",
        "内容": "定义：二叉树中结点的左子树高度减去右子树高度的值。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "06CON028",
      "name": "最小不平衡子树",
      "attributes": {
        "难度": "高级",
        "内容": "定义：在平衡二叉树插入或删除结点后，以离插入/删除结点最近的、平衡因子绝对值大于1的结点为根的子树。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "06CON029",
      "name": "中序遍历",
      "attributes": {
        "难度": "入门",
        "内容": "定义：二叉树的一种遍历次序，先遍历左子树，然后访问根结点，最后遍历右子树。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "06CON030",
      "name": "线索化",
      "attributes": {
        "难度": "高级",
        "内容": "定义：按照某种遍历次序（如中序）对二叉树中的所有结点的空指针域加线索的过程。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "06CON031",
      "name": "平衡二叉树的调整",
      "attributes": {
        "难度": "高级",
        "内容": "定义：在向平衡二叉树插入或删除结点后，通过旋转操作（LL, RR, LR, RL）恢复树的平衡性。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "06CON032",
      "name": "查找",
      "attributes": {
        "难度": "入门",
        "内容": "定义：在数据结构中寻找具有特定属性的元素的操作。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "06CON033",
      "name": "更新",
      "attributes": {
        "难度": "入门",
        "内容": "定义：修改数据结构中现有元素的值的操作。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "06CON034",
      "name": "插入",
      "attributes": {
        "难度": "入门",
        "内容": "定义：向数据结构中添加新元素的操作。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "06CON035",
      "name": "删除",
      "attributes": {
        "难度": "入门",
        "内容": "定义：从数据结构中移除指定元素的操作。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    }
  ],
  "relations": [
    {
      "type": "继承",
      "ID": "06REL001",
      "source": "06DS001",
      "target": "06DS009"
    },
    {
      "type": "继承",
      "ID": "06REL002",
      "source": "06DS005",
      "target": "06DS001"
    },
    {
      "type": "变体",
      "ID": "06REL003",
      "source": "06DS004",
      "target": "06DS009"
    },
    {
      "type": "继承",
      "ID": "06REL004",
      "source": "06DS002",
      "target": "06DS006"
    },
    {
      "type": "继承",
      "ID": "06REL005",
      "source": "06DS003",
      "target": "06DS009"
    },
    {
      "type": "操作绑定",
      "ID": "06REL006",
      "source": "06ALG001",
      "target": "06DS001"
    },
    {
      "type": "操作绑定",
      "ID": "06REL007",
      "source": "06ALG002",
      "target": "06DS001"
    },
    {
      "type": "操作绑定",
      "ID": "06REL008",
      "source": "06ALG003",
      "target": "06DS001"
    },
    {
      "type": "操作绑定",
      "ID": "06REL009",
      "source": "06ALG004",
      "target": "06DS001"
    },
    {
      "type": "操作绑定",
      "ID": "06REL010",
      "source": "06ALG005",
      "target": "06DS001"
    },
    {
      "type": "使用",
      "ID": "06REL011",
      "source": "06ALG005",
      "target": "06ALG003"
    },
    {
      "type": "操作绑定",
      "ID": "06REL012",
      "source": "06ALG006",
      "target": "06DS001"
    },
    {
      "type": "操作绑定",
      "ID": "06REL013",
      "source": "06ALG007",
      "target": "06DS002"
    },
    {
      "type": "操作绑定",
      "ID": "06REL014",
      "source": "06ALG008",
      "target": "06DS002"
    },
    {
      "type": "操作绑定",
      "ID": "06REL015",
      "source": "06ALG009",
      "target": "06DS002"
    },
    {
      "type": "操作绑定",
      "ID": "06REL016",
      "source": "06ALG010",
      "target": "06DS002"
    },
    {
      "type": "操作绑定",
      "ID": "06REL017",
      "source": "06ALG011",
      "target": "06DS002"
    },
    {
      "type": "使用",
      "ID": "06REL018",
      "source": "06DS013",
      "target": "06DS002"
    },
    {
      "type": "操作绑定",
      "ID": "06REL019",
      "source": "06ALG012",
      "target": "06DS003"
    },
    {
      "type": "使用",
      "ID": "06REL020",
      "source": "06ALG012",
      "target": "06DS014"
    },
    {
      "type": "操作绑定",
      "ID": "06REL021",
      "source": "06ALG013",
      "target": "06DS003"
    },
    {
      "type": "操作绑定",
      "ID": "06REL022",
      "source": "06ALG014",
      "target": "06DS003"
    },
    {
      "type": "理论依赖",
      "ID": "06REL023",
      "source": "06DS003",
      "target": "06CON014"
    },
    {
      "type": "理论依赖",
      "ID": "06REL024",
      "source": "06DS003",
      "target": "06CON013"
    },
    {
      "type": "理论依赖",
      "ID": "06REL025",
      "source": "06CON015",
      "target": "06CON016"
    },
    {
      "type": "理论依赖",
      "ID": "06REL026",
      "source": "06CON015",
      "target": "06CON017"
    },
    {
      "type": "理论依赖",
      "ID": "06REL027",
      "source": "06CON015",
      "target": "06CON018"
    },
    {
      "type": "理论依赖",
      "ID": "06REL028",
      "source": "06CON018",
      "target": "06CON019"
    },
    {
      "type": "使用",
      "ID": "06REL029",
      "source": "06ALG014",
      "target": "06CON019"
    },
    {
      "type": "操作绑定",
      "ID": "06REL030",
      "source": "06ALG015",
      "target": "06DS009"
    },
    {
      "type": "理论依赖",
      "ID": "06REL031",
      "source": "06ALG015",
      "target": "06CON030"
    },
    {
      "type": "使用",
      "ID": "06REL032",
      "source": "06DS004",
      "target": "06CON023"
    },
    {
      "type": "使用",
      "ID": "06REL033",
      "source": "06DS004",
      "target": "06CON026"
    },
    {
      "type": "使用",
      "ID": "06REL034",
      "source": "06DS004",
      "target": "06DS015"
    },
    {
      "type": "操作绑定",
      "ID": "06REL035",
      "source": "06ALG016",
      "target": "06DS001"
    },
    {
      "type": "操作绑定",
      "ID": "06REL036",
      "source": "06ALG017",
      "target": "06DS004"
    },
    {
      "type": "操作绑定",
      "ID": "06REL037",
      "source": "06ALG018",
      "target": "06DS001"
    },
    {
      "type": "操作绑定",
      "ID": "06REL038",
      "source": "06ALG019",
      "target": "06DS004"
    },
    {
      "type": "操作绑定",
      "ID": "06REL039",
      "source": "06ALG020",
      "target": "06DS004"
    },
    {
      "type": "操作绑定",
      "ID": "06REL040",
      "source": "06ALG021",
      "target": "06DS004"
    },
    {
      "type": "使用",
      "ID": "06REL041",
      "source": "06ALG021",
      "target": "06ALG020"
    },
    {
      "type": "操作绑定",
      "ID": "06REL042",
      "source": "06ALG026",
      "target": "06DS005"
    },
    {
      "type": "使用",
      "ID": "06REL043",
      "source": "06ALG026",
      "target": "06CON031"
    },
    {
      "type": "操作绑定",
      "ID": "06REL044",
      "source": "06ALG027",
      "target": "06DS005"
    },
    {
      "type": "使用",
      "ID": "06REL045",
      "source": "06ALG027",
      "target": "06CON031"
    },
    {
      "type": "理论依赖",
      "ID": "06REL046",
      "source": "06DS005",
      "target": "06CON027"
    },
    {
      "type": "理论依赖",
      "ID": "06REL047",
      "source": "06CON031",
      "target": "06CON028"
    },
    {
      "type": "操作绑定",
      "ID": "06REL048",
      "source": "06ALG022",
      "target": "06DS005"
    },
    {
      "type": "操作绑定",
      "ID": "06REL049",
      "source": "06ALG023",
      "target": "06DS005"
    },
    {
      "type": "操作绑定",
      "ID": "06REL050",
      "source": "06ALG024",
      "target": "06DS005"
    },
    {
      "type": "操作绑定",
      "ID": "06REL051",
      "source": "06ALG025",
      "target": "06DS005"
    },
    {
      "type": "理论依赖",
      "ID": "06REL052",
      "source": "06CON029",
      "target": "06DS009"
    },
    {
      "type": "理论依赖",
      "ID": "06REL053",
      "source": "06CON030",
      "target": "06DS009"
    },
    {
      "type": "理论依赖",
      "ID": "06REL054",
      "source": "06CON031",
      "target": "06DS005"
    },
    {
      "type": "理论依赖",
      "ID": "06REL055",
      "source": "06ALG001",
      "target": "06CON032"
    },
    {
      "type": "理论依赖",
      "ID": "06REL056",
      "source": "06ALG002",
      "target": "06CON032"
    },
    {
      "type": "理论依赖",
      "ID": "06REL057",
      "source": "06ALG003",
      "target": "06CON034"
    },
    {
      "type": "理论依赖",
      "ID": "06REL058",
      "source": "06ALG004",
      "target": "06CON034"
    },
    {
      "type": "理论依赖",
      "ID": "06REL059",
      "source": "06ALG006",
      "target": "06CON035"
    },
    {
      "type": "理论依赖",
      "ID": "06REL060",
      "source": "06ALG010",
      "target": "06CON034"
    },
    {
      "type": "理论依赖",
      "ID": "06REL061",
      "source": "06ALG011",
      "target": "06CON035"
    },
    {
      "type": "理论依赖",
      "ID": "06REL062",
      "source": "06ALG016",
      "target": "06CON034"
    },
    {
      "type": "理论依赖",
      "ID": "06REL063",
      "source": "06ALG017",
      "target": "06CON034"
    },
    {
      "type": "理论依赖",
      "ID": "06REL064",
      "source": "06ALG026",
      "target": "06CON034"
    },
    {
      "type": "理论依赖",
      "ID": "06REL065",
      "source": "06ALG027",
      "target": "06CON035"
    }
  ]
}