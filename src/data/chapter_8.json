{
  "entities": [
    {
      "type": "数据结构",
      "ID": "08DS001",
      "name": "图",
      "attributes": {
        "难度": "中等",
        "内容": "由顶点和边构成的数据结构，用于表示对象之间的关系。在本章中，图的应用涉及最小生成树、最短路径、拓扑序列和关键路径等问题。图可以是无向或有向，带权或无权。",
        "存储开销": "邻接矩阵: O(V^2), 邻接表: O(V+E)",
        "核心特性": "表示顶点间的连接关系、路径、连通性",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "图结构体现了现实世界中广泛存在的网络化、关联化特征，启发学生系统性、全局性地思考问题。"
      }
    },
    {
      "type": "概念",
      "ID": "08CON001",
      "name": "生成树",
      "attributes": {
        "难度": "入门",
        "内容": "连通图G的一个子图G'，包含G的所有顶点，且边集是G边集的子集，使得G'是连通且无回路的树。生成树包含n个顶点和n-1条边，是原图的极小连通子图。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "生成树体现了在满足基本连通性要求下的最简化结构，启发节约成本、优化资源配置的思维。"
      }
    },
    {
      "type": "概念",
      "ID": "08CON002",
      "name": "最小生成树",
      "attributes": {
        "难度": "中等",
        "内容": "在连通网（带权无向连通图）中，所有生成树里权值总和最小的那棵生成树。用于解决如通信网络建设中总造价最低的问题。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "最小生成树问题是优化思想的典型应用，教育学生在满足要求的前提下追求最优解、最高效费比。"
      }
    },
    {
      "type": "数据结构",
      "ID": "08DS002",
      "name": "深度优先生成树",
      "attributes": {
        "难度": "中等",
        "内容": "通过深度优先搜索（DFS）遍历连通图生成的生成树。",
        "存储开销": "取决于图的存储方式",
        "核心特性": "体现DFS遍历顺序",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "08DS003",
      "name": "广度优先生成树",
      "attributes": {
        "难度": "中等",
        "内容": "通过广度优先搜索（BFS）遍历连通图生成的生成树。",
        "存储开销": "取决于图的存储方式",
        "核心特性": "体现BFS遍历顺序",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "08CON003",
      "name": "连通图",
      "attributes": {
        "难度": "入门",
        "内容": "在无向图中，任意两个顶点之间都存在路径的图。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "08CON004",
      "name": "连通网",
      "attributes": {
        "难度": "入门",
        "内容": "带权的无向连通图，边具有权值（通常为正实数）。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "08ALG001",
      "name": "普里姆算法",
      "attributes": {
        "难度": "中等",
        "内容": "求解最小生成树的贪心算法。从一个顶点开始，逐步将权值最小的连接已选顶点和未选顶点的边加入生成树，直到包含所有顶点。",
        "时间复杂度": "O(n^2) (使用邻接矩阵)",
        "空间复杂度": "O(1) (指额外空间，不计图存储)",
        "设计思想": "贪心",
        "适用场景": "求解稠密图的最小生成树",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "体现了逐步最优累积成全局最优的策略。"
      }
    },
    {
      "type": "算法",
      "ID": "08ALG002",
      "name": "克鲁斯卡尔算法",
      "attributes": {
        "难度": "中等",
        "内容": "求解最小生成树的贪心算法。将所有边按权值排序，依次选择权值最小的边，若该边连接的两个顶点不属于同一连通分量（即不形成回路），则加入生成树，直到包含n-1条边。",
        "时间复杂度": "O(n^2) (按文本描述)",
        "空间复杂度": "O(n^2) (按文本描述，用于存储集合信息)",
        "设计思想": "贪心、并查集思想",
        "适用场景": "求解稀疏图的最小生成树",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "展示了从局部最优选择构建全局最优解的过程，结合了排序和集合操作。"
      }
    },
    {
      "type": "概念",
      "ID": "08CON005",
      "name": "最短路径",
      "attributes": {
        "难度": "中等",
        "内容": "在图中，连接两个顶点之间所有路径中，路径长度（无权图）或带权路径长度（带权图）最小的那条路径。用于解决如交通网络中时间最短或费用最省的问题。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "最短路径问题体现了效率优先的原则，在资源有限的情况下寻找最优解决方案。"
      }
    },
    {
      "type": "算法",
      "ID": "08ALG003",
      "name": "狄克斯特拉算法",
      "attributes": {
        "难度": "中等",
        "内容": "求解单源最短路径问题的贪心算法。维护一个已找到最短路径的顶点集合S，每次从未在S中的顶点里选择距离源点最近的顶点加入S，并更新其他顶点到源点的距离。",
        "时间复杂度": "O(n^2) (使用邻接矩阵)",
        "空间复杂度": "O(n) (用于存储距离和路径信息)",
        "设计思想": "贪心、广度优先思想",
        "适用场景": "求解图中一个顶点到其他所有顶点的最短路径（边权非负）",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "体现了按距离递增的顺序逐步确定最优路径的策略。"
      }
    },
    {
      "type": "算法",
      "ID": "08ALG004",
      "name": "弗洛伊德算法",
      "attributes": {
        "难度": "中等",
        "内容": "求解图中每对顶点之间最短路径的动态规划算法。通过考虑允许经过的中间顶点逐步增加，来更新每对顶点间的最短路径长度。",
        "时间复杂度": "O(n^3)",
        "空间复杂度": "O(n^2) (用于存储距离矩阵)",
        "设计思想": "动态规划",
        "适用场景": "求解图中所有顶点对之间的最短路径，可处理负权边（但不能有负权回路）",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "展示了通过增加中间状态逐步求解复杂问题的动态规划思想。"
      }
    },
    {
      "type": "概念",
      "ID": "08CON006",
      "name": "顶点活动网",
      "attributes": {
        "难度": "中等",
        "内容": "一种有向无环图（DAG），其中顶点表示活动（如工程中的子任务），有向边表示活动之间的先后关系（前驱活动必须完成后继活动才能开始）。简称AOV网。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "AOV网是项目管理和流程规划的有效工具，培养学生理解任务依赖和顺序执行的重要性。"
      }
    },
    {
      "type": "概念",
      "ID": "08CON007",
      "name": "拓扑序列",
      "attributes": {
        "难度": "中等",
        "内容": "对有向无环图（特别是AOV网）的顶点进行线性排序，使得对于图中任意一条有向边<u, v>，顶点u在序列中都出现在顶点v之前。一个图的拓扑序列可能不唯一。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "拓扑序列为具有依赖关系的任务提供了一种可行的执行顺序，体现了逻辑推理和计划安排能力。"
      }
    },
    {
      "type": "算法",
      "ID": "08ALG005",
      "name": "拓扑排序",
      "attributes": {
        "难度": "中等",
        "内容": "生成有向无环图（AOV网）拓扑序列的算法。通常通过重复选择并移除入度为0的顶点，并更新其邻接顶点入度的方式进行。",
        "时间复杂度": "O(n+e)",
        "空间复杂度": "O(n) (存储入度或栈)",
        "设计思想": "基于入度的选择、图遍历",
        "适用场景": "任务调度、依赖分析、检测有向图中的环",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "拓扑排序算法是解决依赖问题的基础，培养学生按逻辑顺序解决问题的能力。"
      }
    },
    {
      "type": "概念",
      "ID": "08CON008",
      "name": "边表示活动的网络",
      "attributes": {
        "难度": "中等",
        "内容": "一种有向带权图，其中边表示活动，边权表示活动持续时间，顶点表示事件（活动的开始或结束）。用于工程计划和进度管理。简称AOE网。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "AOE网是分析工程项目时间安排和关键环节的有力工具，培养学生的时间管理和风险评估意识。"
      }
    },
    {
      "type": "概念",
      "ID": "08CON009",
      "name": "事件",
      "attributes": {
        "难度": "入门",
        "内容": "在AOE网中，表示顶点，代表某些活动的完成和另一些活动的开始的转接点。具有最早发生时间和最迟发生时间属性。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "08CON010",
      "name": "活动",
      "attributes": {
        "难度": "入门",
        "内容": "在AOV网中表示顶点，在AOE网中表示边，代表工程中的一个子任务或需要时间的过程。在AOE网中具有持续时间、最早开始时间和最迟开始时间属性。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "08CON011",
      "name": "关键路径",
      "attributes": {
        "难度": "高级",
        "内容": "在AOE网中，从源点到汇点的所有路径中，长度（路径上活动持续时间之和）最长的那条（或多条）路径。关键路径上的活动都是关键活动。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "识别关键路径有助于抓住项目管理中的主要矛盾，集中资源确保影响全局进度的活动按时完成，体现了重点论思想。"
      }
    },
    {
      "type": "概念",
      "ID": "08CON012",
      "name": "关键活动",
      "attributes": {
        "难度": "中等",
        "内容": "在AOE网中，最早开始时间等于最迟开始时间的活动（即时间余量为0的活动）。关键活动位于关键路径上，它们的延迟会直接导致整个工程的延期。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "关键活动是项目成功的瓶颈，强调了在复杂系统中识别核心要素的重要性。"
      }
    }
  ],
  "relations": [
    {
      "type": "理论依赖",
      "ID": "08REL001",
      "source": "08CON001",
      "target": "08CON003"
    },
    {
      "type": "继承",
      "ID": "08REL002",
      "source": "08CON002",
      "target": "08CON001"
    },
    {
      "type": "理论依赖",
      "ID": "08REL003",
      "source": "08CON002",
      "target": "08CON004"
    },
    {
      "type": "继承",
      "ID": "08REL004",
      "source": "08DS002",
      "target": "08CON001"
    },
    {
      "type": "继承",
      "ID": "08REL005",
      "source": "08DS003",
      "target": "08CON001"
    },
    {
      "type": "继承",
      "ID": "08REL006",
      "source": "08CON003",
      "target": "08DS001"
    },
    {
      "type": "继承",
      "ID": "08REL007",
      "source": "08CON004",
      "target": "08CON003"
    },
    {
      "type": "理论依赖",
      "ID": "08REL008",
      "source": "08ALG001",
      "target": "08CON002"
    },
    {
      "type": "使用",
      "ID": "08REL009",
      "source": "08ALG001",
      "target": "08DS001"
    },
    {
      "type": "理论依赖",
      "ID": "08REL010",
      "source": "08ALG002",
      "target": "08CON002"
    },
    {
      "type": "使用",
      "ID": "08REL011",
      "source": "08ALG002",
      "target": "08DS001"
    },
    {
      "type": "理论依赖",
      "ID": "08REL012",
      "source": "08ALG003",
      "target": "08CON005"
    },
    {
      "type": "使用",
      "ID": "08REL013",
      "source": "08ALG003",
      "target": "08DS001"
    },
    {
      "type": "理论依赖",
      "ID": "08REL014",
      "source": "08ALG004",
      "target": "08CON005"
    },
    {
      "type": "使用",
      "ID": "08REL015",
      "source": "08ALG004",
      "target": "08DS001"
    },
    {
      "type": "理论依赖",
      "ID": "08REL016",
      "source": "08ALG005",
      "target": "08CON007"
    },
    {
      "type": "理论依赖",
      "ID": "08REL017",
      "source": "08ALG005",
      "target": "08CON006"
    },
    {
      "type": "使用",
      "ID": "08REL018",
      "source": "08ALG005",
      "target": "08DS001"
    },
    {
      "type": "理论依赖",
      "ID": "08REL019",
      "source": "08CON007",
      "target": "08DS001"
    },
    {
      "type": "理论依赖",
      "ID": "08REL020",
      "source": "08CON011",
      "target": "08CON008"
    },
    {
      "type": "理论依赖",
      "ID": "08REL021",
      "source": "08CON009",
      "target": "08CON008"
    },
    {
      "type": "理论依赖",
      "ID": "08REL022",
      "source": "08CON012",
      "target": "08CON011"
    },
    {
      "type": "理论依赖",
      "ID": "08REL023",
      "source": "08CON11",
      "target": "08CON010"
    },
    {
      "type": "理论依赖",
      "ID": "08REL024",
      "source": "08CON010",
      "target": "08CON006"
    },
    {
      "type": "理论依赖",
      "ID": "08REL025",
      "source": "08CON008",
      "target": "08DS001"
    },
    {
      "type": "理论依赖",
      "ID": "08REL026",
      "source": "08CON005",
      "target": "08DS001"
    }
  ]
}