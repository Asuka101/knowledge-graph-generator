{
  "entities": [
    {
      "type": "数据结构",
      "ID": "02DS001",
      "name": "线性表",
      "attributes": {
        "难度": "入门",
        "内容": "具有相同属性的数据元素的一个有限序列。序列中所含元素的个数称为线性表的长度。元素之间具有一对一的前驱和后继关系（首元素无前驱，尾元素无后继）。是线性结构的典型代表。",
        "存储开销": "取决于具体的存储实现（顺序或链式）。",
        "核心特性": "元素之间逻辑上呈线性有序，长度可变。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "02CON001",
      "name": "顺序存储结构",
      "attributes": {
        "难度": "入门",
        "内容": "将数据结构中的元素按照其逻辑顺序，依次存储到计算机存储器中一片连续的存储空间中。逻辑上相邻的元素在物理存储位置上也相邻。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "02DS002",
      "name": "顺序表",
      "attributes": {
        "难度": "入门",
        "内容": "使用顺序存储结构实现的线性表。通常使用数组实现。需要预先分配存储空间，可能存在空间浪费或溢出问题（动态数组可缓解）。",
        "存储开销": "主要为n个元素占用的连续空间，加上存储长度等信息的辅助变量。通常为 n * sizeof(ElemType) + O(1)。",
        "核心特性": "支持随机访问（通过下标访问元素时间复杂度为O(1)），插入和删除操作平均需要移动大量元素（时间复杂度为O(n)）。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "02CON002",
      "name": "链式存储结构",
      "attributes": {
        "难度": "入门",
        "内容": "数据元素的存储位置不要求连续。每个存储结点除了包含元素本身信息（数据域）外，还包含指示其逻辑关系（如后继或前驱）的指针信息（指针域）。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "02CON003",
      "name": "结点",
      "attributes": {
        "难度": "入门",
        "内容": "链式存储结构中的基本组成单位。通常包含两部分：存储数据元素信息的数据域和存储指示逻辑关系地址的指针域。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "02DS003",
      "name": "链表",
      "attributes": {
        "难度": "入门",
        "内容": "使用链式存储结构实现的线性表。由一系列结点组成，结点之间通过指针链接。根据指针域的不同可分为单向链表、双向链表、循环链表等。",
        "存储开销": "每个结点都需要存储数据和指针，总开销为 n * (sizeof(ElemType) + 指针数量 * sizeof(pointer))。",
        "核心特性": "插入和删除操作效率高（若已知位置，时间复杂度为O(1)），无需预估存储空间，但访问元素需要顺序遍历（时间复杂度为O(n)）。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "02DS004",
      "name": "单向链表",
      "attributes": {
        "难度": "入门",
        "内容": "链表的一种基本形式。每个结点只包含一个指向其直接后继结点的指针域。",
        "存储开销": "n * (sizeof(ElemType) + sizeof(pointer))。",
        "核心特性": "只能从头到尾单向遍历。查找前驱结点困难。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "02CON004",
      "name": "表头指针",
      "attributes": {
        "难度": "入门",
        "内容": "一个指向链表中第一个有效数据结点的指针变量。对于空链表，其值为NULL。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "02DS005",
      "name": "双向链表",
      "attributes": {
        "难度": "入门",
        "内容": "链表的一种形式。每个结点包含两个指针域，一个指向直接前驱结点，一个指向直接后继结点。",
        "存储开销": "n * (sizeof(ElemType) + 2 * sizeof(pointer))。",
        "核心特性": "支持双向遍历，方便查找前驱和后继结点，插入删除操作相对单链表稍微复杂。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "02CON005",
      "name": "表头附加结点",
      "attributes": {
        "难度": "入门",
        "内容": "在链表的第一个有效数据结点之前额外增加的一个结点，也称为哑结点(Dummy Node)。该结点不存储实际数据，其指针域指向第一个有效数据结点。它可以统一对链表（包括空表和非空表）的首结点操作，简化插入和删除算法的实现。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "02DS006",
      "name": "循环链表",
      "attributes": {
        "难度": "入门",
        "内容": "链表的一种变体。表中最后一个结点的指针域不再为空，而是指向链表的第一个结点（或表头附加结点），形成一个环状结构。可以是单向循环链表或双向循环链表。",
        "存储开销": "与对应的非循环链表（单向或双向）相同。",
        "核心特性": "可以从表中任一结点出发遍历整个链表。适用于需要循环处理数据的场景，如约瑟夫问题。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "02ALG001",
      "name": "初始化线性表",
      "attributes": {
        "难度": "入门",
        "内容": "创建一个空的线性表实例。对于顺序表，通常是分配数组空间并设置长度为0；对于链表，通常是将头指针设为NULL或创建表头附加结点。",
        "时间复杂度": "O(1)",
        "空间复杂度": "O(1) 或 O(MaxSize)（取决于是否为静态数组）",
        "设计思想": "初始化",
        "适用场景": "使用线性表之前。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "02ALG002",
      "name": "清除线性表",
      "attributes": {
        "难度": "入门",
        "内容": "删除线性表中的所有元素，使其变为空表。对于动态分配内存的顺序表或链表，还需要释放所有结点占用的内存空间。",
        "时间复杂度": "O(1)（顺序表仅重置长度），O(n)（链表需要遍历释放）",
        "空间复杂度": "O(1)",
        "设计思想": "重置/遍历释放",
        "适用场景": "销毁或重用线性表。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "02ALG003",
      "name": "求线性表长度",
      "attributes": {
        "难度": "入门",
        "内容": "返回线性表中当前包含的元素个数。",
        "时间复杂度": "O(1)（带长度属性的顺序表或链表），O(n)（不带长度属性的链表需要遍历）",
        "空间复杂度": "O(1)",
        "设计思想": "访问属性/遍历计数",
        "适用场景": "获取线性表的大小。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "02ALG004",
      "name": "判断线性表是否为空",
      "attributes": {
        "难度": "入门",
        "内容": "检查线性表中是否没有任何元素。",
        "时间复杂度": "O(1)",
        "空间复杂度": "O(1)",
        "设计思想": "检查长度属性或头指针",
        "适用场景": "进行操作前的状态判断。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "02ALG005",
      "name": "获取线性表元素",
      "attributes": {
        "难度": "入门",
        "内容": "根据给定的位置序号（通常从1开始）返回线性表中对应元素的值。",
        "时间复杂度": "O(1)（顺序表），O(n)（链表需要遍历查找）",
        "空间复杂度": "O(1)",
        "设计思想": "直接索引（顺序表）/顺序遍历（链表）",
        "适用场景": "访问线性表中特定位置的元素。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "02ALG006",
      "name": "遍历线性表",
      "attributes": {
        "难度": "入门",
        "内容": "按照元素的逻辑顺序访问线性表中的每一个元素，且每个元素仅访问一次。",
        "时间复杂度": "O(n)",
        "空间复杂度": "O(1)",
        "设计思想": "迭代/递归",
        "适用场景": "处理线性表中的所有元素，如打印、计算总和等。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "02ALG007",
      "name": "查找线性表元素",
      "attributes": {
        "难度": "入门",
        "内容": "在线性表中查找第一个值等于给定值的元素，返回其位置或是否存在。",
        "时间复杂度": "O(n)（顺序查找）",
        "空间复杂度": "O(1)",
        "设计思想": "顺序比较",
        "适用场景": "确定某个元素是否在线性表中或找到其位置。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "02ALG008",
      "name": "更新线性表元素",
      "attributes": {
        "难度": "入门",
        "内容": "在线性表中查找指定元素（按值或按位置），并用新值替换其旧值。",
        "时间复杂度": "O(n)（需要先查找）",
        "空间复杂度": "O(1)",
        "设计思想": "查找 + 赋值",
        "适用场景": "修改线性表中已存在的元素值。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "02ALG009",
      "name": "插入线性表元素",
      "attributes": {
        "难度": "入门",
        "内容": "在（或按条件确定）线性表的指定位置插入一个新的数据元素。",
        "时间复杂度": "O(n)（顺序表需要移动元素，链表需要查找位置），O(1)（特定情况，如链表头插或尾插且有尾指针）",
        "空间复杂度": "O(1)（忽略动态扩容开销）",
        "设计思想": "移动元素（顺序表）/修改指针（链表）",
        "适用场景": "向线性表中增加数据。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "02ALG010",
      "name": "删除线性表元素",
      "attributes": {
        "难度": "入门",
        "内容": "从线性表中删除指定位置的元素或第一个值等于给定值的元素。",
        "时间复杂度": "O(n)（顺序表需要移动元素，链表需要查找位置），O(1)（特定情况，如链表头删或已知前驱结点）",
        "空间复杂度": "O(1)",
        "设计思想": "移动元素（顺序表）/修改指针（链表）",
        "适用场景": "从线性表中移除数据。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "02ALG011",
      "name": "排序线性表",
      "attributes": {
        "难度": "入门",
        "内容": "将线性表中的元素按照某种规则（如值的升序或降序）重新排列。",
        "时间复杂度": "取决于所用排序算法，本章示例为O(n^2)（插入排序）",
        "空间复杂度": "取决于所用排序算法，本章示例为O(1)或O(n)",
        "设计思想": "比较、交换/移动元素",
        "适用场景": "需要有序访问线性表元素时。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "02ALG012",
      "name": "插入排序",
      "attributes": {
        "难度": "入门",
        "内容": "一种简单的排序算法。将线性表分为已排序和未排序两部分，每次从未排序部分取出一个元素，插入到已排序部分的合适位置，直到所有元素都排好序。",
        "时间复杂度": "O(n^2)（平均和最坏情况），O(n)（最好情况）",
        "空间复杂度": "O(1)（原地排序）",
        "设计思想": "比较、插入、移动",
        "适用场景": "数据量较小，或数据基本有序的情况。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "02CON006",
      "name": "多项式",
      "attributes": {
        "难度": "入门",
        "内容": "数学概念，表示为变量的幂与其系数乘积之和。例如 P(x) = a_n*x^n + ... + a_1*x + a_0。在本章中作为线性表应用的一个实例，讨论其表示和运算。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "02ALG013",
      "name": "多项式求值",
      "attributes": {
        "难度": "入门",
        "内容": "给定变量x的值，计算多项式P(x)的结果。可以使用线性表存储多项式系数或非零项进行计算。",
        "时间复杂度": "O(n)（n为多项式项数，使用线性表遍历计算，未考虑幂运算复杂度）",
        "空间复杂度": "O(1)",
        "设计思想": "遍历、累加、幂运算",
        "适用场景": "计算多项式在特定点的值。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "02ALG014",
      "name": "多项式加法",
      "attributes": {
        "难度": "中等",
        "内容": "计算两个多项式P1(x)和P2(x)的和，生成结果多项式P3(x)。需要合并两个多项式中指数相同的项。",
        "时间复杂度": "O(m+n)（m, n分别为两个多项式非零项的个数，使用有序链表归并实现）",
        "空间复杂度": "O(m+n)（存储结果多项式）",
        "设计思想": "归并、链表操作",
        "适用场景": "符号计算、代数运算。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "02CON007",
      "name": "随机存取",
      "attributes": {
        "难度": "入门",
        "内容": "一种数据存取方式，访问存储器中任何位置的数据所需时间都是相同或相近的，与数据所在的物理位置无关。数组（顺序存储）支持随机存取。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "02CON008",
      "name": "顺序存取",
      "attributes": {
        "难度": "入门",
        "内容": "一种数据存取方式，必须按照特定的线性顺序访问数据。访问第n个元素前必须先访问前面的n-1个元素。链表是典型的顺序存取结构。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    }
  ],
  "relations": [
    {
      "type": "继承",
      "ID": "02REL001",
      "source": "02DS002",
      "target": "02DS001"
    },
    {
      "type": "继承",
      "ID": "02REL002",
      "source": "02DS003",
      "target": "02DS001"
    },
    {
      "type": "继承",
      "ID": "02REL003",
      "source": "02DS004",
      "target": "02DS003"
    },
    {
      "type": "继承",
      "ID": "02REL004",
      "source": "02DS005",
      "target": "02DS003"
    },
    {
      "type": "变体",
      "ID": "02REL005",
      "source": "02DS006",
      "target": "02DS003"
    },
    {
      "type": "使用",
      "ID": "02REL006",
      "source": "02DS002",
      "target": "02CON001"
    },
    {
      "type": "使用",
      "ID": "02REL007",
      "source": "02DS003",
      "target": "02CON002"
    },
    {
      "type": "使用",
      "ID": "02REL008",
      "source": "02DS003",
      "target": "02CON003"
    },
    {
      "type": "使用",
      "ID": "02REL009",
      "source": "02DS003",
      "target": "02CON004"
    },
    {
      "type": "使用",
      "ID": "02REL010",
      "source": "02DS003",
      "target": "02CON005"
    },
    {
      "type": "理论依赖",
      "ID": "02REL011",
      "source": "02DS002",
      "target": "02CON007"
    },
    {
      "type": "理论依赖",
      "ID": "02REL012",
      "source": "02DS003",
      "target": "02CON008"
    },
    {
      "type": "操作绑定",
      "ID": "02REL013",
      "source": "02ALG001",
      "target": "02DS001"
    },
    {
      "type": "操作绑定",
      "ID": "02REL014",
      "source": "02ALG002",
      "target": "02DS001"
    },
    {
      "type": "操作绑定",
      "ID": "02REL015",
      "source": "02ALG003",
      "target": "02DS001"
    },
    {
      "type": "操作绑定",
      "ID": "02REL016",
      "source": "02ALG004",
      "target": "02DS001"
    },
    {
      "type": "操作绑定",
      "ID": "02REL017",
      "source": "02ALG005",
      "target": "02DS001"
    },
    {
      "type": "操作绑定",
      "ID": "02REL018",
      "source": "02ALG006",
      "target": "02DS001"
    },
    {
      "type": "操作绑定",
      "ID": "02REL019",
      "source": "02ALG007",
      "target": "02DS001"
    },
    {
      "type": "操作绑定",
      "ID": "02REL020",
      "source": "02ALG008",
      "target": "02DS001"
    },
    {
      "type": "操作绑定",
      "ID": "02REL021",
      "source": "02ALG009",
      "target": "02DS001"
    },
    {
      "type": "操作绑定",
      "ID": "02REL022",
      "source": "02ALG010",
      "target": "02DS001"
    },
    {
      "type": "操作绑定",
      "ID": "02REL023",
      "source": "02ALG011",
      "target": "02DS001"
    },
    {
      "type": "使用",
      "ID": "02REL024",
      "source": "02ALG011",
      "target": "02ALG012"
    },
    {
      "type": "使用",
      "ID": "02REL025",
      "source": "02ALG013",
      "target": "02DS001"
    },
    {
      "type": "使用",
      "ID": "02REL026",
      "source": "02ALG014",
      "target": "02DS001"
    },
    {
      "type": "理论依赖",
      "ID": "02REL027",
      "source": "02ALG013",
      "target": "02CON006"
    },
    {
      "type": "理论依赖",
      "ID": "02REL028",
      "source": "02ALG014",
      "target": "02CON006"
    }
  ]
}