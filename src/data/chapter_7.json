{
  "entities": [
    {
      "type": "数据结构",
      "ID": "07DS001",
      "name": "图",
      "attributes": {
        "难度": "中等",
        "内容": "图(graph)是图型结构的简称，是一种复杂的非线性数据结构。由顶点集V和边集E组成，G=(V,E)。V是顶点集合，E是V上顶点对（序偶或无序对）的集合，即边的集合。允许每个顶点有任意多个前驱和后继。线性表和树可看作图的特例。广泛应用于交通图、线路图、结构图等。",
        "存储开销": "依赖于具体表示法（邻接矩阵O(n^2), 邻接表O(n+e), 边集数组O(e))",
        "核心特性": "非线性、顶点间关系灵活（多对多）",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "07CON001",
      "name": "顶点",
      "attributes": {
        "难度": "入门",
        "内容": "图的基本组成单元，代表实体。通常用 V 表示顶点集合。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "07CON002",
      "name": "边",
      "attributes": {
        "难度": "入门",
        "内容": "连接图中两个顶点，表示它们之间关系的线。可以是序偶（有向边）或无序对（无向边）。通常用 E 表示边集合。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "07CON003",
      "name": "顶点集",
      "attributes": {
        "难度": "入门",
        "内容": "图中所有顶点的集合，通常记为V(G)。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "07CON004",
      "name": "边集",
      "attributes": {
        "难度": "入门",
        "内容": "图中所有边的集合，通常记为E(G)。边可以是序偶（有向图）或无序对（无向图）。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "07CON005",
      "name": "有向边",
      "attributes": {
        "难度": "入门",
        "内容": "具有方向的边，由一个有序顶点对 <vi, vj> 表示，vi 是起点，vj 是终点。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "07CON006",
      "name": "无向边",
      "attributes": {
        "难度": "入门",
        "内容": "没有方向的边，由一个无序顶点对 (vi, vj) 表示。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "07DS002",
      "name": "有向图",
      "attributes": {
        "难度": "中等",
        "内容": "边集 E(G) 由有向边（序偶）组成的图。",
        "存储开销": "同图，具体取决于存储结构。",
        "核心特性": "边具有方向性。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "07DS003",
      "name": "无向图",
      "attributes": {
        "难度": "中等",
        "内容": "边集 E(G) 由无向边（无序对）组成的图。",
        "存储开销": "同图，具体取决于存储结构。",
        "核心特性": "边没有方向性。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "07CON007",
      "name": "端点",
      "attributes": {
        "难度": "入门",
        "内容": "一条边所连接的两个顶点。在无向图中，一条边 (vi, vj) 的两个端点是 vi 和 vj。在有向图中，边 <vi, vj> 的起点是 vi，终点是 vj。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "07CON008",
      "name": "邻接点",
      "attributes": {
        "难度": "入门",
        "内容": "在无向图中，若存在边 (vi, vj)，则 vi 和 vj 互为邻接点。在有向图中，若存在边 <vi, vj>，则称 vi 和 vj 互为邻接点，vj 是 vi 的出边邻接点，vi 是 vj 的入边邻接点。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "07CON009",
      "name": "出边",
      "attributes": {
        "难度": "入门",
        "内容": "在有向图中，从顶点 vi 出发的边 <vi, vj> 称为 vi 的一条出边。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "07CON010",
      "name": "入边",
      "attributes": {
        "难度": "入门",
        "内容": "在有向图中，指向顶点 vj 的边 <vi, vj> 称为 vj 的一条入边。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "07CON011",
      "name": "出边邻接点",
      "attributes": {
        "难度": "入门",
        "内容": "在有向图中，若存在边 <vi, vj>，则 vj 是 vi 的出边邻接点。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "07CON012",
      "name": "入边邻接点",
      "attributes": {
        "难度": "入门",
        "内容": "在有向图中，若存在边 <vi, vj>，则 vi 是 vj 的入边邻接点。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "07CON013",
      "name": "度",
      "attributes": {
        "难度": "入门",
        "内容": "无向图中顶点 v 的度 D(v) 是以该顶点为一个端点的边的数目。有向图中顶点 v 的度等于其入度与出度之和，D(v) = ID(v) + OD(v)。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "07CON014",
      "name": "入度",
      "attributes": {
        "难度": "入门",
        "内容": "有向图中顶点 v 的入度 ID(v) 是以该顶点为终点的入边的数目。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "07CON015",
      "name": "出度",
      "attributes": {
        "难度": "入门",
        "内容": "有向图中顶点 v 的出度 OD(v) 是以该顶点为起点的出边的数目。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "07CON016",
      "name": "完全图",
      "attributes": {
        "难度": "入门",
        "内容": "无向图中任意两个顶点间都存在边；有向图中任意两个顶点间都存在方向相反的两条边。n 个顶点的无向完全图有 n(n-1)/2 条边，有向完全图有 n(n-1) 条边。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "07CON017",
      "name": "稠密图",
      "attributes": {
        "难度": "入门",
        "内容": "边数接近完全图的图。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "07CON018",
      "name": "稀疏图",
      "attributes": {
        "难度": "入门",
        "内容": "边数远小于完全图边数的图，通常边数 e 与顶点数 n 同数量级。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "07CON019",
      "name": "子图",
      "attributes": {
        "难度": "入门",
        "内容": "设有两个图 G=(V,E) 和 G'=(V',E')，若 V' 是 V 的子集，E' 是 E 的子集，且 E' 中涉及的顶点都在 V' 中，则称 G' 是 G 的子图。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "07CON020",
      "name": "路径",
      "attributes": {
        "难度": "入门",
        "内容": "从顶点 v 到顶点 v' 的一个顶点序列 v_i1, v_i2, ..., v_im，其中 v=v_i1，v'=v_im，且序列中相邻顶点间存在边（无向图为 (v_j-1, v_j)，有向图为 <v_j-1, v_j>）。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "07CON021",
      "name": "路径长度",
      "attributes": {
        "难度": "入门",
        "内容": "一条路径上所经过的边的数目。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "07CON022",
      "name": "简单路径",
      "attributes": {
        "难度": "入门",
        "内容": "路径序列中所有顶点均不相同的路径。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "07CON023",
      "name": "回路",
      "attributes": {
        "难度": "入门",
        "内容": "路径的起点和终点相同的路径，也称为环。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "07CON024",
      "name": "简单回路",
      "attributes": {
        "难度": "入门",
        "内容": "除路径的起点和终点相同外，其余顶点均不相同的回路。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "07CON025",
      "name": "连通",
      "attributes": {
        "难度": "入门",
        "内容": "在无向图中，若从顶点 vi 到顶点 vj 有路径，则称 vi 和 vj 是连通的。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "07CON026",
      "name": "连通图",
      "attributes": {
        "难度": "入门",
        "内容": "无向图中任意两个顶点都连通的图。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "07CON027",
      "name": "非连通图",
      "attributes": {
        "难度": "入门",
        "内容": "存在不连通顶点的无向图。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "07CON028",
      "name": "连通分量",
      "attributes": {
        "难度": "中等",
        "内容": "无向图的极大连通子图。非连通图有多个连通分量。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "07CON029",
      "name": "强连通图",
      "attributes": {
        "难度": "中等",
        "内容": "有向图中，任意两个顶点 vi 和 vj 之间都存在从 vi 到 vj 和从 vj 到 vi 的路径。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "07CON030",
      "name": "强连通分量",
      "attributes": {
        "难度": "中等",
        "内容": "有向图的极大强连通子图。非强连通图有多个强连通分量。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "07CON031",
      "name": "权",
      "attributes": {
        "难度": "入门",
        "内容": "图中每条边上标定的具有某种含义的数值，通常为非负实数。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "07DS004",
      "name": "带权图",
      "attributes": {
        "难度": "中等",
        "内容": "边上带有权的图，也常称为网(network)。",
        "存储开销": "需要在存储结构中额外记录边的权值信息。",
        "核心特性": "边附带权值。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "07DS005",
      "name": "邻接矩阵",
      "attributes": {
        "难度": "入门",
        "内容": "用n阶方阵A表示n个顶点的图。A[i,j]=1（或权值）表示顶点i到j有边，A[i,j]=0（或无穷大）表示无边。无向图矩阵对称。",
        "存储开销": "O(n^2)。",
        "核心特性": "查找边(i,j)时间O(1)；求顶点度或邻接点时间O(n)；适用于稠密图。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "07DS006",
      "name": "邻接表",
      "attributes": {
        "难度": "入门",
        "内容": "对图中每个顶点vi建立一个单链表，存储其所有邻接点（对有向图通常是出边邻接点）以及边的信息（如权值）。各链表的头指针存储在一个数组中。",
        "存储开销": "O(n+e)。",
        "核心特性": "查找顶点vi的出边邻接点时间O(度(vi))；查找入边不便（需逆邻接表或遍历）；适用于稀疏图。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "07DS007",
      "name": "边集数组",
      "attributes": {
        "难度": "入门",
        "内容": "用一个一维数组存储图中所有边的信息，每个数组元素包含一条边的起点、终点和权值。",
        "存储开销": "O(e)。",
        "核心特性": "适合对边进行遍历处理的算法；查找特定边或顶点相关信息（度、邻接点）效率低，需O(e)；适用于稀疏图。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "07DS008",
      "name": "逆邻接表",
      "attributes": {
        "难度": "入门",
        "内容": "类似于邻接表，但每个顶点的链表存储的是指向该顶点的所有入边信息（主要是入边邻接点序号和权值）。",
        "存储开销": "O(n+e)。",
        "核心特性": "方便查找有向图中顶点的入度、入边和入边邻接点。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "07DS009",
      "name": "十字邻接表",
      "attributes": {
        "难度": "中等",
        "内容": "用于有向图的一种链式存储结构。每个顶点有一个入边链表头指针和出边链表头指针。每个边结点包含起点、终点、权值、指向同起点的下一条出边结点的指针、指向同终点的下一条入边结点的指针。",
        "存储开销": "O(n+e)。",
        "核心特性": "方便地查找顶点的出边信息和入边信息。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "07ALG001",
      "name": "图的遍历",
      "attributes": {
        "难度": "入门",
        "内容": "从图中某一顶点出发，按照某种搜索策略访问图中所有顶点一次且仅一次的过程。需要使用辅助数组标记顶点访问状态以避免重复访问。",
        "时间复杂度": "邻接矩阵O(n^2)，邻接表O(n+e)",
        "空间复杂度": "O(n)",
        "设计思想": "搜索",
        "适用场景": "图的基本操作，是许多图算法的基础，如连通性判断、路径查找等。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "07ALG002",
      "name": "深度优先搜索",
      "attributes": {
        "难度": "入门",
        "内容": "一种图遍历策略。从初始点出发，访问该顶点，然后选择一个未访问的邻接点深入访问，直到该路径到达尽头，再回溯到上一个顶点，选择另一未访问邻接点继续深入。类似树的先根遍历，通常用递归或栈实现。",
        "时间复杂度": "邻接矩阵O(n^2)，邻接表O(n+e)",
        "空间复杂度": "O(n)（递归栈或辅助栈）",
        "设计思想": "递归、回溯、栈",
        "适用场景": "查找路径、判断连通性、拓扑排序、查找关节点/桥等。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "07ALG003",
      "name": "广度优先搜索",
      "attributes": {
        "难度": "入门",
        "内容": "一种图遍历策略。从初始点出发，访问该顶点，然后依次访问其所有未访问过的邻接点，再按这些邻接点被访问的顺序，依次访问它们各自未被访问过的邻接点。类似树的层序遍历，通常用队列实现。",
        "时间复杂度": "邻接矩阵O(n^2)，邻接表O(n+e)",
        "空间复杂度": "O(n)（队列）",
        "设计思想": "迭代、队列",
        "适用场景": "查找无权图最短路径、层序遍历。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    }
  ],
  "relations": [
    {
      "type": "继承",
      "ID": "07REL001",
      "source": "07DS002",
      "target": "07DS001"
    },
    {
      "type": "继承",
      "ID": "07REL002",
      "source": "07DS003",
      "target": "07DS001"
    },
    {
      "type": "继承",
      "ID": "07REL003",
      "source": "07DS004",
      "target": "07DS001"
    },
    {
      "type": "理论依赖",
      "ID": "07REL004",
      "source": "07DS001",
      "target": "07CON001"
    },
    {
      "type": "理论依赖",
      "ID": "07REL005",
      "source": "07DS001",
      "target": "07CON002"
    },
    {
      "type": "理论依赖",
      "ID": "07REL006",
      "source": "07DS001",
      "target": "07CON003"
    },
    {
      "type": "理论依赖",
      "ID": "07REL007",
      "source": "07DS001",
      "target": "07CON004"
    },
    {
      "type": "理论依赖",
      "ID": "07REL008",
      "source": "07DS002",
      "target": "07CON005"
    },
    {
      "type": "理论依赖",
      "ID": "07REL009",
      "source": "07DS003",
      "target": "07CON006"
    },
    {
      "type": "理论依赖",
      "ID": "07REL010",
      "source": "07DS004",
      "target": "07CON031"
    },
    {
      "type": "理论依赖",
      "ID": "07REL011",
      "source": "07CON002",
      "target": "07CON007"
    },
    {
      "type": "理论依赖",
      "ID": "07REL012",
      "source": "07CON008",
      "target": "07CON002"
    },
    {
      "type": "继承",
      "ID": "07REL013",
      "source": "07CON005",
      "target": "07CON002"
    },
    {
      "type": "继承",
      "ID": "07REL014",
      "source": "07CON006",
      "target": "07CON002"
    },
    {
      "type": "理论依赖",
      "ID": "07REL015",
      "source": "07CON009",
      "target": "07CON005"
    },
    {
      "type": "理论依赖",
      "ID": "07REL016",
      "source": "07CON010",
      "target": "07CON005"
    },
    {
      "type": "继承",
      "ID": "07REL017",
      "source": "07CON011",
      "target": "07CON008"
    },
    {
      "type": "继承",
      "ID": "07REL018",
      "source": "07CON012",
      "target": "07CON008"
    },
    {
      "type": "理论依赖",
      "ID": "07REL019",
      "source": "07CON013",
      "target": "07CON001"
    },
    {
      "type": "继承",
      "ID": "07REL020",
      "source": "07CON014",
      "target": "07CON013"
    },
    {
      "type": "继承",
      "ID": "07REL021",
      "source": "07CON015",
      "target": "07CON013"
    },
    {
      "type": "理论依赖",
      "ID": "07REL022",
      "source": "07CON014",
      "target": "07CON010"
    },
    {
      "type": "理论依赖",
      "ID": "07REL023",
      "source": "07CON015",
      "target": "07CON009"
    },
    {
      "type": "理论依赖",
      "ID": "07REL024",
      "source": "07CON016",
      "target": "07DS001"
    },
    {
      "type": "理论依赖",
      "ID": "07REL025",
      "source": "07CON017",
      "target": "07DS001"
    },
    {
      "type": "理论依赖",
      "ID": "07REL026",
      "source": "07CON018",
      "target": "07DS001"
    },
    {
      "type": "理论依赖",
      "ID": "07REL027",
      "source": "07CON019",
      "target": "07DS001"
    },
    {
      "type": "理论依赖",
      "ID": "07REL028",
      "source": "07CON020",
      "target": "07DS001"
    },
    {
      "type": "理论依赖",
      "ID": "07REL029",
      "source": "07CON021",
      "target": "07CON020"
    },
    {
      "type": "继承",
      "ID": "07REL030",
      "source": "07CON022",
      "target": "07CON020"
    },
    {
      "type": "继承",
      "ID": "07REL031",
      "source": "07CON023",
      "target": "07CON020"
    },
    {
      "type": "继承",
      "ID": "07REL032",
      "source": "07CON024",
      "target": "07CON023"
    },
    {
      "type": "理论依赖",
      "ID": "07REL033",
      "source": "07CON024",
      "target": "07CON022"
    },
    {
      "type": "理论依赖",
      "ID": "07REL034",
      "source": "07CON025",
      "target": "07DS003"
    },
    {
      "type": "理论依赖",
      "ID": "07REL035",
      "source": "07CON025",
      "target": "07CON020"
    },
    {
      "type": "理论依赖",
      "ID": "07REL036",
      "source": "07CON026",
      "target": "07CON025"
    },
    {
      "type": "理论依赖",
      "ID": "07REL037",
      "source": "07CON026",
      "target": "07DS003"
    },
    {
      "type": "理论依赖",
      "ID": "07REL038",
      "source": "07CON027",
      "target": "07CON026"
    },
    {
      "type": "理论依赖",
      "ID": "07REL039",
      "source": "07CON027",
      "target": "07DS003"
    },
    {
      "type": "理论依赖",
      "ID": "07REL040",
      "source": "07CON028",
      "target": "07CON027"
    },
    {
      "type": "继承",
      "ID": "07REL041",
      "source": "07CON028",
      "target": "07CON019"
    },
    {
      "type": "理论依赖",
      "ID": "07REL042",
      "source": "07CON029",
      "target": "07DS002"
    },
    {
      "type": "理论依赖",
      "ID": "07REL043",
      "source": "07CON029",
      "target": "07CON020"
    },
    {
      "type": "理论依赖",
      "ID": "07REL044",
      "source": "07CON030",
      "target": "07CON029"
    },
    {
      "type": "继承",
      "ID": "07REL045",
      "source": "07CON030",
      "target": "07CON019"
    },
    {
      "type": "变体",
      "ID": "07REL046",
      "source": "07DS008",
      "target": "07DS006"
    },
    {
      "type": "变体",
      "ID": "07REL047",
      "source": "07DS009",
      "target": "07DS006"
    },
    {
      "type": "操作绑定",
      "ID": "07REL048",
      "source": "07ALG001",
      "target": "07DS001"
    },
    {
      "type": "继承",
      "ID": "07REL049",
      "source": "07ALG002",
      "target": "07ALG001"
    },
    {
      "type": "继承",
      "ID": "07REL050",
      "source": "07ALG003",
      "target": "07ALG001"
    },
    {
      "type": "使用",
      "ID": "07REL051",
      "source": "07DS005",
      "target": "07DS001"
    },
    {
      "type": "使用",
      "ID": "07REL052",
      "source": "07DS006",
      "target": "07DS001"
    },
    {
      "type": "使用",
      "ID": "07REL053",
      "source": "07DS007",
      "target": "07DS001"
    },
    {
      "type": "使用",
      "ID": "07REL054",
      "source": "07DS008",
      "target": "07DS002"
    },
    {
      "type": "使用",
      "ID": "07REL055",
      "source": "07DS009",
      "target": "07DS002"
    }
  ]
}