{
  "entities": [
    {
      "type": "数据结构",
      "ID": "05DS001",
      "name": "树",
      "attributes": {
        "难度": "入门",
        "内容": "一种重要的非线性数据结构，由n(n>=0)个有限结点组成一个具有层次关系的集合。它或者是一棵空树，或者是一棵非空树，非空树有且仅有一个根结点，其余结点可分为m(m>=0)个互不相交的有限集，其中每一个集合本身又是一棵树，并且称为根的子树。定义是递归的。",
        "存储开销": "依赖具体表示法",
        "核心特性": "层次结构, 递归定义"
      }
    },
    {
      "type": "概念",
      "ID": "05CON001",
      "name": "根",
      "attributes": {
        "难度": "入门",
        "内容": "树中没有前驱结点的唯一结点。"
      }
    },
    {
      "type": "概念",
      "ID": "05CON002",
      "name": "子树",
      "attributes": {
        "难度": "入门",
        "内容": "非空树中根结点之外的结点集合，每个集合本身也是一棵树。"
      }
    },
    {
      "type": "概念",
      "ID": "05CON003",
      "name": "结点",
      "attributes": {
        "难度": "入门",
        "内容": "树的基本组成单元，包含数据元素及指向子树的分支。"
      }
    },
    {
      "type": "概念",
      "ID": "05CON004",
      "name": "前驱",
      "attributes": {
        "难度": "入门",
        "内容": "在树结构中，一个结点的直接上层结点（双亲）。"
      }
    },
    {
      "type": "概念",
      "ID": "05CON005",
      "name": "后继",
      "attributes": {
        "难度": "入门",
        "内容": "在树结构中，一个结点的直接下层结点（孩子）。"
      }
    },
    {
      "type": "概念",
      "ID": "05CON006",
      "name": "树形表示法",
      "attributes": {
        "难度": "入门",
        "内容": "最常用的树表示法，用结点和连线表示层次关系，方向隐含（通常上->下或左->右）。"
      }
    },
    {
      "type": "概念",
      "ID": "05CON007",
      "name": "二元组表示法",
      "attributes": {
        "难度": "入门",
        "内容": "用结点集合和结点间的二元关系(前驱-后继)定义树。"
      }
    },
    {
      "type": "概念",
      "ID": "05CON008",
      "name": "集合图表示",
      "attributes": {
        "难度": "入门",
        "内容": "用嵌套圆形表示树，外圆包含根和代表子树的内圆。"
      }
    },
    {
      "type": "概念",
      "ID": "05CON009",
      "name": "凹入表示",
      "attributes": {
        "难度": "入门",
        "内容": "用不同长度和缩进的条形表示树的层次结构。"
      }
    },
    {
      "type": "概念",
      "ID": "05CON010",
      "name": "广义表表示",
      "attributes": {
        "难度": "入门",
        "内容": "用嵌套列表表示树，根在前，子树列表在后，如 A(B, C(D))。"
      }
    },
    {
      "type": "概念",
      "ID": "05CON011",
      "name": "度 (结点)",
      "attributes": {
        "难度": "入门",
        "内容": "结点拥有的子树数目或后继结点数。"
      }
    },
    {
      "type": "概念",
      "ID": "05CON012",
      "name": "度 (树)",
      "attributes": {
        "难度": "入门",
        "内容": "树中所有结点度的最大值。"
      }
    },
    {
      "type": "概念",
      "ID": "05CON013",
      "name": "叶子结点",
      "attributes": {
        "难度": "入门",
        "内容": "度为 0 的结点，也称终端结点。"
      }
    },
    {
      "type": "概念",
      "ID": "05CON014",
      "name": "分支结点",
      "attributes": {
        "难度": "入门",
        "内容": "度大于 0 的结点，也称非终端结点。"
      }
    },
    {
      "type": "概念",
      "ID": "05CON015",
      "name": "孩子结点",
      "attributes": {
        "难度": "入门",
        "内容": "一个结点的直接后继（子树的根）。"
      }
    },
    {
      "type": "概念",
      "ID": "05CON016",
      "name": "双亲结点",
      "attributes": {
        "难度": "入门",
        "内容": "一个结点的直接前驱。"
      }
    },
    {
      "type": "概念",
      "ID": "05CON017",
      "name": "兄弟结点",
      "attributes": {
        "难度": "入门",
        "内容": "具有相同双亲结点的结点。"
      }
    },
    {
      "type": "概念",
      "ID": "05CON018",
      "name": "子孙",
      "attributes": {
        "难度": "入门",
        "内容": "一个结点的所有子树中的结点。"
      }
    },
    {
      "type": "概念",
      "ID": "05CON019",
      "name": "祖先",
      "attributes": {
        "难度": "入门",
        "内容": "从根到某结点路径上的所有结点（不含自身）。"
      }
    },
    {
      "type": "概念",
      "ID": "05CON020",
      "name": "层数",
      "attributes": {
        "难度": "入门",
        "内容": "结点在树中的层次，根为第 1 层。"
      }
    },
    {
      "type": "概念",
      "ID": "05CON021",
      "name": "深度/高度",
      "attributes": {
        "难度": "入门",
        "内容": "树中结点的最大层数。"
      }
    },
    {
      "type": "概念",
      "ID": "05CON022",
      "name": "有序树",
      "attributes": {
        "难度": "入门",
        "内容": "树中结点的各子树按一定次序排列（如从左到右）。"
      }
    },
    {
      "type": "概念",
      "ID": "05CON023",
      "name": "无序树",
      "attributes": {
        "难度": "入门",
        "内容": "树中结点的各子树没有固定次序。"
      }
    },
    {
      "type": "概念",
      "ID": "05CON024",
      "name": "森林",
      "attributes": {
        "难度": "入门",
        "内容": "m (m>=0) 棵互不相交的树的集合。"
      }
    },
    {
      "type": "数据结构",
      "ID": "05DS002",
      "name": "m叉树",
      "attributes": {
        "难度": "入门",
        "内容": "度为 m 的树，即每个结点最多有 m 个孩子。",
        "存储开销": "依赖具体表示法",
        "核心特性": "度<=m"
      }
    },
    {
      "type": "数据结构",
      "ID": "05DS003",
      "name": "满m叉树",
      "attributes": {
        "难度": "入门",
        "内容": "深度为 k 且有 (m^k - 1)/(m - 1) 个结点的 m 叉树。除叶子结点外，其它每个结点的度数都是 m。",
        "存储开销": "顺序存储效率高",
        "核心特性": "结构规整, 结点满额"
      }
    },
    {
      "type": "数据结构",
      "ID": "05DS004",
      "name": "二叉树",
      "attributes": {
        "难度": "入门",
        "内容": "度为 2 的有序树。每个结点最多有两棵子树，称为左子树和右子树，次序不能任意颠倒。",
        "存储开销": "常用链式存储O(n)",
        "核心特性": "度<=2, 有序(区分左右子树)"
      }
    },
    {
      "type": "概念",
      "ID": "05CON025",
      "name": "左子树",
      "attributes": {
        "难度": "入门",
        "内容": "二叉树根结点的左边分支构成的二叉树。"
      }
    },
    {
      "type": "概念",
      "ID": "05CON026",
      "name": "右子树",
      "attributes": {
        "难度": "入门",
        "内容": "二叉树根结点的右边分支构成的二叉树。"
      }
    },
    {
      "type": "概念",
      "ID": "05CON027",
      "name": "左孩子",
      "attributes": {
        "难度": "入门",
        "内容": "二叉树结点的左子树的根。"
      }
    },
    {
      "type": "概念",
      "ID": "05CON028",
      "name": "右孩子",
      "attributes": {
        "难度": "入门",
        "内容": "二叉树结点的右子树的根。"
      }
    },
    {
      "type": "数据结构",
      "ID": "05DS005",
      "name": "满二叉树",
      "attributes": {
        "难度": "入门",
        "内容": "深度为 k 且有 2^k - 1 个结点的二叉树。每一层上的结点数都达到最大值。",
        "存储开销": "顺序存储无浪费",
        "核心特性": "结构最饱满"
      }
    },
    {
      "type": "数据结构",
      "ID": "05DS006",
      "name": "完全二叉树",
      "attributes": {
        "难度": "入门",
        "内容": "深度为 k，具有 n 个结点的二叉树，当且仅当其每一个结点都与深度为 k 的满二叉树中编号从 1 至 n 的结点一一对应时，称为完全二叉树。",
        "存储开销": "顺序存储紧凑",
        "核心特性": "结点按层序编号连续 (除最后一层)"
      }
    },
    {
      "type": "数据结构",
      "ID": "05DS007",
      "name": "理想平衡二叉树",
      "attributes": {
        "难度": "中等",
        "内容": "除最后一层外，其余层都是满的，最后一层上的结点可以任意分布的二叉树。包含满二叉树和完全二叉树。",
        "存储开销": "链式存储常见",
        "核心特性": "高度相对平衡"
      }
    },
    {
      "type": "算法",
      "ID": "05ALG001",
      "name": "InitBiTree",
      "attributes": {
        "难度": "入门",
        "内容": "初始化二叉树，将其置为空树。",
        "时间复杂度": "O(1)",
        "空间复杂度": "O(1)",
        "设计思想": "赋值",
        "适用场景": "创建新二叉树实例前"
      }
    },
    {
      "type": "算法",
      "ID": "05ALG002",
      "name": "CreateBiTree",
      "attributes": {
        "难度": "中等",
        "内容": "根据特定输入格式（如广义表字符串）建立二叉树的存储结构（如二叉链表）。",
        "时间复杂度": "O(n)",
        "空间复杂度": "O(h)",
        "设计思想": "递归/栈/队列 (根据输入格式)",
        "适用场景": "从外部表示构建内存中的二叉树"
      }
    },
    {
      "type": "算法",
      "ID": "05ALG003",
      "name": "BiTreeEmpty",
      "attributes": {
        "难度": "入门",
        "内容": "判断二叉树是否为空。",
        "时间复杂度": "O(1)",
        "空间复杂度": "O(1)",
        "设计思想": "检查根指针",
        "适用场景": "在进行遍历、查找等操作前检查树是否有效"
      }
    },
    {
      "type": "算法",
      "ID": "05ALG004",
      "name": "TraverseBiTree",
      "attributes": {
        "难度": "入门",
        "内容": "按特定次序（前序、中序、后序、层序）访问二叉树所有结点，每个结点仅访问一次。",
        "时间复杂度": "O(n)",
        "空间复杂度": "O(h) 或 O(n)",
        "设计思想": "递归/迭代 (栈/队列)",
        "适用场景": "需要处理树中所有结点的场景"
      }
    },
    {
      "type": "算法",
      "ID": "05ALG005",
      "name": "FindNode",
      "attributes": {
        "难度": "入门",
        "内容": "在二叉树中查找具有特定值的结点。",
        "时间复杂度": "O(n)",
        "空间复杂度": "O(h)",
        "设计思想": "递归遍历",
        "适用场景": "查找树中是否存在特定数据元素"
      }
    },
    {
      "type": "算法",
      "ID": "05ALG006",
      "name": "BiTreeDepth",
      "attributes": {
        "难度": "入门",
        "内容": "计算二叉树的深度（高度）。",
        "时间复杂度": "O(n)",
        "空间复杂度": "O(h)",
        "设计思想": "递归",
        "适用场景": "获取树的高度信息"
      }
    },
    {
      "type": "算法",
      "ID": "05ALG007",
      "name": "PrintBiTree",
      "attributes": {
        "难度": "入门",
        "内容": "按某种表示法（如广义表）输出二叉树结构。",
        "时间复杂度": "O(n)",
        "空间复杂度": "O(h)",
        "设计思想": "递归遍历 (类前序)",
        "适用场景": "可视化或序列化树结构"
      }
    },
    {
      "type": "算法",
      "ID": "05ALG008",
      "name": "ClearBiTree",
      "attributes": {
        "难度": "入门",
        "内容": "删除二叉树所有结点，使其变为空树，回收存储空间。",
        "时间复杂度": "O(n)",
        "空间复杂度": "O(h)",
        "设计思想": "递归 (类后序)",
        "适用场景": "销毁不再使用的二叉树"
      }
    },
    {
      "type": "数据结构",
      "ID": "05DS008",
      "name": "顺序存储结构 (二叉树)",
      "attributes": {
        "难度": "入门",
        "内容": "用一维数组按层序编号存储二叉树结点，下标隐含父子关系。根存下标1(或0)，结点i的孩子存2i, 2i+1(或2i+1, 2i+2)。",
        "存储开销": "O(2^h)，对于非完全二叉树可能浪费大量空间",
        "核心特性": "随机访问父子(若存在) O(1), 仅适用于完全二叉树或接近完全的树"
      }
    },
    {
      "type": "数据结构",
      "ID": "05DS009",
      "name": "二叉链表",
      "attributes": {
        "难度": "入门",
        "内容": "每个结点包含数据域、指向左孩子和右孩子的指针域。",
        "存储开销": "O(n)",
        "核心特性": "动态存储, 插入删除相对方便, 查找父结点困难"
      }
    },
    {
      "type": "数据结构",
      "ID": "05DS010",
      "name": "带双亲指针的二叉链表",
      "attributes": {
        "难度": "入门",
        "内容": "在二叉链表基础上增加一个指向父结点的指针域。",
        "存储开销": "O(n) (略大于二叉链表)",
        "核心特性": "方便查找父结点，结构稍复杂"
      }
    },
    {
      "type": "算法",
      "ID": "05ALG009",
      "name": "前序遍历",
      "attributes": {
        "难度": "入门",
        "内容": "遍历二叉树的策略：访问根结点 -> 递归遍历左子树 -> 递归遍历右子树。",
        "时间复杂度": "O(n)",
        "空间复杂度": "O(h)",
        "设计思想": "递归/栈",
        "适用场景": "复制树、构建表达式树的前缀表示"
      }
    },
    {
      "type": "算法",
      "ID": "05ALG010",
      "name": "中序遍历",
      "attributes": {
        "难度": "入门",
        "内容": "遍历二叉树的策略：递归遍历左子树 -> 访问根结点 -> 递归遍历右子树。",
        "时间复杂度": "O(n)",
        "空间复杂度": "O(h)",
        "设计思想": "递归/栈",
        "适用场景": "对二叉搜索树排序、获取表达式树的中缀表示"
      }
    },
    {
      "type": "算法",
      "ID": "05ALG011",
      "name": "后序遍历",
      "attributes": {
        "难度": "入门",
        "内容": "遍历二叉树的策略：递归遍历左子树 -> 递归遍历右子树 -> 访问根结点。",
        "时间复杂度": "O(n)",
        "空间复杂度": "O(h)",
        "设计思想": "递归/栈",
        "适用场景": "计算表达式树的值、删除树（释放结点）"
      }
    },
    {
      "type": "算法",
      "ID": "05ALG012",
      "name": "按层遍历",
      "attributes": {
        "难度": "入门",
        "内容": "遍历二叉树的策略：从上到下、从左到右逐层访问结点。",
        "时间复杂度": "O(n)",
        "空间复杂度": "O(W) (W=最大宽度)",
        "设计思想": "队列 (BFS)",
        "适用场景": "求最短路径（无权图）、广度优先搜索"
      }
    },
    {
      "type": "数据结构",
      "ID": "05DS011",
      "name": "队列",
      "attributes": {
        "难度": "入门",
        "内容": "一种先进先出 (FIFO) 的线性数据结构，允许在表的一端（队尾）进行插入，在另一端（队头）进行删除。",
        "存储开销": "O(n)",
        "核心特性": "FIFO"
      }
    },
    {
      "type": "数据结构",
      "ID": "05DS012",
      "name": "栈",
      "attributes": {
        "难度": "入门",
        "内容": "一种后进先出 (LIFO) 的线性数据结构，只允许在表的一端（栈顶）进行插入和删除操作。",
        "存储开销": "O(n)",
        "核心特性": "LIFO"
      }
    },
    {
      "type": "算法",
      "ID": "05ALG013",
      "name": "InitTree",
      "attributes": {
        "难度": "入门",
        "内容": "初始化普通树，将其置为空树。",
        "时间复杂度": "O(1)",
        "空间复杂度": "O(1)",
        "设计思想": "赋值",
        "适用场景": "创建新树实例前"
      }
    },
    {
      "type": "算法",
      "ID": "05ALG014",
      "name": "CreateTree",
      "attributes": {
        "难度": "中等",
        "内容": "根据特定输入格式（如广义表字符串）建立普通树的存储结构（如孩子表示法、孩子兄弟表示法）。",
        "时间复杂度": "O(n)",
        "空间复杂度": "O(h)",
        "设计思想": "递归/栈",
        "适用场景": "从外部表示构建内存中的普通树"
      }
    },
    {
      "type": "算法",
      "ID": "05ALG015",
      "name": "TraverseTree",
      "attributes": {
        "难度": "入门",
        "内容": "按特定次序（先根、后根、层序）访问普通树所有结点，每个结点仅访问一次。",
        "时间复杂度": "O(n)",
        "空间复杂度": "O(h) 或 O(n)",
        "设计思想": "递归/迭代 (栈/队列)",
        "适用场景": "需要处理树中所有结点的场景"
      }
    },
    {
      "type": "算法",
      "ID": "05ALG016",
      "name": "FindNodeInTree",
      "attributes": {
        "难度": "入门",
        "内容": "在普通树中查找具有特定值的结点。",
        "时间复杂度": "O(n)",
        "空间复杂度": "O(h)",
        "设计思想": "递归遍历 (类先根)",
        "适用场景": "查找树中是否存在特定数据元素"
      }
    },
    {
      "type": "算法",
      "ID": "05ALG017",
      "name": "PrintTree",
      "attributes": {
        "难度": "入门",
        "内容": "按某种表示法（如广义表）输出普通树结构。",
        "时间复杂度": "O(n)",
        "空间复杂度": "O(h)",
        "设计思想": "递归遍历 (类先根)",
        "适用场景": "可视化或序列化树结构"
      }
    },
    {
      "type": "算法",
      "ID": "05ALG018",
      "name": "TreeEmpty",
      "attributes": {
        "难度": "入门",
        "内容": "判断普通树是否为空。",
        "时间复杂度": "O(1)",
        "空间复杂度": "O(1)",
        "设计思想": "检查根指针",
        "适用场景": "操作前检查树有效性"
      }
    },
    {
      "type": "算法",
      "ID": "05ALG019",
      "name": "ClearTree",
      "attributes": {
        "难度": "入门",
        "内容": "删除普通树所有结点，使其变为空树，回收存储空间。",
        "时间复杂度": "O(n)",
        "空间复杂度": "O(h)",
        "设计思想": "递归 (类后根)",
        "适用场景": "销毁不再使用的普通树"
      }
    },
    {
      "type": "数据结构",
      "ID": "05DS013",
      "name": "顺序存储结构 (树)",
      "attributes": {
        "难度": "入门",
        "内容": "用一维数组按特定编号规则（如m叉树编号）存储树结点，适用于满m叉树或完全m叉树。",
        "存储开销": "O(m^h)，对于稀疏树浪费严重",
        "核心特性": "父子关系由下标计算得出，不灵活"
      }
    },
    {
      "type": "数据结构",
      "ID": "05DS014",
      "name": "孩子表示法",
      "attributes": {
        "难度": "中等",
        "内容": "每个结点包含数据域和指向各孩子结点的指针域（可以使用定长数组或动态链表）。",
        "存储开销": "O(n*m) (定长) 或 O(n+E) (变长, E=边数)",
        "核心特性": "直接访问孩子方便，查找双亲困难，度固定时可能浪费空间"
      }
    },
    {
      "type": "数据结构",
      "ID": "05DS015",
      "name": "孩子双亲表示法",
      "attributes": {
        "难度": "中等",
        "内容": "在孩子表示法基础上增加一个指向父结点的指针。",
        "存储开销": "比孩子表示法略大 O(n+E+n)",
        "核心特性": "查找孩子和双亲都方便"
      }
    },
    {
      "type": "数据结构",
      "ID": "05DS016",
      "name": "孩子兄弟表示法",
      "attributes": {
        "难度": "中等",
        "内容": "将任意树转换为二叉树进行存储。每个结点存储数据、指向第一个孩子的指针和指向下一个兄弟的指针。",
        "存储开销": "O(n) (同二叉链表)",
        "核心特性": "存储结构统一为二叉链表，方便实现树的操作，丢失部分父子直接关系"
      }
    },
    {
      "type": "算法",
      "ID": "05ALG020",
      "name": "先根遍历 (树)",
      "attributes": {
        "难度": "入门",
        "内容": "遍历普通树的策略：访问根结点 -> 依次递归先根遍历根结点的每棵子树。",
        "时间复杂度": "O(n)",
        "空间复杂度": "O(h)",
        "设计思想": "递归",
        "适用场景": "树的拷贝、输出树结构"
      }
    },
    {
      "type": "算法",
      "ID": "05ALG021",
      "name": "后根遍历 (树)",
      "attributes": {
        "难度": "入门",
        "内容": "遍历普通树的策略：依次递归后根遍历根结点的每棵子树 -> 访问根结点。",
        "时间复杂度": "O(n)",
        "空间复杂度": "O(h)",
        "设计思想": "递归",
        "适用场景": "计算树的某些属性（如高度）、销毁树"
      }
    },
    {
      "type": "算法",
      "ID": "05ALG022",
      "name": "按层遍历 (树)",
      "attributes": {
        "难度": "入门",
        "内容": "遍历普通树的策略：从上到下、同层从左到右访问结点。",
        "时间复杂度": "O(n)",
        "空间复杂度": "O(W) (W=最大宽度)",
        "设计思想": "队列 (BFS)",
        "适用场景": "广度优先搜索相关应用"
      }
    }
  ],
  "relations": [
    {
      "type": "理论依赖",
      "关系ID": "05REL001",
      "source": "05DS001",
      "target": "05CON001",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "05REL002",
      "source": "05DS001",
      "target": "05CON002",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "05REL003",
      "source": "05DS001",
      "target": "05CON003",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "05REL004",
      "source": "05DS001",
      "target": "05CON004",
      "attributes": {
        "依赖强度": "中等"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "05REL005",
      "source": "05DS001",
      "target": "05CON005",
      "attributes": {
        "依赖强度": "中等"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "05REL006",
      "source": "05DS001",
      "target": "05CON006",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "05REL007",
      "source": "05DS001",
      "target": "05CON007",
      "attributes": {
        "依赖强度": "弱"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "05REL008",
      "source": "05DS001",
      "target": "05CON008",
      "attributes": {
        "依赖强度": "弱"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "05REL009",
      "source": "05DS001",
      "target": "05CON009",
      "attributes": {
        "依赖强度": "弱"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "05REL010",
      "source": "05DS001",
      "target": "05CON010",
      "attributes": {
        "依赖强度": "中等"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "05REL011",
      "source": "05DS001",
      "target": "05CON011",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "05REL012",
      "source": "05DS001",
      "target": "05CON012",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "05REL013",
      "source": "05DS001",
      "target": "05CON013",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "05REL014",
      "source": "05DS001",
      "target": "05CON014",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "05REL015",
      "source": "05DS001",
      "target": "05CON015",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "05REL016",
      "source": "05DS001",
      "target": "05CON016",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "05REL017",
      "source": "05DS001",
      "target": "05CON017",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "05REL018",
      "source": "05DS001",
      "target": "05CON018",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "05REL019",
      "source": "05DS001",
      "target": "05CON019",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "05REL020",
      "source": "05DS001",
      "target": "05CON020",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "05REL021",
      "source": "05DS001",
      "target": "05CON021",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "05REL022",
      "source": "05DS001",
      "target": "05CON022",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "05REL023",
      "source": "05DS001",
      "target": "05CON023",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "05REL024",
      "source": "05CON024",
      "target": "05DS001",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "继承",
      "关系ID": "05REL025",
      "source": "05DS002",
      "target": "05DS001",
      "attributes": {
        "父类ID": "05DS001",
        "子类ID": "05DS002",
        "约束条件": "度<=m"
      }
    },
    {
      "type": "继承",
      "关系ID": "05REL026",
      "source": "05DS003",
      "target": "05DS002",
      "attributes": {
        "父类ID": "05DS002",
        "子类ID": "05DS003",
        "约束条件": "每层结点满额 (除叶子外度为m)"
      }
    },
    {
      "type": "继承",
      "关系ID": "05REL027",
      "source": "05DS004",
      "target": "05DS001",
      "attributes": {
        "父类ID": "05DS001",
        "子类ID": "05DS004",
        "约束条件": "度<=2, 有序"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "05REL028",
      "source": "05DS004",
      "target": "05CON022",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "05REL029",
      "source": "05DS004",
      "target": "05CON025",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "05REL030",
      "source": "05DS004",
      "target": "05CON026",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "05REL031",
      "source": "05DS004",
      "target": "05CON027",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "05REL032",
      "source": "05DS004",
      "target": "05CON028",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "继承",
      "关系ID": "05REL033",
      "source": "05DS005",
      "target": "05DS004",
      "attributes": {
        "父类ID": "05DS004",
        "子类ID": "05DS005",
        "约束条件": "所有层满"
      }
    },
    {
      "type": "继承",
      "关系ID": "05REL034",
      "source": "05DS006",
      "target": "05DS004",
      "attributes": {
        "父类ID": "05DS004",
        "子类ID": "05DS006",
        "约束条件": "层序编号基本连续"
      }
    },
    {
      "type": "继承",
      "关系ID": "05REL035",
      "source": "05DS007",
      "target": "05DS004",
      "attributes": {
        "父类ID": "05DS004",
        "子类ID": "05DS007",
        "约束条件": "除最后一层外满"
      }
    },
    {
      "type": "继承",
      "关系ID": "05REL036",
      "source": "05DS005",
      "target": "05DS006",
      "attributes": {
        "父类ID": "05DS006",
        "子类ID": "05DS005",
        "约束条件": "最后一层也满"
      }
    },
    {
      "type": "继承",
      "关系ID": "05REL037",
      "source": "05DS006",
      "target": "05DS007",
      "attributes": {
        "父类ID": "05DS007",
        "子类ID": "05DS006",
        "约束条件": "最后一层结点左对齐"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "05REL038",
      "source": "05ALG001",
      "target": "05DS004",
      "attributes": {
        "算法ID": "05ALG001",
        "数据结构ID": "05DS004",
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "05REL039",
      "source": "05ALG002",
      "target": "05DS004",
      "attributes": {
        "算法ID": "05ALG002",
        "数据结构ID": "05DS004",
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "05REL040",
      "source": "05ALG003",
      "target": "05DS004",
      "attributes": {
        "算法ID": "05ALG003",
        "数据结构ID": "05DS004",
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "05REL041",
      "source": "05ALG004",
      "target": "05DS004",
      "attributes": {
        "算法ID": "05ALG004",
        "数据结构ID": "05DS004",
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "05REL042",
      "source": "05ALG005",
      "target": "05DS004",
      "attributes": {
        "算法ID": "05ALG005",
        "数据结构ID": "05DS004",
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "05REL043",
      "source": "05ALG006",
      "target": "05DS004",
      "attributes": {
        "算法ID": "05ALG006",
        "数据结构ID": "05DS004",
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "05REL044",
      "source": "05ALG007",
      "target": "05DS004",
      "attributes": {
        "算法ID": "05ALG007",
        "数据结构ID": "05DS004",
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "05REL045",
      "source": "05ALG008",
      "target": "05DS004",
      "attributes": {
        "算法ID": "05ALG008",
        "数据结构ID": "05DS004",
        "必需性": "是"
      }
    },
    {
      "type": "变体",
      "关系ID": "05REL046",
      "source": "05DS008",
      "target": "05DS004",
      "attributes": {
        "基础ID": "05DS004",
        "变体ID": "05DS008",
        "变体类型": "存储实现"
      }
    },
    {
      "type": "变体",
      "关系ID": "05REL047",
      "source": "05DS009",
      "target": "05DS004",
      "attributes": {
        "基础ID": "05DS004",
        "变体ID": "05DS009",
        "变体类型": "存储实现"
      }
    },
    {
      "type": "变体",
      "关系ID": "05REL048",
      "source": "05DS010",
      "target": "05DS009",
      "attributes": {
        "基础ID": "05DS009",
        "变体ID": "05DS010",
        "变体类型": "增加父指针"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "05REL049",
      "source": "05ALG009",
      "target": "05DS004",
      "attributes": {
        "算法ID": "05ALG009",
        "数据结构ID": "05DS004",
        "必需性": "否"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "05REL050",
      "source": "05ALG010",
      "target": "05DS004",
      "attributes": {
        "算法ID": "05ALG010",
        "数据结构ID": "05DS004",
        "必需性": "否"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "05REL051",
      "source": "05ALG011",
      "target": "05DS004",
      "attributes": {
        "算法ID": "05ALG011",
        "数据结构ID": "05DS004",
        "必需性": "否"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "05REL052",
      "source": "05ALG012",
      "target": "05DS004",
      "attributes": {
        "算法ID": "05ALG012",
        "数据结构ID": "05DS004",
        "必需性": "否"
      }
    },
    {
      "type": "使用",
      "关系ID": "05REL053",
      "source": "05ALG012",
      "target": "05DS011",
      "attributes": {
        "使用方ID": "05ALG012",
        "被使用的数据结构 ID": "05DS011",
        "使用角色": "辅助数据结构"
      }
    },
    {
      "type": "变体",
      "关系ID": "05REL054",
      "source": "05ALG009",
      "target": "05ALG004",
      "attributes": {
        "基础ID": "05ALG004",
        "变体ID": "05ALG009",
        "变体类型": "遍历策略"
      }
    },
    {
      "type": "变体",
      "关系ID": "05REL055",
      "source": "05ALG010",
      "target": "05ALG004",
      "attributes": {
        "基础ID": "05ALG004",
        "变体ID": "05ALG010",
        "变体类型": "遍历策略"
      }
    },
    {
      "type": "变体",
      "关系ID": "05REL056",
      "source": "05ALG011",
      "target": "05ALG004",
      "attributes": {
        "基础ID": "05ALG004",
        "变体ID": "05ALG011",
        "变体类型": "遍历策略"
      }
    },
    {
      "type": "变体",
      "关系ID": "05REL057",
      "source": "05ALG012",
      "target": "05ALG004",
      "attributes": {
        "基础ID": "05ALG004",
        "变体ID": "05ALG012",
        "变体类型": "遍历策略"
      }
    },
    {
      "type": "使用",
      "关系ID": "05REL058",
      "source": "05ALG002",
      "target": "05DS012",
      "attributes": {
        "使用方ID": "05ALG002",
        "被使用的数据结构 ID": "05DS012",
        "使用角色": "辅助数据结构 (用于广义表创建)"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "05REL059",
      "source": "05ALG013",
      "target": "05DS001",
      "attributes": {
        "算法ID": "05ALG013",
        "数据结构ID": "05DS001",
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "05REL060",
      "source": "05ALG014",
      "target": "05DS001",
      "attributes": {
        "算法ID": "05ALG014",
        "数据结构ID": "05DS001",
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "05REL061",
      "source": "05ALG015",
      "target": "05DS001",
      "attributes": {
        "算法ID": "05ALG015",
        "数据结构ID": "05DS001",
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "05REL062",
      "source": "05ALG016",
      "target": "05DS001",
      "attributes": {
        "算法ID": "05ALG016",
        "数据结构ID": "05DS001",
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "05REL063",
      "source": "05ALG017",
      "target": "05DS001",
      "attributes": {
        "算法ID": "05ALG017",
        "数据结构ID": "05DS001",
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "05REL064",
      "source": "05ALG018",
      "target": "05DS001",
      "attributes": {
        "算法ID": "05ALG018",
        "数据结构ID": "05DS001",
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "05REL065",
      "source": "05ALG019",
      "target": "05DS001",
      "attributes": {
        "算法ID": "05ALG019",
        "数据结构ID": "05DS001",
        "必需性": "是"
      }
    },
    {
      "type": "变体",
      "关系ID": "05REL066",
      "source": "05DS013",
      "target": "05DS001",
      "attributes": {
        "基础ID": "05DS001",
        "变体ID": "05DS013",
        "变体类型": "存储实现"
      }
    },
    {
      "type": "变体",
      "关系ID": "05REL067",
      "source": "05DS014",
      "target": "05DS001",
      "attributes": {
        "基础ID": "05DS001",
        "变体ID": "05DS014",
        "变体类型": "存储实现"
      }
    },
    {
      "type": "变体",
      "关系ID": "05REL068",
      "source": "05DS015",
      "target": "05DS014",
      "attributes": {
        "基础ID": "05DS014",
        "变体ID": "05DS015",
        "变体类型": "增加父指针"
      }
    },
    {
      "type": "变体",
      "关系ID": "05REL069",
      "source": "05DS016",
      "target": "05DS001",
      "attributes": {
        "基础ID": "05DS001",
        "变体ID": "05DS016",
        "变体类型": "存储实现(转换)"
      }
    },
    {
      "type": "使用",
      "关系ID": "05REL070",
      "source": "05DS016",
      "target": "05DS009",
      "attributes": {
        "使用方ID": "05DS016",
        "被使用的数据结构 ID": "05DS009",
        "使用角色": "底层存储结构"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "05REL071",
      "source": "05ALG020",
      "target": "05DS001",
      "attributes": {
        "算法ID": "05ALG020",
        "数据结构ID": "05DS001",
        "必需性": "否"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "05REL072",
      "source": "05ALG021",
      "target": "05DS001",
      "attributes": {
        "算法ID": "05ALG021",
        "数据结构ID": "05DS001",
        "必需性": "否"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "05REL073",
      "source": "05ALG022",
      "target": "05DS001",
      "attributes": {
        "算法ID": "05ALG022",
        "数据结构ID": "05DS001",
        "必需性": "否"
      }
    },
    {
      "type": "变体",
      "关系ID": "05REL074",
      "source": "05ALG020",
      "target": "05ALG015",
      "attributes": {
        "基础ID": "05ALG015",
        "变体ID": "05ALG020",
        "变体类型": "遍历策略"
      }
    },
    {
      "type": "变体",
      "关系ID": "05REL075",
      "source": "05ALG021",
      "target": "05ALG015",
      "attributes": {
        "基础ID": "05ALG015",
        "变体ID": "05ALG021",
        "变体类型": "遍历策略"
      }
    },
    {
      "type": "变体",
      "关系ID": "05REL076",
      "source": "05ALG022",
      "target": "05ALG015",
      "attributes": {
        "基础ID": "05ALG015",
        "变体ID": "05ALG022",
        "变体类型": "遍历策略"
      }
    },
    {
      "type": "使用",
      "关系ID": "05REL077",
      "source": "05ALG014",
      "target": "05DS012",
      "attributes": {
        "使用方ID": "05ALG014",
        "被使用的数据结构 ID": "05DS012",
        "使用角色": "辅助数据结构 (用于广义表创建)"
      }
    },
    {
      "type": "使用",
      "关系ID": "05REL078",
      "source": "05ALG022",
      "target": "05DS011",
      "attributes": {
        "使用方ID": "05ALG022",
        "被使用的数据结构 ID": "05DS011",
        "使用角色": "辅助数据结构"
      }
    }
  ]
}