{
  "entities": [
    {
      "type": "数据结构",
      "ID": "05DS001",
      "name": "树",
      "attributes": {
        "难度": "入门",
        "内容": "重要的非线性数据结构。递归定义：空树或由一个根结点和m棵互不相交的子树组成。定义了结点间的前驱、后继关系。适用场景: 家族关系、组织结构、书籍目录、算术表达式、目录结构等。",
        "存储开销": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "05CON001",
      "name": "结点",
      "attributes": {
        "难度": "入门",
        "内容": "树的基本组成单元，用于存储数据元素。"
      }
    },
    {
      "type": "概念",
      "ID": "05CON002",
      "name": "根结点",
      "attributes": {
        "难度": "入门",
        "内容": "树中唯一没有前驱的结点。"
      }
    },
    {
      "type": "概念",
      "ID": "05CON003",
      "name": "子树",
      "attributes": {
        "难度": "入门",
        "内容": "非空树中，除根结点外，其余结点被分为m棵互不相交的树，每棵称为根的子树。"
      }
    },
    {
      "type": "概念",
      "ID": "05CON004",
      "name": "递归",
      "attributes": {
        "难度": "中等",
        "内容": "一种定义或解决问题的方法，其中函数或结构在其定义中调用自身。树的定义是递归的，方便实现树的运算。"
      }
    },
    {
      "type": "概念",
      "ID": "05CON005",
      "name": "前驱",
      "attributes": {
        "难度": "入门",
        "内容": "在一个结点和其子树根结点的关系中，该结点是其子树根结点的前驱。除根结点外，每个结点有且仅有一个前驱。"
      }
    },
    {
      "type": "概念",
      "ID": "05CON006",
      "name": "后继",
      "attributes": {
        "难度": "入门",
        "内容": "在一个结点和其子树根结点的关系中，子树的根结点是该结点的后继。结点可以有任意多个后继。"
      }
    },
    {
      "type": "概念",
      "ID": "05CON007",
      "name": "空树",
      "attributes": {
        "难度": "入门",
        "内容": "不含有任何结点的树。"
      }
    },
    {
      "type": "概念",
      "ID": "05CON008",
      "name": "树形表示法",
      "attributes": {
        "难度": "入门",
        "内容": "最常用的树表示法，结点间通过连线表示关系，方向隐含为从上向下或从左向右。"
      }
    },
    {
      "type": "概念",
      "ID": "05CON009",
      "name": "二元组表示法",
      "attributes": {
        "难度": "入门",
        "内容": "使用结点集合K和结点间的关系R定义树：tree=(K, R)。"
      }
    },
    {
      "type": "概念",
      "ID": "05CON010",
      "name": "集合图表示",
      "attributes": {
        "难度": "入门",
        "内容": "一种树的表示法，每棵树对应一个圆形，内含根结点和子树。"
      }
    },
    {
      "type": "概念",
      "ID": "05CON011",
      "name": "凹入表示",
      "attributes": {
        "难度": "入门",
        "内容": "一种树的表示法，根对应条形，子树根对应较短条形，树根在上子树根在下。"
      }
    },
    {
      "type": "概念",
      "ID": "05CON012",
      "name": "广义表表示",
      "attributes": {
        "难度": "入门",
        "内容": "一种树的表示法，根作为表名放前面，子树列表放在括号内，如 A(B(...), C(...))。"
      }
    },
    {
      "type": "概念",
      "ID": "05CON013",
      "name": "结点的度",
      "attributes": {
        "难度": "入门",
        "内容": "结点拥有的子树数目，或其直接后继结点的数目。"
      }
    },
    {
      "type": "概念",
      "ID": "05CON014",
      "name": "树的度",
      "attributes": {
        "难度": "入门",
        "内容": "树中所有结点的度的最大值。"
      }
    },
    {
      "type": "概念",
      "ID": "05CON015",
      "name": "叶子结点",
      "attributes": {
        "难度": "入门",
        "内容": "度为0的结点，也称终端结点。"
      }
    },
    {
      "type": "概念",
      "ID": "05CON016",
      "name": "分支结点",
      "attributes": {
        "难度": "入门",
        "内容": "度大于0的结点，也称非终端结点。"
      }
    },
    {
      "type": "概念",
      "ID": "05CON017",
      "name": "孩子结点",
      "attributes": {
        "难度": "入门",
        "内容": "一个结点的子树的根结点，即该结点的直接后继。"
      }
    },
    {
      "type": "概念",
      "ID": "05CON018",
      "name": "双亲结点",
      "attributes": {
        "难度": "入门",
        "内容": "孩子结点的直接前驱结点。"
      }
    },
    {
      "type": "概念",
      "ID": "05CON019",
      "name": "兄弟结点",
      "attributes": {
        "难度": "入门",
        "内容": "具有相同双亲结点的孩子结点。"
      }
    },
    {
      "type": "概念",
      "ID": "05CON020",
      "name": "子孙",
      "attributes": {
        "难度": "入门",
        "内容": "一个结点的所有子树中的所有结点。"
      }
    },
    {
      "type": "概念",
      "ID": "05CON021",
      "name": "祖先",
      "attributes": {
        "难度": "入门",
        "内容": "从根结点到某结点路径上经过的所有结点（不含该结点自身，但含根结点）。"
      }
    },
    {
      "type": "概念",
      "ID": "05CON022",
      "name": "层数",
      "attributes": {
        "难度": "入门",
        "内容": "结点在树中的层次。根结点为第1层，其孩子为第2层，以此类推。"
      }
    },
    {
      "type": "概念",
      "ID": "05CON023",
      "name": "深度",
      "attributes": {
        "难度": "入门",
        "内容": "树中所有结点的最大层数，也称高度。"
      }
    },
    {
      "type": "数据结构",
      "ID": "05DS002",
      "name": "有序树",
      "attributes": {
        "难度": "入门",
        "内容": "树中各结点的子树是按照一定的次序从左向右安排的。",
        "存储开销": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "05DS003",
      "name": "无序树",
      "attributes": {
        "难度": "入门",
        "内容": "树中各结点的子树没有次序关系。",
        "存储开销": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "05CON024",
      "name": "森林",
      "attributes": {
        "难度": "入门",
        "内容": "m (m >= 0) 棵互不相交的树的集合。一个结点的子树集合构成森林。"
      }
    },
    {
      "type": "概念",
      "ID": "05CON025",
      "name": "树性质1 (结点数与度数关系)",
      "attributes": {
        "难度": "中等",
        "内容": "树中的结点数等于所有结点的度数之和加1。"
      }
    },
    {
      "type": "概念",
      "ID": "05CON026",
      "name": "树性质2 (层结点数上限)",
      "attributes": {
        "难度": "中等",
        "内容": "度为k的树中第i层 (i >= 1) 上至多有 k^(i-1) 个结点。"
      }
    },
    {
      "type": "概念",
      "ID": "05CON027",
      "name": "数学归纳法",
      "attributes": {
        "难度": "中等",
        "内容": "一种数学证明方法，常用于证明与自然数相关的命题。"
      }
    },
    {
      "type": "概念",
      "ID": "05CON028",
      "name": "树性质3 (总结点数上限)",
      "attributes": {
        "难度": "中等",
        "内容": "深度为h的k叉树至多有 (k^h - 1) / (k - 1) 个结点。"
      }
    },
    {
      "type": "数据结构",
      "ID": "05DS004",
      "name": "k叉树",
      "attributes": {
        "难度": "入门",
        "内容": "度为k的树，即树中任意结点的度数最大为k。",
        "存储开销": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "05DS005",
      "name": "满k叉树",
      "attributes": {
        "难度": "中等",
        "内容": "深度为h且结点总数达到最大值 (k^h - 1) / (k - 1) 的k叉树。",
        "存储开销": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "05CON029",
      "name": "树性质4 (k叉树最小深度)",
      "attributes": {
        "难度": "中等",
        "内容": "具有n个结点的k叉树的最小深度为 ceil(log_k(n(k-1)+1))。"
      }
    },
    {
      "type": "概念",
      "ID": "05CON030",
      "name": "向上取整",
      "attributes": {
        "难度": "入门",
        "内容": "ceil(x)，取大于等于x的最小整数。"
      }
    },
    {
      "type": "概念",
      "ID": "05CON031",
      "name": "向下取整",
      "attributes": {
        "难度": "入门",
        "内容": "floor(x)，取小于等于x的最大整数。"
      }
    },
    {
      "type": "数据结构",
      "ID": "05DS006",
      "name": "二叉树",
      "attributes": {
        "难度": "入门",
        "内容": "度为2的有序树。递归定义：空树或由一个根结点及两棵互不相交的左、右子树组成。是最简单且重要的树结构。",
        "存储开销": "根据存储方式变化"
      }
    },
    {
      "type": "概念",
      "ID": "05CON032",
      "name": "左子树",
      "attributes": {
        "难度": "入门",
        "内容": "二叉树根结点的左边子树。"
      }
    },
    {
      "type": "概念",
      "ID": "05CON033",
      "name": "右子树",
      "attributes": {
        "难度": "入门",
        "内容": "二叉树根结点的右边子树。"
      }
    },
    {
      "type": "概念",
      "ID": "05CON034",
      "name": "左孩子",
      "attributes": {
        "难度": "入门",
        "内容": "二叉树中，结点左子树的根结点。"
      }
    },
    {
      "type": "概念",
      "ID": "05CON035",
      "name": "右孩子",
      "attributes": {
        "难度": "入门",
        "内容": "二叉树中，结点右子树的根结点。"
      }
    },
    {
      "type": "概念",
      "ID": "05CON036",
      "name": "二叉树性质1 (叶子与度2结点关系)",
      "attributes": {
        "难度": "中等",
        "内容": "二叉树中，叶子结点数 (n0) 等于度为2的结点数 (n2) 加1，即 n0 = n2 + 1。"
      }
    },
    {
      "type": "概念",
      "ID": "05CON037",
      "name": "二叉树性质2 (层结点数上限)",
      "attributes": {
        "难度": "中等",
        "内容": "二叉树第i层 (i >= 1) 上至多有 2^(i-1) 个结点。"
      }
    },
    {
      "type": "概念",
      "ID": "05CON038",
      "name": "二叉树性质3 (总结点数上限)",
      "attributes": {
        "难度": "中等",
        "内容": "深度为h的二叉树至多有 2^h - 1 个结点。"
      }
    },
    {
      "type": "数据结构",
      "ID": "05DS007",
      "name": "满二叉树",
      "attributes": {
        "难度": "中等",
        "内容": "深度为h且结点总数为 2^h - 1 的二叉树。每一层都达到最大结点数。",
        "存储开销": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "05DS008",
      "name": "完全二叉树",
      "attributes": {
        "难度": "中等",
        "内容": "深度为h的二叉树，除第h层外，其它各层(1~h-1)的结点数都达到最大个数，第h层的所有结点都连续集中在最左边。",
        "存储开销": "适合顺序存储"
      }
    },
    {
      "type": "概念",
      "ID": "05CON039",
      "name": "完全二叉树性质 (编号关系)",
      "attributes": {
        "难度": "中等",
        "内容": "按层序编号 (从1开始) 的完全二叉树：结点i的左孩子为2i，右孩子为2i+1 (若存在)；结点i的双亲为 floor(i/2) (若i>1)。编号 <= floor(n/2) 的是分支结点，其余是叶子结点。"
      }
    },
    {
      "type": "概念",
      "ID": "05CON040",
      "name": "完全二叉树性质 (深度)",
      "attributes": {
        "难度": "中等",
        "内容": "具有n个 (n>0) 结点的完全二叉树的深度为 ceil(log2(n+1)) 或 floor(log2 n) + 1。"
      }
    },
    {
      "type": "数据结构",
      "ID": "05DS009",
      "name": "理想平衡二叉树",
      "attributes": {
        "难度": "中等",
        "内容": "除最后一层外，其余各层结点数都是满的二叉树。最后一层结点可以任意分布。包含满二叉树和完全二叉树。",
        "存储开销": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "05CON041",
      "name": "抽象数据类型 (ADT)",
      "attributes": {
        "难度": "中等",
        "内容": "定义数据对象、数据对象中元素间的关系及对数据元素的基本操作的集合。"
      }
    },
    {
      "type": "操作",
      "ID": "05OP001",
      "name": "InitBTree",
      "attributes": {
        "难度": "入门",
        "内容": "初始化二叉树，将其置为空树 (根指针置NULL)。"
      }
    },
    {
      "type": "操作",
      "ID": "05OP002",
      "name": "CreateBTree",
      "attributes": {
        "难度": "高级",
        "内容": "根据特定输入格式 (如广义表字符串) 建立二叉树的内存存储结构。"
      }
    },
    {
      "type": "操作",
      "ID": "05OP003",
      "name": "EmptyBTree",
      "attributes": {
        "难度": "入门",
        "内容": "判断二叉树是否为空。"
      }
    },
    {
      "type": "操作",
      "ID": "05OP004",
      "name": "TraverseBTree",
      "attributes": {
        "难度": "中等",
        "内容": "按照特定次序访问二叉树中的所有结点，且每个结点仅被访问一次。"
      }
    },
    {
      "type": "操作",
      "ID": "05OP005",
      "name": "FindBTree",
      "attributes": {
        "难度": "中等",
        "内容": "在二叉树中查找具有特定值的结点。"
      }
    },
    {
      "type": "操作",
      "ID": "05OP006",
      "name": "BTreeDepth",
      "attributes": {
        "难度": "中等",
        "内容": "计算并返回二叉树的深度。"
      }
    },
    {
      "type": "操作",
      "ID": "05OP007",
      "name": "PrintBTree",
      "attributes": {
        "难度": "中等",
        "内容": "按照某种表示方法 (如广义表) 输出二叉树的结构。"
      }
    },
    {
      "type": "操作",
      "ID": "05OP008",
      "name": "ClearBTree",
      "attributes": {
        "难度": "中等",
        "内容": "清除二叉树中的所有结点，释放内存空间，使其变为空树。"
      }
    },
    {
      "type": "数据结构",
      "ID": "05DS010",
      "name": "二叉树顺序存储结构",
      "attributes": {
        "难度": "中等",
        "内容": "使用一维数组存储二叉树结点。按完全二叉树的层序编号规则将结点值存入数组对应下标位置。通过下标计算父子关系。",
        "存储开销": "对于满二叉树和完全二叉树空间利用率高；对于一般稀疏二叉树会浪费大量空间。"
      }
    },
    {
      "type": "数据结构",
      "ID": "05DS011",
      "name": "二叉树链接存储结构",
      "attributes": {
        "难度": "中等",
        "内容": "使用链式结构存储二叉树。每个结点包含数据域和指向左右孩子的指针域。",
        "存储开销": "每个结点需要额外存储指针，但空间利用率通常比稀疏二叉树的顺序存储高。"
      }
    },
    {
      "type": "数据结构",
      "ID": "05DS012",
      "name": "二叉链表",
      "attributes": {
        "难度": "中等",
        "内容": "最常用的二叉树链接存储结构，结点包含数据域、左孩子指针域 (left)、右孩子指针域 (right)。",
        "存储开销": "数据 + 2个指针 / 结点。"
      }
    },
    {
      "type": "数据结构",
      "ID": "05DS013",
      "name": "带双亲指针的二叉链表",
      "attributes": {
        "难度": "中等",
        "内容": "在二叉链表的基础上，为每个结点增加一个指向其双亲结点的指针域 (parent)。",
        "存储开销": "数据 + 3个指针 / 结点。便于查找双亲。"
      }
    },
    {
      "type": "算法",
      "ID": "05ALG001",
      "name": "二叉树遍历",
      "attributes": {
        "难度": "中等",
        "内容": "指按照一定次序访问树中所有结点，并且每个结点的值仅被访问一次的过程。基本操作包括访问根(D)、遍历左子树(L)、遍历右子树(R)。",
        "时间复杂度": "O(n)",
        "空间复杂度": "取决于实现方式 (递归O(h), 非递归可能不同)"
      }
    },
    {
      "type": "算法",
      "ID": "05ALG002",
      "name": "前序遍历 (递归)",
      "attributes": {
        "难度": "中等",
        "内容": "遍历顺序：根结点 -> 左子树 -> 右子树 (DLR)。使用递归实现。",
        "时间复杂度": "O(n)",
        "空间复杂度": "O(h)，h为树高 (递归栈深度)"
      }
    },
    {
      "type": "算法",
      "ID": "05ALG003",
      "name": "中序遍历 (递归)",
      "attributes": {
        "难度": "中等",
        "内容": "遍历顺序：左子树 -> 根结点 -> 右子树 (LDR)。使用递归实现。",
        "时间复杂度": "O(n)",
        "空间复杂度": "O(h)，h为树高 (递归栈深度)"
      }
    },
    {
      "type": "算法",
      "ID": "05ALG004",
      "name": "后序遍历 (递归)",
      "attributes": {
        "难度": "中等",
        "内容": "遍历顺序：左子树 -> 右子树 -> 根结点 (LRD)。使用递归实现。",
        "时间复杂度": "O(n)",
        "空间复杂度": "O(h)，h为树高 (递归栈深度)"
      }
    },
    {
      "type": "数据结构",
      "ID": "05DS014",
      "name": "栈",
      "attributes": {
        "难度": "入门",
        "内容": "一种后进先出(LIFO)的数据结构。在树的递归遍历中隐式使用 (系统栈)，也可用于非递归遍历的实现。",
        "存储开销": "取决于存储元素数量和类型"
      }
    },
    {
      "type": "算法",
      "ID": "05ALG005",
      "name": "按层遍历",
      "attributes": {
        "难度": "中等",
        "内容": "按层次顺序遍历二叉树，从上到下，同一层从左到右。通常使用队列实现，非递归。",
        "时间复杂度": "O(n)",
        "空间复杂度": "O(w)，w为树的最大宽度 (队列所需空间)"
      }
    },
    {
      "type": "数据结构",
      "ID": "05DS015",
      "name": "队列",
      "attributes": {
        "难度": "入门",
        "内容": "一种先进先出(FIFO)的数据结构。常用于实现树的按层遍历。",
        "存储开销": "取决于存储元素数量和类型"
      }
    },
    {
      "type": "算法",
      "ID": "05ALG006",
      "name": "建立二叉树 (广义表)",
      "attributes": {
        "难度": "高级",
        "内容": "根据广义表表示的字符串构建二叉树的链接存储结构。使用栈来辅助处理嵌套关系和左右子树的链接。",
        "时间复杂度": "O(N)，N为广义表字符串长度",
        "空间复杂度": "O(h)，h为树高 (栈深度)"
      }
    },
    {
      "type": "算法",
      "ID": "05ALG007",
      "name": "求二叉树深度 (递归)",
      "attributes": {
        "难度": "中等",
        "内容": "递归计算二叉树的深度。空树深度为0，非空树深度为左右子树深度的最大值加1。",
        "时间复杂度": "O(n)",
        "空间复杂度": "O(h)"
      }
    },
    {
      "type": "算法",
      "ID": "05ALG008",
      "name": "查找二叉树结点 (递归)",
      "attributes": {
        "难度": "中等",
        "内容": "递归地在二叉树中查找具有给定值的结点。类似于前序遍历。",
        "时间复杂度": "O(n)",
        "空间复杂度": "O(h)"
      }
    },
    {
      "type": "算法",
      "ID": "05ALG009",
      "name": "输出二叉树 (广义表递归)",
      "attributes": {
        "难度": "中等",
        "内容": "递归地将二叉树以广义表的形式输出。类似于前序遍历，并在适当位置添加括号和逗号。",
        "时间复杂度": "O(n)",
        "空间复杂度": "O(h)"
      }
    },
    {
      "type": "算法",
      "ID": "05ALG010",
      "name": "清除二叉树 (递归)",
      "attributes": {
        "难度": "中等",
        "内容": "递归地删除二叉树的所有结点，释放内存。类似于后序遍历，先删除子树，再删除根。",
        "时间复杂度": "O(n)",
        "空间复杂度": "O(h)"
      }
    },
    {
      "type": "操作",
      "ID": "05OP009",
      "name": "InitGTree",
      "attributes": {
        "难度": "入门",
        "内容": "初始化普通树 (k叉树)，置为空树。"
      }
    },
    {
      "type": "操作",
      "ID": "05OP010",
      "name": "CreateGTree",
      "attributes": {
        "难度": "高级",
        "内容": "根据广义表表示建立普通树 (k叉树) 的存储结构。"
      }
    },
    {
      "type": "操作",
      "ID": "05OP011",
      "name": "TraverseGTree",
      "attributes": {
        "难度": "中等",
        "内容": "按一定次序遍历普通树 (k叉树)。"
      }
    },
    {
      "type": "操作",
      "ID": "05OP012",
      "name": "FindGTree",
      "attributes": {
        "难度": "中等",
        "内容": "在普通树 (k叉树) 中查找特定值的结点。"
      }
    },
    {
      "type": "操作",
      "ID": "05OP013",
      "name": "PrintGTree",
      "attributes": {
        "难度": "中等",
        "内容": "按某种表示法输出普通树 (k叉树)。"
      }
    },
    {
      "type": "操作",
      "ID": "05OP014",
      "name": "EmptyGTree",
      "attributes": {
        "难度": "入门",
        "内容": "判断普通树 (k叉树) 是否为空。"
      }
    },
    {
      "type": "操作",
      "ID": "05OP015",
      "name": "ClearGTree",
      "attributes": {
        "难度": "中等",
        "内容": "清除普通树 (k叉树) 中的所有结点。"
      }
    },
    {
      "type": "数据结构",
      "ID": "05DS017",
      "name": "k叉树顺序存储结构",
      "attributes": {
        "难度": "中等",
        "内容": "使用一维数组存储k叉树结点。需要定义结点编号规则及父子关系计算公式。如：根为1，结点i的孩子为 k*i-(k-2) 到 k*i+1；结点j的父亲为 floor((j-2)/k)+1。",
        "存储开销": "适合满k叉树和完全k叉树，否则空间浪费严重。"
      }
    },
    {
      "type": "数据结构",
      "ID": "05DS018",
      "name": "k叉树链接存储结构",
      "attributes": {
        "难度": "中等",
        "内容": "使用链式结构存储k叉树。有多种实现方式。",
        "存储开销": "取决于具体实现方式。"
      }
    },
    {
      "type": "数据结构",
      "ID": "05DS019",
      "name": "标准方式 (k叉树链接存储)",
      "attributes": {
        "难度": "中等",
        "内容": "每个结点包含值域和k个指针域，分别指向k个孩子结点 (或子树)。",
        "存储开销": "数据 + k个指针 / 结点。"
      }
    },
    {
      "type": "数据结构",
      "ID": "05DS020",
      "name": "广义标准方式 (k叉树链接存储)",
      "attributes": {
        "难度": "中等",
        "内容": "在标准方式基础上，增加一个指向双亲结点的指针域。",
        "存储开销": "数据 + k+1个指针 / 结点。"
      }
    },
    {
      "type": "数据结构",
      "ID": "05DS021",
      "name": "二叉树方式 (树存储)",
      "attributes": {
        "难度": "高级",
        "内容": "将普通树转换为等价的二叉树（左孩子-右兄弟表示法），然后使用二叉链表存储。",
        "存储开销": "同二叉链表 (数据 + 2指针 / 结点)。不适合表示某些有序树。"
      }
    },
    {
      "type": "算法",
      "ID": "05ALG011",
      "name": "建立k叉树 (广义表)",
      "attributes": {
        "难度": "高级",
        "内容": "根据广义表字符串创建k叉树的标准链接存储结构。使用两个栈，一个存结点指针，一个存孩子序号。",
        "时间复杂度": "O(N)，N为广义表字符串长度",
        "空间复杂度": "O(h)，h为树高 (栈深度)"
      }
    },
    {
      "type": "算法",
      "ID": "05ALG012",
      "name": "先根遍历 (k叉树)",
      "attributes": {
        "难度": "中等",
        "内容": "遍历顺序：访问根结点 -> 从左到右依次先根遍历各子树。递归实现。",
        "时间复杂度": "O(n)",
        "空间复杂度": "O(h)"
      }
    },
    {
      "type": "算法",
      "ID": "05ALG013",
      "name": "后根遍历 (k叉树)",
      "attributes": {
        "难度": "中等",
        "内容": "遍历顺序：从左到右依次后根遍历各子树 -> 访问根结点。递归实现。",
        "时间复杂度": "O(n)",
        "空间复杂度": "O(h)"
      }
    },
    {
      "type": "算法",
      "ID": "05ALG014",
      "name": "按层遍历 (k叉树)",
      "attributes": {
        "难度": "中等",
        "内容": "按层次顺序遍历k叉树，从上到下，同层从左到右。使用队列实现，非递归。",
        "时间复杂度": "O(n)",
        "空间复杂度": "O(w)，w为树的最大宽度"
      }
    },
    {
      "type": "算法",
      "ID": "05ALG015",
      "name": "查找k叉树结点 (递归)",
      "attributes": {
        "难度": "中等",
        "内容": "递归地在k叉树中查找具有给定值的结点。类似于先根遍历。",
        "时间复杂度": "O(n)",
        "空间复杂度": "O(h)"
      }
    },
    {
      "type": "算法",
      "ID": "05ALG016",
      "name": "输出k叉树 (广义表递归)",
      "attributes": {
        "难度": "中等",
        "内容": "递归地将k叉树以广义表的形式输出。类似于先根遍历。",
        "时间复杂度": "O(n)",
        "空间复杂度": "O(h)"
      }
    },
    {
      "type": "算法",
      "ID": "05ALG017",
      "name": "求k叉树深度 (递归)",
      "attributes": {
        "难度": "中等",
        "内容": "递归计算k叉树的深度。空树为0，非空树为所有子树深度的最大值加1。",
        "时间复杂度": "O(n)",
        "空间复杂度": "O(h)"
      }
    },
    {
      "type": "算法",
      "ID": "05ALG018",
      "name": "清除k叉树 (递归)",
      "attributes": {
        "难度": "中等",
        "内容": "递归地删除k叉树的所有结点。类似于后根遍历。",
        "时间复杂度": "O(n)",
        "空间复杂度": "O(h)"
      }
    }
  ],
  "relations": [
    {
      "type": "继承",
      "关系ID": "05REL001",
      "source": "05DS002",
      "target": "05DS001",
      "attributes": {
        "约束条件": "子树有序"
      }
    },
    {
      "type": "继承",
      "关系ID": "05REL002",
      "source": "05DS003",
      "target": "05DS001",
      "attributes": {
        "约束条件": "子树无序"
      }
    },
    {
      "type": "继承",
      "关系ID": "05REL003",
      "source": "05DS004",
      "target": "05DS001",
      "attributes": {
        "约束条件": "度<=k"
      }
    },
    {
      "type": "继承",
      "关系ID": "05REL004",
      "source": "05DS005",
      "target": "05DS004",
      "attributes": {
        "约束条件": "深度h且结点数=(k^h-1)/(k-1)"
      }
    },
    {
      "type": "继承",
      "关系ID": "05REL005",
      "source": "05DS006",
      "target": "05DS002",
      "attributes": {
        "约束条件": "度=2"
      }
    },
    {
      "type": "继承",
      "关系ID": "05REL006",
      "source": "05DS006",
      "target": "05DS004",
      "attributes": {
        "约束条件": "k=2"
      }
    },
    {
      "type": "继承",
      "关系ID": "05REL007",
      "source": "05DS007",
      "target": "05DS006",
      "attributes": {
        "约束条件": "深度h且结点数=2^h-1"
      }
    },
    {
      "type": "继承",
      "关系ID": "05REL008",
      "source": "05DS007",
      "target": "05DS005",
      "attributes": {
        "约束条件": "k=2"
      }
    },
    {
      "type": "继承",
      "关系ID": "05REL009",
      "source": "05DS008",
      "target": "05DS006",
      "attributes": {
        "约束条件": "除最后层外满,最后层左对齐"
      }
    },
    {
      "type": "变体",
      "关系ID": "05REL010",
      "source": "05DS008",
      "target": "05DS006",
      "attributes": {
        "基础ID": "05DS006",
        "变体ID": "05DS008",
        "变体类型": "结构约束"
      }
    },
    {
      "type": "继承",
      "关系ID": "05REL011",
      "source": "05DS009",
      "target": "05DS006",
      "attributes": {
        "约束条件": "除最后层外满"
      }
    },
    {
      "type": "变体",
      "关系ID": "05REL012",
      "source": "05DS010",
      "target": "05DS006",
      "attributes": {
        "基础ID": "05DS006",
        "变体ID": "05DS010",
        "变体类型": "存储实现"
      }
    },
    {
      "type": "变体",
      "关系ID": "05REL013",
      "source": "05DS011",
      "target": "05DS006",
      "attributes": {
        "基础ID": "05DS006",
        "变体ID": "05DS011",
        "变体类型": "存储实现"
      }
    },
    {
      "type": "继承",
      "关系ID": "05REL014",
      "source": "05DS012",
      "target": "05DS011",
      "attributes": {}
    },
    {
      "type": "变体",
      "关系ID": "05REL015",
      "source": "05DS013",
      "target": "05DS012",
      "attributes": {
        "基础ID": "05DS012",
        "变体ID": "05DS013",
        "变体类型": "增加指针"
      }
    },
    {
      "type": "变体",
      "关系ID": "05REL016",
      "source": "05DS017",
      "target": "05DS004",
      "attributes": {
        "基础ID": "05DS004",
        "变体ID": "05DS017",
        "变体类型": "存储实现"
      }
    },
    {
      "type": "变体",
      "关系ID": "05REL017",
      "source": "05DS018",
      "target": "05DS004",
      "attributes": {
        "基础ID": "05DS004",
        "变体ID": "05DS018",
        "变体类型": "存储实现"
      }
    },
    {
      "type": "继承",
      "关系ID": "05REL018",
      "source": "05DS019",
      "target": "05DS018",
      "attributes": {}
    },
    {
      "type": "变体",
      "关系ID": "05REL019",
      "source": "05DS020",
      "target": "05DS019",
      "attributes": {
        "基础ID": "05DS019",
        "变体ID": "05DS020",
        "变体类型": "增加指针"
      }
    },
    {
      "type": "变体",
      "关系ID": "05REL020",
      "source": "05DS021",
      "target": "05DS018",
      "attributes": {
        "基础ID": "05DS018",
        "变体ID": "05DS021",
        "变体类型": "转换存储"
      }
    },
    {
      "type": "使用",
      "关系ID": "05REL021",
      "source": "05DS021",
      "target": "05DS012",
      "attributes": {
        "使用角色": "核心实现"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "05REL022",
      "source": "05OP001",
      "target": "05DS006",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "05REL023",
      "source": "05OP002",
      "target": "05DS006",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "05REL024",
      "source": "05OP003",
      "target": "05DS006",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "05REL025",
      "source": "05OP004",
      "target": "05DS006",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "05REL026",
      "source": "05OP005",
      "target": "05DS006",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "05REL027",
      "source": "05OP006",
      "target": "05DS006",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "05REL028",
      "source": "05OP007",
      "target": "05DS006",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "05REL029",
      "source": "05OP008",
      "target": "05DS006",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "05REL030",
      "source": "05OP009",
      "target": "05DS004",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "05REL031",
      "source": "05OP010",
      "target": "05DS004",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "05REL032",
      "source": "05OP011",
      "target": "05DS004",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "05REL033",
      "source": "05OP012",
      "target": "05DS004",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "05REL034",
      "source": "05OP013",
      "target": "05DS004",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "05REL035",
      "source": "05OP014",
      "target": "05DS004",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "05REL036",
      "source": "05OP015",
      "target": "05DS004",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "使用",
      "关系ID": "05REL037",
      "source": "05ALG001",
      "target": "05DS006",
      "attributes": {
        "使用角色": "核心"
      }
    },
    {
      "type": "继承",
      "关系ID": "05REL038",
      "source": "05ALG002",
      "target": "05ALG001",
      "attributes": {}
    },
    {
      "type": "继承",
      "关系ID": "05REL039",
      "source": "05ALG003",
      "target": "05ALG001",
      "attributes": {}
    },
    {
      "type": "继承",
      "关系ID": "05REL040",
      "source": "05ALG004",
      "target": "05ALG001",
      "attributes": {}
    },
    {
      "type": "继承",
      "关系ID": "05REL041",
      "source": "05ALG005",
      "target": "05ALG001",
      "attributes": {}
    },
    {
      "type": "使用",
      "关系ID": "05REL042",
      "source": "05ALG005",
      "target": "05DS015",
      "attributes": {
        "使用角色": "辅助"
      }
    },
    {
      "type": "使用",
      "关系ID": "05REL043",
      "source": "05ALG006",
      "target": "05DS014",
      "attributes": {
        "使用角色": "辅助"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "05REL044",
      "source": "05ALG006",
      "target": "05CON012",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "05REL045",
      "source": "05ALG002",
      "target": "05CON004",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "05REL046",
      "source": "05ALG003",
      "target": "05CON004",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "05REL047",
      "source": "05ALG004",
      "target": "05CON004",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "05REL048",
      "source": "05ALG007",
      "target": "05CON004",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "05REL049",
      "source": "05ALG008",
      "target": "05CON004",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "05REL050",
      "source": "05ALG009",
      "target": "05CON004",
      "attributes": {
        "依赖强度": "强"
      }
    },
     {
      "type": "理论依赖",
      "关系ID": "05REL051",
      "source": "05ALG010",
      "target": "05CON004",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "使用",
      "关系ID": "05REL052",
      "source": "05ALG011",
      "target": "05DS019",
      "attributes": {
        "使用角色": "输出结构"
      }
    },
    {
      "type": "使用",
      "关系ID": "05REL053",
      "source": "05ALG011",
      "target": "05DS014",
      "attributes": {
        "使用角色": "辅助"
      }
    },
     {
      "type": "理论依赖",
      "关系ID": "05REL054",
      "source": "05ALG011",
      "target": "05CON012",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "继承",
      "关系ID": "05REL055",
      "source": "05ALG012",
      "target": "05ALG001",
      "attributes": {}
    },
    {
      "type": "继承",
      "关系ID": "05REL056",
      "source": "05ALG013",
      "target": "05ALG001",
      "attributes": {}
    },
    {
      "type": "继承",
      "关系ID": "05REL057",
      "source": "05ALG014",
      "target": "05ALG001",
      "attributes": {}
    },
    {
      "type": "使用",
      "关系ID": "05REL058",
      "source": "05ALG014",
      "target": "05DS015",
      "attributes": {
        "使用角色": "辅助"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "05REL059",
      "source": "05ALG012",
      "target": "05CON004",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "05REL060",
      "source": "05ALG013",
      "target": "05CON004",
      "attributes": {
        "依赖强度": "强"
      }
    },
     {
      "type": "理论依赖",
      "关系ID": "05REL061",
      "source": "05ALG015",
      "target": "05CON004",
      "attributes": {
        "依赖强度": "强"
      }
    },
     {
      "type": "理论依赖",
      "关系ID": "05REL062",
      "source": "05ALG016",
      "target": "05CON004",
      "attributes": {
        "依赖强度": "强"
      }
    },
     {
      "type": "理论依赖",
      "关系ID": "05REL063",
      "source": "05ALG017",
      "target": "05CON004",
      "attributes": {
        "依赖强度": "强"
      }
    },
     {
      "type": "理论依赖",
      "关系ID": "05REL064",
      "source": "05ALG018",
      "target": "05CON004",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "05REL065",
      "source": "05DS001",
      "target": "05CON001",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "05REL066",
      "source": "05DS001",
      "target": "05CON002",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "05REL067",
      "source": "05DS001",
      "target": "05CON004",
      "attributes": {
        "依赖强度": "中"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "05REL068",
      "source": "05DS006",
      "target": "05CON004",
      "attributes": {
        "依赖强度": "中"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "05REL069",
      "source": "05CON014",
      "target": "05CON013",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "05REL070",
      "source": "05CON023",
      "target": "05CON022",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "05REL071",
      "source": "05CON019",
      "target": "05CON018",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "05REL072",
      "source": "05CON019",
      "target": "05CON017",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "05REL073",
      "source": "05CON017",
      "target": "05CON006",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "05REL074",
      "source": "05CON018",
      "target": "05CON005",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "05REL075",
      "source": "05CON034",
      "target": "05CON017",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "05REL076",
      "source": "05CON035",
      "target": "05CON017",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "05REL077",
      "source": "05CON025",
      "target": "05DS001",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "05REL078",
      "source": "05CON026",
      "target": "05DS004",
      "attributes": {
        "依赖强度": "强"
      }
    },
     {
      "type": "理论依赖",
      "关系ID": "05REL079",
      "source": "05CON028",
      "target": "05DS004",
      "attributes": {
        "依赖强度": "强"
      }
    },
     {
      "type": "理论依赖",
      "关系ID": "05REL080",
      "source": "05CON029",
      "target": "05DS004",
      "attributes": {
        "依赖强度": "强"
      }
    },
     {
      "type": "理论依赖",
      "关系ID": "05REL081",
      "source": "05CON036",
      "target": "05DS006",
      "attributes": {
        "依赖强度": "强"
      }
    },
     {
      "type": "理论依赖",
      "关系ID": "05REL082",
      "source": "05CON037",
      "target": "05DS006",
      "attributes": {
        "依赖强度": "强"
      }
    },
     {
      "type": "理论依赖",
      "关系ID": "05REL083",
      "source": "05CON038",
      "target": "05DS006",
      "attributes": {
        "依赖强度": "强"
      }
    },
     {
      "type": "理论依赖",
      "关系ID": "05REL084",
      "source": "05CON039",
      "target": "05DS008",
      "attributes": {
        "依赖强度": "强"
      }
    },
     {
      "type": "理论依赖",
      "关系ID": "05REL085",
      "source": "05CON040",
      "target": "05DS008",
      "attributes": {
        "依赖强度": "强"
      }
    }
  ]
}