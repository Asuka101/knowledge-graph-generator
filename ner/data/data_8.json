{
  "entities": [
    {
      "type": "知识点",
      "name": "图",
      "attributes": {
        "ID": "1",
        "掌握程度": "未知",
        "难度": "低",
        "定义": "由顶点和边构成的数据结构",
        "相关领域": "数据结构、算法"
      }
    },
    {
      "type": "知识点",
      "name": "最小生成树",
      "attributes": {
        "ID": "2",
        "掌握程度": "已掌握",
        "难度": "中",
        "定义": "连通图中边的权值总和最小的生成树",
        "应用场景": "通信系统、城市规划"
      }
    },
    {
      "type": "知识点",
      "name": "最短路径",
      "attributes": {
        "ID": "3",
        "掌握程度": "已掌握",
        "难度": "中",
        "定义": "图中两点之间权值之和最小的路径",
        "应用场景": "路径规划、网络路由"
      }
    },
    {
      "type": "知识点",
      "name": "拓扑序列",
      "attributes": {
        "ID": "4",
        "掌握程度": "已掌握",
        "难度": "中",
        "定义": "AOV网中所有活动可排列成一个线性序列，使得每个活动的所有前驱活动都排在该活动的前面",
        "相关领域": "图论、AOV网"
      }
    },
    {
      "type": "知识点",
      "name": "拓扑排序",
      "attributes": {
        "ID": "5",
        "掌握程度": "已掌握",
        "难度": "中",
        "定义": "由AOV网构造拓扑序列的过程",
        "算法": "选择入度为0的顶点并输出，删除此顶点及所有出边"
      }
    },
    {
      "type": "知识点",
      "name": "关键路径",
      "attributes": {
        "ID": "6",
        "掌握程度": "已掌握",
        "难度": "高",
        "定义": "AOE网中由关键活动所形成的从源点到汇点的每一条路径",
        "相关领域": "图论、AOE网"
      }
    },
    {
      "type": "知识点",
      "name": "连通图",
      "attributes": {
        "ID": "7",
        "掌握程度": "已知",
        "难度": "低",
        "定义": "图中任意两个顶点之间都存在路径"
      }
    },
    {
      "type": "知识点",
      "name": "生成树",
      "attributes": {
        "ID": "8",
        "掌握程度": "已掌握",
        "难度": "中",
        "定义": "包含图中所有顶点的一个极小连通子图"
      }
    },
    {
      "type": "知识点",
      "name": "深度优先搜索",
      "attributes": {
        "ID": "9",
        "掌握程度": "已掌握",
        "难度": "中",
        "定义": "一种图的遍历算法，沿着图的深度遍历",
        "时间复杂度": "O(n+e)"
      }
    },
    {
      "type": "知识点",
      "name": "广度优先搜索",
      "attributes": {
        "ID": "10",
        "掌握程度": "已掌握",
        "难度": "中",
        "定义": "一种图的遍历算法，沿着图的广度遍历",
        "时间复杂度": "O(n+e)"
      }
    },
    {
      "type": "知识点",
      "name": "普里姆算法",
      "attributes": {
        "ID": "11",
        "掌握程度": "已掌握",
        "难度": "中",
        "定义": "构造最小生成树的算法，每次选择与当前生成树连接的权值最小的边",
        "时间复杂度": "O(n^2)",
        "空间复杂度": "O(1)"
      }
    },
    {
      "type": "知识点",
      "name": "克鲁斯卡尔算法",
      "attributes": {
        "ID": "12",
        "掌握程度": "已掌握",
        "难度": "中",
        "定义": "构造最小生成树的算法，每次选择权值最小且不会形成环的边",
        "时间复杂度": "O(n^2)",
        "空间复杂度": "O(n^2)"
      }
    },
    {
      "type": "知识点",
      "name": "狄克斯特拉算法",
      "attributes": {
        "ID": "13",
        "掌握程度": "已掌握",
        "难度": "中",
        "定义": "求解图中单源最短路径的算法",
        "时间复杂度": "O(n^2)"
      }
    },
    {
      "type": "知识点",
      "name": "弗洛伊德算法",
      "attributes": {
        "ID": "14",
        "掌握程度": "已掌握",
        "难度": "中",
        "定义": "求解图中每对顶点之间最短路径的算法",
        "时间复杂度": "O(n^3)"
      }
    },
    {
      "type": "知识点",
      "name": "AOV网",
      "attributes": {
        "ID": "15",
        "掌握程度": "已掌握",
        "难度": "中",
        "定义": "顶点表示活动的网，边表示活动之间的先后关系"
      }
    },
    {
      "type": "知识点",
      "name": "AOE网",
      "attributes": {
        "ID": "16",
        "掌握程度": "已掌握",
        "难度": "中",
        "定义": "边表示活动的网络，边上的权表示活动的持续时间"
      }
    },
    {
      "type": "知识点",
      "name": "邻接矩阵",
      "attributes": {
        "ID": "17",
        "掌握程度": "已掌握",
        "难度": "低",
        "定义": "表示图中顶点之间相邻关系的矩阵",
        "存储结构": "二维数组"
      }
    },
    {
      "type": "知识点",
      "name": "邻接表",
      "attributes": {
        "ID": "18",
        "掌握程度": "已掌握",
        "难度": "中",
        "定义": "表示图中顶点之间相邻关系的链表",
        "存储结构": "链表"
      }
    },
        {
      "type": "知识点",
      "name": "深度优先生成树",
      "attributes": {
        "ID": "19",
        "掌握程度": "已掌握",
        "难度": "中",
        "定义": "利用深度优先搜索遍历得到的生成树"
      }
    },
    {
      "type": "知识点",
      "name": "广度优先生成树",
      "attributes": {
        "ID": "20",
        "掌握程度": "已掌握",
        "难度": "中",
        "定义": "利用广度优先搜索遍历得到的生成树"
      }
    },
    {
      "type": "知识点",
      "name": "边的权值",
      "attributes": {
        "ID": "21",
        "掌握程度": "已掌握",
        "难度": "低",
        "定义": "边上的数值，用于表示两端点之间的某种代价或距离"
      }
    },
    {
      "type": "知识点",
      "name": "边集数组",
      "attributes": {
        "ID": "22",
        "掌握程度": "未知",
        "难度": "中",
        "定义": "用数组存储边的集合，通常用于克鲁斯卡尔算法"
      }
    },
    {
      "type": "知识点",
      "name": "顶点活动网",
      "attributes": {
        "ID": "23",
        "掌握程度": "已掌握",
        "难度": "中",
        "别名":"AOV网",
        "定义": "顶点表示活动的网，边表示活动之间的先后关系"
      }
    },
    {
      "type": "知识点",
      "name": "边活动网",
      "attributes": {
        "ID": "24",
        "掌握程度": "已掌握",
        "难度": "中",
        "别名":"AOE网",
        "定义": "边表示活动的网络，边上的权表示活动的持续时间"
      }
    },
    {
      "type": "知识点",
      "name": "顶点事件的最早发生时间",
      "attributes": {
        "ID": "25",
        "掌握程度": "已掌握",
        "难度": "中",
        "定义": "顶点事件的最早发生时间是它的所有入边活动, 或者说最后一个入边活动刚完成的时间"
      }
    },
    {
      "type": "知识点",
      "name": "顶点事件的最迟发生时间",
      "attributes": {
        "ID": "26",
        "掌握程度": "已掌握",
        "难度": "中",
        "定义": "顶点事件的最晚必须发生的时间"
      }
    },
    {
      "type": "知识点",
      "name": "活动的最早开始时间",
      "attributes": {
        "ID": "27",
        "掌握程度": "已掌握",
        "难度": "中",
        "定义": "一个活动的最早开始时间是它的起点事件的最早发生时间"
      }
    },
    {
      "type": "知识点",
      "name": "活动的最迟开始时间",
      "attributes": {
        "ID": "28",
        "掌握程度": "已掌握",
        "难度": "中",
        "定义": "活动的最晚必须开始的时间"
      }
    },
     {
      "type": "知识点",
      "name": "开始时间余量",
      "attributes": {
        "ID": "29",
        "掌握程度": "已掌握",
        "难度": "中",
        "定义": "在不影响整个工程按时完成的前提下，一些活动可以不在最早开始时间开始，而允许向后推迟一些时间开始, 该时间为开始时间余量"
      }
    }
  ],
  "relations": [
    {
      "type": "包含关系",
      "source": "图",
      "target": "最小生成树",
      "attributes": {
        "强度": "中",
        "方向": "单向"
      }
    },
    {
      "type": "包含关系",
      "source": "图",
      "target": "最短路径",
      "attributes": {
        "强度": "中",
        "方向": "单向"
      }
    },
    {
      "type": "包含关系",
      "source": "图",
      "target": "拓扑排序",
      "attributes": {
        "强度": "中",
        "方向": "单向"
      }
    },
    {
      "type": "包含关系",
      "source": "图",
      "target": "关键路径",
      "attributes": {
        "强度": "中",
        "方向": "单向"
      }
    },
    {
      "type": "从属关系",
      "source": "最小生成树",
      "target": "图",
      "attributes": {
        "强度": "强",
        "方向": "单向"
      }
    },
    {
      "type": "从属关系",
      "source": "最短路径",
      "target": "图",
      "attributes": {
        "强度": "强",
        "方向": "单向"
      }
    },
    {
      "type": "从属关系",
      "source": "拓扑排序",
      "target": "图",
      "attributes": {
        "强度": "强",
        "方向": "单向"
      }
    },
    {
      "type": "从属关系",
      "source": "关键路径",
      "target": "图",
      "attributes": {
        "强度": "强",
        "方向": "单向"
      }
    },
    {
      "type": "相关关系",
      "source": "最小生成树",
      "target": "普里姆算法",
      "attributes": {
        "强度": "强",
        "方向": "单向"
      }
    },
    {
      "type": "相关关系",
      "source": "最小生成树",
      "target": "克鲁斯卡尔算法",
      "attributes": {
        "强度": "强",
        "方向": "单向"
      }
    },
    {
      "type": "相关关系",
      "source": "最短路径",
      "target": "狄克斯特拉算法",
      "attributes": {
        "强度": "强",
        "方向": "单向"
      }
    },
    {
      "type": "相关关系",
      "source": "最短路径",
      "target": "弗洛伊德算法",
      "attributes": {
        "强度": "强",
        "方向": "单向"
      }
    },
    {
      "type": "包含关系",
      "source": "AOV网",
      "target": "拓扑序列",
      "attributes": {
        "强度": "强",
        "方向": "单向"
      }
    },
    {
      "type": "先后关系",
      "source": "拓扑排序",
      "target": "关键路径",
      "attributes": {
        "强度": "中",
        "方向": "单向"
      }
    },
    {
      "type": "相关关系",
      "source": "关键路径",
      "target": "AOE网",
      "attributes": {
        "强度": "强",
        "方向": "双向"
      }
    },
    {
      "type": "相关关系",
      "source": "拓扑排序",
      "target": "邻接表",
      "attributes": {
        "强度": "中",
        "方向": "单向"
      }
    }
  ]
}