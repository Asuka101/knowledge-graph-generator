{
  "entities": [
    {
      "type": "数据结构",
      "ID": "02DS001",
      "name": "线性表",
      "attributes": {
        "难度": "入门",
        "内容": "具有相同属性的数据元素的一个有限序列。序列中所含元素的个数称为线性表的长度(n>=0)。元素按前后位置线性有序，除头尾元素外，每个元素有唯一前驱和唯一后继。",
        "存储开销": "未知 (取决于具体实现)"
      }
    },
    {
      "type": "概念",
      "ID": "02CON001",
      "name": "线性结构",
      "attributes": {
        "难度": "入门",
        "内容": "数据元素之间存在一对一的线性关系的数据结构。可以用线性表表示。"
      }
    },
    {
      "type": "概念",
      "ID": "02CON002",
      "name": "抽象数据类型 (ADT)",
      "attributes": {
        "难度": "中等",
        "内容": "定义了一个数据模型以及定义在该模型上的一组操作，不涉及具体实现细节。包括数据部分和操作部分。"
      }
    },
    {
      "type": "操作",
      "ID": "02OP001",
      "name": "InitList (ADT)",
      "attributes": {
        "难度": "入门",
        "内容": "初始化线性表L为空。"
      }
    },
    {
      "type": "操作",
      "ID": "02OP002",
      "name": "ClearList (ADT)",
      "attributes": {
        "难度": "入门",
        "内容": "清除线性表L中的所有元素。"
      }
    },
    {
      "type": "操作",
      "ID": "02OP003",
      "name": "LengthList (ADT)",
      "attributes": {
        "难度": "入门",
        "内容": "返回线性表L的长度。"
      }
    },
    {
      "type": "操作",
      "ID": "02OP004",
      "name": "EmptyList (ADT)",
      "attributes": {
        "难度": "入门",
        "内容": "判断线性表L是否为空。"
      }
    },
    {
      "type": "操作",
      "ID": "02OP005",
      "name": "GetList (ADT)",
      "attributes": {
        "难度": "入门",
        "内容": "返回线性表L中第pos个元素的值。"
      }
    },
    {
      "type": "操作",
      "ID": "02OP006",
      "name": "TraverseList (ADT)",
      "attributes": {
        "难度": "入门",
        "内容": "遍历输出线性表L中的所有元素。"
      }
    },
    {
      "type": "操作",
      "ID": "02OP007",
      "name": "FindList (ADT)",
      "attributes": {
        "难度": "入门",
        "内容": "从线性表L中查找与给定项item匹配的元素。"
      }
    },
    {
      "type": "操作",
      "ID": "02OP008",
      "name": "UpdateList (ADT)",
      "attributes": {
        "难度": "入门",
        "内容": "修改线性表L中与给定项item匹配的元素。"
      }
    },
    {
      "type": "操作",
      "ID": "02OP009",
      "name": "InsertList (ADT)",
      "attributes": {
        "难度": "中等",
        "内容": "向线性表L的指定位置pos插入元素item。pos=0表示有序插入，pos=-1表示表尾插入。"
      }
    },
    {
      "type": "操作",
      "ID": "02OP010",
      "name": "DeleteList (ADT)",
      "attributes": {
        "难度": "中等",
        "内容": "从线性表L删除指定位置pos的元素或与给定项item匹配的元素。pos=0表示按值删除，pos=-1表示删除表尾。"
      }
    },
    {
      "type": "操作",
      "ID": "02OP011",
      "name": "SortList (ADT)",
      "attributes": {
        "难度": "中等",
        "内容": "对线性表L中的所有元素按给定条件排序。"
      }
    },
    {
      "type": "数据结构",
      "ID": "02DS002",
      "name": "线性表的顺序存储结构",
      "attributes": {
        "难度": "入门",
        "内容": "将线性表元素按逻辑顺序存入一块连续的存储空间(通常是数组)。支持随机存取。插入删除可能需要移动大量元素。",
        "存储开销": "主要为n*sizeof(ElemType)，外加存储长度(size)和容量(MaxSize)的开销。"
      }
    },
    {
      "type": "概念",
      "ID": "02CON003",
      "name": "顺序存储",
      "attributes": {
        "难度": "入门",
        "内容": "数据元素的逻辑顺序与其物理存储顺序一致的存储方式。"
      }
    },
    {
      "type": "概念",
      "ID": "02CON004",
      "name": "随机存取",
      "attributes": {
        "难度": "入门",
        "内容": "访问存储结构中任何一个元素的时间都是常量，与元素位置无关。顺序存储结构支持随机存取。"
      }
    },
    {
      "type": "概念",
      "ID": "02CON005",
      "name": "时间复杂度",
      "attributes": {
        "难度": "中等",
        "内容": "衡量算法执行时间随输入规模增长而增长的量度，通常用大O表示法。"
      }
    },
    {
      "type": "概念",
      "ID": "02CON006",
      "name": "空间复杂度",
      "attributes": {
        "难度": "中等",
        "内容": "衡量算法执行过程中临时占用的存储空间随输入规模增长而增长的量度。"
      }
    },
    {
      "type": "操作",
      "ID": "02OP012",
      "name": "InitList (顺序表实现)",
      "attributes": {
        "难度": "入门",
        "内容": "分配动态数组空间，初始化MaxSize和size=0。"
      }
    },
    {
      "type": "操作",
      "ID": "02OP013",
      "name": "ClearList (顺序表实现)",
      "attributes": {
        "难度": "入门",
        "内容": "释放动态数组空间，重置MaxSize和size为0。"
      }
    },
    {
      "type": "操作",
      "ID": "02OP014",
      "name": "LengthList (顺序表实现)",
      "attributes": {
        "难度": "入门",
        "内容": "返回存储的size值。",
        "时间复杂度": "O(1)"
      }
    },
    {
      "type": "操作",
      "ID": "02OP015",
      "name": "EmptyList (顺序表实现)",
      "attributes": {
        "难度": "入门",
        "内容": "检查size是否为0。",
        "时间复杂度": "O(1)"
      }
    },
    {
      "type": "操作",
      "ID": "02OP016",
      "name": "GetList (顺序表实现)",
      "attributes": {
        "难度": "入门",
        "内容": "检查pos有效性，返回list[pos-1]。",
        "时间复杂度": "O(1)"
      }
    },
    {
      "type": "操作",
      "ID": "02OP017",
      "name": "TraverseList (顺序表实现)",
      "attributes": {
        "难度": "入门",
        "内容": "按数组下标顺序访问并处理list[0]到list[size-1]。",
        "时间复杂度": "O(n)"
      }
    },
    {
      "type": "操作",
      "ID": "02OP018",
      "name": "FindList (顺序表实现)",
      "attributes": {
        "难度": "入门",
        "内容": "从头开始顺序比较，查找第一个值匹配item的元素。",
        "时间复杂度": "O(n)"
      }
    },
    {
      "type": "操作",
      "ID": "02OP019",
      "name": "UpdateList (顺序表实现)",
      "attributes": {
        "难度": "入门",
        "内容": "顺序查找，找到第一个匹配item的元素后用item的值更新它。",
        "时间复杂度": "O(n)"
      }
    },
    {
      "type": "操作",
      "ID": "02OP020",
      "name": "InsertList (顺序表实现)",
      "attributes": {
        "难度": "中等",
        "内容": "处理pos=0,-1,>=1。检查空间是否足够，若不足则扩容(realloc)。将插入位置及之后的元素后移。在pos-1位置放入新元素。size增加1。",
        "时间复杂度": "O(n) (因元素移动), 表尾插入为O(1) (若不需扩容)"
      }
    },
    {
      "type": "操作",
      "ID": "02OP021",
      "name": "DeleteList (顺序表实现)",
      "attributes": {
        "难度": "中等",
        "内容": "处理pos=0,-1,>=1。查找删除位置。将被删元素后的元素前移。size减少1。检查是否需要缩容(realloc)。",
        "时间复杂度": "O(n) (因元素移动), 表尾删除为O(1) (若不需缩容)"
      }
    },
    {
      "type": "算法",
      "ID": "02ALG001",
      "name": "插入排序",
      "attributes": {
        "难度": "中等",
        "内容": "将线性表分为有序区和无序区。每次从无序区取第一个元素，插入到有序区的合适位置，保持有序区有序。重复n-1次。",
        "时间复杂度": "最好O(n)，平均O(n^2)，最差O(n^2)",
        "空间复杂度": "O(1)"
      }
    },
    {
      "type": "操作",
      "ID": "02OP022",
      "name": "SortList (顺序表实现-插入排序)",
      "attributes": {
        "难度": "中等",
        "内容": "调用插入排序算法对顺序存储的线性表进行排序。",
        "时间复杂度": "O(n^2)"
      }
    },
    {
      "type": "概念",
      "ID": "02CON007",
      "name": "链接存储",
      "attributes": {
        "难度": "入门",
        "内容": "数据元素的逻辑顺序通过结点中的指针域来体现，物理存储位置不必相邻。"
      }
    },
    {
      "type": "概念",
      "ID": "02CON008",
      "name": "结点",
      "attributes": {
        "难度": "入门",
        "内容": "链接存储的基本单位，通常包含数据域和（一个或多个）指针域。"
      }
    },
    {
      "type": "概念",
      "ID": "02CON009",
      "name": "指针域",
      "attributes": {
        "难度": "入门",
        "内容": "结点中存储其他结点地址（指针）的部分，用于链接结点。"
      }
    },
    {
      "type": "概念",
      "ID": "02CON010",
      "name": "数据域",
      "attributes": {
        "难度": "入门",
        "内容": "结点中存储数据元素值的部分。"
      }
    },
    {
      "type": "概念",
      "ID": "02CON011",
      "name": "顺序存取",
      "attributes": {
        "难度": "入门",
        "内容": "访问存储结构中某个元素需要从头或某个已知位置开始，沿着逻辑顺序查找。链接存储通常是顺序存取。"
      }
    },
    {
      "type": "数据结构",
      "ID": "02DS003",
      "name": "链表",
      "attributes": {
        "难度": "入门",
        "内容": "数据的链接存储表示，由一系列结点组成。",
        "存储开销": "结点包含数据域和指针域，比顺序存储有额外指针开销。"
      }
    },
    {
      "type": "数据结构",
      "ID": "02DS004",
      "name": "单链表",
      "attributes": {
        "难度": "入门",
        "内容": "链表的一种，每个结点只包含一个指向其直接后继结点的指针域。",
        "存储开销": "N * (sizeof(ElemType) + sizeof(pointer))"
      }
    },
    {
      "type": "数据结构",
      "ID": "02DS005",
      "name": "双向链表",
      "attributes": {
        "难度": "入门",
        "内容": "链表的一种，每个结点包含两个指针域，分别指向其直接前驱和直接后继结点。",
        "存储开销": "N * (sizeof(ElemType) + 2 * sizeof(pointer))"
      }
    },
    {
      "type": "概念",
      "ID": "02CON012",
      "name": "表头指针",
      "attributes": {
        "难度": "入门",
        "内容": "指向链表中第一个结点（或头结点）的指针。"
      }
    },
    {
      "type": "概念",
      "ID": "02CON013",
      "name": "表头结点",
      "attributes": {
        "难度": "入门",
        "内容": "链表中存储第一个数据元素的结点。"
      }
    },
    {
      "type": "概念",
      "ID": "02CON014",
      "name": "表尾结点",
      "attributes": {
        "难度": "入门",
        "内容": "链表中存储最后一个数据元素的结点。"
      }
    },
    {
      "type": "操作",
      "ID": "02OP023",
      "name": "单链表插入操作",
      "attributes": {
        "难度": "入门",
        "内容": "在逻辑位置a之后插入新结点b：将b的next指向a的原后继，将a的next指向b。",
        "时间复杂度": "O(1) (如果插入位置已知)"
      }
    },
    {
      "type": "操作",
      "ID": "02OP024",
      "name": "单链表删除操作",
      "attributes": {
        "难度": "入门",
        "内容": "删除结点x之后的结点y：将x的next指向y的next，然后释放y。",
        "时间复杂度": "O(1) (如果待删结点的前驱已知)"
      }
    },
    {
      "type": "数据结构",
      "ID": "02DS006",
      "name": "带表头附加结点的链表",
      "attributes": {
        "难度": "入门",
        "内容": "在链表的第一个元素结点之前增加一个不存储数据的附加结点（头结点），表头指针指向该附加结点。优点是统一了在表头和其他位置插入/删除的操作。",
        "存储开销": "比普通链表多一个结点的开销。"
      }
    },
    {
      "type": "数据结构",
      "ID": "02DS007",
      "name": "循环链表",
      "attributes": {
        "难度": "入门",
        "内容": "链表的一种变体，最后一个结点的指针域指向头结点（或表头附加结点）。对于双向循环链表，头结点的（或附加结点的）前驱指针指向尾结点。",
        "存储开销": "与对应非循环链表相同。"
      }
    },
    {
      "type": "操作",
      "ID": "02OP025",
      "name": "InitList (单链表实现)",
      "attributes": {
        "难度": "入门",
        "内容": "将表头指针HL置为NULL。",
        "时间复杂度": "O(1)"
      }
    },
    {
      "type": "操作",
      "ID": "02OP026",
      "name": "ClearList (单链表实现)",
      "attributes": {
        "难度": "入门",
        "内容": "遍历链表，逐个删除（delete）结点，最后将表头指针置为NULL。",
        "时间复杂度": "O(n)"
      }
    },
    {
      "type": "操作",
      "ID": "02OP027",
      "name": "LengthList (单链表实现)",
      "attributes": {
        "难度": "入门",
        "内容": "遍历链表，计数结点个数。",
        "时间复杂度": "O(n)"
      }
    },
    {
      "type": "操作",
      "ID": "02OP028",
      "name": "EmptyList (单链表实现)",
      "attributes": {
        "难度": "入门",
        "内容": "检查表头指针HL是否为NULL。",
        "时间复杂度": "O(1)"
      }
    },
    {
      "type": "操作",
      "ID": "02OP029",
      "name": "GetList (单链表实现)",
      "attributes": {
        "难度": "入门",
        "内容": "从表头指针开始，顺序遍历链表，找到第pos个结点并返回其数据域。",
        "时间复杂度": "O(n)"
      }
    },
    {
      "type": "操作",
      "ID": "02OP030",
      "name": "TraverseList (单链表实现)",
      "attributes": {
        "难度": "入门",
        "内容": "从表头指针开始，顺序遍历链表，访问每个结点的数据域。",
        "时间复杂度": "O(n)"
      }
    },
    {
      "type": "操作",
      "ID": "02OP031",
      "name": "FindList (单链表实现)",
      "attributes": {
        "难度": "入门",
        "内容": "从表头指针开始，顺序遍历链表，查找第一个数据域值等于item的结点。",
        "时间复杂度": "O(n)"
      }
    },
    {
      "type": "操作",
      "ID": "02OP032",
      "name": "UpdateList (单链表实现)",
      "attributes": {
        "难度": "入门",
        "内容": "从表头指针开始，顺序遍历链表，查找第一个数据域值等于item的结点，并用item更新其数据域。",
        "时间复杂度": "O(n)"
      }
    },
    {
      "type": "操作",
      "ID": "02OP033",
      "name": "InsertList (单链表实现)",
      "attributes": {
        "难度": "中等",
        "内容": "处理pos=0,-1,>=1。创建新结点。遍历查找插入位置（需记录前驱结点ap和当前结点cp）。修改ap和newptr的next指针完成插入。处理表头插入的特殊情况（ap为NULL）。",
        "时间复杂度": "O(n) (因查找位置)"
      }
    },
    {
      "type": "操作",
      "ID": "02OP034",
      "name": "DeleteList (单链表实现)",
      "attributes": {
        "难度": "中等",
        "内容": "处理pos=0,-1,>=1。遍历查找待删除结点cp（需记录前驱结点ap）。修改ap的next指针指向cp的next。删除（delete）cp结点。处理删除表头结点的特殊情况（ap为NULL）。",
        "时间复杂度": "O(n) (因查找位置)"
      }
    },
    {
      "type": "操作",
      "ID": "02OP035",
      "name": "SortList (单链表实现-插入排序)",
      "attributes": {
        "难度": "中等",
        "内容": "创建一个新的空链表SL。遍历原链表HL，将HL中的每个结点按其值有序地插入到SL中。最后将HL指向SL。",
        "时间复杂度": "O(n^2)"
      }
    },
    {
      "type": "数据结构",
      "ID": "02DS008",
      "name": "静态链表",
      "attributes": {
        "难度": "中等",
        "内容": "使用数组来模拟链式存储结构。数组元素包含数据域和指针域（存储下一个元素在数组中的下标）。需要管理一个空闲链表。",
        "存储开销": "MaxSize * (sizeof(ElemType) + sizeof(int))，需要额外空间管理表头和空闲链表头。"
      }
    },
    {
      "type": "概念",
      "ID": "02CON015",
      "name": "空闲链表",
      "attributes": {
        "难度": "中等",
        "内容": "在静态链表中，将所有未被使用的数组单元链接起来形成的链表，用于分配和回收结点空间。"
      }
    },
    {
      "type": "概念",
      "ID": "02CON016",
      "name": "多项式",
      "attributes": {
        "难度": "入门",
        "内容": "数学表达式，形如 P(x) = a0 + a1*x + a2*x^2 + ... + an*x^n。"
      }
    },
    {
      "type": "算法",
      "ID": "02ALG002",
      "name": "多项式求值 (系数数组法)",
      "attributes": {
        "难度": "入门",
        "内容": "输入系数数组表示的多项式P和值x，计算P(x)。遍历系数数组，累加每一项 a_i * x^i 的值。",
        "时间复杂度": "O(n) (n为最高次幂+1, 假设幂运算高效)",
        "空间复杂度": "O(1) (除输入外)"
      }
    },
    {
      "type": "算法",
      "ID": "02ALG003",
      "name": "多项式求值 (非零项链表法)",
      "attributes": {
        "难度": "入门",
        "内容": "输入非零项（系数coef, 指数exp）链表表示的多项式P和值x，计算P(x)。遍历链表，累加每一项 coef * x^exp 的值。",
        "时间复杂度": "O(m) (m为非零项数, 假设幂运算高效)",
        "空间复杂度": "O(1) (除输入外)"
      }
    },
    {
      "type": "算法",
      "ID": "02ALG004",
      "name": "多项式相加 (基于InsertList)",
      "attributes": {
        "难度": "中等",
        "内容": "输入两个按指数升序排列的非零项链表p1, p2。创建一个空结果链表p3。同步遍历p1, p2，比较当前项指数，将指数较小的项或合并后的项（指数相等时）使用InsertList插入到p3。处理剩余链表。",
        "时间复杂度": "O((m+n)^2) (m,n为项数，因InsertList每次查找尾部耗时)",
        "空间复杂度": "O(m+n) (存储结果链表)"
      }
    },
    {
      "type": "算法",
      "ID": "02ALG005",
      "name": "多项式相加 (优化)",
      "attributes": {
        "难度": "中等",
        "内容": "输入两个按指数升序排列的非零项链表p1, p2。创建一个带附加头结点的结果链表p3，并维护一个指向p3尾部的指针t3。同步遍历p1, p2，比较当前项指数，将指数较小的项或合并后的项创建新结点，直接链接到t3之后，并移动t3。处理剩余链表。最后处理头结点。",
        "时间复杂度": "O(m+n) (m,n为项数)",
        "空间复杂度": "O(m+n) (存储结果链表)"
      }
    }
  ],
  "relations": [
    {
      "type": "理论依赖 (depends-on)",
      "关系ID": "02REL001",
      "source": "02DS001",
      "target": "02CON001",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖 (depends-on)",
      "关系ID": "02REL002",
      "source": "02DS001",
      "target": "02CON002",
      "attributes": {
        "依赖强度": "中"
      }
    },
    {
      "type": "操作绑定 (has-op)",
      "关系ID": "02REL003",
      "source": "02OP001",
      "target": "02DS001",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定 (has-op)",
      "关系ID": "02REL004",
      "source": "02OP002",
      "target": "02DS001",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定 (has-op)",
      "关系ID": "02REL005",
      "source": "02OP003",
      "target": "02DS001",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定 (has-op)",
      "关系ID": "02REL006",
      "source": "02OP004",
      "target": "02DS001",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定 (has-op)",
      "关系ID": "02REL007",
      "source": "02OP005",
      "target": "02DS001",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定 (has-op)",
      "关系ID": "02REL008",
      "source": "02OP006",
      "target": "02DS001",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定 (has-op)",
      "关系ID": "02REL009",
      "source": "02OP007",
      "target": "02DS001",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定 (has-op)",
      "关系ID": "02REL010",
      "source": "02OP008",
      "target": "02DS001",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定 (has-op)",
      "关系ID": "02REL011",
      "source": "02OP009",
      "target": "02DS001",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定 (has-op)",
      "关系ID": "02REL012",
      "source": "02OP010",
      "target": "02DS001",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定 (has-op)",
      "关系ID": "02REL013",
      "source": "02OP011",
      "target": "02DS001",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "变体 (variant-of)",
      "关系ID": "02REL014",
      "source": "02DS002",
      "target": "02DS001",
      "attributes": {
        "变体类型": "顺序存储实现"
      }
    },
    {
      "type": "理论依赖 (depends-on)",
      "关系ID": "02REL015",
      "source": "02DS002",
      "target": "02CON003",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖 (depends-on)",
      "关系ID": "02REL016",
      "source": "02DS002",
      "target": "02CON004",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "操作绑定 (has-op)",
      "关系ID": "02REL017",
      "source": "02OP012",
      "target": "02DS002",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "变体 (variant-of)",
      "关系ID": "02REL018",
      "source": "02OP012",
      "target": "02OP001",
      "attributes": {
        "变体类型": "顺序表实现"
      }
    },
    {
      "type": "操作绑定 (has-op)",
      "关系ID": "02REL019",
      "source": "02OP013",
      "target": "02DS002",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "变体 (variant-of)",
      "关系ID": "02REL020",
      "source": "02OP013",
      "target": "02OP002",
      "attributes": {
        "变体类型": "顺序表实现"
      }
    },
    {
      "type": "操作绑定 (has-op)",
      "关系ID": "02REL021",
      "source": "02OP014",
      "target": "02DS002",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "变体 (variant-of)",
      "关系ID": "02REL022",
      "source": "02OP014",
      "target": "02OP003",
      "attributes": {
        "变体类型": "顺序表实现"
      }
    },
    {
      "type": "理论依赖 (depends-on)",
      "关系ID": "02REL023",
      "source": "02OP014",
      "target": "02CON005",
      "attributes": {
        "依赖强度": "弱"
      }
    },
    {
      "type": "操作绑定 (has-op)",
      "关系ID": "02REL024",
      "source": "02OP015",
      "target": "02DS002",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "变体 (variant-of)",
      "关系ID": "02REL025",
      "source": "02OP015",
      "target": "02OP004",
      "attributes": {
        "变体类型": "顺序表实现"
      }
    },
    {
      "type": "理论依赖 (depends-on)",
      "关系ID": "02REL026",
      "source": "02OP015",
      "target": "02CON005",
      "attributes": {
        "依赖强度": "弱"
      }
    },
    {
      "type": "操作绑定 (has-op)",
      "关系ID": "02REL027",
      "source": "02OP016",
      "target": "02DS002",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "变体 (variant-of)",
      "关系ID": "02REL028",
      "source": "02OP016",
      "target": "02OP005",
      "attributes": {
        "变体类型": "顺序表实现"
      }
    },
    {
      "type": "理论依赖 (depends-on)",
      "关系ID": "02REL029",
      "source": "02OP016",
      "target": "02CON005",
      "attributes": {
        "依赖强度": "弱"
      }
    },
    {
      "type": "操作绑定 (has-op)",
      "关系ID": "02REL030",
      "source": "02OP017",
      "target": "02DS002",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "变体 (variant-of)",
      "关系ID": "02REL031",
      "source": "02OP017",
      "target": "02OP006",
      "attributes": {
        "变体类型": "顺序表实现"
      }
    },
    {
      "type": "理论依赖 (depends-on)",
      "关系ID": "02REL032",
      "source": "02OP017",
      "target": "02CON005",
      "attributes": {
        "依赖强度": "弱"
      }
    },
    {
      "type": "操作绑定 (has-op)",
      "关系ID": "02REL033",
      "source": "02OP018",
      "target": "02DS002",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "变体 (variant-of)",
      "关系ID": "02REL034",
      "source": "02OP018",
      "target": "02OP007",
      "attributes": {
        "变体类型": "顺序表实现"
      }
    },
    {
      "type": "理论依赖 (depends-on)",
      "关系ID": "02REL035",
      "source": "02OP018",
      "target": "02CON005",
      "attributes": {
        "依赖强度": "弱"
      }
    },
    {
      "type": "操作绑定 (has-op)",
      "关系ID": "02REL036",
      "source": "02OP019",
      "target": "02DS002",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "变体 (variant-of)",
      "关系ID": "02REL037",
      "source": "02OP019",
      "target": "02OP008",
      "attributes": {
        "变体类型": "顺序表实现"
      }
    },
    {
      "type": "理论依赖 (depends-on)",
      "关系ID": "02REL038",
      "source": "02OP019",
      "target": "02CON005",
      "attributes": {
        "依赖强度": "弱"
      }
    },
    {
      "type": "操作绑定 (has-op)",
      "关系ID": "02REL039",
      "source": "02OP020",
      "target": "02DS002",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "变体 (variant-of)",
      "关系ID": "02REL040",
      "source": "02OP020",
      "target": "02OP009",
      "attributes": {
        "变体类型": "顺序表实现"
      }
    },
    {
      "type": "理论依赖 (depends-on)",
      "关系ID": "02REL041",
      "source": "02OP020",
      "target": "02CON005",
      "attributes": {
        "依赖强度": "弱"
      }
    },
    {
      "type": "操作绑定 (has-op)",
      "关系ID": "02REL042",
      "source": "02OP021",
      "target": "02DS002",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "变体 (variant-of)",
      "关系ID": "02REL043",
      "source": "02OP021",
      "target": "02OP010",
      "attributes": {
        "变体类型": "顺序表实现"
      }
    },
    {
      "type": "理论依赖 (depends-on)",
      "关系ID": "02REL044",
      "source": "02OP021",
      "target": "02CON005",
      "attributes": {
        "依赖强度": "弱"
      }
    },
    {
      "type": "使用 (uses)",
      "关系ID": "02REL045",
      "source": "02ALG001",
      "target": "02DS002",
      "attributes": {
        "使用角色": "排序对象"
      }
    },
    {
      "type": "理论依赖 (depends-on)",
      "关系ID": "02REL046",
      "source": "02ALG001",
      "target": "02CON005",
      "attributes": {
        "依赖强度": "中"
      }
    },
    {
      "type": "理论依赖 (depends-on)",
      "关系ID": "02REL047",
      "source": "02ALG001",
      "target": "02CON006",
      "attributes": {
        "依赖强度": "中"
      }
    },
    {
      "type": "操作绑定 (has-op)",
      "关系ID": "02REL048",
      "source": "02OP022",
      "target": "02DS002",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "变体 (variant-of)",
      "关系ID": "02REL049",
      "source": "02OP022",
      "target": "02OP011",
      "attributes": {
        "变体类型": "顺序表实现(插入排序)"
      }
    },
    {
      "type": "使用 (uses)",
      "关系ID": "02REL050",
      "source": "02OP022",
      "target": "02ALG001",
      "attributes": {
        "使用角色": "实现方法"
      }
    },
    {
      "type": "理论依赖 (depends-on)",
      "关系ID": "02REL051",
      "source": "02OP022",
      "target": "02CON005",
      "attributes": {
        "依赖强度": "弱"
      }
    },
    {
      "type": "理论依赖 (depends-on)",
      "关系ID": "02REL052",
      "source": "02DS003",
      "target": "02CON007",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖 (depends-on)",
      "关系ID": "02REL053",
      "source": "02DS003",
      "target": "02CON008",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖 (depends-on)",
      "关系ID": "02REL054",
      "source": "02DS003",
      "target": "02CON011",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "变体 (variant-of)",
      "关系ID": "02REL055",
      "source": "02DS003",
      "target": "02DS001",
      "attributes": {
        "变体类型": "链接存储实现"
      }
    },
    {
      "type": "继承 (is-a)",
      "关系ID": "02REL056",
      "source": "02DS004",
      "target": "02DS003",
      "attributes": {
        "约束条件": "每个结点只有一个后继指针域"
      }
    },
    {
      "type": "继承 (is-a)",
      "关系ID": "02REL057",
      "source": "02DS005",
      "target": "02DS003",
      "attributes": {
        "约束条件": "每个结点有前驱和后继两个指针域"
      }
    },
    {
      "type": "操作绑定 (has-op)",
      "关系ID": "02REL058",
      "source": "02OP023",
      "target": "02DS004",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定 (has-op)",
      "关系ID": "02REL059",
      "source": "02OP024",
      "target": "02DS004",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "变体 (variant-of)",
      "关系ID": "02REL060",
      "source": "02DS006",
      "target": "02DS004",
      "attributes": {
        "变体类型": "增加头附加结点"
      }
    },
     {
      "type": "变体 (variant-of)",
      "关系ID": "02REL061",
      "source": "02DS006",
      "target": "02DS005",
      "attributes": {
        "变体类型": "增加头附加结点"
      }
    },
    {
      "type": "变体 (variant-of)",
      "关系ID": "02REL062",
      "source": "02DS007",
      "target": "02DS004",
      "attributes": {
        "变体类型": "循环链接"
      }
    },
    {
      "type": "变体 (variant-of)",
      "关系ID": "02REL063",
      "source": "02DS007",
      "target": "02DS005",
      "attributes": {
        "变体类型": "循环链接"
      }
    },
    {
      "type": "操作绑定 (has-op)",
      "关系ID": "02REL064",
      "source": "02OP025",
      "target": "02DS004",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "变体 (variant-of)",
      "关系ID": "02REL065",
      "source": "02OP025",
      "target": "02OP001",
      "attributes": {
        "变体类型": "单链表实现"
      }
    },
     {
      "type": "操作绑定 (has-op)",
      "关系ID": "02REL066",
      "source": "02OP026",
      "target": "02DS004",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "变体 (variant-of)",
      "关系ID": "02REL067",
      "source": "02OP026",
      "target": "02OP002",
      "attributes": {
        "变体类型": "单链表实现"
      }
    },
    {
      "type": "理论依赖 (depends-on)",
      "关系ID": "02REL068",
      "source": "02OP026",
      "target": "02CON005",
      "attributes": {
        "依赖强度": "弱"
      }
    },
     {
      "type": "操作绑定 (has-op)",
      "关系ID": "02REL069",
      "source": "02OP027",
      "target": "02DS004",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "变体 (variant-of)",
      "关系ID": "02REL070",
      "source": "02OP027",
      "target": "02OP003",
      "attributes": {
        "变体类型": "单链表实现"
      }
    },
    {
      "type": "理论依赖 (depends-on)",
      "关系ID": "02REL071",
      "source": "02OP027",
      "target": "02CON005",
      "attributes": {
        "依赖强度": "弱"
      }
    },
     {
      "type": "操作绑定 (has-op)",
      "关系ID": "02REL072",
      "source": "02OP028",
      "target": "02DS004",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "变体 (variant-of)",
      "关系ID": "02REL073",
      "source": "02OP028",
      "target": "02OP004",
      "attributes": {
        "变体类型": "单链表实现"
      }
    },
    {
      "type": "理论依赖 (depends-on)",
      "关系ID": "02REL074",
      "source": "02OP028",
      "target": "02CON005",
      "attributes": {
        "依赖强度": "弱"
      }
    },
     {
      "type": "操作绑定 (has-op)",
      "关系ID": "02REL075",
      "source": "02OP029",
      "target": "02DS004",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "变体 (variant-of)",
      "关系ID": "02REL076",
      "source": "02OP029",
      "target": "02OP005",
      "attributes": {
        "变体类型": "单链表实现"
      }
    },
    {
      "type": "理论依赖 (depends-on)",
      "关系ID": "02REL077",
      "source": "02OP029",
      "target": "02CON005",
      "attributes": {
        "依赖强度": "弱"
      }
    },
     {
      "type": "操作绑定 (has-op)",
      "关系ID": "02REL078",
      "source": "02OP030",
      "target": "02DS004",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "变体 (variant-of)",
      "关系ID": "02REL079",
      "source": "02OP030",
      "target": "02OP006",
      "attributes": {
        "变体类型": "单链表实现"
      }
    },
    {
      "type": "理论依赖 (depends-on)",
      "关系ID": "02REL080",
      "source": "02OP030",
      "target": "02CON005",
      "attributes": {
        "依赖强度": "弱"
      }
    },
     {
      "type": "操作绑定 (has-op)",
      "关系ID": "02REL081",
      "source": "02OP031",
      "target": "02DS004",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "变体 (variant-of)",
      "关系ID": "02REL082",
      "source": "02OP031",
      "target": "02OP007",
      "attributes": {
        "变体类型": "单链表实现"
      }
    },
    {
      "type": "理论依赖 (depends-on)",
      "关系ID": "02REL083",
      "source": "02OP031",
      "target": "02CON005",
      "attributes": {
        "依赖强度": "弱"
      }
    },
     {
      "type": "操作绑定 (has-op)",
      "关系ID": "02REL084",
      "source": "02OP032",
      "target": "02DS004",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "变体 (variant-of)",
      "关系ID": "02REL085",
      "source": "02OP032",
      "target": "02OP008",
      "attributes": {
        "变体类型": "单链表实现"
      }
    },
    {
      "type": "理论依赖 (depends-on)",
      "关系ID": "02REL086",
      "source": "02OP032",
      "target": "02CON005",
      "attributes": {
        "依赖强度": "弱"
      }
    },
     {
      "type": "操作绑定 (has-op)",
      "关系ID": "02REL087",
      "source": "02OP033",
      "target": "02DS004",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "变体 (variant-of)",
      "关系ID": "02REL088",
      "source": "02OP033",
      "target": "02OP009",
      "attributes": {
        "变体类型": "单链表实现"
      }
    },
    {
      "type": "理论依赖 (depends-on)",
      "关系ID": "02REL089",
      "source": "02OP033",
      "target": "02CON005",
      "attributes": {
        "依赖强度": "弱"
      }
    },
     {
      "type": "操作绑定 (has-op)",
      "关系ID": "02REL090",
      "source": "02OP034",
      "target": "02DS004",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "变体 (variant-of)",
      "关系ID": "02REL091",
      "source": "02OP034",
      "target": "02OP010",
      "attributes": {
        "变体类型": "单链表实现"
      }
    },
    {
      "type": "理论依赖 (depends-on)",
      "关系ID": "02REL092",
      "source": "02OP034",
      "target": "02CON005",
      "attributes": {
        "依赖强度": "弱"
      }
    },
     {
      "type": "操作绑定 (has-op)",
      "关系ID": "02REL093",
      "source": "02OP035",
      "target": "02DS004",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "变体 (variant-of)",
      "关系ID": "02REL094",
      "source": "02OP035",
      "target": "02OP011",
      "attributes": {
        "变体类型": "单链表实现(插入排序)"
      }
    },
    {
      "type": "理论依赖 (depends-on)",
      "关系ID": "02REL095",
      "source": "02OP035",
      "target": "02CON005",
      "attributes": {
        "依赖强度": "弱"
      }
    },
    {
      "type": "变体 (variant-of)",
      "关系ID": "02REL096",
      "source": "02DS008",
      "target": "02DS004",
      "attributes": {
        "变体类型": "数组模拟实现"
      }
    },
    {
      "type": "使用 (uses)",
      "关系ID": "02REL097",
      "source": "02DS008",
      "target": "02CON015",
      "attributes": {
        "使用角色": "空间管理"
      }
    },
    {
      "type": "理论依赖 (depends-on)",
      "关系ID": "02REL098",
      "source": "02ALG002",
      "target": "02CON016",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "使用 (uses)",
      "关系ID": "02REL099",
      "source": "02ALG002",
      "target": "02DS002",
      "attributes": {
        "使用角色": "系数存储"
      }
    },
     {
      "type": "理论依赖 (depends-on)",
      "关系ID": "02REL100",
      "source": "02ALG003",
      "target": "02CON016",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "使用 (uses)",
      "关系ID": "02REL101",
      "source": "02ALG003",
      "target": "02DS004",
      "attributes": {
        "使用角色": "非零项存储"
      }
    },
    {
      "type": "理论依赖 (depends-on)",
      "关系ID": "02REL102",
      "source": "02ALG004",
      "target": "02CON016",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "使用 (uses)",
      "关系ID": "02REL103",
      "source": "02ALG004",
      "target": "02DS004",
      "attributes": {
        "使用角色": "多项式存储"
      }
    },
    {
      "type": "使用 (uses)",
      "关系ID": "02REL104",
      "source": "02ALG004",
      "target": "02OP033",
      "attributes": {
        "使用角色": "构建结果链表"
      }
    },
    {
      "type": "理论依赖 (depends-on)",
      "关系ID": "02REL105",
      "source": "02ALG005",
      "target": "02CON016",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "使用 (uses)",
      "关系ID": "02REL106",
      "source": "02ALG005",
      "target": "02DS004",
      "attributes": {
        "使用角色": "多项式存储"
      }
    },
    {
      "type": "使用 (uses)",
      "关系ID": "02REL107",
      "source": "02ALG005",
      "target": "02DS006",
      "attributes": {
        "使用角色": "辅助实现(简化尾插)"
      }
    },
    {
      "type": "优化 (optimizes)",
      "关系ID": "02REL108",
      "source": "02ALG005",
      "target": "02ALG004",
      "attributes": {
        "优化方向": "时间复杂度 (避免重复查找尾部)"
      }
    }
  ]
}