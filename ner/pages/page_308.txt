先后关系，即有向边的起点的活动是终点活动的前序活动，只有当起点活动完成之后，其终点活动才能进行。通常，把这种顶点表示活动、边表示活动间先后关系的有向图称做顶点活动网（Activity On Vertex network, AOV network）。

例如，一个计算机专业的学生必须完成如图 8-9 所示的全部课程。

\begin{tabular}{c c c}
\hline 课程代号 & 课程名称 & 先修课程 \\
\hline C1 & 高等数学 & 无 \\
C2 & 程序设计基础 & 无 \\
C3 & 离散数学 & C1,C2 \\
C4 & 数据结构 & C3,C5 \\
C5 & 算法语言 & C2 \\
C6 & 编译技术 & C4,C5 \\
C7 & 操作系统 & C4,C9 \\
C8 & 普通物理 & C1 \\
C9 & 计算机原理 & C8 \\
\hline
\end{tabular}

图 8-9 课程表

这里用课程代表活动，学习一门课程就表示进行一项活动，学习每门课程的先决条件是学完它的全部先修课程。学习《数据结构》课程就必须安排在学完它的两门先修课程《离散数学》和《算法语言》之后。学习《高等数学》课程则可以随时安排，因为它是基础课程，没有先修课。用 AOV 网来表示这种课程安排的先后关系，如图 8-10 所示。图中的每个顶点代表一门课程，每条有向边代表起点对应的课程是终点对应课程的先修课。从图中可以清楚地看出各课程之间的先修和后续的关系。如课程 C5 的先修课为 C2，后续课程为 C4 和 C6；C6 的先修课为 C4 和 C5，它无后续课。

一个 AOV 网应该是一个有向无环图，即不应该带有回路，因为若带有回路，则回路上的所有活动都无法进行。如图 8-11 所示是一个具有三个顶点的回路，由$<$A,B$>$边可得 B 活动必须在 A 活动之后，由$<$B,C$>$边可得 C 活动必须在 B 活动之后，所以推出 C 活动必然在 A 活动之后，但由$<$C,A$>$边可得 C 活动必须在 A 活动之前，从而出现矛盾，使每一项活动都无法进行。这种情况若在程序中出现，则称为死锁或死循环，是应该必须避免的。

\begin{tabular}{ccc}
\includegraphics[width=0.4\textwidth]{image1.png} & \multicolumn{2}{c}{\includegraphics[width=0.2\textwidth]{image2.png}} \\
图 8-10 AOV 网 & \multicolumn{2}{c}{图 8-11 三个顶点的回路}
\end{tabular}

在 AOV 网中，若不存在回路，则所有活动可排列成一个线性序列，使得每个活动的所有前驱活动都排在该活动的前面，把此序列叫做拓扑序列（topological order），由 AOV
