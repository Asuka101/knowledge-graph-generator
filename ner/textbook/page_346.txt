由 R.Bayer 和 E.Maccreight 于 1970 年提出的, 它是一种特殊的多元树 (多支树或多叉树), \n它在外存文件系统中常用作动态索引结构。B_树或者是一棵空树, 或者是一棵具有如下结点结构的树。

|$n$| par |$P_{0}$|$K_{1}$|$P_{1}$|$K_{2}$|$P_{2}$|$\cdots$|$K_{n}$|$P_{n}$|$\cdots$|$K_{m}$|$P_{m}$|
| --- | --- | --- | --- | --- | --- | --- | --- | --- | --- | --- | --- | --- |

B_树中每个结点的大小都相同, 其中$m$称为 B_树的阶, 其值要大于等于 3. par 为指向父亲结点的指针域, 由它可以找到父亲结点。$K_{1}, K_{2}, \cdots, K_{n}$为$n$个按从小到大顺序排列的关键字,$n$是变化的, 对于非树根结点,$n$值的变化范围规定为$\left\lceil m / 2\right\rceil-1 \leqslant n \leqslant m-1$, 对于树根结点,$n$值的变化范围规定为$1 \leqslant n \leqslant m-1$。$P_{0}, P_{1}, P_{2}, \cdots, P_{n}$为$n+1$个指针, 用于分别指向该结点的$n+1$棵子树, 其中$P_{0}$所指向下子树中的所有关键字均小于$K_{1}, P_{n}$所指向子树中的所有关键字均大于$K_{n}, P_{i}(1 \leqslant i \leqslant n-1)$所指向子树中的所有关键字均大于$K_{i}$且小于$K_{i+1}$。由$n$的取值范围可知, 对于树根结点, 它最少有两棵子树, 最多有$m$棵子树, 对于非树根结点, 它最少有$\left\lceil m / 2\right\rceil$棵子树, 最多有$m$棵子树。当然树叶结点中的子树均为空树。在 B_树的结点结构中, 每个关键字域的后面还应包含一个指针域, 用以指向该关键字所属记录 (元素) 在主文件中的存储位置, 在此省略未画。

B_树中除了结点结构与一般树不同外, 还有一个特点就是所有叶子结点均在同一层上。

如图 9-6 所示是一棵由 13 个关键字组成的四阶 B_树的示意图, 当然同二叉搜索树一样, 关键字的插入次序不同, 将可能生成不同结构的 B_树。该树共有 3 层, 所有叶子结点均在第 3 层上。为了简化起见, 每个结点的后面尚未利用的关键字域和指针域未画出, 同时也未画出指向父亲结点的指针域 (在以后其关键字个数$n$的域也将不被画出)。每个结点上标出的字母是为后面叙述查找过程方便而添加的。

a

b c

d e f g h

| 1 | 8 |
| --- | --- |
| 3 | 20 |
| 25 | 32 |
| 1 | 54 |
| 2 | 65 |
| 73 |  |
| 2 | 87 |
| 96 |  |

图 9-6 一棵四阶的 B_树

在一棵四阶的 B_树中, 每个结点的关键字个数最少为$\left\lceil m / 2\right\rceil-1=\left\lceil 4 / 2\right\rceil-1=1$, 最多为$m-1=4-1=3$; 每个结点的子树数目最少为$\left\lceil m / 2\right\rceil=\left\lceil 4 / 2\right\rceil=2$, 最多为$m=4$。当然不管每个结点中实际使用了多少关键字域和指针域, 它都包含有 4 个关键字域、4 个指向记录位置的指针域、5 个指向子树结点的指针域、一个指向父亲结点的指针域和一个保存关键字个数$n$的域。

在一棵七阶的 B_树中, 树根结点的关键字个数最少为 1 , 最多为$m-1=6$, 子树个数最
