LNode *t1=p1, *t2=p2, *t3=p3;
//当两个表同时不空时的处理过程
while(t1 && t2) {
    //将t1所指结点的值赋给t3结点的值域，t1指针后移
    if(t1->data.exp<t2->data.exp) {
        t3=t3->next=new LNode;               //在p3尾部插入新结点并使t3指向它
        t3->data=t1->data;
        t1=t1->next;
    }
    //将t2所指结点的值赋给t3结点的值域，t2指针后移
    else if(t1->data.exp>t2->data.exp) {
        t3=t3->next=new LNode;
        t3->data=t2->data;
        t2=t2->next;
    }
    //将两结点合并后的值赋给t3结点的值域，t1和t2指针同时后移
    else {
        double a=t1->data.coef+t2->data.coef;
        if(a!=0) {
            Term item={a,t1->data.exp};
            t3=t3->next=new LNode;
            t3->data=item;
        }
        t1=t1->next;
        t2=t2->next;
    }
}
//将p1单链表中的剩余结点复制到p3单链表中
while(t1) {
    t3=t3->next=new LNode;
    t3->data=t1->data;
    t1=t1->next;
}
//将p2单链表中的剩余结点复制到p3单链表中
while(t2) {
    t3=t3->next=new LNode;
    t3->data=t2->data;
    t2=t2->next;
}
//将p3单链表的表尾结点的指针域置空
t3->next=NULL;
//让t3指向p3所指的附加表头结点，以便删除
t3=p3;
//使p3指向结果单链表的第1个元素结点
p3=t3->next;
