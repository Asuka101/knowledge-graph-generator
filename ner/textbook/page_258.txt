$30(20(,25(23)),50(40,70(54,80(,92))))$中序:$20 \ 23 \ 25 \ 30 \ 40 \ 50 \ 54 \ 70 \ 80 \ 92$40(25(23),70(54,80(,92)))$中序:$23 \ 25 \ 40 \ 54 \ 70 \ 80 \ 92$*6.5 平衡二叉树

平衡二叉树（balanced binary tree）是对二叉搜索树的一种改进。二叉搜索树有一个缺陷，那就是树的结构事先无法预料，随机性很大，它只与结点的值和插入次序有关，往往得到的是一棵很不“平衡”的二叉树，即树的高度与相同结点数的理想平衡树相差甚远，在最坏的情况下，有可能变为一棵单支二叉树，其高度与结点数相同，相当于一个单链表，对其运算的时间复杂度由正常的$O(\log n)$变为$O(n)$，从而部分或全部地丧失了利用二叉搜索树组织数据的优点。为了克服二叉搜索树的这个缺陷，需要在插入和删除结点时对树的结构进行必要的调整，使二叉搜索树的结构始终处于一种较平衡的状态，当然它没有理想平衡树那样绝对的平衡。若要使二叉搜索树调整成理想平衡树那样的结构，将会使调整运算变得很复杂，使调整带来的好处得不偿失。

\subsection{6.5.1 平衡二叉树的定义}

平衡二叉树简称平衡树，是由阿德尔森-维尔斯基和兰迪斯（Adelson-Velskii and Landis）于 1962 年首先提出的，所以又称为 AVL 树。若一棵二叉树中每个结点的左、右子树的高度至多相差 1，则称此树为平衡的。把二叉树中每个结点的左子树高度减去右子树高度定义为该结点的平衡因子（balance factor）。因此，平衡树中每个结点的平衡因子只能是 1、0 或 -1。如图 6-15 (a) 所示是一棵平衡二叉树，如图 6-15 (b) 和图 6-15 (c) 所示分别是一棵非平衡树，每个结点上方所标数字为该结点的平衡因子。

\n
(a) 平衡二叉树
(b) 非平衡二叉树例 1
(c) 非平衡二叉树例 2

图 6-15 带平衡因子的二叉树
