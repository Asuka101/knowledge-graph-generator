第2章 线 性 表21 线性表的定义和抽象数据类型211 线性表的定义线性表 是具有相同属性的数据元素的一个有限序列该序列中所含元素的个数称为线性表的长度用表示  0当0时表示线性表是一个空表即表中不包含任何元素设序列中第个元素为 1    则线性表的一般表示为1 2   1  其中1为第1个元素又称作表头元素2为第2个元素为最后一个元素又称作表尾元素一个线性表可以用一个标识符来命名如用命名上面的线性表则1 2   1  线性表中的元素通常是按照元素值或关键字有序排列的也就是说线性表中的元素是按照前后位置线性有序的即第个元素在逻辑上是第1个元素1的后继是第1个元素1的前驱其中第1个元素1没有前驱最后一个元素没有后继线性表是一种线性结构用二元组表示为   其中  1       0     1   1    1对应的逻辑图如图21所示图21 线性表的逻辑结构示意图线性表中使用的元素类型是一种通用数据类型标识符可以通过语句在使用前把它定义为任何一种具体类型若把它定义为整数类型则为  由线性表的定义可知线性表的长度是可变的当向线性表中插入一个元素时其长度就增加1当从线性表中删除一个元素时其长度就减少1线性表是一种线性结构反过来任何线性数据结构都可以用线性表的形式表示出来这只要按照元素之间的逻辑关系把它们顺序排列即可如对于第 1 章中列举的线性数据结构  可用线性表表示为05010308020704060910因此以后对线性表的讨论就代表了对任何线性数据结构的讨论在日常生活中所见到的各种各样的表都是线性表如人事档案表职工工资表学生成绩表图书目录表和列车时刻表等这些表通常都是以关键字段又称域或属性的值的升序排列如职工工资表按职工号字段的升序排列学生成绩表按学生号字段的升序排列列车时刻表按开出时间字段的升序排列在一个线性表中若存在着按值的升序或降序排列的字段则称该字段为有序字段该线性表为有序表否则若不存在任何有序字段则为无序表如对于一个字符串或由一篇文章所建立的文本文件它也是一个线性表其元素类型为字符它们只是按照前后位置有序而不是按照每个字符的  码有序所以为无序表下面给出几个线性表的具体例子4725381249635420183447序号姓名性别年龄单位职称联系电话其中  中的元素为字符型 中的元素为整型 中的元素为字符串型 中的元素也为字符串型 中的元素可为任何类型它同上面线性表  中的元素一样每个元素都是用标识符抽象表示的其目的是便于做一般性的考虑再如对于第 1 章表 11 和表 12若只考虑各记录之间位置上的前后关系即按职工号的升序排列次序则均为一个线性表每个线性表中的元素均为相应的记录类型212 线性表的抽象数据类型线性表的抽象数据类型包括数据和操作两个部分数据部分为一个线性表假定用标识符  表示它可以采用顺序链接散列索引等任一种方法存储到计算机中其存储类型用标识符  表示操作部分为对线性表所做的各种操作运算包括向线性表插入一个元素从线性表中删除一个元素求线性表长度判断线性表是否为空等在下面定义的线性表抽象数据类型中只给出了对线性表的一些基本的和典型的操作因为线性表的实际应用是丰富和广泛的所以不可能也没有必要给出其所有操作  一个具有  类型的线性表    初始化  为空   清除  中的所有元素    返回  的长度   判断  是否为空     返回  中第  个元素的值   遍历输出  中的所有元素     从  中查找并返回元素      修改  中元素       向  插入元素       从  删除元素   对  中的所有元素重新按给定条件排序 在上面对面线性表  的运算中第37种运算不需要改变线性表的状态所以在其参数说明前可以使用  保留字拒绝在函数体中对线性表的修改以保证数据的安全性其余运算需要在函数体中改变线性表所以不能使用此保留字在插入运算中 参数用来保存待插入的元素 参数用来给定插入条件人为约定当  1同时  1时则把  插入到线性表中第  个位置上其中  表示线性表长度当  1时则把  插入到线性表的末尾位置即最后一个元素的后面位置当  0时则把线性表看作有序表 被插入后仍保持有序在删除运算中 参数用来保存待删除元素的值或某个域的值并保存和返回被删除元素的完整值 参数用来给定删除条件人为约定当  1同时  时则删除线性表中第  个位置上的元素并通过  参数返回值当  1时则删除线性表中的表尾元素即最后一个元素并通过  参数返回值当  0时则删除线性表中第一个值或某个域的值等于  的元素并通过  参数返回值213 操作举例例 21设线性表 125381942332 60 42则对 1 的一组操作及结果如下1 返回 1 的长度 51 1 非空返回 1 返回 1 中第  个元素的值因 2所以返回值 3816 向 1 末尾插入 1 变为 2538194233601541 向 1 表头插入元素 541 变为 5425381942336010 删除 1 中值为  的元素1 变为 54253819336013 删除 1 中第 3 个元素1 变为 54251933601 1 被改变为 19253354601350 插入 35 后 1 变为 192533355460例 22课程记录的结构为   20 课程名称  开课学时  开课学期以课程记录为元素类型的一个线性表 2 如表 21 所示表 21 课程计划安排表 课程名称  开课学时  开课学期  课程名称  开课学时  开课学期              高等数学  90  1  计算机组成原理  90  2  离散数学  72  2  程序设计基础  63  3  英语  72  1       对 2 进行的一组操作如下首先定义具有  记录结构的  和  对象并对其赋初值  72 给的  域赋初值 72程序设计基础 给  的  域赋初值程序设计基础   英语  801 给  赋初值   英语  801   数据结构  724 给  赋初值   数据结构  72423 返回值为 英语721 2 查找与中开课学时相等的第一个元素并由返回为了实现课程记录之间的直接比较 需要事先重载等于号运算符 使其实际上是在  域上进行比较 2 查找与值中课程名称相等的第一个元素并由返回为了实现课程记录之间的直接比较 也需要重载等于号运算符 使其实际上是在  域上进行比较 2 用更新 2 中课程名称为英语的第一个元素 使得该元素被修改为 英语801在此函数体中若进行记录之间的直接比较 则也需要事先重载等于号运算符使其实际上是进行课程名称之间的比较 26 在 2 末尾添加了一条  记录 20 从 2 中删除与的  域值相等的第一条记录即删除 2 中的第 5 条记录 程序设计基础633 2 假定按开课学时的升序排列 则排序后的结果如表 22 所示表 22 对 2 操作后的结果 课程名称  开课学时  开课学期  课程名称  开课学时  开课学期              离散数学  72  2  高等数学  90  1  数据结构  72  4  计算机组成原理  90  2  英语  80  1       22 线性表的顺序存储和操作实现221 线性表的顺序存储结构线性表的存储结构有顺序链接索引散列等多种方式 顺序存储结构是其中最简单最常见的一种线性表的顺序存储结构可叙述为 将线性表中的所有元素按照其逻辑顺序依次存储到计算机存储器中的从指定存储位置开始的一块连续的存储空间中线性表中的第一个元素的存储位置就是被指定存储空间中的开始存储位置第个元素2    被紧接着存储在第1个元素的存储位置的后面设线性表的元素类型为 则每个元素所占用存储空间的大小即字节数为 整个线性表所占用存储空间的大小为 第个元素的存储位置为    1 其中表示线性表的长度1    为整个线性表占用的存储空间的开始位置在 语言中定义了一个数组就定义了一块可供用户使用的连续存储空间该存储空间的起始位置就是由数组名表示的地址常量因此线性表的顺序存储结构是利用数组来实现的数组的基本类型就是线性表中元素的类型数组的大小又称数组长度它等于数组中包含的元素个数亦即存储元素的位置数要大于等于线性表的长度线性表中的第 1 个元素被存储在数组的起始位置即下标为 0 的位置上第 2 个元素被存储在下标为 1 的位置上以此类推第个元素即最后表尾元素被存储在下标为1的位置上用具有  类型的数组 存储线性表1 2   1  则所对应的顺序存储结构如图 22 所示 下标位置  数组线性表存储空间  0 1 1 2111 1  图 22 线性表的顺序存储结构示意图数组  下标的上界  决定了所有线性表的最大长度当线性表的长度大于  时其尾部多余的元素将无法被存储发生这种情况时需要重新分配存储空间使得  的值更大一些在定义一个线性表的顺序存储类型时需要定义一个数组来存储线性表中的所有元素和定义一个整型变量来存储线性表的长度假定数组用 表示整型变量用  表示则元素类型为  的线性表的顺序存储类型可描述为  为了便于进行线性表的操作可以把用于存储线性表元素的数组和存储线性表长度的变量统一说明在一个记录类型中设该记录类型用  表示则定义如下        若要对存储线性表的数组空间采用动态分配并且其数组长度能够按需要增加则可以定义出如下的  类型                        存线性表元素的动态存储空间的指针                            存线性表长度                         规定  数组的长度当初始化此类型的一个线性表时要使  指针指向大小为  的动态数组空间222 顺序存储下的线性表操作的实现在顺序存储方式下在线性表抽象数据类型中所列出的每一个操作的具体实现如下1 初始化线性表初始化线性表需要完成动态存储空间的初始分配并且把线性表置为空      初始定义数组长度为 10 以后可增减 或者附加一个形参给定初始数组长度    10    动态存储空间分配                  动态可分配的存储空间用完 退出运行        1        置线性表长度为 0 即为空表    0此算法中的  语句用于判断动态分配是否成功若成功  指针非空若分配失败即系统中没有存储空间可供动态分配则  指针值为空当分配失败时通过执行此语句退出程序运行现在计算机系统中操作系统功能强大内存和外存空间都能够用于动态存储分配所以通常不会出现动态存储分配失败的情况所以在编程时通常省略对动态存储分配失败情况的处理语句在此情况下若出现动态存储分配失败系统会自动停止运行程序2 删除线性表中的所有元素使之成为一个空表此操作需要释放动态存储空间并且把线性表的长度置 0                                0    03 得到线性表的长度       4 检查线性表是否为空       0若线性表为空则返回真否则返回假5 得到线性表中指定序号为的元素        1            若越界则退出程序                       1         1            返回线性表中第个元素的值若所给的值不存在越界问题则可直接使用表达式1从线性表中取出第个元素如要取出线性表中第5个元素则表示为46 遍历一个线性表遍历一个线性表就是从线性表的第1个元素起按照元素之间的逻辑顺序依次访问每一个元素并且每个元素只被访问一次直到访问完所有元素为止在顺序存储方式下线性表中元素之间的存储顺序与其逻辑顺序相同因为一个元素的后继元素被紧接着存储在该元素所在位置的下一个存储位置上若一个元素在数组存储空间中的存储位置为下标 则它的后继元素的存储位置必为下标1所以遍历一个线性表就是依次访问 0 1中的每一个元素并且每个元素仅被访问一次当访问一个元素时可根据需要作任意处理在我们的算法中且以打印该元素的值代之若线性表中的元素类型为记录类型则打印元素的值需要有对该类型重载插入操作符函数的支持       0               当然对于记录类型若在此函数的  输出语句中是依次输出元素的每一个域的值而不是把元素作为整体输出则不需要重载插入操作符7 从线性表中查找具有给定值的第 1 个元素        0                                                当从线性表  中查找到与  的值或某个域的值相等的元素时则由  返回该元素的整体值并由该函数返回真表明查找成功否则由函数返回假表明查找失败当元素类型  为记录类型时调用此函数必须要有对该类型进行等于号  重载的支持若没有则应该修改  条件表达式使比较在相应的域上进行并且此域必须为简单数据类型另外若用于比较的元素类型或某个域的类型为字符串则需要使用字符串比较函数 因为使用等于号直接比较的是指针的值而不是比较所指的字符串如当  为字符串类型  时 条件表达式应修改为08 更新线性表中具有给定值的第 1 个元素          0                       进行修改更新赋值操作                      该函数与  函数的定义类似  函数是在查找成功后由  带回元素的值 而  函数是在查找成功后 用  的值修改元素的值在线性表查找和更新算法中 运行时间主要取决于比较元素的次数 当第 1 个元素 0 等于待查找或更新的元素时 则只需要比较一次就结束操作 对应的时间复杂度为1 这是最好的情况 当前1元素比较均不成立 只有比较到最后一个元素 1 为线性表的长度  才等于待查找或更新的元素时 则需要经过次比较完成操作 对应的时间复杂度为 这是最差的情况 当元素值互不相同 并且都有相同的概率  即平均概率  1等于待查找或更新的元素时 则需要比较元素的平均次数为1 1 12 对应的时间复杂度为 这是平均情况当经过依次同线性表中所有个元素比较后 仍找不到与给定值相等的元素 则表明查找失败 算法执行   语句后结束 此种情况下的时间复杂度同样为所以无论查找成功或失败 顺序查找线性表的时间复杂度均为9 向线性表中按给定条件插入一个元素当该函数的  参数为 0 时 则需要实现在有序表上的插入 并且要保证插入新元素后仍为一个有序表在有序表上查找插入位置最简单和常用的方法是顺序比较法 它从第 1 个元素起 依次取出每一个元素同待插入的元素  进行比较 当  小于某一个元素的值时比较结束 此元素位置就是  的插入位置若比较到表尾后仍满足不了条件 表明  大于所有元素 则应把  插入到表尾 成为新的表尾元素另外 当元素类型为记录时 则必须对该类型进行小于号重载后才能实现  的直接比较例如 一个有序表为   25364048557283 当向其中插入 16 时 其插入位置为表头 即第 1 个元素 25 的位置 当向其中插入 50 时 其插入位置为 55 元素的位置 当向其中插入 92 时 其插入位置在表尾 即最后一个元素 83 的后面位置当该函数的  参数等于 1  要求把  插入到线性表的表尾 即第 1 个元素的位置上当该函数的  参数为大于等于 1  同时小于等于线性表长度加 1 时 则直接把  插入到线性表的第  个元素的位置上在线性表的第  个元素的位置插入一个新元素前 还要检查存储线性表的动态数组空间是否具有空闲位置 若没有 则要扩大原有的空间为了实现在第  个元素的位置插入新元素 还要把从该位置开始的其后所有元素均后移一个位置 以使空出第  个元素的位置 用于写入新元素完成插入后 要使线性表的长度域增 1  然后返回真结束算法根据以上分析编写出此算法如下      检查  值是否有效 若无效则无法插入 返回假1  1      值无效  求出按值有序插入时  的插入位置 使之保存到  中 0     0               1  中保存新插入的元素的序号得到表尾插入位置 被保存在  中 1 1若线性表存储空间用完 则重新分配大一倍的存储空间       计算每个元素存储空间的长度     2    线性表动态存储空间扩展为原来的 2 倍 原内容不变             动态可分配的存储空间用完 退出运行        1        2 把线性表空间大小修改为新的长度待插入位置及所有后续位置元素 从后向前依次后移一个位置1 1     1把  的值赋给已空出的下标为 1 的位置 它为第  个元素位置1线性表长度增 1返回真表示插入成功 在这个算法中 运行时间主要花费在第 2 步为寻找插入位置所需的比较元素的次数和第 5 步为空出插入位置所需的移动元素的次数新元素插入的下标位置为 则元素的比较次数为1次 元素的移动次数为次 为线性表的长度 两者相加为1次也就是说 当进行有序插入时 不管新元素插入在什么位置上 进行元素比较和移动的总次数不变 均为1 当进行按位置插入时 只需要考虑移动元素的次数 在插入所有位置概率相等情况下 平均移动次数为1102 所以此算法的时间复杂度为特殊地 当规定在表尾插入时 其时间复杂度为110 从线性表中删除符合给定条件的第 1 个元素此算法同插入元素的算法类似具体描述如下          检查线性表是否为空若是则无法删除返回假    0         线性表为空删除无效                 检查  值是否有效若无效则无法删除返回假    1            值无效          求出按值删除时  的删除位置使之保存到  中         0         0                          无元素可删返回假        1        得到被表尾元素的序号被保存在  中     1     把被删除元素的值赋给变参  带回    1    将待删除元素位置后面的所有的元素从前向后依次前移一个位置              1    线性表长度减 1        若线性表存储空间空余太多则进行适当缩减    04  10           计算每个元素存储空间的长度         2        线性表动态存储空间缩减为原来的一半        2 把线性表空间大小修改为新的长度        返回真表示删除成功     在这个算法中运行时间主要花费在第 3 步为寻找删除元素位置所需的比较元素的次数和第 6 步为填补删除元素位置所需的移动元素的次数上被删除元素的下标位置为则元素的比较次数为1次 元素的移动次数为1次 为线性表的长度  两者相加为次也就是说 当进行按值删除时 不管删除什么位置上的元素 进行元素比较和移动的总次数不变 均为 当进行按位置删除元素时 只需要考虑移动元素的次数 在删除所有位置上元素概率相等情况下 平均移动次数为1 01112 所以此算法的时间复杂度为特殊地 当规定删除表尾元素时 其时间复杂度为111 对线性表进行排序对线性表进行排序就是按照元素的值或某个域的值的升序 或降序 排列元素 使之成为一个有序表对顺序存储的线性表 数组 进行排序的方法很多 本小节只介绍一种简单的插入排序方法 其他方法将在第 10 章中专门讨论插入排序的方法是 把线性表 01中共个元素看作一个有序表和一个无序表 开始时有序表中只有一个元素 0 一个元素总是认为是有序的 无序表中含有1个元素 11 以后每次从无序表中取出第 1 个元素 把它插入到前面有序表中的合适位置 使之成为一个新的有序表 这样有序表就增加了一个元素 无序表就减少了一个元素 经过1次后 有序表中含有个元素 无序表变为一个空表 整个线性表就成为了一个有序表如何在第次1    1把无序表中的第 1 个元素 插入到前面有序表 01中呢 一种方法是 从有序表表尾元素 1开始 依次向前使每一个元素 0    1同  用来临时保存 的值 进行比较 若  则把 后移一个位置 直到 或 0 为止 此时已空出的下标为1的位置就是  的插入位置 把  的值插入到 1即可假定一个线性表为4265807428443665 则插入排序的过程 如图 23 所示 其中中括号内表示每次排序后得到的有序表 中括号后面为待排序的无序表0  1  2  3  4  5  6  7   42  65  80  74  28  44  36  651 42 65 80 74 28 44 36 652 42 65 80 74 28 44 36 653 42 65 74 80 28 44 36 654 28 42 65 74 80 44 36 655 28 42 44 65 74 80 36 656 28 36 42 44 65 74 80 657 28 36 42 44 65 65 74 80图 23 线性表插入排序过程用 语言描述插入排序算法如下   对中的所有元素重新按给定条件排序       1   共循环 1 次     把无序表中的第 1 个元素暂存     1 0  向前顺序进行比较和移动         1             1 把  写入到已经空出的 1 位置在插入排序中共需要进行1次元素的插入每次插入最少需比较一次和移动两次元素最多需比较次和移动2次元素平均需比较12次和移动22次元素若分别用和表示元素的总比较次数的最小值最大值和平均值用和表示元素的总移动次数的最小值最大值和平均值则它们的值分别为 11 11  11 12 1  11 121422 11 221  1121223 4  11221427 8所以插入排序算法在最好情况下的时间复杂度为在平均和最差情况下的时间均为2利用现成的向线性表插入元素的  算法也可以很方便地编写出  排序算法该算法需要首先定义一个临时线性表并进行初始化接着将形参线性表  中的每一个元素通过  算法依次插入到临时线性表中最后把临时线性表赋给 用 语言描述如下                  0           0        该算法的时间复杂度同上面插入排序算法相同均为2调试上述算法的程序如下                   存线性表元素的动态存储空间的指针                     存线性表长度                  规定  数组的长度添加上面介绍的 11 个算法      12369121518212427303336                    012 1    4813400    4 9        输入待查找的元素值         查找成功     查找失败    输入待删除元素的值        0 删除成功     删除失败    0 6         1        按值插入输入待插入元素的值        0 插入成功     插入失败        线性表长度     线性表为空     线性表不空    运行这个程序得到的一次运行结果如下12 273 6 9 12 15 18 21 24 27 30 33 36 40 48输入待查找的元素值21查找成功输入待删除元素的值15删除成功6 12 21 27 33 40 48按值插入 输入待插入元素的值8插入成功6 8 12 21 27 33 40 48线性表长度8线性表不空仔细分析此结果增强对算法的理解23 线性表应用举例用线性表来管理一个商品库存表商品库存表已经保存在文本文件  中每个商品记录包含有 4 项内容商品代号商品名称最低库存量和当前库存量商品库存表中的具体内容如表 23 所示表 23 商品库存表 商品代号  商品名称      最低库存量  当前库存量  12          10          25          13                20          48          01         10          36          48               15          90          24            10          52          05           5           20         可以事先通过调用下面函数在  盘上建立库存表文件                     定义输出文件流对象                          1         30     0 6          30                在此函数中 循环体每循环一次要求从键盘上输入一条商品记录每个域值之间用空格分开 最后以按下回车键结束 该条记录被存入到字符数组  中 然后被写入到文件中根据商品库存表中商品记录的结构 可定义记录类型如下      5 商品代号     15 商品名称      最低库存量      当前库存量通过  语句将该类型定义为线性表的通用元素类型   在商品库存表中 以商品代号域作为查找字段域 则对应的重载等于号运算符的函数定义为    1   2     120同样 在插入和排序算法中使用的小于号运算符需如下的重载函数支持    1   2     121用于打印输出使用的插入操作符也需要进行重载 定义如下           设置每个区域内按左对齐显示    612    44     对商品库存表的管理就是首先把它读入到内存线性表中 接着对它进行必要的处理然后把处理后的结果写回到文件中对商品库存表的处理假定包括如下选项1 打印遍历库存表2 按商品代号修改记录的当前库存量 若查找到对应的记录 则从键盘上输入其修正量 把它累加到当前库存量域后 再把该记录写回原有位置 若没有查找到对应的记录则表明是一条新记录 应接着从键盘上输入该记录的商品名称最低库存量和当前库存量的值 然后把该记录追加到库存表中3 按商品代号删除指定记录4 按商品代号对库存表中的记录排序在顺序存储方式下对线性表的各种操作函数假定包含在  程序文件中 则实现库存表管理的完整程序如下程序 21  商品记录类型     5          商品代号     15         商品名称                   最低库存量                   当前库存量                 存线性表元素的动态存储空间的指针                   存线性表长度                规定  数组的长度    1   2     120    1   2     121            设置每个区域内按左对齐显示    612    44             把文件中所存商品表顺序读入内存线性表中以便处理                            1              1                                     把线性表中所存的商品表重新写回到文件中                             1                   1                                                2                              说明一个线性表 2    2                         初始化2    2     读文件到线性表     1                               当为真时执行循环            1 打印整个库存表        2 修改库存表中的记录3 删除库存表中的记录4 对库存表排序5 结束处理过程输入你的选择 1  5    请重新输入选择 15       1    2          打印     2                        修改              输入待修改的商品代号        2         输入该商品的修正量                        2 完成更新         输入新商品记录的其余字段的内容        221    新记录已被插入到表尾 3                       删除    输入待删除商品的商品代号        20        代号为的记录被删除     代号为的记录不存在     4                       排序    2    商品表中的记录已按商品代号排序     5                       结束    本次处理结束再见02 把线性表写回文件同学们可以上机运行此程序并分析运行结果24 线性表的链接存储结构1 链接存储的概念顺序存储和链接存储是数据的两种最基本的存储结构在顺序存储中每个存储结点只含有所存元素本身的信息元素之间的逻辑关系是通过数组下标位置简单计算出来的如在线性表的顺序存储中若一个元素存储在对应数组中的下标位置为则它的前驱元素在对应数组中的下标位置为1它的后继元素在对应数组中的下标位置为1在链接存储中每个存储结点不仅含有所存元素本身的信息而且含有元素之间逻辑关系的信息其存储结点简称结点的结构如图 24所示  12图24 结点的结构其中  表示值域用来存储一个元素1 2    1均为指针域每个指针域的值为其对应的后继元素或前驱元素所在结点以后简称为后继结点或前驱结点的存储位置通过结点的指针域又称为链域可以访问到对应的后继结点或前驱结点该后继结点或前驱结点称为指针域链域所指向或链接的结点若一个结点中的某个指针域不需要指向任何结点则令它的值为空即数值 0用常量  表示在数据的顺序存储中由于每个元素的存储位置都可以通过简单计算得到所以可以随机存取数据中的任一元素对任一元素的存取时间都相同这是一种随机存取机制而在数据的链接存储中由于每个元素的存储位置是保存在它的前驱结点或后继结点中的所以只有当访问到其前驱结点或后继结点后才能够按指针访问到该结点这是一种顺序存取机制数据的链接存储表示又称为链表当链表中的每个结点只含有一个指针域时则被称为单链表否则被称为多链表2 线性表的链接存储由于线性表中的每个元素至多只有一个前驱元素和一个后继元素即数据元素之间是 11 的逻辑关系所以当进行链接存储时一种最简单也最常用的方法是在每个结点中除包含有数值域外只设置一个指针域用以指向其后继结点这样构成的链表被称为线性单向链接表简称单向链表或单链表另一种可以采用的方法是在每个结点中除包含有数值域外设置有两个指针域分别用以指向其前驱结点和后继结点这样构成的链接表被称为线性双向链接表简称双向链表或双链表单链表和双链表都是线性链表设一个线性表为1 2   1  若分别用单链表和双链表表示则对应的存储结构如图 25 所示 单链表 双链表图 25 线性表的链接存储结构示意图每个结点的指针域同它所指向的后继结点或前驱结点用一个带箭头的线段相连接表示该指针域的值为所指向结点的存储位置若一个指针域的值为空即 则在图形中通常用符号表示由于线性表中的第 1 个元素无前驱元素最后一个元素无后继元素所以在对应的链接存储中第 1 个结点的前驱指针域为空最后一个结点的后继指针域为空在单链表中由于每个结点只包含有一个指向后继结点的指针所以当访问过一个结点后只能接着访问它的后继结点而无法访问它的前驱结点在双向链表中由于每个结点既包含有一个指向后继结点的指针又包含有一个指向前驱结点的指针所以当访问过一个结点后既可以依次向后访问每一个结点也可以依次向前访问每一个结点在线性表的链接存储中存储第 1 个元素的结点称为表头结点存储最后一个元素的结点称为表尾结点其余为中间结点每个链接表都需要设置一个指针指向表头结点被称为表头指针虽然表头指针只指向表头结点但从表头指针出发沿着结点的链即指针域的值可以依次访问到每一个结点所以通常就以表头指针来命名一个链接表若单链表的表头指针为 双链表的表头指针为 则可分别称它们为  单链表和  双链表在线性表的顺序存储中逻辑上相邻的元素其对应的存储位置也相邻所以当进行插入或删除运算时通常需要平均移动半个表的元素这是相当费时的操作在线性表的链接存储中逻辑上相邻的元素其对应的存储位置是通过指针来链接的因而每个结点的存储位置可以任意安排不必要求相邻所以当进行插入或删除运算时只需修改相关结点的指针域即可这是既方便又省时的操作灵活性强由于链接表的每个结点带有指针域因而在存储空间上比顺序存储要付出较大的代价3 在单链表上的插入和删除操作在单链表中插入和删除结点如图 26 所示在  结点即存放元素  的结点的简称另外有时也用该结点的地址称该结点把  结点称为  结点即  指针所指向的结点的后面插入  结点的前后状态其插入操作的过程如下1 将  结点指针域的值 即指向后继  结点的指针赋给  结点的指针域2 将指向  结点的指针即指针变量  的值赋给  结点的指针域       插入结点前 插入结点后图 26 在单链表中插入结点的示意图注意 在单链表的表头插入一个新结点则首先要吧原表头指针赋给新结点的指针域然后再把新结点的存储位置赋给表头指针变量思考在单链表的表尾插入一个新结点情况又如何呢它同在中间或表头插入的情况有何异同从单链表中删除  结点后面的  结点的前后状态如图 27 所示其删除操作的过程如下       删除结点前 删除结点后图 27 从单链表中删除结点的示意图1 将  结点指针域的值 即指向后继  结点的指针赋给一个临时指针变量 以便处理和回收该结点2 将  结点的指针域的值 即指向后继  结点的指针赋给  结点的指针域注意从单链表中删除表头结点则首先要把表头指针赋给一个临时指针变量以便处理和回收该结点然后再把原表头结点指针域的值即指向原表头后继结点的指针赋给表头指针变量使其下一个结点成为新的表头结点思考若从单链表中删除表尾结点情况又如何呢它同删除中间或表头结点的情况有何异同4 单链表中的结点类型 单链表中每个结点的类型用  表示它包括存储元素的数值域用  表示其类型用通用类型标识符  表示还包括存储后继元素位置的指针域用  表示其类型为指向本身结点的指针类型 则  类型的定义如下           因为每个指针类型的大小等于一个整型  的大小即 4 个字节所以  类型的大小等于元素类型的大小 加上 4 个字节若  表示 则  类型的大小为 8 个字节也就是说每个  类型的结点对象占用 8 个字节的存储空间程序 22 是使用  类型的一个实例从键盘上输入的三个数值依次为 510 和 8则该程序的运行结果也是 510 和 8程序 22   规定元素类型为整型             定义单链表结点       定义  类型的三个结点   和       定义  类型的指针变量  并初始指向  结点     给    的数值域输入数据       把    链接为单链表      从表头开始输出每个结点的值即数据域的值          输出指针  所指向的结点的值         使  指向链表中的下一个结点        程序 23 同上面程序 22 具有相同的功能都是建立一个具有三个结点的单链表然后再依次输出单链表中每个结点的值但在程序 22 中单链表中的每个结点为静态结点即由静态分配所产生的结点而在程序 23 中单链表中的每个结点为动态结点即由动态分配所产生的结点程序 23   规定元素类型为整型             定义单链表结点类型      1    1  动态产生结点并将其地址赋给  和 1 指针     0 3             指向一个新的动态结点 从键盘输入一个整数赋给  结点的值域    将  结点链接到  结点之后          使  指针后移 指向后继新结点   置链表的最后一个结点的指针域为空1    链表的表头结点为 1 结点的指针域所指向的结点       输出  结点的值 即其数值域的值             使  指向链表中的下一个结点单链表中的结点既可以来自静态或动态产生的独立结点如以上两个程序所示也可以来自静态或动态产生的数组中的元素结点若来自数组中的结点元素则  域指向的是后继结点所在的下标所以它应被定义为整数类型用  表示数组中结点的类型则对应的定义如下           由数组中的结点构造单链表的所属数组类型可定义如下   被定义为包含有  个元素的元素类型为  的数组类型由该类型的对象即数组构造单链表时通常下标为 0 的元素不作为单链表中的结点使用而是用它的指针域保存表头指针这样数组最多能够提供 1 个结点另外当一个结点无后继结点时其指针域应被赋予数值 0表示空指针利用  类型的数组构成单链表的情况如图 28  所示表头指针为下标 0 位置中  域的值 4单链表的结构示意图如图 28  所示表头指针用  表示每个指针上标出的数值就是该指针的具体值   0  1  2  3  4  5  6  7  8      4  3  8  6  7  2  0  5  1   数组构成的单链表4475505762687583940 单链表的结构图 28 利用数组建立单链表示意图可以看出该单链表中各数据元素之间的逻辑顺序如下44 50 57 62 68 75 83 94由数组建立一个单链表时通常将所有空闲元素链接起来构成一个空闲单链表空闲单链表的表头指针也需要用一个元素结点的指针域保存起来假定使用1号即下标为1的指针域在这种数组中链接存储的线性表的长度至多为2因为0号和1号元素均被表头指针所占有当对整个数组进行初始化时不仅置单链表为空即把0赋给0号元素的指针域而且将全部2个空闲结点链接起来构成空闲单链表同时把它的表头指针即2赋给1号元素的指针域对数组进行初始化后的情况如图29所示   0  1  2  3  4  5  6  7  1    0  2  3  4  5  6  7  8  0 图29 空闲单链表向数组中的单链表插入一个新元素时首先从空闲表中取出即删除表头结点作为保存新元素的结点使用然后再把该结点按条件插入到单链表中当从数组中的单链表删除一个元素结点时首先从单链表中取出这个结点然后再把该结点插入到空闲单链表的表头数组中的元素单链表和空闲单链表的结点总数在任何时候都等于2当空闲单链表为空时则元素单链表为满此时无法再向它插入新结点例如在下面的数组中链接存储的线性表为3568572670空闲单链表中依次包含有358号元素结点10如图210所示   0  1  2  3  4  5  6  7  8    4  3  6  5  2  8  9  0  0 图210 元素和空闲单链表5 双向链表中的结点类型和插入与删除操作对于双向链表也可进行以上对单链表那样的讨论若双向链表采用独立结点构成则结点类型定义为                 若双向链表采用数组中的元素结点构成则结点类型应定义为                 其中 和  为结点类型标识符该类型包含有 3 个域数值域左指针域和右指针域 域用于指向前驱结点 域用于指向后继结点设  和  分别是具有  类型的指针变量若在双向链表中  结点之后插入一个  结点则需要修改 4 个指针域的值操作步骤如下1 使  结点的后继结点成为  结点的后继结点2 若  结点有后继结点则使  结点成为该结点的前驱结点  3 使  结点成为  结点的前驱结点4 使  结点成为  结点的后继结点插入过程如图 211 所示 插入结点 插入过程 插入完成后的链接图 211 在双向链表中插入结点的示意图若删除双向链表中  指针所指向的结点假定  结点前后都存在着结点则只需要修改两个指针其操作步骤如下1 修改  结点的前驱结点的右指针使之指向  结点的后继结点2 修改  结点的后继结点的左指针域使之指向  结点的前驱结点3 回收  结点 删除过程如图 212 所示 删除前的状态 删除过程 删除后的状态图 212 在双向链表中删除结点的示意图6 带表头附加结点的线性链表在线性表的链接存储中 为了方便在表头插入和删除结点 使得与在其他地方所做的操作相同 需要在表头结点 即保存第一个元素的结点 的前面增加一个结点 把它称之为表头附加结点 此时表头附加结点的指针域指向表头结点 而表头指针由原来指向第一个元素的结点改为指向表头附加结点仍以存储以前给出的线性表  为例 如图 213 所示此时单链表中指向第一个结点的指针为  双向链表中指向第一个结点的指针为 12 带表头附加结点的单链表12 带表头附加结点的双向链表 带表头附加结点的空单链表 带表头附加结点的空双向链表图 213 带表头附加结点的单链表和双向链表7 循环链表在单链表中 让表尾结点 即最后一个结点 的指针域指向表头结点或表头附加结点 若采用的话 在双向链表中 若让表尾结点的右指针域指向表头结点或表头附加结点而让表头结点或表头附加结点的左指针域指向表尾结点 则就构成了循环链表带有表头附加结点的循环单链表和循环双向链表 如图 214 所示12 循环单链表12 循环双向链表 循环单链空表 循环双向空表图 214 带表头附加结点的循环单链表和循环双向链表对于由数组元素结点构成的单链表 其下标为 0 的元素结点的指针域保存元素单链表的表头指针 所以该结点成为元素单链表的附加表头结点 而元素单链表的最后一个结点的指针域为 0 表示空指针 它正好是表头附加结点的下标 由此构成带表头附加结点的循环单链表空闲表的最后一个结点的指针域被置为整数 0 表示空指针 若被置为整数 1 则可构成带表头附加结点的循环空闲表对于独立分配存储空间的结点 通常由指针所指向 若使用的指针为  则 就表示该结点  和  就分别表示该结点的数值域和指针域对于数组中的元素结点 它是由数组名和下标值标识的 假定数组名为  下标值为  则  就表示该结点  和  就分别表示该结点的数值域和指针域 元素单链表的表头指针为 0 空闲单链表的表头指针为 1了解独立结点和元素结点在访问上的差别后 学会在独立结点所构成的单链表上进行各种运算的算法 也就不难写出对元素单链表进行各种运算的算法25 线性表操作在单链表上的实现每个单链表都有一个表头指针 用  表示 由表头指针可以访问到单链表中的任何结点 所以要对单链表进行操作 必须给出表头指针假定以  为表头指针的单链表是由  类型的动态结点所组成 并且不带有表头附加结点 下面给出对线性表抽象数据类型中列举的每一操作在单链表上的具体实现 即 语言算法描述1 初始化单链表                                 置单链表为空2 删除单链表中的所有结点 使之成为一个空表删除单链表中的所有结点 需要遍历单链表 通过  操作释放被访问的每一个结点所占的存储空间 然后把表头指针置为空                               将用   指向待处理结点                             将用   指向  的后继结点                                表头指针赋给                                保存下一个结点的地址                             删除当前结点 即被处理的结点                                使下一个结点成为当前结点                                  置单链表为空3 得到单链表的长度由于在单链表的构成中 没有给出单链表的长度 所以此算法需要遍历单链表 对被访问的结点进行计数 最后返回计数值        0                          用来统计单链表中结点的个数                      遍历单链表 统计结点数                                                     返回单链表长度因为该运算需要访问单链表中的每个结点 不改变表头指针 即不会改变单链表的状态 所以定义表头指针  为值参对于指针值参只需要占用一个字 即 4 个字节 的存储空间 它与使用引用参数传送时需要保存实参地址所需要的存储空间大小相同 由此不会增加存储空间和传送参数值时间对于上面第 1 和第 2 种操作 由于需要通过函数体操作修改调用函数时的实际表头指针的值 所以必须被定义为引用参数4 检查单链表是否为空        5 得到单链表中第  个结点中的元素要访问单链表中的第个结点 必须从表头开始依次访问过该结点之前的所有结点后才能够实现 即只能够采用顺序存取 而不能够随机存取任一个结点         1                    1         0                         统计已遍历的结点数  初值为 0                    遍历到第  个结点或表为空时止                                                   返回结点值                 16 遍历一个单链表遍历一个单链表并打印出每个结点的值                           从表头开始依次输出每个结点的值                         7 从单链表中查找出等于给定值的第1个元素                               查找成功由  带回完整值                                                           指向后继结点     8 更新单链表中等于给定值的第1个元素                                查找元素                                    没有被更新的元素返回假                                 更新元素             9 向单链表中按给定条件插入一个元素其插入过程如下1 判定  的值 若小于1则表明  值无效 返回假2 为新插入元素动态分配结点并赋值3 根据  的值所表示的不同条件 寻找新结点的插入位置 为此需要从表头开始顺序查找新元素的插入位置 在查找过程中必须保留当前待比较结点的地址及其前驱结点的地址 以便插入时使用4 在插入位置上完成插入新结点操作 即把新结点链接到当前结点和前驱结点之间若插入的位置为表头 则需要做特殊处理            值小于1返回假    1          值无效          为  元素建立新结点                  寻找新结点的插入位置                        用  指向当前结点即待查结点 初始指向表头                      用  指向  的前驱结点 初始为空    0                     按值寻找插入位置                              找到新元素插入位置退出循环                                                    和  指针均后移实现顺序向后比较                                             1                  查找表尾位置                                           按序号  的值寻找插入位置         0                                           找到新元素插入位置退出循环                                                        1      值超出单链表长度加 1     完成新结点插入操作      把新结点插入到表头          把新结点插入到非表头位置即插入到  和  结点之间      指针也可能为空此时为表尾     10 从单链表中删除符合给定条件的第 1 个元素删除算法的执行步骤如下1 若单链表为空则返回假2 若  值小于1 时则返回假3 根据  的值所表示的条件从单链表中查找被删除的结点为此需要从单链表中顺序查找直到查找成功或失败为止在查找过程中需要保留待比较的当前结点和前驱结点的地址以便删除结点时使用4 删除查找到的结点对表头结点和非表头结点要做不同处理5 回收被删除结点的存储空间6 删除成功返回真       从删除元素    单链表为空无法删除返回假            单链表为空删除操作无效                  值小于1 返回假    1          值无效          寻找被删除的元素结点      用  指向当前结点 即待查结点初始指向表头      用  指向  的前驱结点初始为空    0  按值查找被删除结点        找到被删除结点 退出循环                              单链表中没有相应的结点可删除      1            0                        找到被删除结点 退出循环                                                           值无效      删除  所指向的结点   删除表头结点   删除非表头结点也可以是表尾结点回收被删除结点的存储空间 删除成功返回真 11 对单链表进行数据排序假定待排序的单链表由表头指针  所指向对结点值按照从小到大次序进行排序链接时首先建立一个空的单链表然后把  中的每个结点取出并按值依次插入到新建立的单链表中最后由引用参数  带回新建单链表的表头指针下面就是对单链表进行的插入排序算法  建立一个反映排序结果的新单链表并初始化为空 从待排序的单链表中依次取出每个结点按值插入到新单链表中                           指向待取出排序的一个结点初始为表头结点     为新插入的结点在中顺序查找找出插入位置                      指向的后继结点                          用初始指向单链表的表头                        用指向的前驱结点初始为空                 找到被插入点退出循环                                         和指针均后移实现顺序向后比较                            实现插入操作                                把结点插入到表头                                            把结点插入和结点之间                           可能为空则成为的表尾        使指向原单链表的下一个结点    由引用参数带回新单链表的表头指针在上面对单链表进行的11种操作算法中第14种算法的时间复杂度为1第23及510种算法的时间复杂度为第11种算法的时间复杂度为2若只在单链表的表头插入或删除结点其时间复杂度均为1上述每个算法的空间复杂度均为1由于对单链表的插入和删除元素的操作只进行元素的比较不进行元素的移动而对顺序存储的线性表操作既需要元素的比较又需要元素的移动所以当处理的数据量较大同时每个数据占用的字节数较多时在相同数量级的情况下顺序表操作往往比单链表操作要花费更多的时间要上机调试上述对单链表操作的算法只要对本章第2节的调试程序稍加修改即可主要是把顺序表类型定义替换为结点类型定义把主函数中的表对象的类型替换为对于由数组中元素结点构成的单链表其操作算法与上述独立结点构成的单链表的情况类似 下面仅给出初始化单链表按值插入元素和按值删除元素的算法 其他算法不难由同学们写出1 初始化单链表   参数说明等同于  将循环单链表置空下标 0 结点为表头附加结点00结点依次链接构成空闲链接表 2 1 1将带表头附加结点的空闲链接表的最后结点的指针域置空10下标为 1 结点的指针域指向空闲链接表的第 1 个结点122 向有序单链表按值插入一个元素       1 从空闲表中取出表头结点0 没有空闲结点可用 1 空闲表的第 2 个结点成为新的表头结点 的值赋给被插结点的值域  0 0 分别给  和  赋初值0 查找新结点的插入位置    插入时不用特殊处理表头情况 3 从单链表中删除等于给定值的第 1 个元素    单链表为空 无法删除元素 返回假00             查找被删除的结点及前驱结点  0 00           若不存在被删除的元素则返回假0             从单链表中删除查找到的下标为  的结点不用特殊考虑表头情况把删除的结点插入到空闲表的表头11删除成功返回数值假 26 多项式计算261 多项式表示与求值多项式表示与求值是线性表应用的一个典型实例由数学知识可知一个多项式的一般表示为01122其中为整数  0  00  1中的每个系数可以为 0也可以不为 01 多项式的第 1 种线性表表示与运算为了处理可把所有项的系数用一个线性表来表示0 1 2  把这个线性表用顺序存储结构或链接存储结构保存起来就可以进行多项式的有关运算若采用顺序存储结构对应的  类型的对象为 其中  按  指数的升序存储相应的系数即存储上面线性表 存储多项式中的项数它等于  的最高次幂加 1则求此多项式值的算法描述如下 1       用计算累加和首先把常数项0的值赋给它作为其初值     0    用计算的次幂初值为1     1    累加计算多项式的值     1                                     计算出的次幂                      把一个新项 的值累加到中        返回求出的多项式的值     若多项式线性表采用链接存储结构则求值算法描述如下 1                                用指向多项式单链表的表头结点                     用计算累加和初值为常数项0的值     1                        用计算的次幂初值为1                             指向第二个结点即值为1的结点                                       使累乘                把一个新项的值累加到中                             使指向下个结点                                 返回求出的多项式的值假定一个多项式为5326325对应的线性表为503602若采用链接存储计算程序如下                              定义单链表结点类型     单链表有关操作的函数定义   6503602 5 0  1线性表线性表长度 12值为2时的多项式值在主函数的  语句中按数组元素排列的逆序依次在单链表的表头插入正好能够得到按指数升序链接的单链表这样建立的单链表其时间复杂度为若把数组中的元素依次插入到单链表的表尾其建立成的单链表的时间复杂度为2此程序的运行结果为线性表 5 0 3 6 0 2线性表长度6 值为 2 时的多项式值332 多项式的第 2 种线性表表示与运算在一个多项式中往往会出现许多缺项如165312760其中只有 4 项缺少 57 项或者说 57 项的系数均为 0若仍采用上述定义形式的线性表将浪费存储空间和运算时间是不可取的为此通常采用另一种形式的线性表来表示该线性表中的每个元素对应多项式中的一个非零项每个元素包含两个域系数域和指数域用来分别表示对应项的系数和的指数并且线性表中的元素应按照指数的升序排列它是按指数有序的一个有序表多项式的这种线性表表示为1065312760将线性表中的元素类型定义为  结构类型则描述为               系数                 指数通过使用如下的定义语句将  类型与通用的线性表元素类型  对应起来  利用顺序存储结构存储这种线性表的多项式求值的算法如下 2   给作为累加变量的  赋初值为 0 0累加计算多项式的值 0                              把一个新项的  的指数赋给                  把新项的值累加到  中返回所求结果 在函数中使用的 是求的次幂的函数 该函数定义在  头文件中利用链接存储结构存储这种线性表的多项式求值的算法如下 2             0                                       用下面程序来调用求顺序存储的多项式值的算法由于把结构类型  作为线性表中的元素类型  使用 所以在整个程序中必须包含相应的运算符重载函数的定义使得元素之间的小于等于插入等运算是有效的当然不通过运算符重载也是可行的则需要修改相应操作的算法 使之进行比较的是元素的某个域的值 如  域的值 而不是整个元素值 依次输出元素的每个域的值 而不是整个结构元素的值                          系数                            指数                         存线性表元素的动态存储空间的指针                           存线性表长度                        规定  数组的长度    1   2     12    1   2     12                                该程序文件保存着对线性表各种操作的算法 2      如上面给出的函数定义      12    1 2     1450326325     241065312760         0 4            把1中的每个元素依次插入线性表1的表尾        111    0 4            把2中的每个元素依次插入线性表2的表尾        221    线性表1    1    线性表2    2     1212     2222    1 2    1 2执行这个程序得到的结果为线性表15 0  3 2  6 3  2 5线性表21 0  6 5  3 12  7 6033 807045018262 两个多项式相加下面以多项式的链接存储结构为例讨论两个多项式1和2相加的算法返回它们的和多项式两个多项式相加就是使对应项相加若另一个多项式中没有对应项即指数相同的项则把它直接复制到结果中如 1  5  32  63  25  2  3  4  22  33  25  96 12的相加结果为3  8  4  2  33  96因为每个单链表都是按指数域的值有序的单链有序表所以此相加过程就是两个单链有序表的合并过程当然要遵循多项式相加的合并规则1 实现相加运算的第 1 种算法设计此题的算法时首先将两个指针 1 和 2 分别指向两个多项式单链表 1 和 2 的表头结点并定义和初始化一个新的单链表 3 作为结果单链表然后当 1 和 2 所指结点非空时比较它们的指针域值的大小将较小的一个结点的值插入到 3 单链表中若两者相等则将系数域的值相加当不为零时同归一结点的指数域的值组成一个元素值插入到 3 单链表中让 1 和 2 指针后移以便向下继续比较和处理最后当出现有一个单链表处理结束时把另一个单链表中未处理的每个结点的值插入到 3 单链表中由此得到的算法如下 1 1  2    定义表示结果多项式的单链表 3 并初始化为空     3    3    分别定义 1 和 2 指针初始分别指向 1 和 2 单链表     11 22    当两个表同时不空时的处理过程    1  2         将 1 所指结点的值按指数有序插入到 3 单链表中实际是插到表尾        12             311            11                将 2 所指结点的值按指数有序插入到 3 单链表中         21             321            22                将 1 和 2 所指结点的值合并后按指数有序插入到 3 单链表中      12    0          1        31        11    22将1单链表中的剩余结点复制到3单链表中1     311    11将2单链表中的剩余结点复制到3单链表中2     321    22返回结果单链表的表头指针3 3在这个算法中1    2  和2    1  表达式也可以分别改写为1    2  和2    1  因为进行两个结构对象小于号重载运算符函数比较的是其相应的指数域此算法依次扫描两个单链表中的每个结点每次把一个结点的值或两个对应结点的合并值按指数有序插入到结果单链表中因为每次插入的指数值都大于结果单链表中已有结点的值所以只要依次插入到表尾即可设两个加数多项式的单链表长度分别为和则扫描过程的时间复杂度为每次插入过程的时间复杂度也为因为每次都插入到结果单链表的表尾所以整个算法的时间复杂度为22 实现相加运算的第2种算法每次向结果单链表插入时不是调用插入算法而是设法记住结果单链表的表尾结点的位置直接把新结点链接到表尾这样插入每个结点的时间复杂度为1整个算法的时间复杂度就变为从而大大提高了算法的时间效率算法如下 2 1  2    定义结果单链表3并让它指向附加表头结点这会使处理方便     3    3     分别定义12和3指针初始分别指向12和3单链表 11 22 33当两个表同时不空时的处理过程1  2     将1所指结点的值赋给3结点的值域1指针后移    12         33                在3尾部插入新结点并使3指向它        31        11        将2所指结点的值赋给3结点的值域2指针后移     12         33         32        22        将两结点合并后的值赋给3结点的值域1和2指针同时后移              12        0              1            33             3                11        22    将1单链表中的剩余结点复制到3单链表中1     33     31    11将2单链表中的剩余结点复制到3单链表中2     33     32    22将3单链表的表尾结点的指针域置空3让3指向3所指的附加表头结点以便删除33使3指向结果单链表的第1个元素结点33释放原附加表头结点 3返回结果单链表的表头指针 3 3算法中使用的 3 单链表是带有表头附加结点的单链表 这给插入运算带来方便 不需要对空表时的插入做特殊处理 待整个运算完成后再把附加表头结点删除 使 3 单链表又成为一般形式的单链表对带有表头附加结点的单链表进行删除也同样方便 删除表头结点和删除其他位置结点的操作完全相同 因为始终不需要修改表头指针可以使用下面的主函数调用上面的多项式加法函数                450326325     6304122332596         3 0  1 每次插入到表头    5 0  1 每次插入到表头    线性表         线性表          2 或者使用 1调用    线性表           程序执行后的结果如下线性表 5 0 3 2 6 3 2 5线性表 3 0 4 1 2 2 3 3 2 5 9 6线性表 8 0 4 1 1 2 3 3 9 6习题 2习题 21分析程序在下面的每个程序段中 线性表  的类型为  元素类型  为  假定每个程序段是连续执行的 试写出每个程序段执行后所得到的线性表 1            4826573462790 6     12 0 6     03  5601114 1 3           20 05 0 6     150520习题 22画出由执行算法生成的单链表的示意图对于习题21的前4个语段假定的类型为构造单链表的数组类型元素类型仍为并假定每个程序段是连续执行的试画出每个程序段执行后所得到的单链表的示意图要求在示意图的每个指针上注明具体数值习题 23编写对具有  类型的线性表进行处理的算法1 从线性表中删除具有最小值的元素并由函数返回空出的位置由最后一个元素填补若线性表为空则显示出错信息并退出运行2 从线性表中删除其值在给定值和之间要求小于的所有元素3 从有序表中删除其值在给定值和要求小于之间的所有元素4 将两个有序表合并成一个新的有序表并由变量返回5 从线性表中删除所有其值重复的元素使所有元素的值均不同如对于线性表289256872则执行此算法后变为289567习题 24编写对具有  结点类型的单链表进行处理的算法1 将一个单链表按逆序链接若原单链表中存储元素的次序为1 2  则逆序链接后变为 1  12 从单链表中查找出所有元素的最大值该值由函数返回若单链表为空则显示出错信息并停止运行3 统计出单链表中结点的值等于给定值的结点个数4 根据一维数组建立一个单链表使单链表中元素的次序与中元素的次序相同并使该算法的时间复杂度为5 将两个有序单链表合并成一个有序单链表合并后使原有单链表为空6 根据两个有序单链表生成一个新的有序单链表原有单链表保持不变两个有序单链表中的元素为281020和3891516则生成的新单链表中的元素为23889101516207 根据一个元素类型为整型的单链表生成两个单链表使得第一个单链表中包含原单链表中所有元素值为奇数的结点使得第二个单链表中包含原单链表中所有元素值为偶数的结点原有单链表保持不变习题 25编写解决约瑟夫问题的算法编写一个算法分别使用带表头附加结点的循环单链表一般循环单链表提示设立指向表尾结点的指针将方便操作顺序存储的线性表解决约瑟夫  问题其问题是设有个人围坐在一张圆桌周围先从某个人开始从 1 报数数到的人出列即离开座位不参加以后的报数然后从出列的下一个人开始重新从 1 报数数到的人又出列如此下去直到所有人都出列为止试求出它们的出列次序例如当84时若从第 1 个人每个人的编号依次为12开始报数则得到的出列次序为48521376此算法要求以和从第个人开始第 1 次报数作为值参习题 26修改算法对在单链表上的插入算法进行适当修改编写在带表头附加结点的循环单链表上实现插入元素的算法习题 27编写对结点类型为  的双向循环链表进行处理的算法1 向双向循环链表的末尾插入一个值为的结点2 从双向循环链表中删除值为的结点3 向双向循环链表的第个结点位置插入一个值为的结点习题 28根据下面要求编写算法有一种带表头附加结点的链表每个结点含 3 个域 和 其中  为整型值域 和  均为指针域所有结点已经由  域链接起来试编一算法利用  域把所有结点按照其值从小到大的顺序链接起来由此域链接得到的单链表的表头指针保存在表头附加结点的  域中习题 29编程实现下列功能1 根据习题 28 对结点的要求生成一个具有 10 个整数元素结点的带表头附加结点的根据  域链接的链表元素值采用随机函数产生2 根据  域链接的次序输出链表中每个结点的值3 调用按习题 28 要求编写的算法4 根据  域链接的次序输出链表中每个结点的值