第1章 绪 论数据结构是计算机科学与技术软件开发与应用网络安全信息管理电子商务等相关专业的一门专业基础课程它专门研究从解决现实问题中抽象出来的数据如何在计算机系统中很好地表示存取和处理的方法这里所说的数居是广义的它不仅包括数值数据字符数据逻辑数据等简单数据而且还包括带有一定结构的各种复杂数据如字符串记录向量矩阵表格图形音频视频等数据用计算机存储数据不仅要存储数据的值而且要存储数据之间的相互联系如何存储它们之间的联系将出现各种不同的存储方法总体上有顺序链接索引散列等4种对数据进行处理的方法是根据数据处理的要求和目标而决定的现在人们已经总结出了比较常用和有效的解决相应问题的各种数据处理方法掌握这些方法是进行各种软件开发和设计的基础有了正确和有效的数据处理方法还需要转换为在计算机上能够依次执行的一系列步骤才能够得到运行结果达到目标为此必须事先掌握一种计算机语言如或语言用它来对数据处理方法和过程加以描述即编写出程序代码从而在计算机上调试和运行实现设计要求11 常用术语这一节将对本教材中使用的一些常用术语给予大致的定义和说明数据是人们利用便于书写记忆和交流的符号对现实世界的事物及其活动所做的记录如一个数值一个单词一句话一篇文章一幅图画等都被称为数据当然若要利用计算机存储处理和加工数据则必须按照一定规则对其进行二进制信息编码变为二进制形式的数据数据元素 简称元素它是一个数据整体中相对独立的单位如对于一个二维表格数据来说每行信息就是它的数据元素对于一个字符串数据来说每个字符就是它的数据元素对于一维数组数据来说每个下标位置所存储的值就是它的数据元素数据和数据元素是相对而言的如对于一条记录信息来说它是所属文件的一个数据元素而它相对于所含的数据项而言又可看成数据因此在本书中对数据和数据元素这两个术语的使用并不加以严格区别数据记录 简称记录它是数据处理领域组织数据的基本单位数据中的每个数据元素在许多应用场合都被组织成记录的结构一个数据记录由一个或多个数据项所组成每个数据项可以是简单数据项即不可再分如一个数值字符等也可以是组合数据项如一个字符串数组记录对象等如表11所示的人事管理数据文件每个记录表示一个职工的有关信息它由职工号姓名性别出生年月本单位工龄学历职级等7个数据项所组成表中的第1行为表头行或目录行它给出了该表中每条记录的结构从表头行向下的每一行为一条记录它给出了每个职工的具体信息表 11 人事管理数据文件 职工号  姓名  性别  出生年月  本单位工龄  学历  职级  11001   张金雨  男    196505   20          大专  正科  11002   刘洪水  男    195207   15          本科  正处  11003   赵书琴  女    197312   12          研究生  副处  12001   尚明  男    195803   25          本科  副处  12002   沈芬  女    196406   20          中专  科员  13001   刘江河  男    198207   3           本科  科员  14001   胡丽  女    197710   4           研究生  副科 在一个表或文件中若所有记录的某个数据项的对应值均不同则每个值就能够唯一地标识一个记录把这个数据项称为表或文件的关键数据项简称关键项 把关键项中的每个值称为所在记录的关键字  或 在表 11 中职工号数据项的值均不同所以可把职工号作为关键项该项中的每个值就是所在记录的关键字如11001就是第 1 条职工记录的关键字12002就是第 5 条记录的关键字在一个表或文件中能作为关键项的数据项可能没有可能只有一个也可能多于一个当没有时可把多个有关的数据项联合起来构成一个组合关键项用组合关键项中的每一个组合值来唯一地标识一个记录该组合值就是所在记录的关键字引入了关键项和关键字后在以后的讨论中经常利用关键项中的所有值来代替所有记录利用每个关键字来代表所在的记录而忽略其他非关键数据项如表 11 中的数据可以简记为11001110021100312001120021300114001第 2 条记录可以简记为11002数据处理   是指利用计算机对数据进行存储检索插入删除合并拆分排序统计计算转换输入输出等的处理过程学习程序设计语言和数据结构知识是进行计算机数据处理及各种应用开发的软件基础数据结构   是指数据以及相互之间的联系它是根据人们解决实际问题的需要从问题本身所含数据之间的内在联系而抽象出来的这种数据结构与如何利用计算机存储和处理无关所以被称为数据的逻辑结构数据的逻辑结构包括集合线树图等基本结构由它们的组合和嵌套可以形成较复杂的结构一种数据结构必须被存储到计算机的存储器中才能够利用计算机处理存储数据结构有各种不同的方法大体上有顺序链接索引散列等基本方法由它们不同的组合和嵌套可以形成各种更为复杂的方法每种存储方法都使数据在存储器中表现出相应的结构称此为数据的存储结构或物理结构数据的存储结构与其存储方法相对应同样被分为顺序链接索引散列等基本形式一种数据的逻辑结构可以根据处理问题的需要选用任一种甚至几种存储结构进行存储数据的逻辑结构和存储结构分别在现实世界层面和计算机世界层面上反映了数据的结构有时统称它们为数据结构但一般所说的数据结构是指数据的逻辑结构不包含存储结构的含义为了更确切地描述一种数据结构通常采用二元组表示 代表一种数据结构它由数据元素的集合和上二元关系的集合所组成其中  1     0  1     0其中表示集合中的第个数据元素为中数据元素的个数特殊情况下若0则是一个空集此时无结构也可以说它具有任何结构表示集合中的第个二元关系以后均简称关系为中关系的个数特殊情况下若0则是一个空集表明不考虑集合中的元素之间存在着任何关系彼此是独立的就像数学中集合里的元素一样在本书所讨论的数据结构中一般只讨论1的情况即中只包含一个关系 1 的情况对于包含有多个关系的数据结构可分别对每一个关系进行讨论上的一个关系以后直接用大写表示是序偶的集合对于中的任一序偶     把叫做序偶的第一元素把叫做序偶的第二元素又称序偶的第一元素为第二元素的直接前驱简称前驱称第二元素为第一元素的直接后继简称后继如在  的序偶中为的前驱而为的后继一种数据结构还能够利用图形形象地表示出来图形中的每个结点又叫顶点对应着一个数据元素两结点之间带箭头的连线又称为有向边或弧对应着关系中的一个序偶其中序偶的第一元素为有向边的起始结点第二元素为有向边的终止结点即箭头所指向的结点根据某公司人事简表构造出一些典型的数据结构如表 12 所示表 12 某公司人事简表 职工号  姓名  性别  出生日期  职务  部门              01  万明华  男  19620320  经理    02  赵宁  男  19680614  主管  销售部  03  张利  女  19641207  主管  财务部  04  赵书芳  女  19720805  主任  办公室  05  刘永年  男  19590815  科员  销售部  06  王明理  女  19750401  科员  销售部  07  王敏  女  19720628  科员  财务部  08  张才  男  19670317  科员  财务部  09  马立仁  男  19751012  科员  财务部  10  邢怀常  男  19760705  科员  办公室 表 12 中共有 10 条记录每条记录都由 6 个数据项所组成由于每条记录的职工号各不相同所以可把每条记录的职工号作为该记录的关键字并在下面的例子中用记录的关键字来代表整个记录例 11一种数据结构  其中01020304050607080910在数据结构  中只存在元素的集合不存在关系的集合或者说关系为空这表明只考虑表 12 中的每条记录而不考虑它们之间的任何联系具有这种特点的数据结构被称为集合结构简称集合对于集合结构也可以看作按元素任意一种次序如先后位置有序排列的线性结构在存储空间中可以根据需要按任一种存储方法进行存储例 12一种数据结构 其中01020304050607080910050101030308080202070704040606090910对应的图形如图 11 所示图 11 数据的线性结构示意图结合表 12可以看出是按职工年龄从大到小排列的关系在中每个数据元素有且仅有一个直接前驱元素除结构中第 1 个元素 05 外有且仅有一个直接后继元素除结构中最后一个元素 10 外这种数据结构的特点是数据元素之间的 1 对 111联系即线性关系将具有这种特点的数据结构叫做线性结构简称线例 13一种数据结构 其中01020304050607080910010201030104020502060307030803090410对应的图形如图 12 所示图 12 数据的树形结构示意图结合表 12 可以看出是人员之间领导与被领导的关系图 12 像倒着画的一棵树最上面的一个没有前驱只有后继的结点叫做树根结点最下面一层的只有前驱没有后继的结点叫做树叶结点除树根和树叶之外的结点叫做树枝结点实际上树根结点是一种特殊的树枝结点在一棵树中每个结点有且只有一个前驱结点除树根结点外但可以有任意多个后继结点树叶结点可看做具有 0 个后继结点这种数据结构的特点是数据元素之间的 1 对1联系  0即层次关系将具有这种特点的数据结构叫做树形结构简称树例 14一种数据结构 其中010203040506070102020101040401020303020206060202070702030707030406060405070705对应的图形如图 13 所示从图 13 可以看出是上的对称关系即若存在 则必存在 与之对应为了简化起见把 和 这两个对称序偶用一个无序对或来代替在图形表示中把结点和结点之间两条相反的有向边用一条无向边来代替这样关系可改写为01020104020302060207030704060507对应的图形如图 14 所示如果说中每个序偶里的两个元素所代表的人员是好友的话那么关系就是人员之间的友好关系从图 13 或图 14 可以看出结点之间的联系是对00联系即网状关系也就是说每个结点可以有任意多个前驱结点和任意多个后继结点将具有这种特点的数据结构叫做图形结构简称图从图形结构树形结构和线性结构的定义可知树形结构是图形结构的特殊情况即1的情况线性结构是树形结构的特殊情况即1的情况为了区别于线性结构将树形结构和图形结构统称为非线性结构例 15一种数据结构其中123456121 32 35 21 54 562 12 23 34 45 56若用实线表示关系1虚线表示关系2则对应的图形如图 15 所示从图 15 可以看出数据结构是一种非线性的图形结构但是若只考虑关系1则为树形结构若只考虑关系2则为线性结构数据类型   是对数据的取值范围数据元素之间的结构以及允许施加操作的一种总体描述每一种计算机设计语言都定义有自己的数据类型一般有整数实数浮点数枚举字符字符串指针数组记录类文件等数据类型如整数类型在计算机系统中通常用两个字节或 4 个字节表示若采用两个字节则整数表示范围在215  2151即 32768  32767 之间若采用 4 个字节则整数表示范围在231  2311即 2147483648  2147483647 之间对整数类型的数据允许施加的操作运算通常有单目取正或取负运算双目加减乘除取模等运算双目等于不等于大于大于等于小于小于等于等关系比较运算以及赋值运算等字符类型在计算机中通常用一个字节或两个字节表示无符号表示范围分别在 0  255 或 0  32767 之间能够分别至多对 256 或 32768 种字符进行编码对字符类型的数据允许进行的操作主要为赋值和各种关系运算字符串类型是字符顺序排列的线性结构每一个具体的字符串其最大长度由具体语言规定都是字符串类型中的一个值对字符串的操作主要有求串长度串复制两串连接和两串比较等数据类型可分为简单类型和结构类型两大类任一种简单类型中的每个数据都是无法再分割的整体如一个整数实数字符指针枚举值逻辑值等都是无法再分割的整体任一种结构类型都是由简单类型数据按照一定的规则构造而成的并且结构类型仍可以包含结构类型所以一种结构类型中的数据即结构数据可以分解为若干个简单数据或结构数据每个结构数据仍可再分如数组就是一种结构类型它由固定个数的同一元素类型的数据按线性结构排列而成数组类型中的每一个数组值包含有固定个数的同一类型数据每个数据元素都可以通过下标运算符直接访问记录也是一种结构类型它由固定个数的不同也可以相同类型的数组据线性结构排列而成记录型中的每一个记录值包含有固定个数的不同类型数据每个数据域都可以通过成员运算符直接访问无论是简单类型还是结构类型都有型和值的概念一种数据类型中的任一数据称为该类型中的一个值又称为实例该值实例与所属数据类型具有完全相同的结构数据类型所规定的操作就是在值上进行的所以在一般的叙述中并不明确指出是型还是值应根据实际情况加以理解如提到记录时当讨论的是记录结构则认为是记录型当讨论的是具体一条记录则认为是记录值抽象数据类型   由一种数据结构和在其上的所有操作运算所组成抽象数据类型包含有一般数据类型的含义但含义比一般数据类型更广更抽象一般数据类型通常由具体语言系统内部定义直接提供给编程者定义数据并进行相应的运算因此称它们为系统预定义数据类型抽象数据类型通常由编程者根据已有数据类型定义包括定义其所含数据数据结构和在这些数据上所进行的操作在定义抽象数据类型时就是定义其数据的逻辑结构和操作说明不考虑数据的存储结构和操作的具体实现即具体操作代码使得抽象数据类型具有很好的通用性和可移植性便于用任何一种语言特别是面向对象的语言实现抽象数据类型在 语言中是通过类类型来实现的其数据部分通常定义为类的私有或保护的数据成员它只允许给该类或派生类直接使用操作部分通常定义为类的公共  的成员函数 它既可以提供给该类或派生类使用也可以提供给其他的类或函数使用 操作部分只给出操作说明 即函数声明 操作的具体实现通常在一个单独文件中给出 使它与类的定义 即声明 相分离 当然在编译时将被连接在一起 类的声明通常被存放在一个专门的头文件 其扩展名为 中 这样能够较好地实现信息的隐藏和封装 符合面向对象程序设计    的思想在本书中 为了更好地理解数据结构和相应运算的实现 即函数编程代码 采用传统的记录结构类型来定义抽象数据类型中的数据 或称数据结构 部分 采用普通函数格式来定义抽象数据类型中的每个操作的实现虽然本书通常没有直接采用 类 类型来实现抽象数据类型 但读者通过学习后很容易做到 并且在相配套的实验教材数据结构课程实验中 给出了用类类型实现的程序 有兴趣的读者可以参考在本书中 描述每一种抽象数据类型将采用如下格式抽象数据类型名数据描述操作声明抽象数据类型名例16把矩形定义及其运算设计成一种抽象数据类型 其数据部分包括矩形的长度和宽度 操作部分包括初始化矩形的尺寸求矩形的周长和面积假定该抽象数据类型名用 矩形表示 定义矩形长度和宽度的数据用  和  表示 并假定其类型为单精度浮点型  初始化矩形数据的函数名用  表示 求矩形周长的函数名用  周长 表示 求矩形面积的函数名用  面积 表示 则矩形的  描述如下                  其中参数的类型名   表示一个用户定义的记录 结构 类型 其保留字  在  语言中必须使用 而在 语言中则可被省略不写该类型包括矩形的长度和宽度两个域 用来统一描述此抽象数据类型所含的数据部分 用 语言定义如下   初始化矩形数据的函数定义如下              把值赋给的域       把值赋给的域该函数把两个值参数和的值分别赋给引用参数的域和域实现对一个矩形的初始化求矩形周长和求矩形面积的函数分别定义如下        2        这两个函数分别具有一个矩形引用参数也可采用值参调用执行后分别计算并返回被引用矩形的周长和面积在函数参数中有引用参数和值参数之分若在参数类型和参数名之间使用符号则就定义该参数为引用参数否则为值参数对于引用参数函数被调用时它被看成对应的调用参数即实参的别名函数中访问它就是访问对应的实参对于值参数当函数被调用时将为它分配存储空间并用对应实参的值初始化在函数体中对值参数的访问与对应的实参无关当函数调用结束后将自动释放掉为值参数所分配的存储空间在语言中不能使用引用参数它是在语言中增加的通过在语言中使用指针参数可以实现引用的功能如可将上面求矩形面积的函数修改如下        若采用类来描述抽象数据类型则如下所示                                           2                  用 语言编写出完整的程序如下程序 11 在语言中用代替                     函数声明                              函数声明                                        函数声明                                                        用于从键盘上输入一个矩形的长和宽                                                      用于保存矩形的周长和面积                                                    定义一个矩形变量    请输入一个矩形的长和宽                     输出提示信息                                                     输入矩形的长和宽                                          对矩形进行初始化                                            计算矩形的周长                                                     计算矩形的面积        矩形的周长为                             输出矩形周长    矩形的面积为                             输出矩形面积                      2       在  语言中只能使用一种注释形式 而在 语言中若注释在行尾或者单独占据一行则还可用双斜线  引出注释语言能够兼容  语言也就是说用  语言书写的程序可以原封不动地在 语言环境下运行而 语言对  语言做了许多改进和增强如在输入输出参数定义函数重载运算符重载模板类等方面所以用 语言编写的程序不能在  语言环境下运行对于上面的程序若要在  语言环境下运行除了修改输入输出等语句外还要把引用参数修改为指针参数把对应的实参修改为取地址的表达式以及把结构类型加上  保留字改写后得到的  语言程序如下                                             请输入一个矩形的长和宽                        矩形的周长为    矩形的面积为                         2         以后为简便起见一般使用 语言进行算法描述若读者只会使用  语言则掌握上面所述差别后不难把每个算法转换为相应的  语言算法数据对象   简称对象它属于一种数据类型中的特定实例该数据类型既可以是一般数据类型也可以是抽象数据类型如 25 为一个整型数据对象为一个字符数数据对象语句   定义  为一个字符指针对象可以用来指向一个字符串 10定义  为一个含有 10 个整型数的数组对象  1 定义 1 为一个  结构类型的对象  定义  为一个具有  抽象数据类型的对象算法  就是解决特定问题的方法描述一个算法可以采用文字叙述也可以采用传统流程图 图或  图等但要在计算机上实现则最终必须采用一种程序设计语言编写为程序作为一个算法应具备如下 5 个特性1 有穷性一个算法必须在执行有穷步之后结束2 确定性算法中的每一步都必须具有确切的含义无二义性3 可行性算法中的每一步都必须是可行的也就是说每一步都能够通过手工或机器可以接受的有限次操作在有限时间内实现4 输入一个算法可以有 0 个1 个或多个输入量在算法被执行之前提供给算法5 输出一个算法执行结束后至少要有一个输出量它是利用算法对输入量进行运算和处理的结果需要人们解决的特定问题可分为数值的和非数值的两类解决数值问题的算法叫做数值算法科学和工程计算方面的算法大都属于数值算法如求解数值积分求解线性方程组求解代数方程和求解微分方程等解决非数值问题的算法叫做非数值算法数据处理方面的算法大都属于非数值算法如在各种数据结构上进行的排序算法查找算法插入算法删除算法和遍历算法等数值算法和非数值算法并没有严格的区别一般说来在数值算法中主要进行算术运算而在非数值算法中则主要进行比较和逻辑运算另一方面特定的问题可能是递归的也可能是非递归的因而解决它们的算法就有递归算法和非递归算法之分当然从理论上讲任何递归算法都可以通过使用循环堆栈等技术转化为非递归算法在计算机领域一个算法实质上是针对所处理问题的需要在数据的逻辑结构和存储结构的基础上施加的一种运算由于数据的逻辑结构和存储结构不是唯一的在很大程度上可以由用户自行选择和设计所以处理同一个问题的算法也不是唯一的另外即使对于具有相同的逻辑结构和存储结构而言其算法的设计思想和技巧不同编写出的算法也大不相同学习数据结构课程的目的就是学会根据数据处理问题的需要为待处理的数据选择合适的逻辑结构和存储结构进而按照结构化模块化以及面向对象的程序设计方法设计出比较满意的算法程序12 算法描述算法就是解决特定问题的方法该方法可以借助各种工具描述出来如从个整数元素中查找出最大值用流程图描述则如图 16 所示图 16 求个元素中的最大值若采用文字描述则如下列步骤所示1 给个元素1  输入数值2 把第 1 个元素1赋给用于保存最大值元素的变量3 把表示下标的变量赋初值 24 如果  则需要向下执行来处理当前数据元素否则输出最大值后结束算法5 如果  则将赋给否则不改变的值这使得始终保存着当前比较过的所有元素的最大值6 使下标增 1以指示下一个元素7 转向第 4 步继续执行下一次的循环处理过程若要在计算机上实现一个算法则最终必须采用一种程序设计语言进行描述对于上述算法采用  语言描述如下 程序 12     10  假定  等于 10          用 01 保存 1 元素      请输入 10 个整数      0              0 1         10个整数中的最大值为 本书对所有算法一般采用文字和 语言两种描述 文字描述给出算法的思路和执行步骤 语言描述给出在机器上实现的代码13 算法评价对于解决同一个问题 往往能够编写出许多不同的算法例如 对于数组排序问题就能够根据不同的排序方法对应编写出各不相同的多种算法进行算法评价的目的 既在于从解决同一问题的不同算法中选择出较为合适的一种 也在于知道如何对现有算法进行改进或者独立创新 从而设计出更好的算法一般从如下 5 个方面对算法进行评价1 正确性正确性  是设计和评价一个算法的首要条件 如果一个算法不正确 即不能完成或不能较好地完成所要求的任务 其他方面也就无从谈起一个正确的算法是指在合理的数据输入下 能够在有限的运行时间内得出正确的结果通过采用各种典型的输入数据上机反复调试算法 使得算法中的每段代码都被测试过 若发现错误及时修正 最终可以验证出算法的正确性当然 要从理论上证明一个算法的正确性 并不是一件容易的事 也不属于本课程所研究的范围 故不进行讨论2 稳健性稳健性  是指一个算法对不合理又称不正确非法错误等数据输入的反应和处理能力一个好的算法应该能够识别错误数据并进行相应的处理对错误数据的处理一般包括打印错误信息调用错误处理程序返回标识错误的特定信息中止程序运行等3 可读性可读性  是指一个算法供人们阅读的容易程度一个可读性好的算法 应该使用便于识别和记忆的与描述的事物或实现的功能相一致的标识符 应该符合结构化和模块化的程序设计思想 应该对其中的每个功能模块重要数据类型或语句加以注释 应该建立有相应的文档 对整个算法的功能结构使用及有关事项进行说明4 时间复杂度时间复杂度   或称时间复杂性 又称计算复杂度  它是算法有效性的量度之一 量度有效性的另一个指标是空间复杂度时间复杂度是一个算法运行时间的相对度量一个算法的运行时间是指在计算机上从开始到结束运行所花费的时间长短 它大致等于计算机执行一种简单操作 如赋值比较计算转向返回输入和输出等 所需的时间与算法中进行简单操作次数的乘积因为执行一种简单操作所需的时间随机器而异 它是由机器本身硬件环境决定的 与算法无关 所以只讨论影响运行时间的另一个因素算法中进行简单操作次数的多少不管一个算法是简单还是复杂 最终都是被编译后分解成简单操作再通过  来具体执行的因此 每个算法都对应着一定的简单操作的次数显然 在一个算法中 进行简单操作的次数越少 其运行时间也就相对的越短 次数越多 其运行时间也就相对的越长所以 通常把算法中包含简单操作次数的多少叫做该算法的时间复杂度 用它来衡量一个算法的运行时间性能或称计算性能若解决一个问题的规模为 即所处理的数据中包含有个元素 则算法的时间复杂度通常是的一个函数 假定记为下面通过例子来分析算法的时间复杂度算法 11累加求和      00 计算机执行这个算法时 函数体中第 1 条定义并赋初值语句和第 3 条返回语句都各执行一次简单操作 第 2 条  循环语句所包含的简单操作的次数可进行如下分解计算0 1次1   2 1次 次 次 1 次2  把第 2 条语句分解后的每一条简单语句的执行次数加起来 就得到了它包含的简单操作的次数 即为42因此 算法 11 的时间复杂度为44算法 12矩阵相加        实现矩阵  和  的加法 其和存入  中 为大于等于  的常量 00运行此算法需要执行的简单操作的次数就等于双重  循环语句所包含的简单操作的次数对该语句可进行如下分解计算0 1次1   4 1次0 次2   3 1次 次 次 2 次3  次 1 次4 把分解后的每一条简单语句的执行次数加起来就得到了它所包含的简单操作的次数因此算法 12 的时间复杂度为4252算法 13 简单选择排序            01                    1                                         此算法包含有双重  循环外层  循环的循环变量为它从 0 取值到2对于的每一取值首先通过赋初值语句和内层  循环语句在 1之间顺序查找出具有最小值的元素 然后通过 3 条赋值语句交换 和 的值使得 为 1之间的最小值这样当算法执行结束后数组  中的  个元素就按照其值从小到大的次序排列好了要计算出该算法包含的简单操作的次数可将双重  循环语句分解如下0 1次1 1  4 次 1次1 1次2   302212次 02112次12次 212次3 1次1次1次1次 11次4 把分解后的每一条简单语句的执行次数加起来就得到了它所包含的简单操作的次数算法 13 的时间复杂度为2277从以上分析可以看出一个算法的时间复杂度的计算是相当繁琐的特别对于较复杂的算法更是如此实际上一般也没有必要精确地计算出算法的时间复杂度只要大致计算出相应的数量级  即可下面接着讨论时间复杂度的数量级表示设的一个辅助函数为定义为当大于等于某一足够大的正整数0时存在着两个正的常数  和 其中 使得  均成立则称是的同数量级函数把表示成数量级的形式为其中大写字母  为英文 即数量级一词的第 1 个字母这种表示的意思是指同只相差一个常数倍例如在算法 11 中当1即取0为 1时4448均成立则在算法 12 中当2即取0为 2时4425227均成立则2对于算法 13当3即取0为 3时2227724均成立则也等于2由此不难发现当是的多项式时则为的最高次幂它与中的其余项和最高次幂的系数都无关若把算法 11算法 12 和算法 13 的时间复杂度分别用数量级的形式表示则分别为2和2算法的时间复杂度采用数量级的形式表示后将给求一个算法的带来很大方便这时只需要分析影响一个算法时间复杂度的主要部分即可不必对每一步都进行详细的分析同时对主要部分的分析也可简化一般只要分析清楚循环体内简单操作的执行次数或递归函数的调用次数即可例如对于算法 11只要根据  循环中的循环体被执行的次数就可求出其时间复杂度为对于算法 12只要弄清楚双重循环内赋值操作的执行次数为2就可求出其时间复杂度为2对于算法 13只要能够求出内层  循环体的执行次数为02112112212就可得到其时间复杂度为2算法的时间复杂度通常具有1  232和等形式1表示算法的时间复杂度为常量它不随数据量的改变而改变如访问一个数据表中第 1 个元素时无论该表的大小如何其时间复杂度均为1表示算法的时间复杂度与数据量大小的平方根成正比如计算满足不等式1   中的最大值时其算法的时间复杂度就是这是因为计算的时间复杂度的为21412对应的为具有数量级的算法被称为线性算法其运行时间与成正比如对一个表进行顺序查找时其时间复杂度就是有一些算法的时间复杂度为 即与的对数成正比如在有序表上进行二分查找的算法就是如此对数组进行排序的各种简单算法为2数量级的当加倍时其运行时间将增长 4 倍对数组进行排序的各种改进算法为 数量级的当加倍时其运行时间只是原来的211 倍做两个阶矩阵的乘法运算时其时间复杂度为3求具有个元素集合的所有子集的算法其时间复杂度应为2因为对于含有个元素的集合来说共有2个不同的子集求具有个元素的全排列的算法的时间复杂度为因为它共含有种不同的排列对于不同的值各种典型的数量级所对应的值如表 13 所示可以看出当较大时若时间复杂度为指数或阶乘数量级则相应的算法是无效的即不能实际运行的如假定一台计算机每秒能做 1 亿次简单操作则对于一个值为 32 的具有阶乘数量级的算法则至少要运行8341017个世纪才能完成这显然是不可能实现的是一个无效的算法从表中还可以看出当大于一定的值后随着值的增大各种数量级对应值的增长速度是大不相同的对数的值的增长速度最慢平方根稍快线性值较快其余依次为线性与对数的乘积平方立方指数和阶乘即阶乘的增长速度最快例如当增长到两倍时 增长到 125 倍增长到约 14 倍 增长到 25 倍2增长到 4 倍3增长到 8 倍2增长到22倍增长到2倍因此当大于一定的值后各种不同数量级对应的值存在着如下关系          2  3  2  表 13 算法复杂度的不同数量级变化对照表  232 4    2        2          8              16     64     16     24    8    3        283       24             64     512    256    80320 10   332     316       332           100    1000   1024   3628800 16   4        4          64             256    4096   65536  211013 32   5        566       160            1024   32768  43109 261035 128  7        1131      896            16384  2097152  341038   1024 10       32         10240          1048576  107109     10000 1329    100        132877        1081012    一个算法的时间复杂度还可以具体分为最好最差又称最坏和平均3种情况讨论下面结合从一维数组 中顺序查找其值等于给定值  的元素的算法进行说明          若查找成功则返回元素的下标否则返回1     0                 1此算法的时间复杂度主要取决于  循环体被反复执行的次数最好情况是第 1 个元素 0的值就等于 此时只需要进行元素的一次比较就查找成功相应的时间复杂度为1最差情况是最后一个元素 1的值等于 此时需要进行同全部  个元素的比较才能查找成功相应的时间复杂度为平均情况是每一个元素都有相同的概率即均为 1等于给定值 则查找成功需要同元素进行比较的平均次数为1 1   121相应的时间复杂度为它同最坏情况具有相同的数量级因为它们之间的比较次数只在系数项和常数项上有差别而在  的指数上没有差别当在数组  上顺序比较  个全部元素后仍找不到等于给定值  的元素则表明查找失败这种情况所对应的时间复杂度也为在一个算法中最好情况的时间复杂度最容易求出但它通常没有多大的实际意义因为数据一般都是随意分布的出现最好情况分布的概率极小最差情况的时间复杂度也容易求出它比最好情况有实际意义通过它可以估计到算法运行时所需要的相对最长时间并且能够使用户知道如何设法改变数据的排列次序尽量避免或减少最差情况的发生平均情况下的时间复杂度的计算要困难一些因为它往往需要概率统计等方面的数学知识有时还需要经过严格的理论推导才能求出但平均情况的时间复杂度最有实际意义它确切地反映了运行一个算法的平均快慢程度通常就用它来表示一个算法的时间复杂度对于大多数算法来说平均和最差这两种情况下的时间复杂度的数量级形式往往是相同的它们主要是差别在最高次幂的系数上另外有一些算法其最好最差和平均情况下的时间复杂度或相应的数量级都是相同的如对于介绍过的算法 11算法 12 和算法 13 就是如此5 空间复杂度空间复杂度 或称空间复杂性是对一个算法在运行过程中临时占用存储空间大小的量度它也是衡量算法有效性的一个指标一个算法在计算机存储器上所占用的存储空间包括存储算法本身所占用的存储空间算法的输入输出数据所占用的存储空间和算法在运行过程中临时占用的存储空间等 3 个方面算法的输入输出数据所占用的存储空间是由要解决的问题所决定的是通过参数表由调用函数传递来的 对于引用参数将不占有这方面的空间 而对于值参数将占有这方面的空间所以在允许的情况下尽量采用引用参数或指针参数减少使用值参数对于数据类型长度较大的参数更应如此存储算法本身所占用的存储空间与算法书写的长短成正比 要压缩这方面的存储空间 就必须编写出较短的算法 如编写成递归算法通常就比相应的非递归算法要短算法在运行过程中临时占用的存储空间随算法的不同而异 有的算法只需要占用少量的临时工作单元 而且不随问题规模的大小而改变 称这种算法是 就地 进行的 是节省存储的算法 如本节中介绍过的几个算法都是如此有的算法需要占用的临时工作单元数与解决问题的规模有关 它随着的增大而增大 当较大时 将占用较多的存储单元 将在第 10 章中介绍的快速排序和归并排序算法就属于这种情况分析一个算法所占用的存储空间要从各方面综合考虑如对于递归算法来说 一般都比较简短 算法本身所占用的存储空间较少 但运行时需要一个附加的工作栈 从而占用较多的临时工作单元 若写成非递归算法 一般可能比较长 算法本身占用的存储空间较多 但运行时将可能需要较少的存储单元一个算法的空间复杂度通常是考虑在运行过程中为局部变量分配的存储空间的大小 它包括为参数表中值参变量分配的存储空间和为在函数体中定义的局部变量分配的存储空间两个部分若一个算法为递归算法 其空间复杂度为递归所使用的工作栈空间的大小 它等于一次调用所分配的临时存储空间的大小乘以被调用的次数 即为递归调用的次数加 1  这个 1 表示开始进行的一次非递归调用 算法的空间复杂度一般也以数量级的形式给出如当一个算法的空间复杂度为一个常量 即不随被处理数据量的大小而改变时 则表示为1 当一个算法的空间复杂度以 2 为底的的对数成正比时 则表示为  当一个算法的空间复杂度与成线性比例关系时 则表示为注意 若形参为数组 则其实质上为一个指针值参数 只需要为它分配一个存储由实参传送来的一个地址指针的空间 即一个机器字长空间 通常为 2 或 4 个字节对于一个算法 其时间复杂度和空间复杂度往往是相互影响的 当追求一个较好的时间复杂度时 可能会使空间复杂度的性能变差 即可能导致占用较多的存储空间 反之当追求一个较好的空间复杂度时 可能会使时间复杂度的性能变差 即可能导致占用较长的运行时间另外 算法的所有性能之间都存在着或多或少的相互影响因此 当设计一个算法 特别是大型算法 时 要综合考虑算法的各项性能算法的使用频率算法处理的数据量的大小算法描述语言的特性算法运行的机器系统环境等诸多因素 通过权衡利弊才能够设计出比较满意的算法14 与算法描述有关的 知识下面对 语言的有关内容做简要说明 为以后各章分析和编写算法做准备 此部分可不作为教学讲授内容 而留给学生自学141 包含文件语句包含文件语句以关键字 开头后跟用尖括号或双引号括起来的头文件名行末尾不需要使用分号下面介绍几个常用的系统头文件的作用1 在程序的开始使用该语句后在其后的每一个函数中都可以使用标准输入设备键盘流对象 标准输出设备屏幕流对象  和标准错误输出设备屏幕流对象 以及使用用于输入的提取操作符 和用于输出的插入操作符 进行数据输入输出操作对于基本类型为  字符串型  的数据能够直接进行输入和输出对于非字符指针类型的指针型数据能够直接输出指针即操作数地址对于其他类型的数据只有通过对和操作符重载后才能直接输入和输出当然若数据中的元素为基本数据类型则可对其元素直接输入和输出例如一种记录结构类型如下            20     若要对该记录类型的一个对象用  表示输入或输出数据可使用如下输入或输出语句  若要对记录整体进行输入或输出则必须对该类型进行提取或插入操作符的重载它们的重载函数定义如下                             按照上述定义后可使用如下语句对  类型的对象  进行输入或输出执行第1条语句时将把实际参数  和  引用即按址传送给被调用函数中的  和  形参使得  和  分别被取代或称易名为  和 函数中对  和  的操作实际上就是对  和  的操作该函数返回 即 以便能够在同一条输入语句中连续使用  操作符对多个对象进行输入注意当在同一行上输入多个数据时从键盘上输入的数据之间必须用空格相隔开执行第2条语句时将把实际参数  和  引用即按址传送给被调用函数中的  和  形参使得  和  分别被取代为  和 函数中对  和  的操作实际上就是对  和  的操作该函数返回 即 以便能够在同一条输出语句中连续使用  操作符对多个数据进行输出另外在使用语句之后的函数中允许使用换行符常量  和空指针常量 它们分别表示换行符  和数值 0即空指针值 02 在  头文件中含有    等函数的原型函数的作用是结束程序的执行一般用整数值 0 调用该函数表示正常结束用整数值 1 调用该函数表示非正常结束如利用  操作符没有分配到所需要的存储块时应输出 存储分配失败 错误信息并调用 1函数终止程序运行函数的作用是返回 032767 之间的一个随机整数利用   可以产生 01 范围内的一个随机整数函数的作用是初始化随机数发生器当参数不同时接着由  函数所产生的随机数序列也不同若在 函数前没有执行过  函数则产生的是参数值为 1 的随机数序列即相当于调用了一次 1函数下面是一个产生随机数的程序程序 13          010        100         2    010        100         1    010        100 该程序运行后的显示结果如下41 67 34 0 69 24 78 58 62 6445 16 98 95 84 50 90 31 5 1641 67 34 0 69 24 78 58 62 64下面程序在每次运行时 将会得到完全不同的运行结果因为在  函数的参数中使用了 0函数 此函数原型定义在  头文件中 它返回从 1970 年 1 月 1 日零时算起至当前时间为止的秒数由于当前时间是时刻变化的 所以可以使每次运行程序时调用  函数的实参值均不同 从而使系统生成每次均不同的随机数序列程序 14 支持输入输出函数 支持随机数函数 支持时间函数          0    0 10          100                 在  头文件中还包含有                 等函数的原型 函数用来动态分配个连续存储位置 每个位置含有存储一个数据元素的  个字节 整个动态存储空间的大小为  个字节 用来最多存储个数据元素 函数用来动态分配大小为  个字节的新存储空间 函数用来动态分配大小为  个字节的新存储空间 并把  所指向的原动态存储空间的内容复制到新分配得到的动态存储空间中 同时自动释放掉  所指向的原动态存储空间上述 3 个函数都返回新分配的动态存储空间的首地址 通常需要将它转换为每个存储位置所存数据的指针类型 若动态存储分配失败 则都将返回  表示失败 函数释放由参数  所指向的动态存储空间以上 4 个函数在  语言或 语言环境中都可以使用另外 在 语言中还能够使用  和  运算符来非常方便地进行动态存储空间的分配和释放下面程序给出了上述函数应用的例子 其中定义指针  下的 3 行语句具有相同功能程序 15          8    8     8     0 8             12    8 12         2    0 12                  该程序的运行结果为0 1 4 9 16 25 36 49 16 18 20 223  为使用文件流类的头文件其中定义有输入文件流类 输出文件流类  和输入输出文件流类 利用它们可以为编程者定义相应的文件流对象从而对外存上的文件进行输入输出操作例如 1 121 222 3在以上每一条语句中都定义了一个相应的文件流对象其中的第 1 个参数给出要打开的实际文件它为一个字符指针类型第 2 个参数给出文件的打开方式执行上述任一条语句后若相应的文件被打开则由文件流对象返回一个非 0 值否则返回一个 0 值当打开一个文件后将在内存中开辟出一个相应的文件缓冲区通过文件流对象访问缓冲区实现对文件的读写操作上述第 1 条语句定义了输入文件流对象为 要打开的文件为当前目录下的 1并由  参数规定按输入即由文件到内存方式打开此参数可以省由  参数规定若指定文件不存在则不应去建立它否则将建立它打开一个用于输入的文件后文件指针被自动指向文件内容的开始位置第 2 条语句定义了输出文件流对象为 1要打开的文件为  盘  子目录下的 21并由  参数规定按输出即由内存到文件方式打开此参数可以缺省若指定文件不存在则自动在指定目录下建立文件名为 21 的空文件打开一个用于输出的文件后文件中的原有内容自动被清除掉第 3 条语句定义了输出文件流对象为 2 要打开的文件为当前目录下的 22 并由  参数规定按追加输出方式打开同样若文件不存在则自动建立它打开一个用于追加输出的文件后文件中的原有内容保持不变文件指针被自动移到文件的末尾第 4 条语句定义了输入输出文件流对象为  对应的文件为  盘根目录下的 3 并规定既可对该文件进行输入操作也可对该文件进行输出操作打开一个同时用于输入和输出的文件后文件中的原有内容不变文件指针被自动移到文件内容的开始位置当一个文件被打开后可以按字符方式又称  码方式或字节方式又称二进制方式进行访问若向文件写入数据时采用的是字符方式则从该文件中读出数据时也应该采用字符方式同样若写入数据是按字节方式进行的则读出数据时也应按字节方式进行数据按字符方式读出或写入是通过使用文件流对象和提取操作符  或插入操作符  来实现的就如同对标准输入输出设备进行读写操作一样值得注意的是当以字符方式向文件写入数据时数据之间必须以空格或回车换行符隔开因为读取每一个数据时都是以这些符号作为结束标志的数据按字节方式写入文件时是把内存中由指定字符指针所指向的若干个字节的内容直接写入到文件中数据按字节方式从文件读出时是把从文件中读出的若干个字节的内容直接存入到内存中由指定字符指针所指开始位置的存储区里按字节方式读写文件比按字符方式读写文件要快因为它不需要在读写过程中进行数据格式的转换按字节方式读写文件若通过事先移动文件指针还能够随机读写文件中从任何位置开始的内容而对于按字符方式读写的文件则一般只能进行顺序访问利用文件流对象调用文件流类中的成员函数   或   能够对文件按字节方式进行读出或写入操作当不能够从文件中读出所规定的字节数时 函数返回 0 值否则返回非 0 值若返回 0 值则利用文件流对象调用文件流类中的成员函数  可得到实际读取的字节数下面列举一些简单的文件操作的例子程序 16      11     1         1          1         020        1     1该程序主函数中的第 1 条语句建立输出文件流 1并使之与当前目录下的 1 文件相联系若该文件存在则打开并清空否则在当前目录下建立它若第 1 条语句执行时没有打开或建立 1 文件则第 2 条语句中的条件为真显示出错误信息后终止程序执行第 3 条语句把0  19之间的整数按字符方式顺序写入到文件流 1 所对应的文件中在写入每个整数之后同时写入一个空格作为分隔符第 4 条语句关闭与 1 相联系的文件 1即把相应的文件缓冲区归还给系统程序 17      11     1          1          1             1        1   或改为1         1该程序主函数中的第 1 条语句建立输入文件流 1并使之与当前目录下的文件 1 相联系若该文件没有被打开则执行第 2 条语句时将显示出错误信息并退出程序的执行第 4 条语句是一个  循环当文件指针没有指向文件的末尾时则 1 的值为假即为 0 值否则为真即为非 0 值若每次利用 1 表达式从文件中读出一个整数到变量  中则该表达式的值为真否则为假该循环的作用是从 1 流所对应的文件开头顺序读出每一个整数到变量  中并把它输出到屏幕上直到文件指针被移到文件结尾为止每读出一个数据后文件指针就向后移动一个数据位置第 6 条语句关闭 1 对应的 1 文件程序 18           20           2      5111 56700123  52400                  240 620360  44500                  378 48600                       0 5              0 把文件指针移到文件的开始位置                                    读出和显示文件中第4条记录      清除流中所有状态位即恢复为0    3 使文件指针指向                                 第3个位置上的记录文件开始为第0位置               该程序首先把数组  中的 5 个记录按字节方式依次写入到输入输出流对象  所对应的文件 2 中接着从文件开始位置即第 0 字节起顺序读出每条记录并按行显示出来最后重新读出和显示文件中的第 4 条记录该程序运行后的显示结果如下111  567123  524240  620360  445378  486读出和显示文件中第4条记录360  4454  为进行字符串操作的头函数其中定义有一些字符串函数的原型用户可以在程序中直接调用这些函数处理字符串常用的字符串函数如下1 求串长度   返回  指针所指字符串的长度字符串的空结束符 0 不计算在内2 串复制     把所指字符串复制到指针所指的存储空间中该函数返回指针3 串连接      把所指字符串复制到所指字符串后面的存储空间中连接后所指串的长度等于串原有长度与串长度之和该函数返回指针注意在所指字符串的后面要有足够的存储空间用于存储待连接的字符串4 串比较   1   2把1所指字符串同2所指字符串比较若1串大于2串则返回值大于 0 通常为 1若1串小于2串则返回值小于 0 通常为 1若1串等于2串则返回值等于 05 串定位     从所指字符串的开始顺序查找  码为值的字符也可以把一个字符传递给参数实际上是传递该字符的  码若查找成功则返回指向该字符的指针否则返回 6 串右定位     它与串定位函数功能相似唯一区别是它从串的最后顺序向前查找7 查找子串   1   2从1串中开始位置起顺序查找2串的第 1 次出现若查找成功则返回1串中指向该子串开始位置的指针否则返回 下面是使用字符串函数的实例程序 19      20 1 2 3     1       在串最后添加一个空格字符    2    1      1 6 2           12    31 31  输出 3 指针所对应的下标位置31 13132 2 3该程序运行后的显示结果如下请读者结合程序分析其正确性5 101 0 12 3 14 2 数据类型1 简单类型在 语言中简单类型包括整数类型字符类型布尔类型浮点类型指针类型枚举类型和  类型整数类型又分为短整型   或 整型  和长整型   或  3 种它们分别表示不同范围内的整数字符类型的表示范围是  字符集和汉字区位码字符集每一个汉字为两个  字符现在国际上统一使用一种编码叫做  编码它对所有国家的字符统一采用双字节编码字符类型和每一种整数类型都可以使用前缀关键字  或 使之成为相应的有符号或无符号数据类型默认为  类型布尔类型也称为逻辑类型它只有两个值 0 和 1分别用符号常量  和  表示即为逻辑值假和真浮点类型包括  类型 类型和   类型用它们表示带小数点的数指针类型用来表示内存中存储单元字节的位置地址它的基类型可以为任何类型一个指针类型用一个类型标识符后缀一个星号  表示枚举类型是用户自定义类型 为一种特殊类型它不取任何值通常用它定义不返回值的函数类型若带上后缀则定义指向任何类型的指针字符类型也可以被看作一种整数类型每个字符的  码被看作其中的一个整数值每一种类型的数据可以根据需要被强制转换为另一种类型的数据其转换格式为类型标识符表达式或类型标识符表达式例如假定  和  分别为  和  型则  的值为  型其值为  值的整数部分 的值为字符指针类型其值为整型对象  的地址2 结构类型在 语言中结构类型包括数组字符串记录和文件等1 数组数组是数目固定的具有同一类型的数据元素的顺序组合按照数组中每个元素的下标位置可认为数组具有线性结构用二元组描述如下  其中  0    1   1  1  0    2为数组中的下标为的元素为大于等于 1 的整数用来表明数组中元素的个数数组元素的下标从 0 到1数组中前后相邻位置上的两个元素为一个序偶其前一元素 是后一元素 1的前驱而 1是 的后继第 1 个元素 0无前驱元素最后一个元素 1无后继元素按数组下标的个数可把数组分为一维二维三维等一维数组中的每个元素只包含有一个下标二维数组中的每个元素包含有两个下标第 1 个称为行下标第 2 个称为列下标二维数组可看作是一维数组或嵌套即首先把它看作是按行下标顺序排列的一维数组该数组中的每个元素又都是按列下标顺序排列的一维数组如对于一个二维数组 可视为一维数组 所含元素依次为 011其中每一个元素 0    1又都是一个含有个元素的一维数组所含元素依次为 011同样三维数组包含有 3 个下标每个元素的位置由一组 3 个下标值唯一确定三维数组是一维数组的 3 层嵌套结构如对于一个三维数组 首先可视为一维数组 所含元素依次为 011其中每一个元素 0    1又都是一个含有个元素的一维数组所含元素依次为 011这里的每一个元素 0    1也都是一个含有个元素的一维数组所含元素依次为 011数组的存储结构是顺序结构即数组中第1个元素紧接着存储在第个元素的存储位置的后面如对于一维数组 则每个元素 的存储位置的首字节地址为    0    1其中 表示数组  的存储空间的首地址 表示数组  中元素类型的大小即每个元素所占用的字节数可用 计算由上述公式可知元素 0的存储地址为 它就是整个数组的开始地址1的存储地址为 12的存储地址为 21的存储地址为 1对于一个二维数组 每一行元素 的存储位置即存储该行个元素的首字节地址为    0    1其中 表示二维数组  的存储空间的首地址 表示顺序存储一行个元素所占用存储空间的大小它等于每个元素所占用的字节数  与一行上元素的个数的乘积因此上述计算公式可改写为    0    1对于二维数组  中的第行即下标为的行其中下标为的元素 的存储位置为    0    10    1对于三维或更高维数组其每个元素的存储位置即首字节地址也容易计算出来如对于三维数组其相应的一维数组元素二维数组元素和三维数组元素的存储位置的计算公式分别如下            0    1                  0    1 0    1                      0    1 0    1 0    1上面对于多维数组的存储空间的分配是按照行序为主进行的即第行元素所占用的存储空间的后面紧接着保存第1行的元素 等大多数计算机语言对数组的存储空间分配都是按此方法进行的但也有的计算机语言如  语言是采用列序为主进行的即第列元素所占用的存储空间的后面紧接着保存第1列的元素如对于一个二维数组若采用列序为主分配存储空间则元素的存储位置为              0    1 0    1对于以列序为主进行存储空间分配的三维数组有兴趣的读者可进行类似的分析2 字符串字符串类型是一种特殊的一维字符数组类型该类型中的每一个值从下标 0 位置保存的字符起到下标位置0    1 为一维下标上界保存的  码为 0 的空字符 0 止连续个字符不含0字符在内称为一个字符串一个字符串常量是用双引号括起来的一串字符当把它作为初值赋给一个字符数组时是把该常量中的每个字符依次写入到字符数组中从下标 0 开始的对应位置上并在最后写入一个0字符作为字符串的结束标志若一个字符串的长度为 则它占据字符数组中0  位置其中每个位置为一个字节用来保存一个字符0  1位置保存字符串本身的字符位置保存空字符0在字符数组定义时允许把一个字符串常量作为初值赋给字符数组而在其他地方要把一个字符串常量或一个字符数组中保存的字符串赋给一个字符数组时则必须使用串复制函数 保存字符串的字符数组的数组名是一个字符指针常量它不能作为左值使用但在其他地方可以像字符指针变量一样使用如当出现在输出语句时不是输出数组名指针的值而是输出以数组名指针为开始地址的在字符数组中保存的一个字符串当使用在输入语句时不是把输入的一个字符串常量的存储地址赋给数组名指针而是把该字符串保存到字符数组中并在其后保存一个0字符注意在键盘上输入的一个字符串常量两边不要使用双引号作为起止符它自动以非空格和非回车符作为字符串的第一个字符以空格或回车符作为结束符即其前一个字符是字符串的最后一个字符对字符串的运算操作主要有求串的长度把一个串复制到另一个字符指针所指的字符数组空间中比较两个串的大小串输入和输出等注意当把一个字符串赋值或复制到另一个字符串时目的字符串的存储空间要大于等于源字符串的长度加 1利用一维数组能够保存一个字符串若要依次保存多个字符串则需要定义一个二维数组其中每一行对应的一维字符数组空间用来保存一个字符串程序清单如下程序 110      420     20     04        0    00    14        00            0    在该程序的主函数中第1条语句定义了一个二维数组420该数组的行下标范围为03列下标范围为019每一行元素0 3能够存储一个字符串其字符串的最大长度应小于等于19该语句同时对数组进行初始化第2条语句定义了一个一维字符数组20第3条语句显示出数组中保存的每个字符串其中0可以改写为第4和第5条语句通过顺序比较查找出数组中值最大的字符串字符数组用做在比较过程中保存当前最大值的字符串其初值为数组中第1个字符串0即00最后一条语句显示出已经在中保存的最大值该程序的运行结果如下3 记录记录类型是多个不同数据类型当然也可以相同的组合体记录类型中的每一个值即具体记录是记录类型中的一个实例它由多个不同类型的具休数据所组成一个记录中的所有数据成员逻辑上是集合结构即成员之间没有任何次序但物理存储上是顺序结构它是按照记录类型定义中各成员定义的顺序存储的一个记录所占用存储空间的大小等于各成员所占用存储空间的大小之和此值可以通过运算符计算在语言中记录被称为结构通过使用关键字定义用户需要的记录结构类型在关键字后要给出一个标识符作为记录类型名在其后的大括号中要给出所含的每一个数据类型及其数据域名访问记录中的某个数据域是通过成员选择操作符或来实现的前者称为直接成员选择符后者称为间接成员选择符直接成员选择符左面的操作数应为一个记录类型的对象记录变量而间接成员选择符左面的操作数应为一个指向记录类型对象的指针它们右面的操作数均应为记录中的一个要访问的域名通过或操作符能够读取记录中的任一个域的值或者向记录中的任一个域写入数据在定义一个记录类型的对象时可以同时对它进行初始化用于初始化的记录值要用大括号括起来各个域值按记录中对应类型定义的顺序给出其前后域值之间要用逗号分开若域值是一个字符串则必须用双引号括起来若是一个字符则必须用单引号括起来若是一个数组或另一个记录则必须用大括号括起来记录类型的对象还可以同简单类型的对象那样允许使用赋值号把一个对象赋给另一个同一类型的对象下面定义了一个学生记录类型它包含有4个域分别为学号姓名性别和用于保存学生5门课程成绩及平均成绩的数组       8                   每个学号不能超过7个字符     10                 姓名不能超过9个字符                           假定用字符和分别表示男性和女性     6              前5个元素保存5门课成绩最后一个保存平均成绩为了使用上述类型下面给出了3条语句第1条语句定义了一个对象1并赋予初值第2条语句计算出1记录中5门课程的平均成绩第3条语句显示出1的学号姓名性别和平均成绩其显示结果为980413 左明华  776 1980413左明华76836490750 05    15151 1 1 15下面的程序定义了一个记录类型其大小为24个字节它带有指向自身类型的指针另外两个域为字符串域和整数域通过域可以把该类型的结点对象链接起来形成一个单链表该程序把12和3这3个结点依次链接起来并使指向这个单链表的头结点1程序最后通过循环依次按左对齐显示出每个结点的域和域的值其显示宽度分别为15和5程序111        该头文件包含的全部内容并包含                            更多的输入输出格式控制功能使用此条命令时可省略其上一条命令      15            138 234342 12 23 31  使显示数据在规定范围内左对齐若把  改为  则为右对齐默认设置为右对齐    155    该程序运行后的显示结果如下          38      34        424文件文件是按位置有序的数据集合如一篇文章可看做按位置有序的字符集合一个统计表可看做按行位置有序的记录集合一个二维数值矩阵可看做先按行位置有序对于同一行再按列位置有序的数值集合一个具有树结构的图表可看做先从上到下的层次有序在同一层次上再按从左到右的位置有序的数据结点集合它们均可看做相应文件单从文件中数据的先后排列位置考虑可以认为它具有线性结构在计算机中文件被存储在外存上其存储结构由操作系统自动实现在 语言中用户使用文件是通过定义与之相对应的文件流对象来实现的通过输入文件流对象使文件中的数据按照其位置从前到后的次序依次流入到内存文件缓冲区中从而被读取到指定的内存变量中通过输出文件流对象使输出到文件中的数据首先写入到文件缓冲区中然后操作系统再把文件缓冲区中的内容写入到外存上相应文件的末尾当然对于字节文件可以从任何指定位臵写入信息也可以把信息写入到任何指定位臵开始的存储空间中对于一个字符文件通过输入文件流类或输入输出文件流类的对象打开后主要采用以下4种操作方法从文件中读取数据① 流类对象变量② 流类对象字符变量③ 流类对象④ 流类对象字符指针变量整数量第1种操作方法从流类对象所对应的文件中顺序读出一个数据数据以空格或换行符隔开到指定的内存变量中第2种操作方法从流类对象所对应的文件中顺序读出一个字符到内存字符变量中第3种操作方法同第2种类似区别仅在于把读到的一个字符作为函数值返回第4种操作方法从流类对象所对应的文件中顺序读出一行字符以换行符或文件结束符作为行结束符或者读到给定的第2个参数整数量的值减1个字符也作为一行结束并把它保存到以第 1 个参数给定的字符指针变量所指定的内存空间中该内存空间最多只允许存储长度等于给定整数量值减1的一个字符串并且其后自动存储一个字符串结束符0通常所给的整数量的大小为字符指针变量所指定的存储空间的大小当然这里的各种指定的变量可以为单独定义的变量或数组也可以为数组中的元素或记录中的域上述第 124 种操作方法或称函数调用操作表达式等都返回相应的流类对象的值当读取成功时其返回值为非0读取失败即遇到文件结束符系统用符号常量  表示其值为 1时其返回值为0另外其流类对象可以是文件流对象也可以是标准输入流对象 若是 则表示从键盘输入数据而不是从外存文件中输入数据对于一个字符文件通过输出文件流类或输入输出文件流类的对象打开后主要采用以下两种操作方法向文件中写入数据1 流类对象数据2 流类对象字符量第 1 种操作方法向流类对象所对应的文件中顺序写入一个数据常量变量或表达式每写入一个数据后都要写入一个空格或换行符作为数据之间的分隔符第 2 种操作方法向流类对象所对应的文件中顺序写入一个字符量同样其流类对象可以是文件流对象也可以是标准输出流对象 若是 则将把数据输出到显示器屏幕上对于一个字节文件通过输入文件流类输出文件流类或输入输出文件流类的对象打开后主要采用以下两种操作方法从当前文件指针所指位置起读出或写入一定字节数的信息1 流类对象字符指针读出字节数2 流类对象字符指针写入字节数第 1 种操作方法是从流类对象所对应的文件中当前文件指针所指的字节位置起顺序读出一定字节数的内容送入由字符指针所指定的内存空间中若读取成功则返回非0值否则返回0值第 2 种操作方法是向流类对象所对应的文件中当前文件指针所指的字节位置起顺序写入由内存字符指针所指向的一定字节数的内容从文件中读出或向文件中写入一个数据一个字符或一定字节数的内容后文件指针将自动后移一个数据一个字符或一定字节数的位置若需要随机地读写文件中从任何字节位置文件中的字节从0开始编号开始的信息则首先必须使文件指针移动到那里用于移动文件指针的函数如下1 流类对象 2 流类对象 第 1 种函数用于移动输入流或输入输出文件中的文件指针第 2 种函数用于移动输出文件中的文件指针参数  给出移动文件指针的参考位置它为下列 3 种情况之一 和 它们表示的参考位置分别为文件开始即第0字节位置文件指针当前位置和文件结尾即最后一个字节后的位罝参数  可以省略默认为文件开始位置参数  为一个整数当为正时表示从参考位置起向右即向后移动的字节数当为负时表示从参考位置起向左即向前移动的字节数使用下面两个函数可以从输入或输出文件中返回文件指针的当前位置1 流类对象2 流类对象程序 112 是把从键盘上输入的文本原封不动地写入到  盘上 1 文件中当按  键时表示输入的是文件结束符  文本输入到此结束程序 112           11                 1                1将上面程序中的第9条赋值语句和第10条 循环语句改写为下面一条语句也是正确的  1程序 113 以输入方式打开刚在  盘上建立的 1 文件把文件中的全部内容输出到屏幕统计出文件中所含文本的行数最后显示出文件长度即所含字符数向文件写入一个换行符时实际上是同时写入回车和换行两个控制字符和行数程序 113      11     1                  1              0    1                      1        1        1    1    1  加1表示文件结束符所在的行在程序中 表达式 1 可替换为 1 表达式  可替换为 114 3 函数在 语言中一个程序由若干个功能相对独立的函数模块所组成其中必有一个定名为  的主函数模块程序执行时将自动从主函数模块开始其余为一般函数模块主函数模块可以调用其他函数模块其他函数模块之间也可以相互调用允许一个函数除主函数外直接或间接地调用自身这种情况称为直接或间接递归调用一个函数可以不返回任何值此时函数类型被定义为 对这种函数的调用只能作为函数语句使用一个函数也可以返回一个简单或记录类型的值此时函数类型被定义为一种简单类型如  等或记录类型如  等对这种函数的调用不能作为左值使用只能作为右值使用一个函数还可以返回一个简单类型或记录类型的引用此时函数类型被定义为一种类型后缀引用说明符 如  等对这种函数的调用既可以作为左值使用也可以作为右值使用程序 114 包含有一个主函数和 3 个重载的  函数为了使它们在具有相同参数个数和类型的情况下重载改变了参数之间的次序使其各不相同这 3 个  重载函数都是从数组  中顺序查找找出  域的值为 即  所指向的字符串的元素但返回值各不相同 类型的  函数返回其元素的下标若查找失败则返回  值 型的  函数返回其元素的指针即存储地址若查找失败则返回空值  型的  函数返回其元素的引用这样可对被返回的变量赋值若查找失败则显示错误信息后结束运行在主函数中首先定义数组 并为其赋初值每个元素值为  类型的学生记录包括学号和分数如第 1 个学生的学号为 010203分数为 78接着按行显示出数组  中每个元素的值再接着定义一个待修改的学生记录 其学号为 020101其分数修改值为 98然后根据从键盘上输入的数字 12 和 3 决定调用哪一个  函数查找与  记录的学号相同的元素从而对该元素进行修改主函数最后又显示出数组  中每个元素的值从显示结果可以看到2 元素被修改了程序 114  5   8                          010203780102049202010185                 0203016304050287         0              02010198    请输入你的选择 123                  1                                                              2                                                                          3                    0                    0        0                  0        0                  0        0            1该程序运行结果如下010203 78010204 92020101 85020301 63040502 87请输入你的选择1231010203 78010204 92020101 98020301 63040502 87一个语言函数可以不带任何参数此时函数名后的圆括号内为空或使用关键字表示也可以带有一个或多个参数它们被依次列到函数名后的圆括号内函数中所带的每一个参数可分为值参数和引用参数两种方式当在说明一个形参的类型说明符后带有引用说明符时则该形参被说明为引用参数不带有引用说明符时则被说明为值参数对于函数中的值参数它可以被说明为任何一种类型包括任一种简单类型任一种结构类型还可以为一种函数类型而对于引用参数则可以被说明为除了数组类型和函数类型之外的任何类型函数中的值参数从调用该函数的实际参数中得到相应的值值参数具有自己的存储空间其内容的改变不会影响到对应的实际参数引用参数从调用该函数的实际变量参数中得到其存储位置这样引用参数和实际变量参数具有同一存储位置用于存储其内容在函数执行过程中对引用参数的读写操作实际上就是对相应实参变量的读写操作所以说对引用参数的改变将反映给对应的实参变量注意当值参数为一个指针变量时虽然对指针变量的值的改变不会影响对应的实参变量但对指针变量所指存储位置中的内容的修改将影响到实参变量所指存储位置中的内容因为形参指针变量和实参指针变量所指向的存储位置相同例如对于数组就是采用按值传送的即传送实参的数组名的值它是数组存储空间的首地址给形参的数组名这样对形参数组中元素的访问就是对实参数组中对应元素的访问程序115中的主函数依次调用了3个函数其中1函数中的参数均为型值参数2函数中的参数均为型引用参数3函数中的参数均为指针型值参数根据程序和运行结果进行分析从中体会参数的不同传送方式的作用程序 115 1    2    3 1  2      510    按值传送情况     103         103    1     103         103        引用传送情况     103         103    2     103         103        按值传送指针的情况     103         103    3     103         103 1           23    1 103         103 2           23    2 103         103 3 1  2    12    21    3 10131         10232该程序运行结果如下按值传送情况        5          101        15         60        5          10引用传送情况        5          102        15         60        15         60按值传送指针的情况        15         603        175       259        75         59在程序 116的  函数中使用了函数参数该函数的函数名为 不返回值并带有两个整型值参当调用  函数时其实参表中与函数形参对应的应是一个实际的函数名并且该函数的原型应当与形参函数说明完全相同在该程序的主函数中调用了  函数其实参数名  的值即为该函数代码区的首址将被传送给对应的形参数名 这样在  函数执行中对  函数的调用实际上就是对  函数的调用因为执行的是  函数的代码程序 116                510                          该程序的运行结果如下5 1010 510 514 4 运算符重载在 语言中 为满足应用的需要 允许对大多数运算符进行重载经常需要使用的是在自定义的记录类型上对关系运算符进行重载 使得记录同记录之间记录同其中一个域类型的数据之间也能够进行比较假定一种记录类型为   8  下面是对具有  类型的两个记录进行相等运算符重载的函数 通过比较两个记录中的  域的值是否相等来判断这两个记录是否相等 若相等则返回  否则返回   1  2 1 20    下面是对具有  类型的一个记录和一个字符串进行相等运算符重载的函数若记录中的  域的值等于一个给定的字符串 则认为它们相等 应返回  否则认为它们不等 应返回        0    对于  类型的两个记录 若要由  域的大小来决定这两个记录的大小 则进行大于运算符重载的函数如下  1  2 12当1记录的域的值大于2记录的域的值时则返回1 表示12 否则返回0 表示12在上面进行的大于运算符重载中若一个参数为记录另一个参数为整型数时则重载函数如下         在一个程序中使用以上运算符重载函数后下面的各表达式都是合法的其中假定和为类型的对象为或类型的对象  若和的域相等则返回真1否则返回假0  若的域等于则返回真否则返回假  若的域值大于的域值则返1否返0  若的域值大于值则返回1否则返回0程序117是从类型的数组5中分别查找出学号为020301的记录和分数为最大的记录程序117  8    1  2     1 20                  0          1  2     12               5010203780102049202010185                0203016304050287 查找出学号为 020301 的学生记录 0203010 5      5    对应的记录没找到求出分数最高的学生记录 01 5      该程序运行后的打印结果为查找出学号为 020301 的学生记录020301 63求出分数最高的学生记录010204 92习题 1习题 11根据二元组表示分析其数据结构下列几种用二元组表示的数据结构试画出它们分别对应的图形表示当出现多个关系时对每个关系画出相应的结构图并指出它们分别属于何种结构1 其中        1 2 3                  2 其中                                                        3 其中                                            4 其中        1 2 3 4 5 6            1 2 2 3 2 4 3 4 3 5 3 6 4 5 4 6    5 其中        48 25 64 57 82 36 75 43            1 2 3            148 25 25 64 64 57 57 82 82 36 36 75 75 43            248 25 48 64 64 57 64 82 25 36 82 75 36 43            325 36 36 43 43 48 48 57 57 64 64 75 75 82    习题 12按要求设计抽象数据类型设计二次多项式2的一种抽象数据类型为 该类型的数据部分为 3 个系数项和操作部分如下1 初始化数据成员和假定用记录类型  定义数据成员每个数据成员的默认值为 0    0  0  02 做两个多项式加法即使对应的系数相加返回相加结果  1  23 根据给定的值计算多项式的值并返回    4 计算方程20的两个实数根并引用返回对于有实根无实根和不是二次方程即0这 3 种情况都要返回不同的整数值以便调用函数做不同的处理    1  25 按照2的格式2用2表示输出二次多项式在输出时要注意去掉系数为 0 的项并且当和的值为负时其前不能出现加号  请写出上面每一个操作的具体实现作为选择有兴趣的读者还可以给出该抽象数据类型所对应的 语言的描述习题 13用 函数描述算法并求出其时间复杂度1 比较同一简单类型的两个数据1和2的大小对于1212和12这 3 种不同情况应分别返回  和  字符假定简单类型用  表示它可通过  语句定义为任一简单类型2 将一个字符串中的所有字符按相反的次序重新放置3 求一维  型数组 中的所有元素之乘积4 计算01的值5 假定一维整型数组 中的每个元素值均在 0200 区间内分别统计出落在 0202050508080130130200 等各区间内的元素个数6 从二维整型数组 中查找出最大元素所在的行列下标习题 14指出下列各算法的功能并求出其时间复杂度1        2                 0                   1      02  1      1 0     1                           3  2      0     1           1         1                    4        11          5     10假定  所对应的文件中保存有个整数     0 10  0                 10            6        1                         2             7       和为全局整型常量     0           0              8       和均为全局整型常量         0        0            0    0        0            0                习题15设计集合的一种抽象数据类型集合是由若干个同一类型的元素构成的元素之间不存在任何关系的一种数据结构通常一个集合用一对大括号括起来元素之间用逗号分隔一个集合中的元素来自于一个数据集并且不允许出现重复的元素如对于1 之间的整数集它共包含有2个不同的集合其中表示空集12表示全集假定一个整数集为13则在它之上可以构成的823个集合为123121323123在语言中可用一个整型数组来表示一个集合若一个数组元素的值为0则表示相应元素不在集合中若为1则表示相应元素存在于集合中如对于整数集16之上的一个集合145则用整型数组7表示0元素未用为 0  1  2  3  4  5  6   0  1  0  0  1  1  0 对于集合运算通常有并交和属于等两个集合并的结果仍为一个集合它包含有两个集合中的所有元素当然不允许出现重复两个集合交的结果也仍为一个集合其中的每一个元素同时属于两个集合属于运算是判断一个元素是否存在于一个集合之中若存在则返回真否则返回假若14524则 1245 41 为真2 为假假定在1 整数集为一个整型全局常量上建立集合抽象数据类型名用表示该类型的数据部分为一个整型数组1用于保存一个集合操作部分如下1 对一个集合中的所有元素清0假定用记录类型定义数据成员即类型的定义为  1该操作就是对类型的一个对象初始化使其数组域中的每个元素被置为0  2 利用整型数组初始化数据成员即置一个集合中的为10  1如3136则相应集合中的13和6元素应被置为1      3 重载加法运算符实现两个集合的并运算   1  24 重载乘法运算符实现两个集合的交运算   1  25 重载按位异或  运算符实现属于  运算     6 向一个集合中加入一个元素若插入成功则返回真否则返回假    7 从一个集合中删除一个元素若删除成功则返回真否则返回假    8 重载流插入操作符 用于输出一个集合     请写出上述每一个操作的具体实现并上机调试检查其正确性若要深入研究可以把整个集合及运算用 语言类来定义