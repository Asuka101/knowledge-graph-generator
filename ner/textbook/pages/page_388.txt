ff2.close(); ff3.close();
remove(f2); remove(f3);
}
//顺序打印出以排序好的文件 ff1 中的所有记录
cout<<"排序后文件中的数据:"<<endl;
Print(ff1);
cout<<endl;
ff1.close();

要求对 96 个记录进行外排序，每个记录的排序码为$0 \sim 499$之间随机产生的整数，则该程序的运行结果如下。

输入存于文件的记录数: 96

排序前文件中的数据为：
41 467 334 0 169 224 478 358 462 464 205 145 281 327 461
491 495 442 327 436 391 104 402 153 292 382 421 216 218 395
447 226 271 38 369 412 167 299 35 394 203 311 322 333 173
164 141 211 253 368 47 144 162 257 37 359 223 241 29 278
316 35 190 342 288 106 40 442 264 148 446 305 390 229 370
350 6 101 393 48 129 123 84 454 256 340 466 376 431 308
444 439 126 323 37 38

排序后文件中的数据：
0 6 29 35 35 37 37 38 38 40 41 47 48 84 101
104 106 123 126 129 141 144 145 148 153 162 164 167 169 173
190 203 205 211 216 218 223 224 226 229 241 253 256 257 264
271 278 281 288 292 299 305 308 311 316 322 323 327 333
334 340 342 350 358 359 368 369 370 376 382 390 391 393 394
395 402 412 421 431 436 439 442 442 444 446 447 454 461 462
464 466 467 478 491 495

习题 10

【习题 10-1】运算题。
已知一组元素的排序码为：$(46,74,16,53,14,26,40,38,86,65,27,34)$1. 利用直接插入排序的方法写出每次向前面有序表插入一个元素后的排列结果。
2. 利用直接选择排序方法写出每次选择和交换后的排列结果。
3. 利用堆排序的方法写出在构成初始堆和利用堆排序的过程中，每次筛选算后的排列结果，并画出初始堆所对应的完全二叉树。
4. 利用快速排序的方法写出每一层划分后的排列结果，并画出由此快速排序得到的二叉搜索树。
5. 利用归并排序的方法写出每一趟二路归并排序后的结果。
【习题 10-2】算法设计题。
