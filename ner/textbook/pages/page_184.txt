3. 从队列中删除一个元素

ElemType OutQueue (LinkQueue& HQ)
{
    if(HQ.front==NULL) { //若链队为空则中止运行
        cerr<<"链队为空,无法删除!"<<endl;
        exit(1);
    }
    ElemType temp=HQ.front->data; //暂存队首元素以便返回
    LNode* p=HQ.front; //暂存队首指针以便回收队首结点
    HQ.front=p->next; //使队首指针指向下一个结点
    if(HQ.front==NULL) //若删除后链队为空,则使队尾指针为空
        HQ.rear=NULL;
    delete p; //回收原队首结点
    return temp; //返回被删除的队首元素
}

4. 读取队首元素

ElemType PeekQueue (LinkQueue& HQ)
{
    if(HQ.front==NULL) { //若链队为空则中止执行
        cerr<<"链队为空无队首元素!"<<endl;
        exit(1);
    }
    return HQ.front->data; //返回队首元素
}

5. 检查链队是否为空

bool EmptyQueue(LinkQueue& HQ)
{
    //判断队首或队尾任一个指针是否为空即可
    return HQ.front==NULL;
}

6. 清除链队中的所有元素，使之变为空队

void ClearQueue(LinkQueue& HQ)
{
    LNode* p=HQ.front; //队首指针赋给p
    while(p!=NULL) {
        //依次删除队列中的每一个结点
        HQ.front=HQ.front->next;
        delete p;
        p=HQ.front;
    } //循环结束后队首指针已经变为空
    HQ.rear=NULL; //置队尾指针为空
}
