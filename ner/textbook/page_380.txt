因为进行一次外存访问操作，即把一个物理信息块从磁盘读入内存或从内存写入磁盘，与在内存中传送同样大小的信息量操作相比，从时间上要高出$2 \sim 3$个数量级，所以在进行文件操作时要使得设计出的算法能够尽量减少访问外存的次数。因此在文件操作中要尽量读写文件中相邻位置上的信息，从而达到减少外存访问次数的目的。

对于外存磁盘文件，由于能够随机存取任何字节位置或记录位置上的信息，所以逻辑结构及操作同使用内存数组相类似，在数组上采用的各种内排序方法都能够用于外排序中，考虑到要尽量减少访问外存的次数，尽量存取相邻位置上的数据，所以在外排序中最合适使用归并排序方法。

内存归并排序在开始时是把数组中的每个元素均看作为长度为 1 的有序表（又称归并段），也就是说，在进行归并排序过程中，归并段的长度从 1 开始，依次为$2,4,8,\cdots$，直到归并段的长度$\text{len}$大于等于待排序的记录数$n$为止。在外存文件的归并排序中，初始归并段的长度通常不是从 1 开始，而是从一个确定的长度（如 100）开始，这样能够有效地减少归并趟和访问外存的次数，提高外排序速度。这要求在对磁盘文件归并排序之前首先要利用一种内排序方法，按照初始归并段确定的长度在原文件上依次建立好每个有序表，然后再调用对文件的归并排序算法完成排序。

在对磁盘文件进行二路归并排序时，有两种方法：一种是采用两个文件，交替把一个文件中的数据归并到另一个文件中，每次使归并段的长度翻番；另一种是采用 4 个文件，交替把两个文件中的对应有序子表（归并段）的数据归并到另两个文件中，同样每次使归并段的长度翻番。

这里采用的使用 4 个文件的第 2 种方法对磁盘文件进行二路归并排序。首先把原始数据文件$f_1$中的所有记录，依次按初始归并段的长度进行内排序，随时把排序好的每个初始归并段交替写入到两个数据文件$f_2$和$f_3$中，接着对$f_2$和$f_3$中的每两个对应位置上的归并段进行两两归并，交替写入到数据文件$f_4$和$f_5$中，同样，在把$f_4$和$f_5$中的每两个对应位置上的归并段进行两两归并，交替写入到$f_2$和$f_3$中，以此循环，每归并一趟，其归并段的长度就增加一倍，直到$f_2$中只含有一个归并段为止，此时$f_3$中也只含有一个归并段，并且该归并段可能为空，最后把$f_2$和$f_3$二路归并到原始数据文件$f_1$中即可。

例如，$f_1$中含有 105 个记录，初始归并段的长度为 10，则归并过程中各文件所含的归并段个数及大小，如图 10-10 所示。$\begin{aligned}
& f_{1} \quad \boxed{105} \\
& \boxed{10} \quad \boxed{10} \quad \boxed{10} \quad \boxed{10} \quad \boxed{10} \quad \boxed{5} \\
& \boxed{10} \quad \boxed{10} \quad \boxed{10} \quad \boxed{10} \quad \boxed{10} \\
& \boxed{20} \quad \boxed{20} \quad \boxed{20} \quad \boxed{40} \quad \boxed{25} \\
& \boxed{20} \quad \boxed{20} \quad \boxed{5} \quad \boxed{40} \\
& \boxed{80} \quad \boxed{105} \quad \boxed{105} \\
& \boxed{25} \quad \boxed{0}
\end{aligned}$图 10-10 文件归并排序过程示意图
