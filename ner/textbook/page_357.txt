输入待查的关键字,直到输入-1时结束查找! -1

*9.5.6 B+树简介

B 树分为$\mathrm{B}$树和$\mathrm{B}^{+}$树两种, 它们的树结构大致相同。一棵$m$阶的$\mathrm{B}^{+}$树和一棵$m$阶的$\mathrm{B}$树的差异如下。

(1) 在$\mathrm{B}$树中, 每个结点含有$n$个关键字和$n+1$棵子树, 而在$\mathrm{B}^{+}$树中, 每个结点含有$n$个关键字和$n$棵子树, 即每个关键字对应一棵子树。

(2) 在$\mathrm{B}$树中, 每个结点 (除树根结点外) 中的关键字个数$n$的取值范围是:$\lceil m / 2\rceil-1 \leqslant n \leqslant m-1$, 而在$\mathrm{B}^{+}$树中, 每个结点 (除树根结点外) 中的关键字个数$n$的取值范围是:$\lceil m / 2\rceil \leqslant n \leqslant m$, 树根结点的关键字个数的取值范围是$1 \leqslant n \leqslant m$。

(3)$\mathrm{B}^{+}$树中的所有叶子结点包含了全部关键字及指向对应记录的指针, 且所有叶子结点按关键字从小到大的顺序依次链接。

(4)$\mathrm{B}^{+}$树中所有非叶子结点仅起到索引的作用, 即结点中的每个索引项只含有对应子树的最大关键字和指向该子树的指针, 不含有该关键字对应记录的存储地址。

如图 9-10 所示为一棵三阶的$\mathrm{B}^{+}$树, 其中叶子结点的每个关键字下面的指针表示指向对应记录的存储位置。通常在$\mathrm{B}^{+}$树上有两个头指针, 一个指向根结点, 用于从根结点起对树进行插入、删除和查找等操作, 另一个指向关键字最小的叶子结点, 用于从最小关键字起进行顺序查找和处理每一个叶子结点中的关键字及记录。

\[
\begin{aligned}
& \text { root } \\
& \downarrow \\
& \begin{array}{ccccc}
59 & 97 & & & \\
\hline
\end{array} \\
& \begin{array}{cccc}
15 & 44 & 59 & \\
\hline
\end{array} \\
& \begin{array}{cccc}
10 & 15 & & \\
\hline
\end{array} \quad \begin{array}{cccc}
21 & 37 & 44 & \\
\hline
\end{array} \quad \begin{array}{cccc}
51 & 59 & & \\
\hline
\end{array} \quad \begin{array}{cccc}
63 & 72 & & \\
\hline
\end{array} \quad \begin{array}{cccc}
85 & 91 & 97 & \\
\hline
\end{array}
\end{aligned}
\]

图 9-10 一棵3阶的$\mathrm{B}^{+}$树

在$\mathrm{B}^{+}$树上进行随机查找、插入和删除的过程基本上与$\mathrm{B}$树相同。在查找时, 若非叶子结点上的关键字等于给定值$\mathrm{K}$, 并不终止, 而要继续向下查找直到叶子结点, 此时若查找成功, 则按所给指针取出对应记录即可。因此, 在$\mathrm{B}^{+}$树中, 不管查找成功与否, 每次查找都要走过一条从树根结点到叶子结点的路径。$\mathrm{B}^{+}$树的插入也从叶子结点开始, 当插入后结点中的关键字个数大于$m$时应分裂为两个结点, 它们所含关键字个数分别为$\lfloor(m+1) / 2\rfloor$和$\lceil(m+1) / 2\rceil$, 同时要使得它们的双亲结点中含有这两个结点的最大关键字和指向它们的指针, 若双亲结点的关键字数目因此而大于$m$, 应继续分裂, 以此类推。$\mathrm{B}^{+}$树的删除也从叶子结点开始, 若叶子结点中的最大关键字被删除, 则在非叶子结点中的值可以作为一个 “分界关键字” 存在; 若因删除而使叶子结点中的关键字个数少于$\lceil m / 2\rceil$, 则从兄弟结点中调剂关键字或同兄弟结点合并的过程也同$\mathrm{B}$树类似。
