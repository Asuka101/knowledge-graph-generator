指针 rear。用 front 指向队首（即表头）结点的存储位置，用 rear 指向队尾（即表尾）结点的存储位置。用于存储队列的单链表简称链接队列或链队。设链队中的结点类型仍为以前定义的单链表结点类型 SNode 或 LNode，那么队首和队尾指针为 LNode*指针类型。若把一个链队的队首指针和队尾指针定义在一个结构类型中，并设该结构类型用标识符 LinkQueue 表示，则具体定义如下:

struct LinkQueueLk {
    LNode* front; //队首指针
    LNode* rear;  //队尾指针
};

其中，LNode 结点类型在第 2 章已经给出，这里重写如下:

struct LNode {
    ElemType data; //值域
    LNode* next;   //链接指针域
};

一个链接存储的队列，如图 4-11 所示。

front
rear

图 4-11 链队的示意图

在类型为 LinkQueue 的链队 HQ 上进行队列的各种操作的算法如下。

1. 初始化链队

void InitQueue(LinkQueue& HQ)
{
    HQ.front=HQ.rear=NULL; //把队首和队尾指针置为空
}

2. 向链队中插入一个元素

void EnQueue(LinkQueue& HQ, ElemType item)
{
    LNode* newptr=new LNode; //得到一个新结点
    newptr->data=item;       //把 item 的值赋给新结点的值域
    newptr->next=NULL;       //把新结点的指针域置空
    if (HQ.rear==NULL)       //若链队为空，则新结点既是队首又是队尾
        HQ.front=HQ.rear=newptr;
    else                     //若链队非空，则新结点被链接到队尾并修改队尾指针
        HQ.rear=HQ.rear->next=newptr;
}
