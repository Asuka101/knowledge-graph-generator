}
Push(R,ch); //把 ch 运算符写入栈中
ch=s1[++i];
}
//此处必然为数字或小数点字符,否则为中缀表达式错误
else {
//若 ch 不是数字或小数点字符则退出运行
if((ch<'0' | ch>'9') && ch!='.') {
cout<<"中缀表达式表示错误!"<<endl;
exit(1);
}
}
//把一个数值中的每一位依次写入到 s2 串中
while((ch>='0' && ch<='9') || ch=='.') {
S2[j++]=ch;
ch=s1[++i];
}
//被放入 S2 中的每个数值后面接着放入一个空格字符
S2[j++]=' ';
}
//将暂存在栈中的运算符依次退栈并写入到 S2 串中
ch=Pop(R);
while(ch!='@') {
if(ch=='(') {cerr<<"expression error!"<<endl; exit(1);}
else {
S2[j++]=ch;
ch=Pop(R);
}
}
//在后缀表达式的末尾放入字符串结束符
S2[j++]='\0';

其中，求运算符优先级的 Precedence 函数定义如下。

int Precedence(char op) { //返回运算符 op 所对应的优先级数值
switch(op) {
case '+':
case '-':
return 1; //定义加减运算的优先级为 1
case '*':
case '/':
return 2; //定义乘除运算的优先级为 2
case '(':
case '@':
