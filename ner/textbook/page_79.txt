输入待删除元素的值:15
删除成功!
6 12 21 27 33 40 48
按值插入, 输入待插入元素的值:8
插入成功!
6 8 12 21 27 33 40 48
线性表长度:8
线性表不空!

仔细分析此结果，增强对算法的理解。

*2.3 线性表应用举例

用线性表来管理一个商品库存表。商品库存表已经保存在文本文件 a:goods.dat 中，每个商品记录包含有 4 项内容：商品代号、商品名称、最低库存量和当前库存量。商品库存表中的具体内容如表 2-3 所示。

表 2-3 商品库存表

| 商品代号 | 商品名称     | 最低库存量 | 当前库存量 |
|----------|--------------|------------|------------|
| Y-12     | toothbrush   | 10         | 25         |
| F-13     | soap         | 20         | 48         |
| W-01     | toiletpaper  | 10         | 36         |
| M-48     | towel        | 15         | 90         |
| C-24     | chinacup     | 10         | 52         |
| S-05     | schoolbag    | 5          | 20         |

可以事先通过调用下面函数在 A 盘上建立库存表文件。

void SetupGoodsFile(char* fname)
{
    ofstream ofstr(fname);              //定义输出文件流对象 ofstr
    if (!ofstr) {
        cerr<<"File 'goods' no create!"<<endl;
        exit(1);
    }
    char a[30];
    for(int i=0; i<6; i++) {
        cin.getline(a,30);
        ofstr<<a<<endl;
    }
    ofstr.close();
}

在此函数中，for 循环体每循环一次，要求从键盘上输入一条商品记录，每个域值之间
