当按图 4-7 输入迷宫数据，则得到如下输出结果（在第8个坐标后的回车是另加的）。$(6,8)$，$(6,7)$，$(5,7)$，$(4,7)$，$(4,6)$，$(3,6)$，$(3,5)$，$(3,4)$，$(3,3)$，$(2,3)$，$(2,2)$，$(1,2)$，$(1,1)$【例 4-8】求解汉诺塔(Tower of Hanoi)问题。

此问题为：有3个台柱，分别编号为A、B、C或1、2、3；在A柱上穿有$n$个圆盘，每个圆盘的直径均不同，并且按照直径从大到小的次序叠放在柱子上；要求把A柱上的$n$个圆盘搬到C柱上，B柱可以作为过渡，并且每次只能搬动一个圆盘，同时必须保证在任何柱子上的圆盘在任何时候都要按序码放，即大的在下，小的在上；当把若干个圆盘从一个柱子搬到另一个柱子时，第3个柱子作为过渡使用；题目要求编写出一个算法，输出搬动圆盘的过程。

分析：若一个柱子上只有一个圆盘，则不需要使用过渡台柱，直接把它放到目的地柱上即可。若一个柱子上有两个圆盘，则先把一个（只能是上面一个）放到过渡柱子上，再把另一个放到目的地柱上，最后把过渡柱上的一个圆盘放到目的地柱上，到此完成搬动过程。若一个柱子上有3个、4个……又如何解决呢？必须找出适用于任意多个（即大于等于2个）情况的通用方法或规则才行。由此可能想到递归，即先把原柱子上的$n-1$个圆盘设法搬到过渡柱上，再把原柱子上剩下的最后一个圆盘直接搬到目的地柱上，最后设法把过渡柱上的$n-1$个圆盘搬到目的地柱上，从而完成全部搬动过程；当把$n-1$个圆盘从一个柱子搬到另一个柱子时，若它的圆盘数不是一个，又需要使用第3个柱子作为过渡。此递归就是把$n$的问题化解为两个$n-1$的问题，当$n$等于1时不需要再递归，只需要直接移动即可。

例如，当A柱上有3个圆盘，要求把它移动到C柱上，则需要如下步骤完成。

(1) 把A柱上的2个圆盘直接移到过渡柱B上。

① 把A柱上的1个圆盘直接移到此时的过渡柱C上。

② 把A柱上剩余的1个圆盘直接移到此时的目的柱B上。

③ 把此时的过渡柱C上的1个圆盘直接移到此时的目的柱B上。

(2) 把A柱上剩下的1个圆盘直接移到目的地柱C上。

(3) 把过渡柱B上的2个圆盘移到目的地柱C上。

① 把B柱上的1个圆盘直接移到此时的过渡柱A上。

② 把B柱上剩余的1个圆盘直接移到此时的目的柱C上。

③ 把此时的过渡柱A上的1个圆盘直接移到此时的目的柱C上。

上述整个移动过程为7个直接步骤，依此如下。

A→C；A→B；C→B；A→C；B→A；B→C；A→C

或用数字编号写为：$1\rightarrow3$；$1\rightarrow2$；$3\rightarrow2$；$1\rightarrow3$；$2\rightarrow1$；$2\rightarrow3$；$1\rightarrow3$根据以上分析，设把$n$个盘子由值参a所表示的柱子搬到由值参c所表示的柱子，用值参b所表示的柱子作为过渡，则编写出递归算法如下:

void Hanoi(int n, int a, int b, int c)
{
    //当只有一个盘子时，直接由a柱搬到c柱后结束一次调用
