S.len=0;
}
3. 求出集合的长度, 即所含元素的个数

此算法返回集合 S 中的 len 域的值。

int LenthSet (Set& S)
{
    return S.len;
}

4. 判断集合是否为空

此算法很简单, 若集合长度为 0 则返回真表示空, 否则返回假表示非空。

bool EmptySet(Set& S)
{
    return S.len==0;
}

5. 判断一个元素是否属于集合

此算法就是一个顺序查找元素的过程。若找到表明该元素属于这个集合，则返回真;否则不属于这个集合，则返回假。

bool InSet(Set& S, ElemType item)
{
    for(int i=0; i<S.len; i++)
        if(S.set[i]==item) return true;
    return false;
}

6. 输出集合中所有元素

此算法使用一个 for 循环，依次输出 S 集合中 set 域数组中保存的每个元素的值。

void OutputSet(Set& S)
{
    for(int i=0; i<S.len; i++)
        cout<<S.set[i]<<' ';
    cout<<endl;
}

若要求输出的所有集合元素是按值的升序排列的，并且原有集合 S 的状态保持不变。
这时首先把集合 S 中 set 数组内容复制到一个临时数组中，然后对这个临时数组进行排序，
并按下标位置依次输出各元素值。对数组进行排序有多种不同方法，最简单的方法是简单插入排序和简单选择排序。
