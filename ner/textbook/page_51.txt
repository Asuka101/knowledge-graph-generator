一行结束），并把它保存到以第 1 个参数给定的字符指针变量所指定的内存空间中，该内存空间最多只允许存储长度等于给定整数量值减$1$的一个字符串，并且其后自动存储一个字符串结束符'\0'，通常所给的整数量的大小为字符指针变量所指定的存储空间的大小。当然这里的各种指定的变量可以为单独定义的变量或数组，也可以为数组中的元素或记录中的域。

上述第 1、2、4 种操作方法（或称函数调用、操作表达式等）都返回相应的流类对象的值，当读取成功时，其返回值为非$0$，读取失败（即遇到文件结束符，系统用符号常量 EOF 表示，其值为 -1）时，其返回值为$0$。另外，其流类对象可以是文件流对象，也可以是标准输入流对象 cin。若是 cin，则表示从键盘输入数据，而不是从外存文件中输入数据。

对于一个字符文件，通过输出文件流类或输入/输出文件流类的对象打开后，主要采用以下两种操作方法向文件中写入数据。

(1) 流类对象<<数据。

(2) 流类对象.put（字符量）。

第 1 种操作方法向流类对象所对应的文件中顺序写入一个数据（常量、变量或表达式），每写入一个数据后，都要写入一个空格或换行符作为数据之间的分隔符。第 2 种操作方法向流类对象所对应的文件中顺序写入一个字符量。同样，其流类对象可以是文件流对象，也可以是标准输出流对象 cout。若是 cout，则将把数据输出到显示器屏幕上。

对于一个字节文件，通过输入文件流类、输出文件流类或输入/输出文件流类的对象打开后，主要采用以下两种操作方法从当前文件指针所指位置起读出或写入一定字节数的信息。

(1) 流类对象.read（字符指针，读出字节数）。

(2) 流类对象.write（字符指针，写入字节数）。

第 1 种操作方法是从流类对象所对应的文件中当前文件指针所指的字节位置起顺序读出一定字节数的内容送入由字符指针所指定的内存空间中，若读取成功则返回非$0$值，否则返回$0$值。第 2 种操作方法是向流类对象所对应的文件中当前文件指针所指的字节位置起顺序写入由内存字符指针所指向的一定字节数的内容。

从文件中读出或向文件中写入一个数据、一个字符或一定字节数的内容后，文件指针将自动后移一个数据、一个字符或一定字节数的位置。若需要随机地读写文件中从任何字节位置（文件中的字节从$0$开始编号）开始的信息，则首先必须使文件指针移动到那里。用于移动文件指针的函数如下。

(1) 流类对象.seekg（pos, origin）。

(2) 流类对象.seekp（pos, origin）。

第 1 种函数用于移动输入流或输入/输出文件中的文件指针，第 2 种函数用于移动输出文件中的文件指针。参数 origin 给出移动文件指针的参考位置，它为下列 3 种情况之一：ios::beg、ios::cur 和 ios::end，它们表示的参考位置分别为文件开始（即第$0$字节位置）、文件指针当前位置和文件结尾（即最后一个字节后的位罝）。参数 origin 可以省略，默认为文件开始位置。参数 pos 为一个整数，当为正时表示从参考位置起向右（即向后）移动的字节数，当为负时表示从参考位置起向左（即向前）移动的字节数。使用下面两个函数可以从输入或输出文件中返回文件指针的当前位置。
