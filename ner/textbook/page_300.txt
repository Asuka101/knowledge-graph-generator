例如，对于图 8-6 来说，若求从源点$v_0$到其余各顶点的最短路径，则开始时 3 个一维数组 s,dist 和 path 的值如表 8-3 所示。

表 8-3 初始状态

\begin{tabular}{c|c|c|c|c|c|}
\hline & 0 & 1 & 2 & 3 & 4 \\
\hline s & 1 & 0 & 0 & 0 & 0 \\
\hline dist & 0 & 3 &$\infty$&$\infty$& 30 \\
\hline path & &$v_{0}, v_{1}$& & &$v_{0}, v_{4}$\\
\hline
\end{tabular}

开始进行第 1 次运算，求出从源点$v_0$到第 1 个终点的最短路径。首先从 s 元素为 0 的对应 dist 元素中，查找出值最小的元素，求得 dist[1]的值最小，所以第 1 个终点为$v_1$，最短距离为 dist[1]=3，最短路径为 path[1]={0,1}，接着把 s[1]置为真(1)，表示$v_1$已加入 S 集合中，然后以$v_1$为新考虑的中间点，对 s 数组中元素为假(0)的每个顶点 j（此时$2 \leq j \leq 4$）的目前最短路径长度 dist[j]和目前最短路径 path[j]进行必要的修改，因 dist[1]+GA[1][2]=3+25=28，小于 dist[2]=$\infty$，所以将 28 赋给 dist[2]，将 path[1]并上$v_2$后赋给 path[2]，同理因 dist[1]+GA[1][3]=3+8=11，小于 dist[3]=$\infty$，所以将 11 赋给 dist[3]，将 path[1]并上$v_3$后赋给 path[3]，最后再看从$v_0$到$v_4$，以$v_1$作为新考虑的中间点的情况，由于$v_1$到$v_4$没有出边，所以 GA[1][4]=$\infty$，故 dist[1]+GA[1][4]不小于 dist[4]，因此 dist[4]和 path[4]无需修改，应维持原值。至此，第 1 次运算结束，3 个一维数组的当前状态如表 8-4 所示。

表 8-4 得到终点$v_1$\begin{tabular}{c|c|c|c|c|c|}
\hline & 0 & 1 & 2 & 3 & 4 \\
\hline s & 1 & 1 & 0 & 0 & 0 \\
\hline dist & 0 & 3 & 28 & 11 & 30 \\
\hline path & &$v_{0}, v_{1}$&$v_{0}, v_{1}, v_{2}$&$v_{0}, v_{1}, v_{3}$&$v_{0}, v_{4}$\\
\hline
\end{tabular}

接着进行第 2 次运算，求出从源点$v_0$到第 2 个终点的最短路径。首先从 s 数组中元素为 0 的对应 dist 元素中，查找出值最小的元素，求得 dist[3]的值最小，所以第 2 个终点为$v_3$，最短距离为 dist[3]=11，最短路径为 path[3]={0,1,3}，接着把 s[3]置为 1，然后以$v_3$作为新考虑的中间点，对 s 中元素为 0 的每个顶点 j（此时$j=2,4$）的 dist[j]和 path[j]进行必要的修改，因 dist[3]+GA[3][2]=11+4=15，小于 dist[2]=28，所以将 15 赋给 dist[2]，将 path[3]并上$v_2$后赋给 path[2]，同理，因 dist[3]+GA[3][4]=11+12=23，小于 dist[4]=30，所以将 23 赋给 dist[4]，将 path[3]并上$v_4$后赋给 path[4]。至此，第 2 次运算结束，3 个一维数组的当前状态如表 8-5 所示。

表 8-5 得到终点$v_3$\begin{tabular}{c|c|c|c|c|c|}
\hline & 0 & 1 & 2 & 3 & 4 \\
\hline s & 1 & 1 & 0 & 1 & 0 \\
\hline dist & 0 & 3 & 15 & 11 & 23 \\
\hline path & &$v_{0}, v_{1}$&$v_{0}, v_{1}, v_{3}, v_{2}$&$v_{0}, v_{1}, v_{3}$&$v_{0}, v_{1}, v_{3}, v_{4}$\\
\hline
\end{tabular}

然后进行第 3 次运算，求出从源点$v_0$到第 3 个终点的最短路径。首先从 s 中元素为
