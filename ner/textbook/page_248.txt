\section*{6.3 .3 哈夫曼编码}

哈夫曼树的应用很广, 哈夫曼编码就是其中的一种, 下面简要介绍。

在电报通信中, 电文是以二进制的 0、1 序列传送的。在发送端需要将电文中的字符序列转换成二进制的 0、1 序列（即编码），在接收端又需要把接收到的 0、1 序列转换成对应的字符序列（即译码）。

最简单的二进制编码方式是等长编码。若电文中只使用 A、B、C、D、E、F 这 6 种字符，若进行等长编码，则需要二进制的三位，可依次编码为 000、001、010、011、100、101。若用这 6 个字符作为 6 个叶子结点，生成一棵二叉树，让该二叉树中每个分支结点的左、右分支分别用 0 和 1 编码，从树根结点到每个叶子结点的路径上所经分支的 0、1 编码序列应等于该叶子结点的二进制编码，则对应的编码二叉树，如图 6-10 所示。
![A] (A) [B] (B) [C] (C) [D] (D) [E] (E) [F] (F)

图 6-10 编码二叉树

通常，电文中每个字符的出现频率（即次数）一般是不同的。在一份电文中，这 6 个字符的出现频率依次为：4、2、6、8、3、2，则电文被编码后的总长度$L$可由下式计算：$L=\sum_{i=1}^{n} c_{i} l_{i}$其中，$n$表示电文中使用的字符数，$c_{i}$和$l_{i}$分别表示对应字符$k_{i}$在电文中的出现频率和编码长度。因此，可求出$L$为：$L=\sum_{i=1}^{6}\left(c_{i} \times 3\right)=3 \times(4+2+6+8+3+2)=75$可知，采用等长编码时，传送电文的总长度为 75。

那么，如何能缩短传送电文的总长度，从而节省传送时间呢？若采用不等长编码，让出现频率高的字符具有较短的编码，让出现频率低的字符具有较长的编码，这样有可能缩短传送电文的总长度。采用不等长编码要避免译码的二义性或多义性。假设用 0 表示字符 D，用 01 表示字符 C，则当接收到编码串…01…，并译到字符 0 时，是立即译出对应的字符 D，还是接着与下一个字符 1 一起译为对应的字符 C，这就产生了二义性。因此，若对某一字符集进行不等长编码，则要求字符集中任一字符的编码都不能是其他字符编码的前缀。符合此要求的编码叫做无前缀编码。显然等长编码是无前缀编码，这从等长编码所对应的编码二叉树也可直观地看出，任一叶子结点都不可能是其他叶子结点的双亲，也就是说，只有当一个结点是另一个结点的双亲时，该结点的字符编码才会是另一个结点的字符编码的前缀。

为了使不等长编码成为无前缀编码，可用该字符集中的每个字符作为叶子结点生成一棵编码二叉树。为了获得传送电文的最短长度，可将每个字符的出现频率作为字符结点的权值赋予该结点上，求出此树的最小带权路径长度就等于求出了传送电文的最短长度。因
