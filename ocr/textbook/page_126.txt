对于稀疏矩阵中的每个非零元素，可用它所在的行号、列号以及元素值这三元组$(i,j$,$a_{ij})$来表示。若把所有的三元组按照行号为主序（即为主关键字）、列号为辅序（即为次关键字，当行号相同时再考虑列号次序）进行排列，则就构成了一个表示稀疏矩阵的三元组线性表。图 3-3 (b) 稀疏矩阵所对应的三元组线性表表示为：$\left((1,1,3),(1,4,5),(2,3,-2),(3,1,1),(3,3,4),(3,5,6),(5,3,-1)\right)$稀疏矩阵采用三元组线性表表示后，可以使用顺序或链接方式存储，从而比采用二维数组存储要大大地节省存储空间。

\section*{3. 稀疏矩阵的抽象数据类型}

该抽象数据类型的数据部分为用三元组线性表表示的稀疏矩阵，操作部分所包含的操作与对一般矩阵所做的操作相同，通常为求一个稀疏矩阵的转置，计算两个矩阵的和，计算两个矩阵的乘积等。一个矩阵的转置结果仍是一个矩阵，该矩阵中的第$i$行与第$j$列交点位置上的元素等于被转置矩阵中第$j$行与第$i$列交点位置上的元素。两个矩阵的和仍然是一个矩阵，该矩阵中的第$i$行第$j$列位置上的元素等于两个相加矩阵中对应位置上的元素之和。两矩阵求和的条件是它们的行数和列数必须分别对应相同。两个矩阵的乘积仍然是一个矩阵，该矩阵中的第$i$行与第$j$列位置上的元素等于第 1 个乘数矩阵中的第$i$行与第 2 个乘数矩阵中的第$j$列上对应元素乘积之累加和。假定第 1 个乘数矩阵为$A[m][n]$，第 2 个乘数矩阵为$B[n][p]$，乘积结果矩阵为$C[m][p]$，则$C$中任一元素$C[i][j]$等于$\sum_{k=1}^{n}(A[i][k] \times B[k][j])$，其中$1 \leq i \leq m$，$1 \leq j \leq p$。两矩阵求积的条件是第 1 个矩阵的列数必须等于第 2 个矩阵的行数。

下面给出稀疏矩阵的抽象数据类型的定义。

ADT SparseMatrix is

Data:

采用顺序或链接方式存储的稀疏矩阵，假定其存储类型用 SMatrix 标识符表示

Operation:

//初始化稀疏矩阵 M，使它成为不含任何元素的空矩阵

void InitMatrix(SMatrix& M);

//求出稀疏矩阵 M 的转置矩阵并返回

SMatrix Transpose(SMatrix& M);

//求出 M1 和 M2 稀疏矩阵之和并返回

SMatrix Add(SMatrix& M1, SMatrix& M2);

//求出 M1 和 M2 稀疏矩阵之乘积并返回

SMatrix Multiply(SMatrix& M1, SMatrix& M2);

//按照一定格式向稀疏矩阵 M 输入所对应的三元组线性表

void InputMatrix(SMatrix& M, int m, int n);

//按照一定格式输出稀疏矩阵 M

void OutputMatrix(SMatrix& M);

end SparseMatrix
