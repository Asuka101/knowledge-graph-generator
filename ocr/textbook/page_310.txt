8.3.2 拓扑排序算法

为了利用 C++语言在计算机上实现 AOV 网的拓扑排序, AOV 网采用邻接表表示较方便。如对于图 8-12 (a), 对应的邻接表, 如图 8-13 所示。

![image](attachment://figure_8_13.png)

图 8-13 图 8-12（a）的链接表

在拓扑排序算法中, 需要设置一个包含$n$个元素的一维整型数组, 设用$\mathbf{d}$表示, 用它来保存 AOV 网中每个顶点的入度值。如对于图 8-12 (a), 得到数组$\mathbf{d}$的初始值为:

![image](attachment://array_d.png)

在进行拓扑排序中, 为了把所有入度为 0 的顶点都保存起来, 而且又便于插入、删除以及节省存储, 最好的方法是把它们链接成一个栈。另外, 在保存入度的数组$\mathbf{d}$中, 当一个顶点$v_i$的入度为 0 时, 下标为$i$的元素$\mathbf{d}[i]$的值为 0 , 该元素也就空闲下来了, 正好可利用它作为链栈中的一个结点使用, 保存下一个入度为 0 的顶点的序号, 这样就可以把所有入度为 0 的顶点通过数组$\mathbf{d}$中的对应元素静态地链接成一个栈。对于被删除入边而新产生的入度为 0 的顶点就压入此栈, 输出一个入度为 0 的顶点就是删除栈顶元素。在这个链栈中, 栈顶指针 top 指向一个入度为 0 的顶点, 其值是数组$\mathbf{d}$中下一个入度为 0 的元素的下标, 此处元素的值又是数组$\mathbf{d}$中另一个入度为 0 的元素的下标, 以此类推, 最后一个入度为 0 元素的值为 -1 , 表示为栈底。

根据如图 8-13 所示的邻接表, 建立的入度为 0 的初始栈的过程如下。
(1) 开始置链栈为空, 即给链栈指针 top 赋初值为 -1 。

top=-1;

(2) 将入度为 0 的元素$\mathbf{d}[0]$进栈,$\mathbf{d}[0]=\text { top; } \operatorname{top}=0 ;$此时 top 指向$\mathbf{d}[0]$元素, 表示顶点$v_0$的入度为 0 , 而$\mathbf{d}[0]$的值为 -1 , 表明为栈底。
(3) 将入度为 0 的元素$\mathbf{d}[1]$进栈, 即:
