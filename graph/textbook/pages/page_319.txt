```cpp
void main()
{
    int n,k1,k2;
    cout<<"输入待处理图的顶点数：";
    cin>>n;
    cout<<"输入图的有无向和有无权选择（0为无，非0为有）：";
    cin>>k1>>k2;
    adjlist gl;
    InitAdjjoin(gl);
    cout<<"输入图的边集：";
    char*a=new char[100];
    cin>>a;
    CreateAdjjoin(gl,n,a,k1,k2);
    Cripath(gl,n);
}

程序的一次输入和运行结果如下。

输入待处理图的顶点数:9

输入图的有无向和有无权选择（0为无，非0为有）：1 1

输入图的边集：{$\{<0,1>6,<0,2>4,<0,3>5,<1,4>1,<2,4>1,<3,5>2,<4,6>9,<4,7>7,$<5,7>4,<6,8>2,<7,8>4\}$}$<0,3>0,3,3$<0,2>0,2,2$<0,1>0,0,0$<1,4>6,6,0$<2,4>6,6,2$<3,5>5,8,3$<4,7>7,7,0$<4,6>7,7,0$<5,7>7,10,3$<6,8>16,16,0$<7,8>14,14,0$习题 8

【习题 8-1】运算题。

1. 如图 8-18 所示，针对有向图操作如下。
(1) 画出最小生成树并求出它的权。
(2) 从顶点$v_0$出发，根据普里姆算法求出最小生成树的过程中，把依次得到的各条边按序写出来。
(3) 根据克鲁斯卡尔算法求出最小生成树的过程中，把依次得到的各条边按序写出来。

2. 如图 8-19 所示，利用狄克斯特拉算法求从顶点$v_0$到其余各顶点的最短路径，并画出对应的图形表示。
```
