其中，$n$表示叶子结点的数目，$w_i$和$l_i$分别表示叶子结点$k_i$的权值和树根结点到$k_i$之间的路径长度。

4. 哈夫曼树

哈夫曼树（Huffman tree）又称做最优二叉树。它是$n$个带权叶子结点构成的所有二叉树中，带权路径长度 WPL 最小的二叉树。因为构造这种树的算法是最早由哈夫曼于 1952 年提出的，所以被称为哈夫曼树。

例如，有 4 个叶子结点 a, b, c, d，分别带权为 9, 4, 5, 2，由它们构成的三棵不同的二叉树（当然还有其他许多种）分别如图 6-8 (a) ~ 图 6-8 (c) 所示。

(a) 带权二叉树之一
(b) 带权二叉树之二
(c) 带权二叉树之三

图 6-8 由四个叶子结点构成的三棵不同的带权二叉树

每一棵二叉树的带权路径长度 WPL 分别为：
① WPL =$9 \times 2 + 4 \times 2 + 5 \times 2 + 2 \times 2 = 40$；
② WPL =$4 \times 1 + 2 \times 2 + 5 \times 3 + 9 \times 3 = 50$；
③ WPL =$9 \times 1 + 5 \times 2 + 4 \times 3 + 2 \times 3 = 37$。

其中，③树的 WPL 最小，稍后便知，此树就是哈夫曼树。

因此，在$n$个带权叶子结点所构成的二叉树中，满二叉树或完全二叉树不一定是最优二叉树。权值越大的结点离树根越近的二叉树才是最优二叉树。

\section*{6.3 .2 构造哈夫曼树}

构造最优二叉树的算法具体叙述如下。

(1) 根据与$n$个权值$\{w_1, w_2, \cdots, w_n\}$对应的$n$个结点构成具有$n$棵二叉树的森林$F=\{T_1, T_2, \cdots, T_n\}$其中，每棵二叉树$T_i (1 \leq i \leq n)$都只有一个权值为$w_i$的根结点，其左、右子树均为空。

(2) 在森林$F$中选出两棵根结点的权值最小的树作为一棵新树的左、右子树，且置新树的根结点的权值为其左、右子树上根结点的权值之和。

(3) 从$F$中删除构成新树的那两棵树，同时把新树加入$F$中。

(4) 重复 (2) 和 (3) 步，直到$F$中只含有一棵树为止，此树便是哈夫曼树。

若仍采用图 6-8 中的 4 个带权叶子结点来构造一棵哈夫曼树，按照上述算法，则构造过程如图 6-9 所示，其中图 6-9 (d) 就是最后生成的哈夫曼树，它的带权路径长度为 37，由此可知，图 6-8 (c) 是一棵哈夫曼树。
