{
  "entities": [
    {
      "type": "数据结构",
      "ID": "06DS001",
      "name": "二叉搜索树",
      "attributes": {
        "难度": "中等",
        "内容": "又称二叉排序树，它或是一棵空树，或者一棵具有如下特性非空二叉树：（1）若它左子树非空，则左子树上所有结点关键字均小于根结点关键字。（2）若它右子树非空，则右子树上所有结点关键字均大于根结点关键字。（3）左、右子树本身又各一棵二叉搜索树。",
        "存储开销": "未知",
        "核心特性": "有序性，递归定义"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "06ALG001",
      "name": "查找",
      "attributes": {
        "难度": "中等",
        "内容": "二叉搜索树BST查找等于给定值item元素，若查找成功则返回true，并由item带回该元素值，否则返回false",
        "时间复杂度": "O(logn)",
        "空间复杂度": "O(logn)",
        "设计思想": "未知",
        "适用场景": "未知"
      },
      "resources": {
        "教学视频": "未知",
        "教学Materials": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "related_experiments": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "06ALG002",
      "name": "更新",
      "attributes": {
        "难度": "中等",
        "内容": "更新二叉搜索树BST查找等于给定值item元素，若查找成功则用item值更新该元素并返回true，否则返回false",
        "时间复杂度": "O(logn)",
        "空间复杂度": "O(logn)",
        "设计思想": "未知",
        "适用场景": "未知"
      },
      "resources": {
        "教学视频": "未知",
        "教学Materials": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "related_experiments": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "06ALG003",
      "name": "插入",
      "attributes": {
        "难度": "中等",
        "内容": "向二叉搜索树BST插入元素item，使得插入后仍保持一棵二叉搜索树",
        "时间复杂度": "O(logn)",
        "空间复杂度": "O(logn)",
        "设计思想": "未知",
        "适用场景": "未知"
      },
      "resources": {
        "教学视频": "未知",
        "教学Materials": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "related_experiments": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "06ALG004",
      "name": "删除",
      "attributes": {
        "难度": "中等",
        "内容": "二叉搜索树中删除等于给定值item结点，若删除成功则返回true，否则返回false",
        "时间复杂度": "O(logn)",
        "空间复杂度": "O(logn)",
        "设计思想": "未知",
        "适用场景": "未知"
      },
      "resources": {
        "教学视频": "未知",
        "教学Materials": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "related_experiments": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "06DS002",
      "name": "堆",
      "attributes": {
        "难度": "中等",
        "内容": "分为小根堆大根堆两种",
        "存储开销": "未知",
        "核心特性": "未知"
      },
      "resources": {
        "教学视频": "未知",
        "教学Materials": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "related_experiments": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "06DS003",
      "name": "小根堆",
      "attributes": {
        "难度": "中等",
        "内容": "（1）若树根结点存在左孩子，则根结点值(或某个域值)小于等于左孩子结点值(或某个域值)。（2）若树根结点存在右孩子，则根结点值(或某个域值)小于等于右孩子结点值(或某个域值)。（3）以左、右孩子为根子树又各堆。",
        "存储开销": "未知",
        "核心特性": "根最小"
      },
      "resources": {
        "教学视频": "未知",
        "教学Materials": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "related_experiments": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "06DS004",
      "name": "大根堆",
      "attributes": {
        "难度": "中等",
        "内容": "（1）若树根结点存在左孩子，则根结点值(或某个域值)大于等于左孩子结点值(或某个域值)。（2）若树根结点存在右孩子，则根结点值(或某个域值)大于等于右孩子结点值(或某个域值)。（3）以左、右孩子为根子树又各堆。",
        "存储开销": "未知",
        "核心特性": "根最大"
      },
      "resources": {
        "教学视频": "未知",
        "教学Materials": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "related_experiments": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "06ALG005",
      "name": "向堆插入元素",
      "attributes": {
        "难度": "中等",
        "内容": "向堆插入元素时,首先将该元素写入到堆尾,即堆最后元素后面,亦即下标len位置上,然后经调整新堆。",
        "时间复杂度": "O(logn)",
        "空间复杂度": "未知",
        "设计思想": "未知",
        "适用场景": "未知"
      },
      "resources": {
        "教学视频": "未知",
        "教学Materials": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "related_experiments": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "06ALG006",
      "name": "从堆删除元素",
      "attributes": {
        "难度": "中等",
        "内容": "从堆删除元素就是删除堆顶元素并使之返回。堆顶元素删除后，留下堆顶位置应由堆尾元素来填补",
        "时间复杂度": "O(logn)",
        "空间复杂度": "未知",
        "设计思想": "未知",
        "适用场景": "未知"
      },
      "resources": {
        "教学视频": "未知",
        "教学Materials": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "related_experiments": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "06ALG007",
      "name": "求路径长度",
      "attributes": {
        "难度": "中等",
        "内容": "已知树中结点序列k_1,k_2,cdots,k_j，使得k_ik_i+1双亲(1leqi<j)，则称此结点序列是从k_1到k_j路径",
        "时间复杂度": "未知",
        "空间复杂度": "未知",
        "设计思想": "未知",
        "适用场景": "未知"
      },
      "resources": {
        "教学视频": "未知",
        "教学Materials": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "related_experiments": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "06CON001",
      "name": "路径长度",
      "attributes": {
        "难度": "中等",
        "内容": "k_1到k_j所经过分支数称为这两点之间路径长度",
        "存储开销": "未知",
        "核心特性": "经过的分支数"
      },
      "resources": {
        "教学视频": "未知",
        "教学Materials": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "related_experiments": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "06CON002",
      "name": "带权路径长度",
      "attributes": {
        "难度": "中等",
        "内容": "结点带权路径长度规定树根结点到该结点之间路径长度与该结点上权乘积",
        "存储开销": "未知",
        "核心特性": "路径长度*权值"
      },
      "resources": {
        "教学视频": "未知",
        "教学Materials": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "related_experiments": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "06CON003",
      "name": "树带权路径长度",
      "attributes": {
        "难度": "中等",
        "内容": "树带权路径长度定义为树中所有叶子结点带权路径长度之",
        "存储开销": "未知",
        "核心特性": "所有叶子节点带权路径长度之和"
      },
      "resources": {
        "教学视频": "未知",
        "教学Materials": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "related_experiments": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "06DS005",
      "name": "哈夫曼树",
      "attributes": {
        "难度": "中等",
        "内容": "又称做最优二叉树。它n个带权叶子结点构成所有二叉树，带权路径长度WPL最小二叉树。",
        "存储开销": "未知",
        "核心特性": "WPL最小"
      },
      "resources": {
        "教学视频": "未知",
        "教学Materials": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "related_experiments": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "06ALG009",
      "name": "创建哈夫曼树",
      "attributes": {
        "难度": "中等",
        "内容": "根据与n个权值w_1,w_2,cdots,w_n对应n个结点构成具有n棵二叉树森林F=T_1,T_2,cdots,T_n，其中，每棵二叉树T_i(1leqileqn)都只有权值w_i根结点，其左、右子树均空。",
        "时间复杂度": "未知",
        "空间复杂度": "未知",
        "设计思想": "未知",
        "适用场景": "未知"
      },
      "resources": {
        "教学视频": "未知",
        "教学Materials": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "related_experiments": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "06ALG010",
      "name": "求哈夫曼树带权路径长度",
      "attributes": {
        "难度": "中等",
        "内容": "用来求哈夫曼树带权路径长度",
        "时间复杂度": "未知",
        "空间复杂度": "未知",
        "设计思想": "未知",
        "适用场景": "未知"
      },
      "resources": {
        "教学视频": "未知",
        "教学Materials": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "related_experiments": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "06ALG011",
      "name": "求哈夫曼编码",
      "attributes": {
        "难度": "中等",
        "内容": "根据FBT指针所指向哈夫曼树输出每个叶子编码",
        "时间复杂度": "未知",
        "空间复杂度": "未知",
        "设计思想": "未知",
        "适用场景": "未知"
      },
      "resources": {
        "教学视频": "未知",
        "教学Materials": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "related_experiments": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "06DS006",
      "name": "线索二叉树",
      "attributes": {
        "难度": "中等",
        "内容": "对一棵二叉树所有结点空指针域按照某种遍历次序加线索过程叫做线索化",
        "存储开销": "未知",
        "核心特性": "添加线索"
      },
      "resources": {
        "教学视频": "未知",
        "教学Materials": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "related_experiments": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "06CON004",
      "name": "中序前驱",
      "attributes": {
        "难度": "中等",
        "内容": "遍历序列结点前驱称作中序前驱",
        "存储开销": "未知",
        "核心特性": "未知"
      },
      "resources": {
        "教学视频": "未知",
        "教学Materials": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "related_experiments": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "06CON005",
      "name": "中序后继",
      "attributes": {
        "难度": "中等",
        "内容": "遍历序列结点后继称作中序后继",
        "存储开销": "未知",
        "核心特性": "未知"
      },
      "resources": {
        "教学Video": "未知",
        "教学Materials": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "related_experiments": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "06CON006",
      "name": "线索",
      "attributes": {
        "难度": "中等",
        "内容": "结点空指针域存放该结点某次遍历次序下前驱结点或后继结点指针",
        "存储开销": "未知",
        "核心特性": "空指针域的利用"
      },
      "resources": {
        "教学视频": "未知",
        "教学Materials": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "related_experiments": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "06ALG012",
      "name": "二叉树线索化",
      "attributes": {
        "难度": "中等",
        "内容": "对一棵二叉树所有结点空指针域按照某种遍历次序加线索过程叫做线索化",
        "时间复杂度": "未知",
        "空间复杂度": "未知",
        "设计思想": "未知",
        "适用场景": "未知"
      },
      "resources": {
        "教学视频": "未知",
        "教学Materials": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "related_experiments": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "06DS008",
      "name": "平衡二叉树",
      "attributes": {
        "难度": "中等",
        "内容": "若一棵二叉树每个结点左、右子树高度至多相差1，则称此树为平衡。",
        "存储开销": "未知",
        "核心特性": "高度平衡"
      },
      "resources": {
        "教学视频": "未知",
        "教学Materials": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "related_experiments": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "06CON007",
      "name": "平衡因子",
      "attributes": {
        "难度": "中等",
        "内容": "二叉树每个结点左子树高度减去右子树高度",
        "存储开销": "未知",
        "核心特性": "左-右"
      },
      "resources": {
        "教学视频": "未知",
        "教学Materials": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "related_experiments": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "06DS009",
      "name": "最小不平衡子树",
      "attributes": {
        "难度": "中等",
        "内容": "离插入结点最近、且平衡因子绝对值大于1结点做根子树",
        "存储开销": "未知",
        "核心特性": "离插入结点最近"
      },
      "resources": {
        "教学视频": "未知",
        "教学Materials": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "related_experiments": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "06ALG013",
      "name": "LL型调整操作",
      "attributes": {
        "难度": "中等",
        "内容": "A结点左孩子（用B表示）左子树上插入结点",
        "时间复杂度": "未知",
        "空间复杂度": "未知",
        "设计思想": "未知",
        "适用场景": "未知"
      },
      "resources": {
        "教学视频": "未知",
        "教学Materials": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "related_experiments": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "06ALG014",
      "name": "RR型调整操作",
      "attributes": {
        "难度": "中等",
        "内容": "A结点右孩子（用B表示）右子树上插入结点",
        "时间复杂度": "未知",
        "空间复杂度": "未知",
        "设计思想": "未知",
        "适用场景": "未知"
      },
      "resources": {
        "教学视频": "未知",
        "教学Materials": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "related_experiments": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "06ALG015",
      "name": "LR型调整操作",
      "attributes": {
        "难度": "中等",
        "内容": "A结点左孩子（用B表示）右子树上插入结点",
        "时间复杂度": "未知",
        "空间Complexity": "未知",
        "设计思想": "未知",
        "适用场景": "未知"
      },
      "resources": {
        "教学视频": "未知",
        "教学Materials": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "related_experiments": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "06ALG016",
      "name": "RL型调整操作",
      "attributes": {
        "难度": "中等",
        "内容": "A结点右孩子左子树上插入结点",
        "时间复杂度": "未知",
        "空间复杂度": "未知",
        "设计思想": "未知",
        "适用场景": "未知"
      },
      "resources": {
        "教学视频": "未知",
        "教学Materials": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "related_experiments": "未知"
      }
    }
  ],
  "relations": [
    {
      "type": "变体",
      "关系ID": "06REL001",
      "source": "05DS003",
      "target": "06DS001",
      "attributes": {
        "基础 ID": "05DS003",
        "变体 ID": "06DS001",
        "变体类型": "排序"
      }
    },
    {
      "type": "变体",
      "关系ID": "06REL002",
      "source": "05DS003",
      "target": "06DS006",
      "attributes": {
        "基础 ID": "05DS003",
        "变体 ID": "06DS006",
        "变体类型": "线索化"
      }
    },
    {
      "type": "变体",
      "关系ID": "06REL003",
      "source": "05DS003",
      "target": "06DS008",
      "attributes": {
        "基础 ID": "05DS003",
        "变体 ID": "06DS008",
        "变体类型": "平衡"
      }
    }
  ]
}