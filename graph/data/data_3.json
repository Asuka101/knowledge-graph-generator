{
  "entities": [
    {
      "type": "数据结构",
      "ID": "03DS001",
      "name": "集合",
      "attributes": {
        "难度": "入门",
        "内容": "由具有相同属性数据元素组合而成，数据之间没有任何前驱后继关系。集合长度可变，元素无序且唯一。",
        "存储开销": "取决于存储方式（顺序或链接）和元素数量",
        "核心特性": "无序性, 元素唯一性"
      }
    },
    {
      "type": "概念",
      "ID": "03CON001",
      "name": "集合长度",
      "attributes": {
        "难度": "入门",
        "内容": "集合中数据元素的个数，通常用n表示，n>=0。"
      }
    },
    {
      "type": "概念",
      "ID": "03CON002",
      "name": "空集",
      "attributes": {
        "难度": "入门",
        "内容": "不包含任何元素的集合，即集合长度为0。"
      }
    },
    {
      "type": "概念",
      "ID": "03CON003",
      "name": "ElemType",
      "attributes": {
        "难度": "入门",
        "内容": "表示集合中元素类型的标识符，可以是任何数据类型。"
      }
    },
    {
      "type": "算法",
      "ID": "03ALG001",
      "name": "InitSet",
      "attributes": {
        "难度": "入门",
        "内容": "初始化集合为空集。",
        "时间复杂度": "O(1) / O(k) (取决于实现，如动态分配初始空间)",
        "空间复杂度": "O(1) / O(k) (取决于实现)",
        "设计思想": "初始化",
        "适用场景": "创建新的集合实例"
      }
    },
    {
      "type": "算法",
      "ID": "03ALG002",
      "name": "ClearSet",
      "attributes": {
        "难度": "入门",
        "内容": "清除集合所有元素，可能涉及释放存储空间。",
        "时间复杂度": "O(1) / O(n) (取决于实现，如释放链表节点)",
        "空间复杂度": "O(1)",
        "设计思想": "资源释放/重置",
        "适用场景": "清空现有集合"
      }
    },
    {
      "type": "算法",
      "ID": "03ALG003",
      "name": "LengthSet",
      "attributes": {
        "难度": "入门",
        "内容": "求出集合的长度（元素个数）。",
        "时间复杂度": "O(1) (顺序) / O(n) (基本链式)",
        "空间复杂度": "O(1)",
        "设计思想": "计数",
        "适用场景": "获取集合大小"
      }
    },
    {
      "type": "算法",
      "ID": "03ALG004",
      "name": "EmptySet",
      "attributes": {
        "难度": "入门",
        "内容": "判断集合是否为空。",
        "时间复杂度": "O(1)",
        "空间复杂度": "O(1)",
        "设计思想": "状态检查",
        "适用场景": "检查集合是否包含元素"
      }
    },
    {
      "type": "算法",
      "ID": "03ALG005",
      "name": "InSet",
      "attributes": {
        "难度": "入门",
        "内容": "判断指定元素是否属于集合。",
        "时间复杂度": "O(n)",
        "空间复杂度": "O(1)",
        "设计思想": "顺序查找",
        "适用场景": "检查元素成员资格"
      }
    },
    {
      "type": "算法",
      "ID": "03ALG006",
      "name": "OutputSet",
      "attributes": {
        "难度": "入门",
        "内容": "输出集合所有元素。可能包含有序输出的变体。",
        "时间复杂度": "O(n) / O(n^2) (如有序输出使用简单排序)",
        "空间复杂度": "O(1) / O(n) (如有序输出使用临时数组)",
        "设计思想": "遍历",
        "适用场景": "展示集合内容"
      }
    },
    {
      "type": "算法",
      "ID": "03ALG007",
      "name": "FindSet",
      "attributes": {
        "难度": "入门",
        "内容": "在集合中查找指定元素（通常基于关键字），若找到则返回完整元素信息。",
        "时间复杂度": "O(n)",
        "空间复杂度": "O(1)",
        "设计思想": "顺序查找",
        "适用场景": "根据关键字检索集合元素"
      }
    },
    {
      "type": "算法",
      "ID": "03ALG008",
      "name": "ModifySet",
      "attributes": {
        "难度": "入门",
        "内容": "修改集合中指定元素（基于关键字查找定位）。",
        "时间复杂度": "O(n)",
        "空间复杂度": "O(1)",
        "设计思想": "顺序查找 + 更新",
        "适用场景": "更新集合中现有元素"
      }
    },
    {
      "type": "算法",
      "ID": "03ALG009",
      "name": "InsertSet",
      "attributes": {
        "难度": "入门",
        "内容": "向集合插入新元素，需检查元素唯一性，可能涉及空间扩展。",
        "时间复杂度": "O(n) (顺序查找检查) / O(1) (链式插入头部)",
        "空间复杂度": "O(1) (摊销)",
        "设计思想": "查找 + 添加",
        "适用场景": "向集合添加新元素"
      }
    },
    {
      "type": "算法",
      "ID": "03ALG010",
      "name": "DeleteSet",
      "attributes": {
        "难度": "入门",
        "内容": "从集合中删除指定元素，可能涉及空间收缩。",
        "时间复杂度": "O(n)",
        "空间复杂度": "O(1)",
        "设计思想": "查找 + 移除",
        "适用场景": "从集合移除元素"
      }
    },
    {
      "type": "算法",
      "ID": "03ALG011",
      "name": "UnionSet",
      "attributes": {
        "难度": "中等",
        "内容": "求两个集合的并集。",
        "时间复杂度": "O(n*m) (基于InsertSet的实现) / O(n+m) (若使用排序或哈希)",
        "空间复杂度": "O(n+m)",
        "设计思想": "合并 + 去重",
        "适用场景": "合并两个集合的元素"
      }
    },
    {
      "type": "算法",
      "ID": "03ALG012",
      "name": "InterseSet",
      "attributes": {
        "难度": "中等",
        "内容": "求两个集合的交集。",
        "时间复杂度": "O(n*m) (基于FindSet的实现) / O(n+m) (若使用排序或哈希)",
        "空间复杂度": "O(min(n,m))",
        "设计思想": "查找共同元素",
        "适用场景": "找出两个集合共有的元素"
      }
    },
    {
      "type": "算法",
      "ID": "03ALG013",
      "name": "DifferenceSet",
      "attributes": {
        "难度": "中等",
        "内容": "求两个集合的差集 (S1 - S2)。",
        "时间复杂度": "O(n*m) (基于FindSet的实现) / O(n+m) (若使用排序或哈希)",
        "空间复杂度": "O(n)",
        "设计思想": "查找S1中不在S2的元素",
        "适用场景": "找出只在第一个集合中存在的元素"
      }
    },
    {
      "type": "数据结构",
      "ID": "03DS002",
      "name": "集合顺序存储",
      "attributes": {
        "难度": "入门",
        "内容": "使用数组存储集合元素，通常配合一个变量记录当前长度。插入删除（不考虑顺序）可通过与末尾元素交换实现O(1)移动，但查找仍为O(n)。可能使用动态数组。",
        "存储开销": "O(MaxSize) 或 O(n) (动态数组)",
        "核心特性": "基于数组, 随机访问(非集合特性), 插入删除移动少(特定策略下)"
      }
    },
    {
      "type": "数据结构",
      "ID": "03DS003",
      "name": "数组",
      "attributes": {
        "难度": "入门",
        "内容": "一种基本的线性数据结构，通过索引访问元素。在此用于实现集合的顺序存储。",
        "存储开销": "O(N)，N为数组大小",
        "核心特性": "可索引, 固定大小 (静态) 或 可变大小 (动态)"
      }
    },
    {
      "type": "概念",
      "ID": "03CON004",
      "name": "动态分配",
      "attributes": {
        "难度": "入门",
        "内容": "程序运行时根据需要分配和释放内存空间的技术，如使用new/delete或malloc/realloc。"
      }
    },
    {
      "type": "算法",
      "ID": "03ALG014",
      "name": "简单选择排序",
      "attributes": {
        "难度": "入门",
        "内容": "一种简单的排序算法。每次从未排序部分选取最小（或最大）元素放到已排序部分的末尾。",
        "时间复杂度": "O(n^2)",
        "空间复杂度": "O(1)",
        "设计思想": "选择",
        "适用场景": "教学，小规模数据"
      }
    },
    {
      "type": "算法",
      "ID": "03ALG015",
      "name": "简单插入排序",
      "attributes": {
        "难度": "入门",
        "内容": "一种简单的排序算法。将未排序元素逐个插入到已排序部分的正确位置。",
        "时间复杂度": "O(n^2)",
        "空间复杂度": "O(1)",
        "设计思想": "插入",
        "适用场景": "教学，基本有序的小规模数据"
      }
    },
    {
      "type": "数据结构",
      "ID": "03DS004",
      "name": "集合链接存储",
      "attributes": {
        "难度": "入门",
        "内容": "使用链表（通常是单链表）存储集合元素。每个元素对应一个结点。",
        "存储开销": "O(n)，n为元素个数",
        "核心特性": "动态大小, 插入删除（头部）快, 查找慢"
      }
    },
    {
      "type": "数据结构",
      "ID": "03DS005",
      "name": "单链表",
      "attributes": {
        "难度": "入门",
        "内容": "一种基本的链式数据结构，每个结点包含数据域和指向下一个结点的指针域。",
        "存储开销": "O(n)",
        "核心特性": "动态性, 顺序访问"
      }
    },
    {
      "type": "概念",
      "ID": "03CON005",
      "name": "结点",
      "attributes": {
        "难度": "入门",
        "内容": "构成链式数据结构的基本单元，通常包含数据域和指针域。"
      }
    },
    {
      "type": "概念",
      "ID": "03CON006",
      "name": "值域",
      "attributes": {
        "难度": "入门",
        "内容": "结点中用于存储数据元素的部分。"
      }
    },
    {
      "type": "概念",
      "ID": "03CON007",
      "name": "指针域",
      "attributes": {
        "难度": "入门",
        "内容": "结点中用于存储指向其他结点地址的部分。"
      }
    },
    {
      "type": "概念",
      "ID": "03CON008",
      "name": "表头指针",
      "attributes": {
        "难度": "入门",
        "内容": "指向链表第一个结点的指针。"
      }
    },
    {
      "type": "数据结构",
      "ID": "03DS006",
      "name": "矩阵",
      "attributes": {
        "难度": "入门",
        "内容": "m行n列的数表，包含m*n个元素，每个元素有唯一的行号和列号。",
        "存储开销": "O(m*n) (使用二维数组)",
        "核心特性": "二维结构, 行列索引"
      }
    },
    {
      "type": "数据结构",
      "ID": "03DS007",
      "name": "稀疏矩阵",
      "attributes": {
        "难度": "中等",
        "内容": "非零元素个数远少于零元素个数的矩阵。通常只存储非零元素以节省空间。",
        "存储开销": "O(t)，t为非零元素个数 (使用三元组等结构)",
        "核心特性": "空间优化, 非零元素为主"
      }
    },
    {
      "type": "概念",
      "ID": "03CON009",
      "name": "方阵",
      "attributes": {
        "难度": "入门",
        "内容": "行数和列数相等的矩阵。"
      }
    },
    {
      "type": "概念",
      "ID": "03CON010",
      "name": "非零元素",
      "attributes": {
        "难度": "入门",
        "内容": "矩阵中值不为零的元素。"
      }
    },
    {
      "type": "概念",
      "ID": "03CON011",
      "name": "零元素",
      "attributes": {
        "难度": "入门",
        "内容": "矩阵中值为零的元素。"
      }
    },
    {
      "type": "数据结构",
      "ID": "03DS008",
      "name": "二维数组",
      "attributes": {
        "难度": "入门",
        "内容": "用两个索引访问元素的数组，常用于存储矩阵。",
        "存储开销": "O(m*n)",
        "核心特性": "二维索引, 随机访问"
      }
    },
    {
      "type": "概念",
      "ID": "03CON012",
      "name": "三元组",
      "attributes": {
        "难度": "入门",
        "内容": "由三个部分组成的数据单元，在稀疏矩阵中通常指 (行号, 列号, 元素值)。"
      }
    },
    {
      "type": "数据结构",
      "ID": "03DS009",
      "name": "三元组线性表",
      "attributes": {
        "难度": "中等",
        "内容": "由表示稀疏矩阵非零元素的三元组构成的线性表，通常按行主序或列主序排列。",
        "存储开销": "O(t)",
        "核心特性": "线性结构, 存储非零元素信息"
      }
    },
    {
      "type": "概念",
      "ID": "03CON013",
      "name": "行号",
      "attributes": {
        "难度": "入门",
        "内容": "矩阵中元素所在的行索引。"
      }
    },
    {
      "type": "概念",
      "ID": "03CON014",
      "name": "列号",
      "attributes": {
        "难度": "入门",
        "内容": "矩阵中元素所在的列索引。"
      }
    },
    {
      "type": "算法",
      "ID": "03ALG016",
      "name": "InitMatrix",
      "attributes": {
        "难度": "入门",
        "内容": "初始化稀疏矩阵为空矩阵（设置行列数、非零元素数为0，初始化存储结构）。",
        "时间复杂度": "O(1) 或 O(MaxRows+MaxCols) (取决于存储结构)",
        "空间复杂度": "O(1)",
        "设计思想": "初始化",
        "适用场景": "创建稀疏矩阵实例"
      }
    },
    {
      "type": "算法",
      "ID": "03ALG017",
      "name": "Transpose",
      "attributes": {
        "难度": "中等",
        "内容": "求稀疏矩阵的转置矩阵。",
        "时间复杂度": "见具体实现 (普通转置/快速转置)",
        "空间复杂度": "O(t) (结果矩阵)",
        "设计思想": "行列互换",
        "适用场景": "矩阵转置操作"
      }
    },
    {
      "type": "算法",
      "ID": "03ALG018",
      "name": "Add",
      "attributes": {
        "难度": "中等",
        "内容": "求两个稀疏矩阵之和。",
        "时间复杂度": "O(t1+t2) (对于链接存储的高效实现)",
        "空间复杂度": "O(t1+t2) (结果矩阵)",
        "设计思想": "对应位置元素相加/合并",
        "适用场景": "矩阵加法操作"
      }
    },
    {
      "type": "算法",
      "ID": "03ALG019",
      "name": "Multiply",
      "attributes": {
        "难度": "高级",
        "内容": "求两个稀疏矩阵的乘积。",
        "时间复杂度": "复杂，取决于实现和矩阵结构，通常优于O(m*n*p)",
        "空间复杂度": "O(t_result)",
        "设计思想": "行向量乘以列向量",
        "适用场景": "矩阵乘法操作"
      }
    },
    {
      "type": "算法",
      "ID": "03ALG020",
      "name": "InputMatrix",
      "attributes": {
        "难度": "入门",
        "内容": "按照特定格式（如三元组）输入稀疏矩阵数据。",
        "时间复杂度": "O(t) 或 O(t*log(t)) (取决于是否需要排序和链接操作)",
        "空间复杂度": "O(t)",
        "设计思想": "数据读取与构建",
        "适用场景": "从外部源创建稀疏矩阵"
      }
    },
    {
      "type": "算法",
      "ID": "03ALG021",
      "name": "OutputMatrix",
      "attributes": {
        "难度": "入门",
        "内容": "按照特定格式（如三元组列表）输出稀疏矩阵。",
        "时间复杂度": "O(t)",
        "空间复杂度": "O(1)",
        "设计思想": "遍历与格式化输出",
        "适用场景": "展示稀疏矩阵内容"
      }
    },
    {
      "type": "数据结构",
      "ID": "03DS010",
      "name": "稀疏矩阵顺序存储",
      "attributes": {
        "难度": "中等",
        "内容": "使用一维数组存储稀疏矩阵的三元组线性表，并存储矩阵的行数、列数和非零元素个数。",
        "存储开销": "O(t + MaxTerms)，t为非零元素数，MaxTerms为预分配大小",
        "核心特性": "基于数组, 存储三元组"
      }
    },
    {
      "type": "数据结构",
      "ID": "03DS011",
      "name": "带行指针向量链接存储",
      "attributes": {
        "难度": "中等",
        "内容": "使用行指针向量（数组）存储每行非零元素链表的头指针。同一行内的结点按列号链接。",
        "存储开销": "O(m + t)，m为行数，t为非零元素数",
        "核心特性": "按行快速访问, 链接结构"
      }
    },
    {
      "type": "概念",
      "ID": "03CON015",
      "name": "行指针向量",
      "attributes": {
        "难度": "入门",
        "内容": "一个数组（向量），其每个元素存储对应行（或列）的链表头指针。"
      }
    },
    {
      "type": "数据结构",
      "ID": "03DS012",
      "name": "十字链接存储",
      "attributes": {
        "难度": "高级",
        "内容": "每个非零元素结点同时处于所在行的链表和所在列的链表中，使用行、列指针向量。",
        "存储开销": "O(m + n + t)，m行数, n列数, t非零元素数",
        "核心特性": "按行、按列快速访问, 复杂链接结构"
      }
    },
    {
      "type": "概念",
      "ID": "03CON016",
      "name": "列指针向量",
      "attributes": {
        "难度": "入门",
        "内容": "一个数组（向量），其每个元素存储对应列的链表头指针。"
      }
    },
    {
      "type": "算法",
      "ID": "03ALG022",
      "name": "普通转置方法",
      "attributes": {
        "难度": "中等",
        "内容": "通过扫描原始矩阵n次（n为列数），每次找出对应列的元素并转置。",
        "时间复杂度": "O(n*t)",
        "空间复杂度": "O(t)",
        "设计思想": "按列扫描收集",
        "适用场景": "稀疏矩阵转置的基础实现"
      }
    },
    {
      "type": "算法",
      "ID": "03ALG023",
      "name": "快速转置方法",
      "attributes": {
        "难度": "中等",
        "内容": "通过两次扫描：一次统计每列元素个数确定转置后位置，一次直接放置。",
        "时间复杂度": "O(n+t)",
        "空间复杂度": "O(n+t) (包括辅助数组和结果)",
        "设计思想": "计数+定位",
        "适用场景": "高效的稀疏矩阵转置"
      }
    },
    {
      "type": "算法",
      "ID": "03ALG024",
      "name": "LMATRIXAdd",
      "attributes": {
        "难度": "中等",
        "内容": "针对带行指针向量存储的稀疏矩阵加法实现。",
        "时间复杂度": "O(t1+t2)",
        "空间复杂度": "O(t1+t2)",
        "设计思想": "按行合并链表",
        "适用场景": "带行指针向量稀疏矩阵的加法"
      }
    },
    {
      "type": "数据结构",
      "ID": "03DS013",
      "name": "广义表",
      "attributes": {
        "难度": "中等",
        "内容": "n(n>=0)个元素的有限序列，元素可以是原子（单元素）或子表。是一种递归数据结构。",
        "存储开销": "O(N)，N为总元素（原子+子表头）个数",
        "核心特性": "递归定义, 元素类型异构 (原子/子表), 可变嵌套深度"
      }
    },
    {
      "type": "概念",
      "ID": "03CON017",
      "name": "单元素",
      "attributes": {
        "难度": "入门",
        "内容": "广义表中的原子元素，非表类型。"
      }
    },
    {
      "type": "概念",
      "ID": "03CON018",
      "name": "子表",
      "attributes": {
        "难度": "入门",
        "内容": "广义表中的表元素，其本身也是一个广义表。"
      }
    },
    {
      "type": "概念",
      "ID": "03CON019",
      "name": "递归数据结构",
      "attributes": {
        "难度": "中等",
        "内容": "一种数据结构，其定义中包含对自身的引用，如树、广义表。"
      }
    },
    {
      "type": "概念",
      "ID": "03CON020",
      "name": "表深度",
      "attributes": {
        "难度": "入门",
        "内容": "广义表中括号嵌套的最大层数。"
      }
    },
    {
      "type": "数据结构",
      "ID": "03DS014",
      "name": "广义表链接存储",
      "attributes": {
        "难度": "中等",
        "内容": "使用动态链接结构存储广义表。结点包含标志域区分原子/子表，以及值域/子表指针域和后继指针域。",
        "存储开销": "O(N)，N为总结点数",
        "核心特性": "递归链接, 区分原子/子表结点"
      }
    },
    {
      "type": "概念",
      "ID": "03CON021",
      "name": "标志域",
      "attributes": {
        "难度": "入门",
        "内容": "结点中用于区分不同类型（如原子/子表）的字段。"
      }
    },
    {
      "type": "概念",
      "ID": "03CON022",
      "name": "表头附加结点",
      "attributes": {
        "难度": "入门",
        "内容": "在广义表（或链表）的第一个实际元素结点前增加的一个特殊表结点，可以简化某些操作。"
      }
    },
    {
      "type": "算法",
      "ID": "03ALG025",
      "name": "Length (广义表)",
      "attributes": {
        "难度": "入门",
        "内容": "求广义表顶层的元素个数（长度）。",
        "时间复杂度": "O(n)，n为顶层元素个数",
        "空间复杂度": "O(n) (递归实现) / O(1) (迭代实现)",
        "设计思想": "遍历顶层链表 (递归/迭代)",
        "适用场景": "获取广义表顶层长度"
      }
    },
    {
      "type": "算法",
      "ID": "03ALG026",
      "name": "Depth (广义表)",
      "attributes": {
        "难度": "中等",
        "内容": "求广义表的深度（最大嵌套层数）。",
        "时间复杂度": "O(N)，N为总结点数",
        "空间复杂度": "O(m)，m为广义表深度 (递归实现)",
        "设计思想": "递归遍历",
        "适用场景": "计算广义表嵌套深度"
      }
    },
    {
      "type": "算法",
      "ID": "03ALG027",
      "name": "Create (广义表)",
      "attributes": {
        "难度": "中等",
        "内容": "根据特定格式的输入字符串，建立广义表的链接存储结构。",
        "时间复杂度": "O(L)，L为输入字符串长度或总结点数",
        "空间复杂度": "O(N)，N为总结点数 (递归深度可能达到N)",
        "设计思想": "递归构建",
        "适用场景": "从文本表示创建广义表"
      }
    },
    {
      "type": "算法",
      "ID": "03ALG028",
      "name": "Print (广义表)",
      "attributes": {
        "难度": "中等",
        "内容": "将广义表的链接存储结构打印输出为特定格式的字符串。",
        "时间复杂度": "O(N)，N为总结点数",
        "空间复杂度": "O(m)，m为广义表深度 (递归实现)",
        "设计思想": "递归遍历与格式化",
        "适用场景": "显示广义表内容"
      }
    },
    {
       "type": "概念",
      "ID": "03CON023",
      "name": "递归算法",
      "attributes": {
          "难度": "中等",
          "内容": "一种算法设计技术，函数直接或间接调用自身来解决问题。常用于处理递归数据结构。"
      }
    }
  ],
  "relations": [
    {
      "type": "操作绑定",
      "关系ID": "03REL001",
      "source": "03ALG001",
      "target": "03DS001",
      "attributes": { "必需性": "是" }
    },
    {
      "type": "操作绑定",
      "关系ID": "03REL002",
      "source": "03ALG002",
      "target": "03DS001",
      "attributes": { "必需性": "是" }
    },
    {
      "type": "操作绑定",
      "关系ID": "03REL003",
      "source": "03ALG003",
      "target": "03DS001",
      "attributes": { "必需性": "是" }
    },
    {
      "type": "操作绑定",
      "关系ID": "03REL004",
      "source": "03ALG004",
      "target": "03DS001",
      "attributes": { "必需性": "是" }
    },
    {
      "type": "操作绑定",
      "关系ID": "03REL005",
      "source": "03ALG005",
      "target": "03DS001",
      "attributes": { "必需性": "是" }
    },
    {
      "type": "操作绑定",
      "关系ID": "03REL006",
      "source": "03ALG006",
      "target": "03DS001",
      "attributes": { "必需性": "是" }
    },
    {
      "type": "操作绑定",
      "关系ID": "03REL007",
      "source": "03ALG007",
      "target": "03DS001",
      "attributes": { "必需性": "是" }
    },
    {
      "type": "操作绑定",
      "关系ID": "03REL008",
      "source": "03ALG008",
      "target": "03DS001",
      "attributes": { "必需性": "是" }
    },
    {
      "type": "操作绑定",
      "关系ID": "03REL009",
      "source": "03ALG009",
      "target": "03DS001",
      "attributes": { "必需性": "是" }
    },
    {
      "type": "操作绑定",
      "关系ID": "03REL010",
      "source": "03ALG010",
      "target": "03DS001",
      "attributes": { "必需性": "是" }
    },
    {
      "type": "操作绑定",
      "关系ID": "03REL011",
      "source": "03ALG011",
      "target": "03DS001",
      "attributes": { "必需性": "是" }
    },
    {
      "type": "操作绑定",
      "关系ID": "03REL012",
      "source": "03ALG012",
      "target": "03DS001",
      "attributes": { "必需性": "是" }
    },
    {
      "type": "操作绑定",
      "关系ID": "03REL013",
      "source": "03ALG013",
      "target": "03DS001",
      "attributes": { "必需性": "是" }
    },
    {
      "type": "使用",
      "关系ID": "03REL014",
      "source": "03DS002",
      "target": "03DS003",
      "attributes": { "使用角色": "核心存储" }
    },
    {
      "type": "理论依赖",
      "关系ID": "03REL015",
      "source": "03DS002",
      "target": "03CON004",
      "attributes": { "依赖强度": "中" }
    },
    {
       "type": "使用",
       "关系ID": "03REL016",
       "source": "03ALG006",
       "target": "03ALG014",
       "attributes": {"使用角色": "排序实现(示例)"}
     },
     {
       "type": "使用",
       "关系ID": "03REL017",
       "source": "03ALG006",
       "target": "03ALG015",
       "attributes": {"使用角色": "排序实现(提及)"}
     },
    {
      "type": "使用",
      "关系ID": "03REL018",
      "source": "03DS004",
      "target": "03DS005",
      "attributes": { "使用角色": "核心存储" }
    },
    {
      "type": "理论依赖",
      "关系ID": "03REL019",
      "source": "03DS005",
      "target": "03CON005",
      "attributes": { "依赖强度": "强" }
    },
    {
      "type": "理论依赖",
      "关系ID": "03REL020",
      "source": "03DS005",
      "target": "03CON006",
      "attributes": { "依赖强度": "强" }
    },
    {
      "type": "理论依赖",
      "关系ID": "03REL021",
      "source": "03DS005",
      "target": "03CON007",
      "attributes": { "依赖强度": "强" }
    },
    {
      "type": "理论依赖",
      "关系ID": "03REL022",
      "source": "03DS005",
      "target": "03CON008",
      "attributes": { "依赖强度": "强" }
    },
    {
      "type": "继承",
      "关系ID": "03REL023",
      "source": "03DS007",
      "target": "03DS006",
      "attributes": { "父类 ID": "03DS006", "子类 ID": "03DS007", "约束条件": "非零元素远少于零元素" }
    },
    {
      "type": "理论依赖",
      "关系ID": "03REL024",
      "source": "03DS006",
      "target": "03CON013",
      "attributes": { "依赖强度": "强" }
    },
    {
      "type": "理论依赖",
      "关系ID": "03REL025",
      "source": "03DS006",
      "target": "03CON014",
      "attributes": { "依赖强度": "强" }
    },
    {
       "type": "理论依赖",
       "关系ID": "03REL026",
       "source": "03DS007",
       "target": "03CON010",
       "attributes": {"依赖强度": "强"}
     },
     {
       "type": "理论依赖",
       "关系ID": "03REL027",
       "source": "03DS007",
       "target": "03CON011",
       "attributes": {"依赖强度": "强"}
     },
    {
      "type": "使用",
      "关系ID": "03REL028",
      "source": "03DS009",
      "target": "03CON012",
      "attributes": { "使用角色": "核心表示" }
    },
    {
       "type": "继承",
       "关系ID": "03REL029",
       "source": "03CON009",
       "target": "03DS006",
       "attributes": { "父类 ID": "03DS006", "子类 ID": "03CON009", "约束条件": "行数=列数" }
     },
     {
       "type": "操作绑定",
       "关系ID": "03REL030",
       "source": "03ALG016",
       "target": "03DS007",
       "attributes": {"必需性": "是"}
     },
     {
       "type": "操作绑定",
       "关系ID": "03REL031",
       "source": "03ALG017",
       "target": "03DS007",
       "attributes": {"必需性": "是"}
     },
     {
       "type": "操作绑定",
       "关系ID": "03REL032",
       "source": "03ALG018",
       "target": "03DS007",
       "attributes": {"必需性": "是"}
     },
     {
       "type": "操作绑定",
       "关系ID": "03REL033",
       "source": "03ALG019",
       "target": "03DS007",
       "attributes": {"必需性": "是"}
     },
     {
       "type": "操作绑定",
       "关系ID": "03REL034",
       "source": "03ALG020",
       "target": "03DS007",
       "attributes": {"必需性": "是"}
     },
     {
       "type": "操作绑定",
       "关系ID": "03REL035",
       "source": "03ALG021",
       "target": "03DS007",
       "attributes": {"必需性": "是"}
     },
     {
       "type": "使用",
       "关系ID": "03REL036",
       "source": "03DS010",
       "target": "03DS009",
       "attributes": {"使用角色": "核心存储实现"}
     },
    {
      "type": "使用",
      "关系ID": "03REL037",
      "source": "03DS011",
      "target": "03CON015",
      "attributes": { "使用角色": "结构组件" }
    },
    {
      "type": "使用",
      "关系ID": "03REL038",
      "source": "03DS011",
      "target": "03CON005",
      "attributes": { "使用角色": "结点类型(TripleNode)" }
    },
    {
       "type": "变体",
       "关系ID": "03REL039",
       "source": "03DS010",
       "target": "03DS009",
       "attributes": { "基础 ID": "03DS009", "变体 ID": "03DS010", "变体类型": "顺序存储实现" }
     },
     {
       "type": "变体",
       "关系ID": "03REL040",
       "source": "03DS011",
       "target": "03DS009",
       "attributes": { "基础 ID": "03DS009", "变体 ID": "03DS011", "变体类型": "链接存储实现 (行指针)" }
     },
     {
       "type": "变体",
       "关系ID": "03REL041",
       "source": "03DS012",
       "target": "03DS009",
       "attributes": { "基础 ID": "03DS009", "变体 ID": "03DS012", "变体类型": "链接存储实现 (十字链表)" }
     },
    {
      "type": "使用",
      "关系ID": "03REL042",
      "source": "03DS012",
      "target": "03CON015",
      "attributes": { "使用角色": "结构组件 (行向量)" }
    },
    {
      "type": "使用",
      "关系ID": "03REL043",
      "source": "03DS012",
      "target": "03CON016",
      "attributes": { "使用角色": "结构组件 (列向量)" }
    },
    {
      "type": "使用",
      "关系ID": "03REL044",
      "source": "03DS012",
      "target": "03CON005",
      "attributes": { "使用角色": "结点类型(CrossNode)" }
    },
    {
      "type": "操作绑定",
      "关系ID": "03REL045",
      "source": "03ALG022",
      "target": "03DS010",
      "attributes": { "必需性": "是" }
    },
    {
      "type": "操作绑定",
      "关系ID": "03REL046",
      "source": "03ALG023",
      "target": "03DS010",
      "attributes": { "必需性": "是" }
    },
    {
      "type": "优化",
      "关系ID": "03REL047",
      "source": "03ALG022",
      "target": "03ALG023",
      "attributes": { "原始 ID": "03ALG022", "优化 ID": "03ALG023", "优化方向": "时间复杂度" }
    },
    {
       "type": "操作绑定",
       "关系ID": "03REL048",
       "source": "03ALG024",
       "target": "03DS011",
       "attributes": {"必需性": "是"}
     },
    {
      "type": "理论依赖",
      "关系ID": "03REL049",
      "source": "03DS013",
      "target": "03CON017",
      "attributes": { "依赖强度": "强" }
    },
    {
      "type": "理论依赖",
      "关系ID": "03REL050",
      "source": "03DS013",
      "target": "03CON018",
      "attributes": { "依赖强度": "强" }
    },
    {
      "type": "理论依赖",
      "关系ID": "03REL051",
      "source": "03DS013",
      "target": "03CON019",
      "attributes": { "依赖强度": "强" }
    },
    {
       "type": "继承",
       "关系ID": "03REL052",
       "source": "03DS014",
       "target": "03DS013",
       "attributes": {"父类 ID": "03DS013", "子类 ID": "03DS014", "约束条件": "链接存储实现"}
     },
    {
      "type": "理论依赖",
      "关系ID": "03REL053",
      "source": "03DS014",
      "target": "03CON021",
      "attributes": { "依赖强度": "强" }
    },
    {
       "type": "理论依赖",
       "关系ID": "03REL054",
       "source": "03DS014",
       "target": "03CON005",
       "attributes": {"依赖强度": "强"}
     },
     {
       "type": "理论依赖",
       "关系ID": "03REL055",
       "source": "03DS014",
       "target": "03CON022",
       "attributes": {"依赖强度": "弱 (可选实现)"}
     },
    {
      "type": "操作绑定",
      "关系ID": "03REL056",
      "source": "03ALG025",
      "target": "03DS013",
      "attributes": { "必需性": "是" }
    },
    {
      "type": "操作绑定",
      "关系ID": "03REL057",
      "source": "03ALG026",
      "target": "03DS013",
      "attributes": { "必需性": "是" }
    },
    {
      "type": "操作绑定",
      "关系ID": "03REL058",
      "source": "03ALG027",
      "target": "03DS013",
      "attributes": { "必需性": "是" }
    },
    {
      "type": "操作绑定",
      "关系ID": "03REL059",
      "source": "03ALG028",
      "target": "03DS013",
      "attributes": { "必需性": "是" }
    },
    {
       "type": "理论依赖",
       "关系ID": "03REL060",
       "source": "03ALG026",
       "target": "03CON023",
       "attributes": {"依赖强度": "强 (常用实现)"}
     },
     {
       "type": "理论依赖",
       "关系ID": "03REL061",
       "source": "03ALG027",
       "target": "03CON023",
       "attributes": {"依赖强度": "强 (常用实现)"}
     },
     {
       "type": "理论依赖",
       "关系ID": "03REL062",
       "source": "03ALG028",
       "target": "03CON023",
       "attributes": {"依赖强度": "强 (常用实现)"}
     }
  ]
}