{
  "entities": [
    {
      "type": "数据结构",
      "ID": "05DS001",
      "name": "树",
      "attributes": {
        "难度": "入门",
        "内容": "一种重要的非线性数据结构，递归定义，由根节点和m棵互不相交的子树组成。特性: 递归结构，层次结构。适用场景: 家族关系、组织结构、书籍目录、算术表达式、文件系统目录结构等。",
        "存储开销": "依赖于存储方式（顺序或链式）和节点数量",
        "核心特性": "层次性, 递归性"
      }
    },
    {
      "type": "概念",
      "ID": "05CON001",
      "name": "根",
      "attributes": {
        "难度": "入门",
        "内容": "树中唯一没有前驱的结点。"
      }
    },
    {
      "type": "概念",
      "ID": "05CON002",
      "name": "子树",
      "attributes": {
        "难度": "入门",
        "内容": "根结点外的其余结点组成的m棵(m>=0)互不相交的树，每棵子树本身也是一棵树。"
      }
    },
    {
      "type": "概念",
      "ID": "05CON003",
      "name": "结点",
      "attributes": {
        "难度": "入门",
        "内容": "树的基本组成单元，包含数据元素及指向子树的链接。"
      }
    },
    {
      "type": "概念",
      "ID": "05CON004",
      "name": "前驱",
      "attributes": {
        "难度": "入门",
        "内容": "在树结构中，指结点的父结点（双亲结点）。根结点没有前驱。"
      }
    },
    {
      "type": "概念",
      "ID": "05CON005",
      "name": "后继",
      "attributes": {
        "难度": "入门",
        "内容": "在树结构中，指结点的子结点（孩子结点）。叶子结点没有后继。"
      }
    },
    {
      "type": "概念",
      "ID": "05CON006",
      "name": "广义表表示",
      "attributes": {
        "难度": "入门",
        "内容": "一种树的文本表示方法，根结点放在由子树构成的表名字前面，子树用逗号分隔，整个表用括号括起来。"
      }
    },
    {
      "type": "概念",
      "ID": "05CON007",
      "name": "度",
      "attributes": {
        "难度": "入门",
        "内容": "结点的子树数或后继结点数。树的度是所有结点度的最大值。"
      }
    },
    {
      "type": "概念",
      "ID": "05CON008",
      "name": "叶子结点",
      "attributes": {
        "难度": "入门",
        "内容": "度为0的结点，也称终端结点。"
      }
    },
    {
      "type": "概念",
      "ID": "05CON009",
      "name": "分支结点",
      "attributes": {
        "难度": "入门",
        "内容": "度大于0的结点，也称非终端结点。"
      }
    },
    {
      "type": "概念",
      "ID": "05CON010",
      "name": "孩子",
      "attributes": {
        "难度": "入门",
        "内容": "结点的子树的根，或结点的后继，也称儿子或子女。"
      }
    },
    {
      "type": "概念",
      "ID": "05CON011",
      "name": "双亲",
      "attributes": {
        "难度": "入门",
        "内容": "孩子结点的前驱结点，也称父亲或父母。"
      }
    },
    {
      "type": "概念",
      "ID": "05CON012",
      "name": "兄弟",
      "attributes": {
        "难度": "入门",
        "内容": "具有相同双亲结点的孩子结点。"
      }
    },
    {
      "type": "概念",
      "ID": "05CON013",
      "name": "子孙",
      "attributes": {
        "难度": "入门",
        "内容": "结点的所有子树中的结点。"
      }
    },
    {
      "type": "概念",
      "ID": "05CON014",
      "name": "祖先",
      "attributes": {
        "难度": "入门",
        "内容": "从根结点到该结点路径上经过的所有结点。"
      }
    },
    {
      "type": "概念",
      "ID": "05CON015",
      "name": "层数",
      "attributes": {
        "难度": "入门",
        "内容": "结点在树中的层次，根为第1层，其孩子为第2层，以此类推。"
      }
    },
    {
      "type": "概念",
      "ID": "05CON016",
      "name": "深度",
      "attributes": {
        "难度": "入门",
        "内容": "树中所有结点的最大层数，也称高度。"
      }
    },
    {
      "type": "数据结构",
      "ID": "05DS002",
      "name": "有序树",
      "attributes": {
        "难度": "入门",
        "内容": "结点的各子树按一定次序从左到右安排的树。子树次序不能颠倒。",
        "存储开销": "同一般树",
        "核心特性": "子树有序"
      }
    },
    {
      "type": "数据结构",
      "ID": "05DS003",
      "name": "无序树",
      "attributes": {
        "难度": "入门",
        "内容": "结点的各子树之间没有固定次序的树。",
        "存储开销": "同一般树",
        "核心特性": "子树无序"
      }
    },
    {
      "type": "概念",
      "ID": "05CON017",
      "name": "森林",
      "attributes": {
        "难度": "入门",
        "内容": "m (m>=0) 棵互不相交的树的集合。"
      }
    },
    {
      "type": "数据结构",
      "ID": "05DS004",
      "name": "k叉树",
      "attributes": {
        "难度": "入门",
        "内容": "度不超过k的树，即每个结点最多有k个孩子。",
        "存储开销": "同一般树",
        "核心特性": "度限制为k"
      }
    },
    {
      "type": "数据结构",
      "ID": "05DS005",
      "name": "满k叉树",
      "attributes": {
        "难度": "中等",
        "内容": "深度为h且有 (k^h - 1) / (k - 1) 个结点的k叉树。即所有层都达到最大结点数。",
        "存储开销": "O(k^h)",
        "核心特性": "结构完全饱和"
      }
    },
    {
      "type": "数据结构",
      "ID": "05DS006",
      "name": "二叉树",
      "attributes": {
        "难度": "入门",
        "内容": "度为2的有序树。递归定义：空树，或者由根、左子树、右子树构成，左右子树也是二叉树。子树严格区分左右。",
        "存储开销": "链式O(n)，顺序最坏O(2^h)",
        "核心特性": "每个结点最多2个孩子, 区分左右子树"
      }
    },
    {
      "type": "概念",
      "ID": "05CON018",
      "name": "左子树",
      "attributes": {
        "难度": "入门",
        "内容": "二叉树根结点的左边分支构成的子树。"
      }
    },
    {
      "type": "概念",
      "ID": "05CON019",
      "name": "右子树",
      "attributes": {
        "难度": "入门",
        "内容": "二叉树根结点的右边分支构成的子树。"
      }
    },
    {
      "type": "概念",
      "ID": "05CON020",
      "name": "左孩子",
      "attributes": {
        "难度": "入门",
        "内容": "二叉树结点的左子树的根。"
      }
    },
    {
      "type": "概念",
      "ID": "05CON021",
      "name": "右孩子",
      "attributes": {
        "难度": "入门",
        "内容": "二叉树结点的右子树的根。"
      }
    },
    {
      "type": "数据结构",
      "ID": "05DS007",
      "name": "满二叉树",
      "attributes": {
        "难度": "入门",
        "内容": "深度为h且有 2^h - 1 个结点的二叉树。所有层都满。",
        "存储开销": "O(2^h)",
        "核心特性": "结构完全饱和"
      }
    },
    {
      "type": "数据结构",
      "ID": "05DS008",
      "name": "完全二叉树",
      "attributes": {
        "难度": "入门",
        "内容": "深度为h的二叉树，除第h层外，其它各层(1～h-1)的结点数都达到最大个数，第h层所有的结点都连续集中在最左边。",
        "存储开销": "顺序存储O(n)",
        "核心特性": "结点按层序编号时是连续的（除可能的最后一层右侧空缺），适合数组表示"
      }
    },
    {
      "type": "数据结构",
      "ID": "05DS009",
      "name": "理想平衡二叉树",
      "attributes": {
        "难度": "中等",
        "内容": "除最后一层外，其余各层都达到最大结点数的二叉树。最后一层结点可任意分布。",
        "存储开销": "O(n)",
        "核心特性": "高度约为log2(n)，但不保证最后一层结点的连续性"
      }
    },
    {
      "type": "算法",
      "ID": "05ALG001",
      "name": "初始化二叉树",
      "attributes": {
        "难度": "入门",
        "内容": "将二叉树设置为空树。",
        "时间复杂度": "O(1)",
        "空间复杂度": "O(1)",
        "设计思想": "基本操作",
        "适用场景": "创建新二叉树实例时"
      }
    },
    {
      "type": "算法",
      "ID": "05ALG002",
      "name": "建立二叉树",
      "attributes": {
        "难度": "中等",
        "内容": "根据广义表表示的字符串构建二叉树的链接存储结构。",
        "时间复杂度": "O(n)",
        "空间复杂度": "O(h)",
        "设计思想": "递归/栈辅助解析",
        "适用场景": "从特定格式输入构造二叉树"
      }
    },
    {
      "type": "算法",
      "ID": "05ALG003",
      "name": "判空二叉树",
      "attributes": {
        "难度": "入门",
        "内容": "判断二叉树是否为空。",
        "时间复杂度": "O(1)",
        "空间复杂度": "O(1)",
        "设计思想": "基本操作",
        "适用场景": "检查二叉树状态"
      }
    },
    {
      "type": "算法",
      "ID": "05ALG004",
      "name": "查找二叉树结点",
      "attributes": {
        "难度": "入门",
        "内容": "在二叉树中查找具有特定值的结点。",
        "时间复杂度": "O(n)",
        "空间复杂度": "O(h)",
        "设计思想": "递归遍历",
        "适用场景": "在无序二叉树中定位结点"
      }
    },
    {
      "type": "算法",
      "ID": "05ALG005",
      "name": "求二叉树深度",
      "attributes": {
        "难度": "入门",
        "内容": "计算二叉树的最大层数。",
        "时间复杂度": "O(n)",
        "空间复杂度": "O(h)",
        "设计思想": "递归",
        "适用场景": "获取二叉树高度信息"
      }
    },
    {
      "type": "算法",
      "ID": "05ALG006",
      "name": "输出二叉树",
      "attributes": {
        "难度": "入门",
        "内容": "以广义表形式打印二叉树结构。",
        "时间复杂度": "O(n)",
        "空间复杂度": "O(h)",
        "设计思想": "递归遍历（类前序）",
        "适用场景": "可视化或序列化二叉树结构"
      }
    },
    {
      "type": "算法",
      "ID": "05ALG007",
      "name": "清除二叉树",
      "attributes": {
        "难度": "入门",
        "内容": "删除二叉树所有结点，回收空间，使其变为空树。",
        "时间复杂度": "O(n)",
        "空间复杂度": "O(h)",
        "设计思想": "递归遍历（后序）",
        "适用场景": "销毁二叉树实例"
      }
    },
    {
      "type": "数据结构",
      "ID": "05DS010",
      "name": "二叉树顺序存储结构",
      "attributes": {
        "难度": "入门",
        "内容": "使用一维数组存储二叉树，结点按层序编号映射到数组下标。父子关系通过下标计算（i -> 2i, 2i+1）。",
        "存储开销": "O(2^h)",
        "核心特性": "随机访问父子节点 O(1)，空间效率依赖树形态"
      }
    },
    {
      "type": "数据结构",
      "ID": "05DS011",
      "name": "二叉链表",
      "attributes": {
        "难度": "入门",
        "内容": "每个结点包含数据域、指向左孩子的指针域、指向右孩子的指针域。",
        "存储开销": "O(n)",
        "核心特性": "空间利用率高，插入删除相对灵活（需维护指针）"
      }
    },
    {
      "type": "数据结构",
      "ID": "05DS012",
      "name": "带双亲指针二叉链表",
      "attributes": {
        "难度": "入门",
        "内容": "在二叉链表基础上，每个结点增加一个指向双亲结点的指针域。",
        "存储开销": "O(n)",
        "核心特性": "便于查找双亲结点"
      }
    },
    {
      "type": "算法",
      "ID": "05ALG008",
      "name": "前序遍历",
      "attributes": {
        "难度": "入门",
        "内容": "遍历顺序：根结点 -> 左子树 -> 右子树。",
        "时间复杂度": "O(n)",
        "空间复杂度": "O(h)",
        "设计思想": "递归",
        "适用场景": "复制树、输出带括号表达式的前缀表示"
      }
    },
    {
      "type": "算法",
      "ID": "05ALG009",
      "name": "中序遍历",
      "attributes": {
        "难度": "入门",
        "内容": "遍历顺序：左子树 -> 根结点 -> 右子树。",
        "时间复杂度": "O(n)",
        "空间复杂度": "O(h)",
        "设计思想": "递归",
        "适用场景": "对二叉搜索树排序输出"
      }
    },
    {
      "type": "算法",
      "ID": "05ALG010",
      "name": "后序遍历",
      "attributes": {
        "难度": "入门",
        "内容": "遍历顺序：左子树 -> 右子树 -> 根结点。",
        "时间复杂度": "O(n)",
        "空间复杂度": "O(h)",
        "设计思想": "递归",
        "适用场景": "计算表达式树、释放树结点空间"
      }
    },
    {
      "type": "算法",
      "ID": "05ALG011",
      "name": "按层遍历",
      "attributes": {
        "难度": "入门",
        "内容": "按从上到下、同一层从左到右的顺序访问结点。",
        "时间复杂度": "O(n)",
        "空间复杂度": "O(w)",
        "设计思想": "队列辅助",
        "适用场景": "广度优先搜索（BFS）相关问题"
      }
    },
    {
      "type": "数据结构",
      "ID": "05DS013",
      "name": "队列",
      "attributes": {
        "难度": "入门",
        "内容": "一种先进先出（FIFO）的线性数据结构。",
        "存储开销": "O(n)",
        "核心特性": "FIFO"
      }
    },
    {
      "type": "数据结构",
      "ID": "05DS014",
      "name": "栈",
      "attributes": {
        "难度": "入门",
        "内容": "一种后进先出（LIFO）的线性数据结构。",
        "存储开销": "O(n)",
        "核心特性": "LIFO"
      }
    },
    {
      "type": "算法",
      "ID": "05ALG012",
      "name": "初始化树",
      "attributes": {
        "难度": "入门",
        "内容": "将通用树设置为空树。",
        "时间复杂度": "O(1)",
        "空间复杂度": "O(1)",
        "设计思想": "基本操作",
        "适用场景": "创建新树实例时"
      }
    },
    {
      "type": "算法",
      "ID": "05ALG013",
      "name": "建立树",
      "attributes": {
        "难度": "中等",
        "内容": "根据广义表表示的字符串构建k叉树的链接存储结构（标准方式）。",
        "时间复杂度": "O(n)",
        "空间复杂度": "O(h)",
        "设计思想": "栈辅助解析",
        "适用场景": "从特定格式输入构造k叉树"
      }
    },
    {
      "type": "算法",
      "ID": "05ALG014",
      "name": "查找树结点",
      "attributes": {
        "难度": "入门",
        "内容": "在通用k叉树中查找具有特定值的结点。",
        "时间复杂度": "O(n)",
        "空间复杂度": "O(h)",
        "设计思想": "递归遍历（先根）",
        "适用场景": "在通用树中定位结点"
      }
    },
    {
      "type": "算法",
      "ID": "05ALG015",
      "name": "输出树",
      "attributes": {
        "难度": "入门",
        "内容": "以广义表形式打印k叉树结构。",
        "时间复杂度": "O(n)",
        "空间复杂度": "O(h)",
        "设计思想": "递归遍历（类先根）",
        "适用场景": "可视化或序列化k叉树结构"
      }
    },
    {
      "type": "算法",
      "ID": "05ALG016",
      "name": "判空树",
      "attributes": {
        "难度": "入门",
        "内容": "判断通用树是否为空。",
        "时间复杂度": "O(1)",
        "空间复杂度": "O(1)",
        "设计思想": "基本操作",
        "适用场景": "检查树状态"
      }
    },
    {
      "type": "算法",
      "ID": "05ALG017",
      "name": "清除树",
      "attributes": {
        "难度": "入门",
        "内容": "删除通用树所有结点，回收空间，使其变为空树。",
        "时间复杂度": "O(n)",
        "空间复杂度": "O(h)",
        "设计思想": "递归遍历（后序）",
        "适用场景": "销毁树实例"
      }
    },
    {
      "type": "数据结构",
      "ID": "05DS015",
      "name": "树顺序存储结构",
      "attributes": {
        "难度": "中等",
        "内容": "使用一维数组存储k叉树，结点按特定规则编号映射到数组下标（如父i -> 孩子ki-(k-2)...ki+1）。",
        "存储开销": "O(k^h)",
        "核心特性": "访问父子节点需计算，空间效率依赖树形态"
      }
    },
    {
      "type": "数据结构",
      "ID": "05DS016",
      "name": "标准链式存储",
      "attributes": {
        "难度": "入门",
        "内容": "每个结点包含数据域和k个指针域，分别指向k个孩子结点（k为树的度）。",
        "存储开销": "O(n*k)",
        "核心特性": "直接表示父子关系，指针域数量固定"
      }
    },
    {
      "type": "数据结构",
      "ID": "05DS017",
      "name": "广义标准链式存储",
      "attributes": {
        "难度": "入门",
        "内容": "在标准链式存储基础上，每个结点增加一个指向双亲结点的指针域。",
        "存储开销": "O(n*(k+1))",
        "核心特性": "便于查找双亲结点"
      }
    },
    {
      "type": "数据结构",
      "ID": "05DS018",
      "name": "孩子兄弟表示法",
      "attributes": {
        "难度": "中等",
        "内容": "将通用树转换为二叉树存储。每个结点存储指向其第一个孩子的指针（二叉树的左孩子）和指向其下一个兄弟的指针（二叉树的右孩子）。",
        "存储开销": "O(n)",
        "核心特性": "将任意度数的树用固定两个指针表示，便于表示森林"
      }
    },
    {
      "type": "算法",
      "ID": "05ALG018",
      "name": "先根遍历",
      "attributes": {
        "难度": "入门",
        "内容": "遍历顺序：根结点 -> 从左到右遍历各子树。",
        "时间复杂度": "O(n)",
        "空间复杂度": "O(h)",
        "设计思想": "递归",
        "适用场景": "树的深度优先搜索（DFS）"
      }
    },
    {
      "type": "算法",
      "ID": "05ALG019",
      "name": "后根遍历",
      "attributes": {
        "难度": "入门",
        "内容": "遍历顺序：从左到右遍历各子树 -> 根结点。",
        "时间复杂度": "O(n)",
        "空间复杂度": "O(h)",
        "设计思想": "递归",
        "适用场景": "计算树中依赖子树结果的属性、释放树空间"
      }
    },
    {
      "type": "算法",
      "ID": "05ALG020",
      "name": "树的按层遍历",
      "attributes": {
        "难度": "入门",
        "内容": "按从上到下、同一层从左到右的顺序访问k叉树结点。",
        "时间复杂度": "O(n)",
        "空间复杂度": "O(w)",
        "设计思想": "队列辅助",
        "适用场景": "树的广度优先搜索（BFS）"
      }
    },
    {
      "type": "算法",
      "ID": "05ALG021",
      "name": "求树深度",
      "attributes": {
        "难度": "入门",
        "内容": "计算通用k叉树的最大层数。",
        "时间复杂度": "O(n)",
        "空间复杂度": "O(h)",
        "设计思想": "递归",
        "适用场景": "获取树的高度信息"
      }
    }
  ],
  "relations": [
    {
      "type": "理论依赖",
      "关系ID": "05REL001",
      "source": "05DS001",
      "target": "05CON001",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "05REL002",
      "source": "05DS001",
      "target": "05CON002",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "05REL003",
      "source": "05DS001",
      "target": "05CON003",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "05REL004",
      "source": "05DS001",
      "target": "05CON004",
      "attributes": {
        "依赖强度": "中"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "05REL005",
      "source": "05DS001",
      "target": "05CON005",
      "attributes": {
        "依赖强度": "中"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "05REL006",
      "source": "05CON001",
      "target": "05CON004",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "05REL007",
      "source": "05CON002",
      "target": "05DS001",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "05REL008",
      "source": "05DS001",
      "target": "05CON006",
      "attributes": {
        "依赖强度": "弱"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "05REL009",
      "source": "05CON003",
      "target": "05CON007",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "05REL010",
      "source": "05CON008",
      "target": "05CON007",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "05REL011",
      "source": "05CON009",
      "target": "05CON007",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "05REL012",
      "source": "05CON010",
      "target": "05CON005",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "05REL013",
      "source": "05CON011",
      "target": "05CON004",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "05REL014",
      "source": "05CON010",
      "target": "05CON011",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "05REL015",
      "source": "05CON012",
      "target": "05CON011",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "05REL016",
      "source": "05CON012",
      "target": "05CON010",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "05REL017",
      "source": "05CON013",
      "target": "05CON002",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "05REL018",
      "source": "05CON014",
      "target": "05CON001",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "05REL019",
      "source": "05CON014",
      "target": "05CON003",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "05REL020",
      "source": "05DS001",
      "target": "05CON015",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "05REL021",
      "source": "05DS001",
      "target": "05CON016",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "继承",
      "关系ID": "05REL022",
      "source": "05DS001",
      "target": "05DS002",
      "attributes": {
        "约束条件": "子树有序"
      }
    },
    {
      "type": "继承",
      "关系ID": "05REL023",
      "source": "05DS001",
      "target": "05DS003",
      "attributes": {
        "约束条件": "子树无序"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "05REL024",
      "source": "05CON017",
      "target": "05DS001",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "继承",
      "关系ID": "05REL025",
      "source": "05DS001",
      "target": "05DS004",
      "attributes": {
        "约束条件": "度<=k"
      }
    },
    {
      "type": "继承",
      "关系ID": "05REL026",
      "source": "05DS004",
      "target": "05DS005",
      "attributes": {
        "约束条件": "结点数=(k^h-1)/(k-1)"
      }
    },
    {
      "type": "继承",
      "关系ID": "05REL027",
      "source": "05DS002",
      "target": "05DS006",
      "attributes": {
        "约束条件": "度<=2"
      }
    },
    {
      "type": "继承",
      "关系ID": "05REL028",
      "source": "05DS004",
      "target": "05DS006",
      "attributes": {
        "约束条件": "k=2"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "05REL029",
      "source": "05DS006",
      "target": "05CON018",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "05REL030",
      "source": "05DS006",
      "target": "05CON019",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "05REL031",
      "source": "05CON018",
      "target": "05DS006",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "05REL032",
      "source": "05CON019",
      "target": "05DS006",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "05REL033",
      "source": "05CON020",
      "target": "05CON018",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "05REL034",
      "source": "05CON021",
      "target": "05CON019",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "继承",
      "关系ID": "05REL035",
      "source": "05CON010",
      "target": "05CON020",
      "attributes": {
        "约束条件": "二叉树的左侧后继"
      }
    },
    {
      "type": "继承",
      "关系ID": "05REL036",
      "source": "05CON010",
      "target": "05CON021",
      "attributes": {
        "约束条件": "二叉树的右侧后继"
      }
    },
    {
      "type": "继承",
      "关系ID": "05REL037",
      "source": "05DS006",
      "target": "05DS007",
      "attributes": {
        "约束条件": "结点数 = 2^h - 1"
      }
    },
    {
      "type": "继承",
      "关系ID": "05REL038",
      "source": "05DS005",
      "target": "05DS007",
      "attributes": {
        "约束条件": "k=2"
      }
    },
    {
      "type": "继承",
      "关系ID": "05REL039",
      "source": "05DS006",
      "target": "05DS008",
      "attributes": {
        "约束条件": "按层序编号连续（除可能的最后一层右侧）"
      }
    },
    {
      "type": "继承",
      "关系ID": "05REL040",
      "source": "05DS008",
      "target": "05DS007",
      "attributes": {
        "约束条件": "最后一层也满"
      }
    },
    {
      "type": "继承",
      "关系ID": "05REL041",
      "source": "05DS006",
      "target": "05DS009",
      "attributes": {
        "约束条件": "除最后一层外，其余层满"
      }
    },
    {
      "type": "继承",
      "关系ID": "05REL042",
      "source": "05DS009",
      "target": "05DS008",
      "attributes": {
        "约束条件": "最后一层结点左对齐连续"
      }
    },
    {
      "type": "继承",
      "关系ID": "05REL043",
      "source": "05DS009",
      "target": "05DS007",
      "attributes": {
        "约束条件": "最后一层也满"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "05REL044",
      "source": "05ALG001",
      "target": "05DS006",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "05REL045",
      "source": "05ALG002",
      "target": "05DS006",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "05REL046",
      "source": "05ALG003",
      "target": "05DS006",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "05REL047",
      "source": "05ALG004",
      "target": "05DS006",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "05REL048",
      "source": "05ALG005",
      "target": "05DS006",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "05REL049",
      "source": "05ALG006",
      "target": "05DS006",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "05REL050",
      "source": "05ALG007",
      "target": "05DS006",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "05REL051",
      "source": "05ALG002",
      "target": "05CON006",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "05REL052",
      "source": "05ALG006",
      "target": "05CON006",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "05REL053",
      "source": "05DS010",
      "target": "05DS008",
      "attributes": {
        "依赖强度": "中"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "05REL054",
      "source": "05DS011",
      "target": "05DS006",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "变体",
      "关系ID": "05REL055",
      "source": "05DS011",
      "target": "05DS012",
      "attributes": {
        "变体类型": "增加双亲指针"
      }
    },
    {
      "type": "使用",
      "关系ID": "05REL056",
      "source": "05DS008",
      "target": "05DS010",
      "attributes": {
        "使用角色": "高效存储方式"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "05REL057",
      "source": "05ALG008",
      "target": "05DS006",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "05REL058",
      "source": "05ALG009",
      "target": "05DS006",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "05REL059",
      "source": "05ALG010",
      "target": "05DS006",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "05REL060",
      "source": "05ALG011",
      "target": "05DS006",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "使用",
      "关系ID": "05REL061",
      "source": "05ALG011",
      "target": "05DS013",
      "attributes": {
        "使用角色": "辅助数据结构"
      }
    },
    {
      "type": "使用",
      "关系ID": "05REL062",
      "source": "05ALG002",
      "target": "05DS014",
      "attributes": {
        "使用角色": "辅助数据结构"
      }
    },
    {
      "type": "使用",
      "关系ID": "05REL063",
      "source": "05ALG008",
      "target": "05DS014",
      "attributes": {
        "使用角色": "递归实现"
      }
    },
    {
      "type": "使用",
      "关系ID": "05REL064",
      "source": "05ALG009",
      "target": "05DS014",
      "attributes": {
        "使用角色": "递归实现"
      }
    },
    {
      "type": "使用",
      "关系ID": "05REL065",
      "source": "05ALG010",
      "target": "05DS014",
      "attributes": {
        "使用角色": "递归实现"
      }
    },
    {
      "type": "使用",
      "关系ID": "05REL066",
      "source": "05ALG004",
      "target": "05DS014",
      "attributes": {
        "使用角色": "递归实现"
      }
    },
    {
      "type": "使用",
      "关系ID": "05REL067",
      "source": "05ALG005",
      "target": "05DS014",
      "attributes": {
        "使用角色": "递归实现"
      }
    },
    {
      "type": "使用",
      "关系ID": "05REL068",
      "source": "05ALG006",
      "target": "05DS014",
      "attributes": {
        "使用角色": "递归实现"
      }
    },
    {
      "type": "使用",
      "关系ID": "05REL069",
      "source": "05ALG007",
      "target": "05DS014",
      "attributes": {
        "使用角色": "递归实现"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "05REL070",
      "source": "05ALG012",
      "target": "05DS004",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "05REL071",
      "source": "05ALG013",
      "target": "05DS004",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "05REL072",
      "source": "05ALG014",
      "target": "05DS004",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "05REL073",
      "source": "05ALG015",
      "target": "05DS004",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "05REL074",
      "source": "05ALG016",
      "target": "05DS004",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "05REL075",
      "source": "05ALG017",
      "target": "05DS004",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "使用",
      "关系ID": "05REL076",
      "source": "05ALG013",
      "target": "05DS014",
      "attributes": {
        "使用角色": "辅助数据结构"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "05REL077",
      "source": "05ALG013",
      "target": "05CON006",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "05REL078",
      "source": "05ALG015",
      "target": "05CON006",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "05REL079",
      "source": "05DS015",
      "target": "05DS004",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "05REL080",
      "source": "05DS016",
      "target": "05DS004",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "变体",
      "关系ID": "05REL081",
      "source": "05DS016",
      "target": "05DS017",
      "attributes": {
        "变体类型": "增加双亲指针"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "05REL082",
      "source": "05DS018",
      "target": "05DS001",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "使用",
      "关系ID": "05REL083",
      "source": "05DS018",
      "target": "05DS011",
      "attributes": {
        "使用角色": "底层存储结构"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "05REL084",
      "source": "05ALG018",
      "target": "05DS004",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "05REL085",
      "source": "05ALG019",
      "target": "05DS004",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "05REL086",
      "source": "05ALG020",
      "target": "05DS004",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "05REL087",
      "source": "05ALG021",
      "target": "05DS004",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "使用",
      "关系ID": "05REL088",
      "source": "05ALG020",
      "target": "05DS013",
      "attributes": {
        "使用角色": "辅助数据结构"
      }
    },
    {
      "type": "使用",
      "关系ID": "05REL089",
      "source": "05ALG018",
      "target": "05DS014",
      "attributes": {
        "使用角色": "递归实现"
      }
    },
    {
      "type": "使用",
      "关系ID": "05REL090",
      "source": "05ALG019",
      "target": "05DS014",
      "attributes": {
        "使用角色": "递归实现"
      }
    },
    {
      "type": "使用",
      "关系ID": "05REL091",
      "source": "05ALG014",
      "target": "05DS014",
      "attributes": {
        "使用角色": "递归实现"
      }
    },
    {
      "type": "使用",
      "关系ID": "05REL092",
      "source": "05ALG015",
      "target": "05DS014",
      "attributes": {
        "使用角色": "递归实现"
      }
    },
    {
      "type": "使用",
      "关系ID": "05REL093",
      "source": "05ALG021",
      "target": "05DS014",
      "attributes": {
        "使用角色": "递归实现"
      }
    },
    {
      "type": "使用",
      "关系ID": "05REL094",
      "source": "05ALG017",
      "target": "05DS014",
      "attributes": {
        "使用角色": "递归实现"
      }
    }
  ]
}