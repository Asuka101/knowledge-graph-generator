{
  "entities": [
    {
      "type": "数据结构",
      "ID": "03DS001",
      "name": "集合",
      "attributes": {
        "难度": "入门",
        "内容": "由具有相同属性的数据元素组合而成，数据之间没有任何前驱和后继关系。集合中数据元素的个数称为集合的长度(n>=0)。集合中的元素可以按任何次序排列，无序性是其核心特性。长度可变。",
        "存储开销": "可变 (取决于实现)",
        "核心特性": "无序性"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "03CON001",
      "name": "空集",
      "attributes": {
        "难度": "入门",
        "内容": "集合长度为0时的集合，表示为 {}。"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "03ALG001",
      "name": "初始化集合",
      "attributes": {
        "难度": "入门",
        "内容": "初始化集合为空。操作名通常为 InitSet。",
        "时间复杂度": "O(1)",
        "空间复杂度": "O(1)",
        "设计思想": "初始化",
        "适用场景": "创建新集合实例"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "03ALG002",
      "name": "清除集合",
      "attributes": {
        "难度": "入门",
        "内容": "清除集合中的所有元素，可能涉及释放存储空间。操作名通常为 ClearSet。",
        "时间复杂度": "O(n) / O(1)",
        "空间复杂度": "O(1)",
        "设计思想": "资源管理",
        "适用场景": "销毁或重用集合"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "03ALG003",
      "name": "求集合长度",
      "attributes": {
        "难度": "入门",
        "内容": "求出集合中元素个数。操作名通常为 LengthSet。",
        "时间复杂度": "O(1) / O(n)",
        "空间复杂度": "O(1)",
        "设计思想": "查询",
        "适用场景": "获取集合大小"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "03ALG004",
      "name": "判断集合是否为空",
      "attributes": {
        "难度": "入门",
        "内容": "判断集合是否为空。操作名通常为 EmptySet。",
        "时间复杂度": "O(1)",
        "空间复杂度": "O(1)",
        "设计思想": "查询",
        "适用场景": "检查集合状态"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "03ALG005",
      "name": "判断元素是否属于集合",
      "attributes": {
        "难度": "入门",
        "内容": "判断一个元素是否属于集合。操作名通常为 InSet。",
        "时间复杂度": "O(n)",
        "空间复杂度": "O(1)",
        "设计思想": "查找",
        "适用场景": "成员检查"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "03ALG006",
      "name": "输出集合元素",
      "attributes": {
        "难度": "入门",
        "内容": "输出集合中所有元素。操作名通常为 OutputSet。",
        "时间复杂度": "O(n)",
        "空间复杂度": "O(1)",
        "设计思想": "遍历",
        "适用场景": "查看集合内容"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "03ALG007",
      "name": "查找集合元素",
      "attributes": {
        "难度": "入门",
        "内容": "从集合中查找一个元素，通常根据关键字查找并返回完整元素信息。操作名通常为 FindSet。",
        "时间复杂度": "O(n)",
        "空间复杂度": "O(1)",
        "设计思想": "查找",
        "适用场景": "获取元素完整信息"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "03ALG008",
      "name": "修改集合元素",
      "attributes": {
        "难度": "入门",
        "内容": "修改集合中的一个指定元素（通常先查找后修改）。操作名通常为 ModifySet。",
        "时间复杂度": "O(n)",
        "空间复杂度": "O(1)",
        "设计思想": "修改",
        "适用场景": "更新元素信息"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "03ALG009",
      "name": "向集合插入元素",
      "attributes": {
        "难度": "入门",
        "内容": "向集合插入一个元素，需确保元素唯一性（不允许重复）。操作名通常为 InsertSet。",
        "时间复杂度": "O(n)",
        "空间复杂度": "O(1) (摊销)",
        "设计思想": "插入",
        "适用场景": "添加新元素"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "03ALG010",
      "name": "从集合删除元素",
      "attributes": {
        "难度": "入门",
        "内容": "从集合删除一个指定元素。操作名通常为 DeleteSet。",
        "时间复杂度": "O(n)",
        "空间复杂度": "O(1)",
        "设计思想": "删除",
        "适用场景": "移除元素"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "03ALG011",
      "name": "求集合并集",
      "attributes": {
        "难度": "中等",
        "内容": "求两个集合的并集。操作名通常为 UnionSet。",
        "时间复杂度": "O(n*m)",
        "空间复杂度": "O(n+m)",
        "设计思想": "集合运算",
        "适用场景": "合并集合"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "03ALG012",
      "name": "求集合交集",
      "attributes": {
        "难度": "中等",
        "内容": "求两个集合的交集。操作名通常为 IntersectSet。",
        "时间复杂度": "O(n*m)",
        "空间复杂度": "O(min(n,m))",
        "设计思想": "集合运算",
        "适用场景": "查找共同元素"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "03ALG013",
      "name": "求集合差集",
      "attributes": {
        "难度": "中等",
        "内容": "求两个集合的差集 (S1 - S2)。操作名通常为 DifferenceSet。",
        "时间复杂度": "O(n*m)",
        "空间复杂度": "O(n)",
        "设计思想": "集合运算",
        "适用场景": "查找S1独有元素"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "03DS002",
      "name": "集合顺序存储",
      "attributes": {
        "难度": "入门",
        "内容": "使用数组存储集合元素，并用一个变量记录当前长度。插入删除时通常将最后一个元素填补空位以避免移动。可实现动态扩容。",
        "存储开销": "O(MaxSize) 或 O(n) (动态)",
        "核心特性": "基于数组, 随机访问(物理), 逻辑无序"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "03DS003",
      "name": "数组",
      "attributes": {
        "难度": "入门",
        "内容": "存储相同类型元素的连续内存空间，可通过下标（索引）直接访问元素。",
        "存储开销": "O(N)",
        "核心特性": "连续存储, 可索引"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "03ALG014",
      "name": "简单选择排序",
      "attributes": {
        "难度": "入门",
        "内容": "一种简单的排序算法。在每一轮中从未排序的部分选择最小（或最大）的元素，放到已排序部分的末尾。",
        "时间复杂度": "O(n^2)",
        "空间复杂度": "O(1)",
        "设计思想": "选择",
        "适用场景": "小规模数据排序, 教学演示"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "03ALG015",
      "name": "有序输出集合元素",
      "attributes": {
        "难度": "中等",
        "内容": "输出集合中所有元素，并按值的升序排列，同时保持原有集合状态不变。通常需要辅助空间和排序算法。操作名示例: OutputSet1。",
        "时间复杂度": "O(n^2) (若使用简单排序)",
        "空间复杂度": "O(n)",
        "设计思想": "遍历, 排序",
        "适用场景": "需要按序查看集合内容时"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "03DS004",
      "name": "集合链接存储",
      "attributes": {
        "难度": "入门",
        "内容": "使用链表（通常是单链表）存储集合元素，每个元素对应一个结点。插入删除操作不需移动元素，但查找效率较低。",
        "存储开销": "O(n)",
        "核心特性": "基于链表, 动态大小, 逻辑无序"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "03DS005",
      "name": "单链表",
      "attributes": {
        "难度": "入门",
        "内容": "通过指针将结点链接起来的线性数据结构。每个结点包含数据域和指向下一个结点的指针域。",
        "存储开销": "O(n)",
        "核心特性": "非连续存储, 动态大小, 顺序访问"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "03CON002",
      "name": "矩阵",
      "attributes": {
        "难度": "入门",
        "内容": "一个m行n列的二维数表，包含m*n个元素，每个元素由其行号和列号唯一确定。"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "03DS006",
      "name": "稀疏矩阵",
      "attributes": {
        "难度": "中等",
        "内容": "矩阵的一种特殊情况，其中非零元素的个数远少于零元素的个数。为了节省存储空间和计算时间，通常采用特殊方式存储。",
        "存储开销": "目标远小于 O(m*n)",
        "核心特性": "稀疏性"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "03CON003",
      "name": "三元组",
      "attributes": {
        "难度": "入门",
        "内容": "用于表示稀疏矩阵中非零元素的数据单元，通常包含三个信息：行号(row)、列号(col)和元素值(value)。记作 (i, j, a_ij)。"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "03DS007",
      "name": "三元组线性表",
      "attributes": {
        "难度": "中等",
        "内容": "将稀疏矩阵的所有非零元素表示为三元组，并按照行号为主序、列号为辅序排列构成的线性表。是稀疏矩阵的一种逻辑表示和存储基础。",
        "存储开销": "O(t) (t为非零元个数)",
        "核心特性": "有序性 (按行列)"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "03ALG016",
      "name": "稀疏矩阵转置",
      "attributes": {
        "难度": "中等",
        "内容": "求一个稀疏矩阵的转置矩阵。转置操作将原矩阵的行和列互换，即 B[j][i] = A[i][j]。",
        "时间复杂度": "依赖具体实现 (O(n*t) 或 O(n+t))",
        "空间复杂度": "O(t)",
        "设计思想": "矩阵运算, 坐标变换",
        "适用场景": "需要行列变换的矩阵计算"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "03ALG017",
      "name": "稀疏矩阵加法",
      "attributes": {
        "难度": "中等",
        "内容": "计算两个行数和列数分别相同的稀疏矩阵的和。结果矩阵 C[i][j] = A[i][j] + B[i][j]。",
        "时间复杂度": "O(t1 + t2)",
        "空间复杂度": "O(t1 + t2) (最坏情况)",
        "设计思想": "矩阵运算, 对应元素相加",
        "适用场景": "合并或叠加稀疏矩阵表示的信息"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "03ALG018",
      "name": "稀疏矩阵乘法",
      "attributes": {
        "难度": "高级",
        "内容": "计算两个稀疏矩阵的乘积。要求第一个矩阵的列数等于第二个矩阵的行数 (A[m][n] * B[n][p] = C[m][p])。C[i][j] = sum(A[i][k] * B[k][j]) for k=1 to n。",
        "时间复杂度": "依赖具体实现和稀疏度",
        "空间复杂度": "依赖结果矩阵稀疏度",
        "设计思想": "矩阵运算, 点积累加",
        "适用场景": "线性变换组合, 图算法等"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "03ALG019",
      "name": "初始化稀疏矩阵",
      "attributes": {
        "难度": "入门",
        "内容": "初始化一个稀疏矩阵结构，使其表示一个空矩阵（通常设置行、列、非零元个数为0）。操作名通常为 InitMatrix。",
        "时间复杂度": "O(1) 或 O(m+n) (取决于存储结构)",
        "空间复杂度": "O(1)",
        "设计思想": "初始化",
        "适用场景": "创建新的稀疏矩阵实例"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "03ALG020",
      "name": "输入稀疏矩阵",
      "attributes": {
        "难度": "中等",
        "内容": "根据输入的非零元素三元组（行、列、值）构建稀疏矩阵的存储结构。操作名通常为 InputMatrix。",
        "时间复杂度": "依赖具体实现 (如 O(t) 或 O(t*logt) 或更复杂)",
        "空间复杂度": "O(t)",
        "设计思想": "构建, 解析",
        "适用场景": "从外部数据源创建稀疏矩阵"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "03ALG021",
      "name": "输出稀疏矩阵",
      "attributes": {
        "难度": "入门",
        "内容": "将稀疏矩阵的存储结构按一定格式（如三元组列表）输出。操作名通常为 OutputMatrix。",
        "时间复杂度": "O(t)",
        "空间复杂度": "O(1)",
        "设计思想": "遍历, 输出",
        "适用场景": "查看稀疏矩阵内容"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "03DS008",
      "name": "稀疏矩阵顺序存储",
      "attributes": {
        "难度": "中等",
        "内容": "使用一个结构体存储稀疏矩阵的元数据（行数m, 列数n, 非零元个数t），并用一个一维数组（如Triple sm[]）按行主序存储所有非零元素的三元组。",
        "存储开销": "O(t)",
        "核心特性": "基于数组存储三元组, 结构简单"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "03DS009",
      "name": "稀疏矩阵链接存储",
      "attributes": {
        "难度": "中等",
        "内容": "使用链式结构来存储稀疏矩阵的非零元素及其关系，以克服顺序存储在插入删除方面的不足。",
        "存储开销": "O(t) 或 O(m+n+t)",
        "核心特性": "基于链表存储三元组, 动态性好"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "03DS010",
      "name": "带行指针向量的链接存储",
      "attributes": {
        "难度": "中等",
        "内容": "使用一个指针数组（行指针向量），数组的第i个元素指向第i行非零元素构成的单链表的头结点。行内链表通常按列号有序。",
        "存储开销": "O(m + t)",
        "核心特性": "按行访问方便, 行内有序"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "03DS011",
      "name": "十字链表存储",
      "attributes": {
        "难度": "高级",
        "内容": "每个非零元素结点包含五个域：行号、列号、值、指向同行下一个结点的指针(right)、指向同列下一个结点的指针(down)。同时使用行指针向量和列指针向量分别指向各行和各列链表的头结点。",
        "存储开销": "O(m + n + t)",
        "核心特性": "行列访问均方便, 结构复杂"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "03ALG022",
      "name": "普通转置方法",
      "attributes": {
        "难度": "中等",
        "内容": "一种稀疏矩阵转置算法（通常基于顺序存储）。按列扫描原矩阵的三元组表，找到属于当前列的元素，交换行列号后存入结果矩阵的三元组表。",
        "时间复杂度": "O(n*t)",
        "空间复杂度": "O(t)",
        "设计思想": "遍历, 转换",
        "适用场景": "稀疏矩阵转置的简单实现"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "03ALG023",
      "name": "快速转置方法",
      "attributes": {
        "难度": "中等",
        "内容": "一种更高效的稀疏矩阵转置算法（通常基于顺序存储）。通过两遍扫描：第一遍统计原矩阵每列的非零元个数，计算转置后每行第一个元素在结果数组中的起始位置；第二遍按原顺序遍历三元组，根据计算好的位置直接放入结果数组。",
        "时间复杂度": "O(n+t)",
        "空间复杂度": "O(n+t)",
        "设计思想": "计数, 预计算位置, 映射",
        "适用场景": "需要高效转置稀疏矩阵（顺序存储）"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "03DS012",
      "name": "广义表",
      "attributes": {
        "难度": "高级",
        "内容": "线性表的推广，是n(n>=0)个元素的有限序列，其中元素可以是原子（单元素）或子表（本身也是广义表）。具有递归定义特性。",
        "存储开销": "O(N) (N为原子和子表结点总数)",
        "核心特性": "递归结构, 元素可为表"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "03CON004",
      "name": "单元素",
      "attributes": {
        "难度": "入门",
        "内容": "广义表中的基本数据项，不可再分解，也称为原子（Atom）。区别于子表。"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "03CON005",
      "name": "子表",
      "attributes": {
        "难度": "入门",
        "内容": "广义表中的一种元素，其本身也是一个广义表。"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "03CON006",
      "name": "表头",
      "attributes": {
        "难度": "入门",
        "内容": "非空广义表的第一个元素。可以是原子或子表。"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "03CON007",
      "name": "表尾",
      "attributes": {
        "难度": "入门",
        "内容": "非空广义表除去表头元素后，由其余元素组成的广义表。表尾总是一个广义表（可能为空）。"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "03CON008",
      "name": "广义表长度",
      "attributes": {
        "难度": "入门",
        "内容": "广义表中最顶层元素的个数。"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "03CON009",
      "name": "广义表深度",
      "attributes": {
        "难度": "入门",
        "内容": "广义表中括号嵌套的最大层数。空表深度为1（或0，定义可能不同，此处按文本为1），原子深度为0。"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "03DS013",
      "name": "广义表链接存储",
      "attributes": {
        "难度": "高级",
        "内容": "广义表的常用存储结构，采用动态链接。结点通常包含一个标志域(tag)区分原子/子表，一个联合体存储原子值(data)或子表指针(sublist)，以及一个指向下一个兄弟元素的指针(next)。也称为头尾链表表示法。",
        "存储开销": "O(N) (N为结点总数)",
        "核心特性": "递归结构表示, 动态"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "03CON010",
      "name": "表头附加结点",
      "attributes": {
        "难度": "入门",
        "内容": "在广义表链接存储的实际表头结点前增加的一个额外的表类型结点。该附加结点的sublist域指向真正的第一个元素（或子表头），next域通常为空。使用它可以统一对空表和非空表的处理，简化某些操作。"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "03ALG024",
      "name": "求广义表长度",
      "attributes": {
        "难度": "中等",
        "内容": "计算广义表顶层元素的个数。对于链接存储结构，即计算顶层链表的结点数。",
        "时间复杂度": "O(L) (L为顶层长度)",
        "空间复杂度": "O(L) (递归) 或 O(1) (迭代)",
        "设计思想": "遍历顶层链表, 递归/迭代计数",
        "适用场景": "获取广义表顶层大小"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "03ALG025",
      "name": "求广义表深度",
      "attributes": {
        "难度": "高级",
        "内容": "计算广义表中括号嵌套的最大层数。递归算法：遍历当前层，对每个子表递归求深度，取最大深度加1。",
        "时间复杂度": "O(N) (N为结点总数)",
        "空间复杂度": "O(D) (D为最大深度)",
        "设计思想": "递归遍历",
        "适用场景": "分析广义表结构复杂度"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "03ALG026",
      "name": "建立广义表存储结构",
      "attributes": {
        "难度": "高级",
        "内容": "根据输入的字符串表示（如\"(a,(b,c))\"）递归地构建广义表的链接存储结构。",
        "时间复杂度": "O(n) (n为输入长度/结点数)",
        "空间复杂度": "O(n) (最坏情况递归深度)",
        "设计思想": "递归构建, 字符串解析",
        "适用场景": "从文本表示创建广义表实例"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "03ALG027",
      "name": "打印广义表",
      "attributes": {
        "难度": "高级",
        "内容": "将广义表的链接存储结构转换回其标准的括号表示法字符串并输出。",
        "时间复杂度": "O(n) (n为结点总数)",
        "空间复杂度": "O(D) (D为最大深度)",
        "设计思想": "递归遍历, 格式化输出",
        "适用场景": "查看或序列化广义表"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    }
  ],
  "relations": [
    {
      "type": "理论依赖",
      "关系ID": "03REL001",
      "source": "03CON001",
      "target": "03DS001",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "03REL002",
      "source": "03ALG001",
      "target": "03DS001",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "03REL003",
      "source": "03ALG002",
      "target": "03DS001",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "03REL004",
      "source": "03ALG003",
      "target": "03DS001",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "03REL005",
      "source": "03ALG004",
      "target": "03DS001",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "03REL006",
      "source": "03ALG005",
      "target": "03DS001",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "03REL007",
      "source": "03ALG006",
      "target": "03DS001",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "03REL008",
      "source": "03ALG007",
      "target": "03DS001",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "03REL009",
      "source": "03ALG008",
      "target": "03DS001",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "03REL010",
      "source": "03ALG009",
      "target": "03DS001",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "03REL011",
      "source": "03ALG010",
      "target": "03DS001",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "03REL012",
      "source": "03ALG011",
      "target": "03DS001",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "03REL013",
      "source": "03ALG012",
      "target": "03DS001",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "03REL014",
      "source": "03ALG013",
      "target": "03DS001",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "继承",
      "关系ID": "03REL015",
      "source": "03DS001",
      "target": "03DS002",
      "attributes": {
        "约束条件": "使用连续内存（数组）存储"
      }
    },
    {
      "type": "使用",
      "关系ID": "03REL016",
      "source": "03DS002",
      "target": "03DS003",
      "attributes": {
        "使用角色": "底层存储"
      }
    },
    {
      "type": "使用",
      "关系ID": "03REL017",
      "source": "03ALG015",
      "target": "03ALG014",
      "attributes": {
        "使用角色": "排序核心"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "03REL018",
      "source": "03ALG015",
      "target": "03DS001",
      "attributes": {
        "必需性": "否"
      }
    },
    {
      "type": "继承",
      "关系ID": "03REL019",
      "source": "03DS001",
      "target": "03DS004",
      "attributes": {
        "约束条件": "使用链式结构存储"
      }
    },
    {
      "type": "使用",
      "关系ID": "03REL020",
      "source": "03DS004",
      "target": "03DS005",
      "attributes": {
        "使用角色": "底层存储"
      }
    },
    {
      "type": "继承",
      "关系ID": "03REL021",
      "source": "03CON002",
      "target": "03DS006",
      "attributes": {
        "约束条件": "非零元素远少于零元素"
      }
    },
    {
      "type": "使用",
      "关系ID": "03REL022",
      "source": "03DS006",
      "target": "03CON003",
      "attributes": {
        "使用角色": "表示非零元素"
      }
    },
    {
      "type": "使用",
      "关系ID": "03REL023",
      "source": "03DS007",
      "target": "03CON003",
      "attributes": {
        "使用角色": "构成元素"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "03REL024",
      "source": "03DS007",
      "target": "03DS006",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "03REL025",
      "source": "03ALG016",
      "target": "03DS006",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "03REL026",
      "source": "03ALG017",
      "target": "03DS006",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "03REL027",
      "source": "03ALG018",
      "target": "03DS006",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "03REL028",
      "source": "03ALG019",
      "target": "03DS006",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "03REL029",
      "source": "03ALG020",
      "target": "03DS006",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "03REL030",
      "source": "03ALG021",
      "target": "03DS006",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "继承",
      "关系ID": "03REL031",
      "source": "03DS007",
      "target": "03DS008",
      "attributes": {
        "约束条件": "使用结构体包含数组实现"
      }
    },
    {
      "type": "使用",
      "关系ID": "03REL032",
      "source": "03DS008",
      "target": "03DS003",
      "attributes": {
        "使用角色": "存储三元组"
      }
    },
    {
      "type": "继承",
      "关系ID": "03REL033",
      "source": "03DS009",
      "target": "03DS010",
      "attributes": {
        "约束条件": "使用行指针向量+行链表"
      }
    },
    {
      "type": "使用",
      "关系ID": "03REL034",
      "source": "03DS010",
      "target": "03DS003",
      "attributes": {
        "使用角色": "行指针向量"
      }
    },
    {
      "type": "使用",
      "关系ID": "03REL035",
      "source": "03DS010",
      "target": "03DS005",
      "attributes": {
        "使用角色": "存储行内非零元"
      }
    },
    {
      "type": "继承",
      "关系ID": "03REL036",
      "source": "03DS009",
      "target": "03DS011",
      "attributes": {
        "约束条件": "使用行列指针向量+十字链表结点"
      }
    },
    {
      "type": "使用",
      "关系ID": "03REL037",
      "source": "03DS011",
      "target": "03DS003",
      "attributes": {
        "使用角色": "行/列指针向量"
      }
    },
    {
      "type": "使用",
      "关系ID": "03REL038",
      "source": "03DS011",
      "target": "03DS005",
      "attributes": {
        "使用角色": "构成行链和列链"
      }
    },
    {
      "type": "变体",
      "关系ID": "03REL039",
      "source": "03ALG016",
      "target": "03ALG022",
      "attributes": {
        "变体类型": "基于顺序存储的实现"
      }
    },
    {
      "type": "优化",
      "关系ID": "03REL040",
      "source": "03ALG022",
      "target": "03ALG023",
      "attributes": {
        "优化方向": "时间复杂度"
      }
    },
    {
      "type": "变体",
      "关系ID": "03REL041",
      "source": "03ALG016",
      "target": "03ALG023",
      "attributes": {
        "变体类型": "基于顺序存储的高效实现"
      }
    },
    {
      "type": "使用",
      "关系ID": "03REL042",
      "source": "03DS012",
      "target": "03CON004",
      "attributes": {
        "使用角色": "构成元素"
      }
    },
    {
      "type": "使用",
      "关系ID": "03REL043",
      "source": "03DS012",
      "target": "03CON005",
      "attributes": {
        "使用角色": "构成元素 (递归)"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "03REL044",
      "source": "03CON005",
      "target": "03DS012",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "继承",
      "关系ID": "03REL045",
      "source": "03DS012",
      "target": "03DS013",
      "attributes": {
        "约束条件": "使用带标志位的递归链式结点"
      }
    },
    {
      "type": "使用",
      "关系ID": "03REL046",
      "source": "03DS013",
      "target": "03CON010",
      "attributes": {
        "使用角色": "简化操作 (可选)"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "03REL047",
      "source": "03ALG024",
      "target": "03DS012",
      "attributes": {
        "必需性": "否"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "03REL048",
      "source": "03ALG025",
      "target": "03DS012",
      "attributes": {
        "必需性": "否"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "03REL049",
      "source": "03ALG026",
      "target": "03DS012",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "03REL050",
      "source": "03ALG027",
      "target": "03DS012",
      "attributes": {
        "必需性": "是"
      }
    }
  ]
}