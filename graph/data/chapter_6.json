{
  "entities": [
    {
      "type": "数据结构",
      "ID": "06DS001",
      "name": "二叉搜索树",
      "attributes": {
        "难度": "中等",
        "内容": "一种特殊的二叉树，也称为二叉排序树，它的左子树所有结点的关键字均小于根结点关键字，右子树所有结点的关键字均大于根结点关键字，且其左、右子树本身又各是一棵二叉搜索树",
        "存储开销": "O(n)",
        "核心特性": "结点关键字按照左子树、根和右子树有序"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "06ALG001",
      "name": "Find",
      "attributes": {
        "难度": "中等",
        "内容": "在二叉搜索树BST查找等于给定值item元素，若查找成功则返回true，并由item带回该元素值，否则返回false",
        "时间复杂度": "平均情况O(logn),最差情况O(n)",
        "空间复杂度": "递归算法空间复杂度平均情况O(logn),最差情况O(n),非递归算法空间复杂度O(1)",
        "设计思想": "递归或迭代",
        "适用场景": "在二叉搜索树中查找特定元素"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "06ALG002",
      "name": "Update",
      "attributes": {
        "难度": "中等",
        "内容": "在二叉搜索树BST查找等于给定值item元素，若查找成功则用item值更新该元素并返回true，否则返回false",
        "时间复杂度": "平均情况O(logn),最差情况O(n)",
        "空间复杂度": "递归算法空间复杂度平均情况O(logn),最差情况O(n),非递归算法空间复杂度O(1)",
        "设计思想": "递归或迭代",
        "适用场景": "更新二叉搜索树中特定元素"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "06ALG003",
      "name": "Insert",
      "attributes": {
        "难度": "中等",
        "内容": "向二叉搜索树BST插入元素item，使得插入后仍保持一棵二叉搜索树",
        "时间复杂度": "平均情况O(logn),最差情况O(n)",
        "空间复杂度": "递归算法空间复杂度平均情况O(logn),最差情况O(n),非递归算法空间复杂度O(1)",
        "设计思想": "递归或迭代",
        "适用场景": "向二叉搜索树中插入新元素"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "06ALG004",
      "name": "Delete",
      "attributes": {
        "难度": "高级",
        "内容": "二叉搜索树中删除等于给定值item结点，若删除成功则返回true，否则返回false",
        "时间复杂度": "平均情况O(logn)，最差情况O(n)",
        "空间复杂度": "对于递归算法来说，平均情况O(logn)，最差情况O(n)，对于非递归算法来说均O(1)",
        "设计思想": "递归",
        "适用场景": "从二叉搜索树中删除指定元素"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "06ALG005",
      "name": "CreateBSTree",
      "attributes": {
        "难度": "中等",
        "内容": "利用数组n个元素建立二叉搜索树",
        "时间复杂度": "O(ntimeslgn)",
        "空间复杂度": "O(n)",
        "设计思想": "循环插入",
        "适用场景": "从数组构建二叉搜索树"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "06DS002",
      "name": "堆",
      "attributes": {
        "难度": "中等",
        "内容": "分为小根堆大根堆两种,小根堆的根结点值小于等于左右孩子结点值,大根堆的根结点值大于等于左右孩子结点值",
        "存储开销": "O(n)",
        "核心特性": "完全二叉树，堆顶结点具有最小值（小根堆）或最大值（大根堆）"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "06ALG006",
      "name": "InitHeap",
      "attributes": {
        "难度": "入门",
        "内容": "初始化堆为空",
        "时间复杂度": "O(1)",
        "空间复杂度": "O(1)",
        "设计思想": "初始化",
        "适用场景": "初始化堆"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "06ALG007",
      "name": "ClearHeap",
      "attributes": {
        "难度": "入门",
        "内容": "清除堆,使之变为空",
        "时间复杂度": "O(1)",
        "空间复杂度": "O(1)",
        "设计思想": "释放内存",
        "适用场景": "清除堆"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "06ALG008",
      "name": "EmptyHeap",
      "attributes": {
        "难度": "入门",
        "内容": "判断堆是否为空",
        "时间复杂度": "O(1)",
        "空间复杂度": "O(1)",
        "设计思想": "判断堆长度",
        "适用场景": "判断堆是否为空"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "06ALG009",
      "name": "InsertHeap",
      "attributes": {
        "难度": "中等",
        "内容": "向堆插入元素",
        "时间复杂度": "O(logn)",
        "空间复杂度": "O(1)",
        "设计思想": "向上调整",
        "适用场景": "向堆中插入元素"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "06ALG010",
      "name": "DeleteHeap",
      "attributes": {
        "难度": "中等",
        "内容": "从堆删除堆顶元素并返回",
        "时间复杂度": "O(logn)",
        "空间复杂度": "O(1)",
        "设计思想": "向下调整",
        "适用场景": "从堆中删除堆顶元素"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "06DS003",
      "name": "哈夫曼树",
      "attributes": {
        "难度": "中等",
        "内容": "又称做最优二叉树。它n个带权叶子结点构成所有二叉树，带权路径长度WPL最小二叉树",
        "存储开销": "O(n)",
        "核心特性": "带权路径长度最小"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "06ALG011",
      "name": "CreateHuffman",
      "attributes": {
        "难度": "中等",
        "内容": "根据数组an个权值建立一棵哈夫曼树",
        "时间复杂度": "O(n^2)",
        "空间复杂度": "O(n)",
        "设计思想": "贪心算法",
        "适用场景": "构建哈夫曼树"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "06ALG012",
      "name": "WeightPathLength",
      "attributes": {
        "难度": "中等",
        "内容": "根据FBT指针所指向哈夫曼树求出带权路径长度",
        "时间复杂度": "O(n)",
        "空间复杂度": "O(n)",
        "设计思想": "递归",
        "适用场景": "计算哈夫曼树的带权路径长度"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "06ALG013",
      "name": "HuffManCoding",
      "attributes": {
        "难度": "中等",
        "内容": "根据FBT指针所指向哈夫曼树输出每个叶子编码",
        "时间复杂度": "O(n)",
        "空间复杂度": "O(n)",
        "设计思想": "递归",
        "适用场景": "生成哈夫曼编码"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "06DS004",
      "name": "线索二叉树",
      "attributes": {
        "难度": "高级",
        "内容": "把每个结点中空着左指针域右指针域用于分别指向某种遍历次序前驱结点后继结点,则遍历这种二叉树时,可由此信息直接找到该遍历次序下前驱结点或后继结点",
        "存储开销": "O(n)",
        "核心特性": "利用空指针域存储前驱和后继信息，提高遍历速度"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "06ALG014",
      "name": "InThread",
      "attributes": {
        "难度": "高级",
        "内容": "对二叉树HBT加中序线索",
        "时间复杂度": "O(n)",
        "空间复杂度": "O(1)",
        "设计思想": "中序遍历",
        "适用场景": "中序线索化二叉树"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "06ALG015",
      "name": "InsertThreed",
      "attributes": {
        "难度": "中等",
        "内容": "向带线索二叉搜索树插入元素，但不链接线索",
        "时间复杂度": "平均情况O(logn),最差情况O(n)",
        "空间复杂度": "O(1)",
        "设计思想": "二叉搜索树插入",
        "适用场景": "向带线索标志域的二叉搜索树插入元素，但不进行中序线索链接"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "06ALG016",
      "name": "CreateThreed",
      "attributes": {
        "难度": "中等",
        "内容": "利用数组n个元素建立带线索标志域二叉搜索树，但不进行中序线索链接",
        "时间复杂度": "O(ntimeslgn)",
        "空间复杂度": "O(n)",
        "设计思想": "循环插入",
        "适用场景": "建立带线索标志域的二叉搜索树，但不进行中序线索链接"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "06ALG017",
      "name": "InsertThreed1",
      "attributes": {
        "难度": "高级",
        "内容": "向带线索二叉搜索树插入元素，并进行线索链接",
        "时间复杂度": "平均情况O(logn),最差情况O(n)",
        "空间复杂度": "O(1)",
        "设计思想": "二叉搜索树插入",
        "适用场景": "向带线索标志域的二叉搜索树插入元素，并进行实际线索链接"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "06ALG018",
      "name": "CreateThread1",
      "attributes": {
        "难度": "高级",
        "内容": "利用数组n个元素建立带线索二叉搜索树",
        "时间复杂度": "O(ntimeslgn)",
        "空间复杂度": "O(n)",
        "设计思想": "循环插入",
        "适用场景": "建立带线索标志域的二叉搜索树"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "06ALG019",
      "name": "InorderNext",
      "attributes": {
        "难度": "中等",
        "内容": "返回p结点中继后继结点",
        "时间复杂度": "O(1)",
        "空间复杂度": "O(1)",
        "设计思想": "线索",
        "适用场景": "查找中序线索二叉树中指定结点的后继结点"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "06ALG020",
      "name": "ThInorder",
      "attributes": {
        "难度": "中等",
        "内容": "按中序线索遍历二叉树HBT",
        "时间复杂度": "O(n)",
        "空间复杂度": "O(1)",
        "设计思想": "线索",
        "适用场景": "遍历中序线索二叉树"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "06ALG021",
      "name": "PrintTTreel",
      "attributes": {
        "难度": "入门",
        "内容": "以广义表形式输出一棵线索二叉树",
        "时间复杂度": "O(n)",
        "空间复杂度": "O(n)",
        "设计思想": "递归",
        "适用场景": "输出线索二叉树"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "06DS005",
      "name": "平衡二叉树",
      "attributes": {
        "难度": "高级",
        "内容": "简称平衡树，又称为AVL树。若一棵二叉树每个结点左、右子树高度至多相差1，则称此树为平衡",
        "存储开销": "O(n)",
        "核心特性": "每个结点的左子树和右子树的高度最多相差1"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "06CON001",
      "name": "平衡因子",
      "attributes": {
        "难度": "中等",
        "内容": "二叉树每个结点左子树高度减去右子树高度"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    }
  ],
  "relations": [
    {
      "type": "继承",
      "关系ID": "06REL001",
      "source": "06DS001",
      "target": "06DS005",
      "attributes": {
        "父类 ID": "06DS001",
        "子类 ID": "06DS005",
        "约束条件": "每个结点的左子树和右子树的高度最多相差1"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "06REL002",
      "source": "06ALG001",
      "target": "06DS001",
      "attributes": {
        "算法 ID": "06ALG001",
        "数据结构 ID": "06DS001",
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "06REL003",
      "source": "06ALG002",
      "target": "06DS001",
      "attributes": {
        "算法 ID": "06ALG002",
        "数据结构 ID": "06DS001",
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "06REL004",
      "source": "06ALG003",
      "target": "06DS001",
      "attributes": {
        "算法 ID": "06ALG003",
        "数据结构 ID": "06DS001",
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "06REL005",
      "source": "06ALG004",
      "target": "06DS001",
      "attributes": {
        "算法 ID": "06ALG004",
        "数据结构 ID": "06DS001",
        "必需性": "是"
      }
    },
    {
      "type": "使用",
      "关系ID": "06REL006",
      "source": "06ALG005",
      "target": "06DS001",
      "attributes": {
        "使用方ID": "06ALG005",
        "被使用的数据结构 ID": "06DS001",
        "使用角色": "构建"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "06REL007",
      "source": "06ALG009",
      "target": "06DS002",
      "attributes": {
        "算法 ID": "06ALG009",
        "数据结构 ID": "06DS002",
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "06REL008",
      "source": "06ALG010",
      "target": "06DS002",
      "attributes": {
        "算法 ID": "06ALG010",
        "数据结构 ID": "06DS002",
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "06REL009",
      "source": "06ALG006",
      "target": "06DS002",
      "attributes": {
        "算法 ID": "06ALG006",
        "数据结构 ID": "06DS002",
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "06REL010",
      "source": "06ALG007",
      "target": "06DS002",
      "attributes": {
        "算法 ID": "06ALG007",
        "数据结构 ID": "06DS002",
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "06REL011",
      "source": "06ALG008",
      "target": "06DS002",
      "attributes": {
        "算法 ID": "06ALG008",
        "数据结构 ID": "06DS002",
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "06REL012",
      "source": "06ALG011",
      "target": "06DS003",
      "attributes": {
        "算法 ID": "06ALG011",
        "数据结构 ID": "06DS003",
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "06REL013",
      "source": "06ALG012",
      "target": "06DS003",
      "attributes": {
        "算法 ID": "06ALG012",
        "数据结构 ID": "06DS003",
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "06REL014",
      "source": "06ALG013",
      "target": "06DS003",
      "attributes": {
        "算法 ID": "06ALG013",
        "数据结构 ID": "06DS003",
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "06REL015",
      "source": "06ALG014",
      "target": "06DS004",
      "attributes": {
        "算法 ID": "06ALG014",
        "数据结构 ID": "06DS004",
        "必需性": "是"
      }
    },
    {
      "type": "使用",
      "关系ID": "06REL016",
      "source": "06ALG015",
      "target": "06DS004",
      "attributes": {
        "使用方ID": "06ALG015",
        "被使用的数据结构 ID": "06DS004",
        "使用角色": "构建"
      }
    },
    {
      "type": "使用",
      "关系ID": "06REL017",
      "source": "06ALG016",
      "target": "06DS004",
      "attributes": {
        "使用方ID": "06ALG016",
        "被使用的数据结构 ID": "06DS004",
        "使用角色": "构建"
      }
    },
    {
      "type": "使用",
      "关系ID": "06REL018",
      "source": "06ALG017",
      "target": "06DS004",
      "attributes": {
        "使用方ID": "06ALG017",
        "被使用的数据结构 ID": "06DS004",
        "使用角色": "构建"
      }
    },
    {
      "type": "使用",
      "关系ID": "06REL019",
      "source": "06ALG018",
      "target": "06DS004",
      "attributes": {
        "使用方ID": "06ALG018",
        "被使用的数据结构 ID": "06DS004",
        "使用角色": "构建"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "06REL020",
      "source": "06ALG019",
      "target": "06DS004",
      "attributes": {
        "算法 ID": "06ALG019",
        "数据结构 ID": "06DS004",
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "06REL021",
      "source": "06ALG020",
      "target": "06DS004",
      "attributes": {
        "算法 ID": "06ALG020",
        "数据结构 ID": "06DS004",
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "06REL022",
      "source": "06ALG021",
      "target": "06DS004",
      "attributes": {
        "算法 ID": "06ALG021",
        "数据结构 ID": "06DS004",
        "必需性": "是"
      }
    },
     {
      "type": "理论依赖",
      "关系ID": "06REL023",
      "source": "06DS005",
      "target": "06CON001",
      "attributes": {
        "实体 ID": "06DS005",
        "概念 ID": "06CON001",
        "依赖强度": "强"
      }
    }
  ]
}