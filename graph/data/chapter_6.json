{
  "entities": [
    {
      "type": "数据结构",
      "ID": "06DS001",
      "name": "特殊二叉树",
      "attributes": {
        "难度": "中等",
        "内容": "包括二叉搜索树、堆、哈夫曼树、线索二叉树和平衡二叉树等，它们都有着不同的应用。",
        "存储开销": "通常为链接结构，部分（如堆）可用顺序结构",
        "核心特性": "基于二叉树结构的特定变种，具有各自独特的性质和用途",
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "06DS002",
      "name": "二叉搜索树",
      "attributes": {
        "难度": "中等",
        "内容": "又称二叉排序树。空树或非空二叉树，特性：若左子树非空，则左子树所有结点关键字<根结点关键字；若右子树非空，则右子树所有结点关键字>根结点关键字；左右子树本身也是二叉搜索树。中序遍历结果为有序序列。",
        "存储开销": "通常为链接结构（如BTreeNode）",
        "核心特性": "有序性（按关键字），可查找性",
        "适用场景": "高效查找、插入、删除元素"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "06CON001",
      "name": "二叉树",
      "attributes": {
        "难度": "入门",
        "内容": "每个结点最多有两个子树的树结构。"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "06CON002",
      "name": "关键字",
      "attributes": {
        "难度": "入门",
        "内容": "结点中用于比较、排序或查找的值或域。"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "06CON003",
      "name": "中序遍历",
      "attributes": {
        "难度": "入门",
        "内容": "遍历二叉树的一种方式（左子树-根结点-右子树）。对二叉搜索树进行中序遍历可得到有序的结点序列。"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "06CON004",
      "name": "抽象数据类型",
      "attributes": {
        "难度": "入门",
        "内容": "定义数据对象、数据对象间关系以及对数据对象的基本操作集合。"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "06ALG001",
      "name": "查找 (二叉搜索树)",
      "attributes": {
        "难度": "入门",
        "内容": "在二叉搜索树BST中查找等于给定值item的元素。若找到返回true并带回值，否则返回false。可递归或非递归实现。",
        "时间复杂度": "平均O(log n)，最坏O(n)",
        "空间复杂度": "递归: 平均O(log n)，最坏O(n); 非递归: O(1)",
        "设计思想": "比较、递归/迭代",
        "适用场景": "在BST中定位元素"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "06ALG002",
      "name": "更新 (二叉搜索树)",
      "attributes": {
        "难度": "入门",
        "内容": "在二叉搜索树BST中查找等于给定值item的元素，若找到则用item的值更新该元素并返回true，否则返回false。算法与查找类似。",
        "时间复杂度": "平均O(log n)，最坏O(n)",
        "空间复杂度": "类似查找算法",
        "设计思想": "基于查找",
        "适用场景": "修改BST中结点值"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "06ALG003",
      "name": "插入 (二叉搜索树)",
      "attributes": {
        "难度": "入门",
        "内容": "向二叉搜索树BST中插入一个元素item，使得插入后仍保持为一棵二叉搜索树。可递归或非递归实现。",
        "时间复杂度": "平均O(log n)，最坏O(n)",
        "空间复杂度": "递归: 平均O(log n)，最坏O(n); 非递归: O(1)",
        "设计思想": "比较、递归/迭代查找插入位置",
        "适用场景": "向BST添加新元素"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "06ALG004",
      "name": "删除 (二叉搜索树)",
      "attributes": {
        "难度": "中等",
        "内容": "从二叉搜索树中删除等于给定值item的结点。需分情况处理：删除叶子结点、删除单支结点、删除双支结点（通常用中序前驱/后继替换）。保持BST特性。",
        "时间复杂度": "平均O(log n)，最坏O(n)",
        "空间复杂度": "递归: 平均O(log n)，最坏O(n); 非递归: O(1)",
        "设计思想": "查找、分类讨论（叶/单/双）、中序前驱/后继替换",
        "适用场景": "从BST移除元素"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "06CON005",
      "name": "递归",
      "attributes": {
        "难度": "入门",
        "内容": "一个函数直接或间接调用自身来解决问题的方法。"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "06CON006",
      "name": "末尾递归",
      "attributes": {
        "难度": "入门",
        "内容": "递归调用是函数体中最后一条可执行语句。可以被优化，避免栈空间累积。"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "06CON007",
      "name": "非递归算法",
      "attributes": {
        "难度": "入门",
        "内容": "使用循环等迭代结构实现的算法，不使用函数自身调用。"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "06CON008",
      "name": "时间复杂度",
      "attributes": {
        "难度": "入门",
        "内容": "衡量算法执行时间随输入规模增长的趋势，通常用大O表示法。"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "06CON009",
      "name": "空间复杂度",
      "attributes": {
        "难度": "入门",
        "内容": "衡量算法执行期间所需额外辅助存储空间随输入规模增长的趋势。"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "06CON010",
      "name": "理想平衡树",
      "attributes": {
        "难度": "中等",
        "内容": "结点分布尽可能均匀，高度接近log n的二叉树，查找效率最高。"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "06CON011",
      "name": "单支树",
      "attributes": {
        "难度": "入门",
        "内容": "一种退化的二叉树，形态类似于线性表或链表，所有结点只有左子树或只有右子树。"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "06ALG005",
      "name": "CreateBSTree",
      "attributes": {
        "难度": "入门",
        "内容": "利用二叉搜索树的插入算法，根据数组a中的n个元素建立一棵二叉搜索树。",
        "时间复杂度": "平均O(n log n)，最坏O(n^2)",
        "空间复杂度": "取决于插入算法的空间复杂度",
        "设计思想": "迭代调用插入操作",
        "适用场景": "从一组无序数据批量构建二叉搜索树"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "06CON012",
      "name": "叶子结点",
      "attributes": {
        "难度": "入门",
        "内容": "树中度为0的结点，即没有子结点的结点。"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "06CON013",
      "name": "分支结点",
      "attributes": {
        "难度": "入门",
        "内容": "树中度不为0的结点，即至少有一个子结点的非叶结点。"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "06CON014",
      "name": "单支结点",
      "attributes": {
        "难度": "入门",
        "内容": "只有一个子结点的分支结点（度为1）。"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "06CON015",
      "name": "双支结点",
      "attributes": {
        "难度": "入门",
        "内容": "有两个子结点的分支结点（度为2）。"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "06CON016",
      "name": "中序前驱",
      "attributes": {
        "难度": "入门",
        "内容": "在中序遍历序列中，位于某结点之前的那个结点。在BST删除双支结点时，常用其左子树的最右结点作为中序前驱。"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "06CON017",
      "name": "中序后继",
      "attributes": {
        "难度": "入门",
        "内容": "在中序遍历序列中，位于某结点之后的那个结点。在BST删除双支结点时可用其右子树的最左结点作为中序后继。"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "06DS003",
      "name": "堆",
      "attributes": {
        "难度": "中等",
        "内容": "一种特殊的完全二叉树，分为小根堆（父结点值<=子结点值）和大根堆（父结点值>=子结点值）。堆顶元素是最小或最大值。",
        "存储开销": "通常采用顺序存储（数组），空间利用率高",
        "核心特性": "堆序性（父子关系），完全二叉树结构",
        "适用场景": "优先级队列实现，堆排序"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "06DS004",
      "name": "小根堆",
      "attributes": {
        "难度": "中等",
        "内容": "父结点的值小于或等于其子结点值的堆。根结点（堆顶）是整个堆中的最小值。",
        "存储开销": "同堆",
        "核心特性": "父<=子，堆顶最小",
        "适用场景": "求最小值，升序排列"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "06DS005",
      "name": "大根堆",
      "attributes": {
        "难度": "中等",
        "内容": "父结点的值大于或等于其子结点值的堆。根结点（堆顶）是整个堆中的最大值。",
        "存储开销": "同堆",
        "核心特性": "父>=子，堆顶最大",
        "适用场景": "求最大值，降序排列"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "06DS006",
      "name": "完全二叉树",
      "attributes": {
        "难度": "入门",
        "内容": "一棵深度为k，有n个结点的二叉树，当且仅当其每一个结点都与深度为k的满二叉树中编号从1至n的结点一一对应时，称为完全二叉树。除最后一层外，其余层都是满的，且最后一层的结点都集中在左侧。",
        "存储开销": "非常适合使用顺序存储结构（数组）",
        "核心特性": "结构规整，适合顺序存储，结点编号与数组下标有规律对应",
        "适用场景": "堆的基础结构"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "06CON018",
      "name": "堆顶",
      "attributes": {
        "难度": "入门",
        "内容": "堆的根结点，即数组存储中的第一个元素（通常是下标0或1）。"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "06ALG006",
      "name": "堆初始化",
      "attributes": {
        "难度": "入门",
        "内容": "创建一个空的堆结构，通常包括分配存储空间（如数组）和设置堆大小为0。",
        "时间复杂度": "O(1)（仅分配空间）",
        "空间复杂度": "O(MaxSize)（分配数组）",
        "设计思想": "资源分配和状态设置",
        "适用场景": "开始使用堆之前"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "06ALG007",
      "name": "堆清除",
      "attributes": {
        "难度": "入门",
        "内容": "释放堆所占用的存储空间，并将堆状态重置为空。",
        "时间复杂度": "O(1)（仅释放空间）",
        "空间复杂度": "O(1)",
        "设计思想": "资源回收",
        "适用场景": "不再使用堆时"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "06ALG008",
      "name": "堆判空",
      "attributes": {
        "难度": "入门",
        "内容": "检查堆中当前包含的元素数量是否为0。",
        "时间复杂度": "O(1)",
        "空间复杂度": "O(1)",
        "设计思想": "状态检查",
        "适用场景": "执行插入、删除操作前的检查"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "06ALG009",
      "name": "堆插入",
      "attributes": {
        "难度": "中等",
        "内容": "将新元素添加到堆的末尾，然后通过与其父结点比较和交换（向上调整/上滤），恢复堆的性质。",
        "时间复杂度": "O(log n)",
        "空间复杂度": "O(1)",
        "设计思想": "上滤调整",
        "适用场景": "向堆中添加元素，维护优先级队列"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "06ALG010",
      "name": "堆删除",
      "attributes": {
        "难度": "中等",
        "内容": "通常指删除堆顶元素。将堆顶元素与堆底元素交换，移除堆底元素（原堆顶），然后将新的堆顶元素通过与其子结点比较和交换（向下调整/下滤），恢复堆的性质。",
        "时间复杂度": "O(log n)",
        "空间复杂度": "O(1)",
        "设计思想": "下滤调整",
        "适用场景": "获取并移除堆中优先级最高（最大或最小）的元素"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "06CON019",
      "name": "路径",
      "attributes": {
        "难度": "入门",
        "内容": "在树中，从一个结点到另一个结点的唯一结点序列。"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "06CON020",
      "name": "路径长度",
      "attributes": {
        "难度": "入门",
        "内容": "路径上所经过的分支（边）的数量，等于路径上的结点数减1。"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "06CON021",
      "name": "结点的权",
      "attributes": {
        "难度": "入门",
        "内容": "赋予树中结点的一个具有特定意义的数值，如字符频率。"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "06CON022",
      "name": "带权路径长度",
      "attributes": {
        "难度": "入门",
        "内容": "从树根结点到该结点之间的路径长度与该结点上权的乘积。"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "06CON023",
      "name": "树的带权路径长度 (WPL)",
      "attributes": {
        "难度": "入门",
        "内容": "树中所有叶子结点的带权路径长度之和，记为 WPL = Σ(w_i * l_i)。"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "06DS007",
      "name": "哈夫曼树",
      "attributes": {
        "难度": "中等",
        "内容": "又称最优二叉树。对于n个带权叶子结点构成的所有二叉树中，带权路径长度（WPL）最小的二叉树。构造方法：每次选取权值最小的两棵树合并。",
        "存储开销": "通常为链接结构",
        "核心特性": "WPL最小，权值大的叶结点离根近，只有度为0和2的结点",
        "适用场景": "哈夫曼编码（数据压缩）"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "06CON024",
      "name": "森林",
      "attributes": {
        "难度": "入门",
        "内容": "m（m>=0）棵互不相交的树的集合。"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "06ALG011",
      "name": "构造哈夫曼树",
      "attributes": {
        "难度": "中等",
        "内容": "根据n个给定的权值构造哈夫曼树。步骤：(1) 初始化n棵只有一个根结点的树构成森林。(2) 重复n-1次：从森林中选出权值最小的两棵树，合并成一棵新树（权值为两者之和），新树加入森林，被合并的两棵树移出森林。(3) 最终森林中剩下的唯一一棵树即为哈夫曼树。",
        "时间复杂度": "O(n log n)（使用优先队列/堆优化选择过程）",
        "空间复杂度": "O(n)",
        "设计思想": "贪心算法",
        "适用场景": "为哈夫曼编码准备哈夫曼树"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "06ALG012",
      "name": "计算WPL",
      "attributes": {
        "难度": "入门",
        "内容": "计算给定哈夫曼树（或任意带权叶子结点的二叉树）的带权路径长度。通常使用递归方法，累加所有叶子结点的（权值 * 深度）。",
        "时间复杂度": "O(n)（n为结点数）",
        "空间复杂度": "O(height)（递归栈深度）",
        "设计思想": "递归遍历",
        "适用场景": "验证哈夫曼树构造或计算编码代价"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "06CON025",
      "name": "等长编码",
      "attributes": {
        "难度": "入门",
        "内容": "对字符集中的所有字符使用相同长度的二进制位进行编码。"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "06CON026",
      "name": "不等长编码",
      "attributes": {
        "难度": "入门",
        "内容": "对字符集中的不同字符可以使用不同长度的二进制位进行编码。通常用于让出现频率高的字符编码更短。"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "06CON027",
      "name": "无前缀编码",
      "attributes": {
        "难度": "入门",
        "内容": "一种编码方案，其中没有任何一个字符的编码是另一个字符编码的前缀。这保证了译码的唯一性，无需分隔符。哈夫曼编码是无前缀编码。"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "06CON028",
      "name": "编码二叉树",
      "attributes": {
        "难度": "入门",
        "内容": "用二叉树结构来表示编码方案。通常约定左分支代表0，右分支代表1。从根到叶子结点的路径构成了该叶子结点代表字符的编码。对于无前缀编码，所有字符都在叶子结点上。"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "06ALG013",
      "name": "哈夫曼编码",
      "attributes": {
        "难度": "中等",
        "内容": "利用已构造好的哈夫曼树，为每个叶子结点（代表字符）生成其对应的二进制编码（从根到叶子的路径，左0右1）。生成的编码是变长的、无前缀的，且能使编码后文本总长度（基于字符频率）最短。",
        "时间复杂度": "O(n)（遍历树生成所有编码）",
        "空间复杂度": "O(height)（递归或存储路径）",
        "设计思想": "树的路径遍历",
        "适用场景": "数据压缩（如文本、文件压缩）"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "06DS008",
      "name": "线索二叉树",
      "attributes": {
        "难度": "中等",
        "内容": "利用二叉链表中空闲的指针域（原本指向NULL的left或right指针）来存储结点在某种遍历序列（如中序）中的前驱和后继结点的地址。需要额外的标志域来区分指针是孩子指针还是线索。",
        "存储开销": "链接结构，每个结点增加两个标志域（ltag, rtag）",
        "核心特性": "线索指针，标志域，便于非递归遍历和查找前驱/后继",
        "适用场景": "需要频繁进行特定顺序遍历或查找前驱/后继的场景"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "06CON029",
      "name": "线索",
      "attributes": {
        "难度": "入门",
        "内容": "在线索二叉树中，存放在结点空指针域中，指向该结点在特定遍历序列中的前驱或后继结点的指针。"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "06CON030",
      "name": "左线索",
      "attributes": {
        "难度": "入门",
        "内容": "也称前驱线索。存放在结点空左指针域中，指向其在特定遍历序列中前驱结点的线索。"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "06CON031",
      "name": "右线索",
      "attributes": {
        "难度": "入门",
        "内容": "也称后继线索。存放在结点空右指针域中，指向其在特定遍历序列中后继结点的线索。"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "06ALG014",
      "name": "线索化",
      "attributes": {
        "难度": "中等",
        "内容": "对一棵二叉树按照某种遍历次序（如中序）添加线索的过程。即遍历树，在访问结点时检查其左右指针是否为空，若为空则根据遍历顺序设置前驱或后继线索，并设置相应的线索标志域。",
        "时间复杂度": "O(n)",
        "空间复杂度": "O(height)（递归实现）",
        "设计思想": "在遍历过程中修改空指针域和标志域",
        "适用场景": "将普通二叉树转换为线索二叉树"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "06CON032",
      "name": "线索标志域",
      "attributes": {
        "难度": "入门",
        "内容": "线索二叉树结点中用于区分对应指针域存放的是孩子指针还是线索的标志。通常有两个：ltag（左）和rtag（右）。"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "06CON033",
      "name": "ltag",
      "attributes": {
        "难度": "入门",
        "内容": "左线索标志域。通常取值：0（或false）表示left指针指向左孩子，1（或true）表示left指针指向前驱线索。"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "06CON034",
      "name": "rtag",
      "attributes": {
        "难度": "入门",
        "内容": "右线索标志域。通常取值：0（或false）表示right指针指向右孩子，1（或true）表示right指针指向后继线索。"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "06DS009",
      "name": "中序线索二叉树",
      "attributes": {
        "难度": "中等",
        "内容": "空指针域指向结点在中序遍历序列中的前驱或后继的线索二叉树。",
        "存储开销": "同线索二叉树",
        "核心特性": "中序线索",
        "适用场景": "需要高效非递归中序遍历或查找中序前驱/后继"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "06ALG015",
      "name": "查找中序后继",
      "attributes": {
        "难度": "入门",
        "内容": "在中序线索二叉树中查找给定结点p的中序后继。方法：若p的rtag为true，则p->right即为后继；若rtag为false，则后继是其右子树中“最左下”的结点。",
        "时间复杂度": "最坏O(height)，若有右线索则O(1)",
        "空间复杂度": "O(1)",
        "设计思想": "利用线索或遍历子树",
        "适用场景": "线索二叉树的中序遍历"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "06ALG016",
      "name": "线索中序遍历",
      "attributes": {
        "难度": "入门",
        "内容": "利用中序线索对线索二叉树进行非递归的中序遍历。方法：(1)找到中序序列的第一个结点（树的最左下结点）。(2)访问该结点。(3)重复查找当前结点的中序后继并访问，直到后继为空。",
        "时间复杂度": "O(n)",
        "空间复杂度": "O(1)",
        "设计思想": "寻找起点+迭代查找后继",
        "适用场景": "高效遍历中序线索二叉树"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "06ALG017",
      "name": "InsertThreed",
      "attributes": {
        "难度": "入门",
        "内容": "向带线索标志域的二叉搜索树插入元素，但不建立或维护线索链接，仅设置新结点的标志域为假。",
        "时间复杂度": "平均O(log n)，最坏O(n)",
        "空间复杂度": "递归: 平均O(log n)，最坏O(n)",
        "设计思想": "标准BST插入，初始化标志域",
        "适用场景": "作为CreateThreed的辅助函数，用于先建树后线索化"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "06ALG018",
      "name": "CreateThreed",
      "attributes": {
        "难度": "入门",
        "内容": "利用InsertThreed算法，根据数组元素建立一个带线索标志域（但未连接线索）的二叉搜索树。",
        "时间复杂度": "平均O(n log n)，最坏O(n^2)",
        "空间复杂度": "取决于InsertThreed",
        "设计思想": "迭代调用基础插入",
        "适用场景": "构建准备进行线索化的二叉搜索树"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "06ALG019",
      "name": "InsertThreed1",
      "attributes": {
        "难度": "中等",
        "内容": "向已线索化的（或带线索结构的）二叉搜索树插入新元素，并在插入后正确维护新结点及其邻居结点的线索关系。",
        "时间复杂度": "平均O(log n)，最坏O(n)",
        "空间复杂度": "O(1)（非递归）",
        "设计思想": "查找插入位置，链接新结点，更新相关线索",
        "适用场景": "动态地向线索二叉搜索树插入元素并保持线索正确性"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "06ALG020",
      "name": "CreateThread1",
      "attributes": {
        "难度": "中等",
        "内容": "利用InsertThread1算法，根据数组元素直接建立一棵带正确线索的二叉搜索树。",
        "时间复杂度": "平均O(n log n)，最坏O(n^2)",
        "空间复杂度": "取决于InsertThread1",
        "设计思想": "迭代调用维护线索的插入操作",
        "适用场景": "一次性构建带线索的二叉搜索树"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "06DS010",
      "name": "平衡二叉树",
      "attributes": {
        "难度": "高级",
        "内容": "简称平衡树，也称AVL树。它或是一棵空树，或是一棵左右子树的高度差的绝对值不超过1，并且左右两棵子树也都是平衡二叉树的二叉搜索树。插入和删除操作后可能需要通过旋转操作（LL, RR, LR, RL）来维持平衡。",
        "存储开销": "链接结构，通常需要额外存储每个结点的平衡因子或高度",
        "核心特性": "自平衡性，查找、插入、删除操作的时间复杂度稳定在O(log n)",
        "适用场景": "需要高效且稳定查找性能的场景，插入删除相对不频繁"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "06CON035",
      "name": "平衡因子",
      "attributes": {
        "难度": "入门",
        "内容": "结点的左子树高度减去其右子树高度的值。在平衡二叉树（AVL树）中，每个结点的平衡因子只能是-1、0或1。"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "06CON036",
      "name": "最小不平衡子树",
      "attributes": {
        "难度": "入门",
        "内容": "在因插入或删除导致AVL树失衡时，以距离插入/删除结点最近的、且平衡因子的绝对值大于1的那个结点作为根的子树。"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "06ALG021",
      "name": "LL型调整",
      "attributes": {
        "难度": "中等",
        "内容": "平衡二叉树的一种旋转调整操作。当在结点A的左孩子B的左子树上插入导致A失衡（平衡因子变为+2）时进行。执行一次右旋操作。",
        "时间复杂度": "O(1)",
        "空间复杂度": "O(1)",
        "设计思想": "右旋",
        "适用场景": "AVL树插入/删除后恢复平衡"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "06ALG022",
      "name": "RR型调整",
      "attributes": {
        "难度": "中等",
        "内容": "平衡二叉树的一种旋转调整操作。当在结点A的右孩子B的右子树上插入导致A失衡（平衡因子变为-2）时进行。执行一次左旋操作。",
        "时间复杂度": "O(1)",
        "空间复杂度": "O(1)",
        "设计思想": "左旋",
        "适用场景": "AVL树插入/删除后恢复平衡"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "06ALG023",
      "name": "LR型调整",
      "attributes": {
        "难度": "中等",
        "内容": "平衡二叉树的一种旋转调整操作。当在结点A的左孩子B的右子树上插入导致A失衡（平衡因子变为+2）时进行。先对B进行左旋，再对A进行右旋（双旋）。",
        "时间复杂度": "O(1)",
        "空间复杂度": "O(1)",
        "设计思想": "左-右双旋",
        "适用场景": "AVL树插入/删除后恢复平衡"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "06ALG024",
      "name": "RL型调整",
      "attributes": {
        "难度": "中等",
        "内容": "平衡二叉树的一种旋转调整操作。当在结点A的右孩子B的左子树上插入导致A失衡（平衡因子变为-2）时进行。先对B进行右旋，再对A进行左旋（双旋）。",
        "时间复杂度": "O(1)",
        "空间复杂度": "O(1)",
        "设计思想": "右-左双旋",
        "适用场景": "AVL树插入/删除后恢复平衡"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    }
  ],
  "relations": [
    {
      "type": "继承",
      "关系ID": "06REL001",
      "source": "06DS002",
      "target": "06CON001",
      "attributes": {}
    },
    {
      "type": "继承",
      "关系ID": "06REL002",
      "source": "06DS002",
      "target": "06DS001",
      "attributes": {}
    },
    {
      "type": "操作绑定",
      "关系ID": "06REL003",
      "source": "06ALG001",
      "target": "06DS002",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "06REL004",
      "source": "06ALG002",
      "target": "06DS002",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "06REL005",
      "source": "06ALG003",
      "target": "06DS002",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "06REL006",
      "source": "06ALG004",
      "target": "06DS002",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "06REL007",
      "source": "06ALG001",
      "target": "06CON008",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "06REL008",
      "source": "06ALG001",
      "target": "06CON009",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "06REL009",
      "source": "06ALG003",
      "target": "06CON008",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "06REL010",
      "source": "06ALG003",
      "target": "06CON009",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "06REL011",
      "source": "06ALG004",
      "target": "06CON008",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "06REL012",
      "source": "06ALG004",
      "target": "06CON009",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "06REL013",
      "source": "06ALG001",
      "target": "06CON005",
      "attributes": {
        "依赖强度": "中"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "06REL014",
      "source": "06ALG001",
      "target": "06CON007",
      "attributes": {
        "依赖强度": "中"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "06REL015",
      "source": "06ALG003",
      "target": "06CON005",
      "attributes": {
        "依赖强度": "中"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "06REL016",
      "source": "06ALG003",
      "target": "06CON007",
      "attributes": {
        "依赖强度": "中"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "06REL017",
      "source": "06ALG004",
      "target": "06CON005",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "06REL018",
      "source": "06ALG001",
      "target": "06CON006",
      "attributes": {
        "依赖强度": "弱"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "06REL019",
      "source": "06ALG003",
      "target": "06CON006",
      "attributes": {
        "依赖强度": "弱"
      }
    },
    {
      "type": "使用",
      "关系ID": "06REL020",
      "source": "06ALG005",
      "target": "06ALG003",
      "attributes": {
        "使用角色": "核心"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "06REL021",
      "source": "06DS002",
      "target": "06CON002",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "06REL022",
      "source": "06DS002",
      "target": "06CON003",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "06REL023",
      "source": "06ALG004",
      "target": "06CON012",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "06REL024",
      "source": "06ALG004",
      "target": "06CON014",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "06REL025",
      "source": "06ALG004",
      "target": "06CON015",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "06REL026",
      "source": "06ALG004",
      "target": "06CON016",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "继承",
      "关系ID": "06REL027",
      "source": "06DS003",
      "target": "06DS001",
      "attributes": {}
    },
    {
      "type": "理论依赖",
      "关系ID": "06REL028",
      "source": "06DS003",
      "target": "06DS006",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "变体",
      "关系ID": "06REL029",
      "source": "06DS004",
      "target": "06DS003",
      "attributes": {
        "变体类型": "特定序（父<=子）"
      }
    },
    {
      "type": "变体",
      "关系ID": "06REL030",
      "source": "06DS005",
      "target": "06DS003",
      "attributes": {
        "变体类型": "特定序（父>=子）"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "06REL031",
      "source": "06ALG006",
      "target": "06DS003",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "06REL032",
      "source": "06ALG007",
      "target": "06DS003",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "06REL033",
      "source": "06ALG008",
      "target": "06DS003",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "06REL034",
      "source": "06ALG009",
      "target": "06DS003",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "06REL035",
      "source": "06ALG010",
      "target": "06DS003",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "06REL036",
      "source": "06ALG009",
      "target": "06CON008",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "06REL037",
      "source": "06ALG010",
      "target": "06CON008",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "06REL038",
      "source": "06DS003",
      "target": "06CON018",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "继承",
      "关系ID": "06REL039",
      "source": "06DS007",
      "target": "06DS001",
      "attributes": {}
    },
    {
      "type": "继承",
      "关系ID": "06REL040",
      "source": "06DS007",
      "target": "06CON001",
      "attributes": {}
    },
    {
      "type": "理论依赖",
      "关系ID": "06REL041",
      "source": "06DS007",
      "target": "06CON023",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "06REL042",
      "source": "06DS007",
      "target": "06CON021",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "06REL043",
      "source": "06CON023",
      "target": "06CON022",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "06REL044",
      "source": "06CON022",
      "target": "06CON020",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "06REL045",
      "source": "06CON022",
      "target": "06CON021",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "06REL046",
      "source": "06CON020",
      "target": "06CON019",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "06REL047",
      "source": "06ALG011",
      "target": "06DS007",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "06REL048",
      "source": "06ALG011",
      "target": "06CON024",
      "attributes": {
        "依赖强度": "中"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "06REL049",
      "source": "06ALG011",
      "target": "06CON021",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "06REL050",
      "source": "06ALG012",
      "target": "06DS007",
      "attributes": {
        "必需性": "否"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "06REL051",
      "source": "06ALG012",
      "target": "06CON023",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "使用",
      "关系ID": "06REL052",
      "source": "06ALG013",
      "target": "06DS007",
      "attributes": {
        "使用角色": "核心"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "06REL053",
      "source": "06ALG013",
      "target": "06CON027",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "06REL054",
      "source": "06ALG013",
      "target": "06CON028",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "06REL055",
      "source": "06CON027",
      "target": "06CON026",
      "attributes": {
        "依赖强度": "中"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "06REL056",
      "source": "06CON028",
      "target": "06CON025",
      "attributes": {
        "依赖强度": "弱"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "06REL057",
      "source": "06CON028",
      "target": "06CON026",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "继承",
      "关系ID": "06REL058",
      "source": "06DS008",
      "target": "06DS001",
      "attributes": {}
    },
    {
      "type": "继承",
      "关系ID": "06REL059",
      "source": "06DS008",
      "target": "06CON001",
      "attributes": {}
    },
    {
      "type": "变体",
      "关系ID": "06REL060",
      "source": "06DS009",
      "target": "06DS008",
      "attributes": {
        "变体类型": "中序线索"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "06REL061",
      "source": "06DS008",
      "target": "06CON029",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "06REL062",
      "source": "06DS008",
      "target": "06CON032",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "06REL063",
      "source": "06CON029",
      "target": "06CON030",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "06REL064",
      "source": "06CON029",
      "target": "06CON031",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "06REL065",
      "source": "06CON032",
      "target": "06CON033",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "06REL066",
      "source": "06CON032",
      "target": "06CON034",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "06REL067",
      "source": "06ALG014",
      "target": "06DS008",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "06REL068",
      "source": "06ALG015",
      "target": "06DS009",
      "attributes": {
        "必需性": "否"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "06REL069",
      "source": "06ALG016",
      "target": "06DS009",
      "attributes": {
        "必需性": "否"
      }
    },
    {
      "type": "使用",
      "关系ID": "06REL070",
      "source": "06ALG016",
      "target": "06ALG015",
      "attributes": {
        "使用角色": "核心"
      }
    },
    {
      "type": "使用",
      "关系ID": "06REL071",
      "source": "06ALG018",
      "target": "06ALG017",
      "attributes": {
        "使用角色": "核心"
      }
    },
    {
      "type": "使用",
      "关系ID": "06REL072",
      "source": "06ALG020",
      "target": "06ALG019",
      "attributes": {
        "使用角色": "核心"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "06REL073",
      "source": "06ALG019",
      "target": "06DS008",
      "attributes": {
        "必需性": "否"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "06REL074",
      "source": "06ALG020",
      "target": "06DS008",
      "attributes": {
        "必需性": "否"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "06REL075",
      "source": "06ALG014",
      "target": "06CON003",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "06REL076",
      "source": "06ALG015",
      "target": "06CON017",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "06REL077",
      "source": "06ALG016",
      "target": "06CON003",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "继承",
      "关系ID": "06REL078",
      "source": "06DS010",
      "target": "06DS001",
      "attributes": {}
    },
    {
      "type": "继承",
      "关系ID": "06REL079",
      "source": "06DS010",
      "target": "06DS002",
      "attributes": {}
    },
    {
      "type": "理论依赖",
      "关系ID": "06REL080",
      "source": "06DS010",
      "target": "06CON035",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "优化",
      "关系ID": "06REL081",
      "source": "06DS010",
      "target": "06DS002",
      "attributes": {
        "优化方向": "最坏情况性能/平衡性"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "06REL082",
      "source": "06ALG021",
      "target": "06DS010",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "06REL083",
      "source": "06ALG022",
      "target": "06DS010",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "06REL084",
      "source": "06ALG023",
      "target": "06DS010",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "06REL085",
      "source": "06ALG024",
      "target": "06DS010",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "06REL086",
      "source": "06ALG021",
      "target": "06CON036",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "06REL087",
      "source": "06ALG022",
      "target": "06CON036",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "06REL088",
      "source": "06ALG023",
      "target": "06CON036",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "06REL089",
      "source": "06ALG024",
      "target": "06CON036",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "06REL090",
      "source": "06DS010",
      "target": "06CON008",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "06REL091",
      "source": "06DS010",
      "target": "06CON010",
      "attributes": {
        "依赖强度": "中"
      }
    }
  ]
}