{
  "entities": [
    {
      "type": "数据结构",
      "ID": "07DS001",
      "name": "图",
      "attributes": {
        "难度": "中等",
        "内容": "一种复杂的非线性数据结构，由顶点集V和边集E组成，表示顶点之间的关系。V是顶点集合，E是顶点对（有向或无向）的集合，表示边。",
        "存储开销": "依赖于具体存储结构（邻接矩阵O(n^2)，邻接表O(n+e)）",
        "核心特性": "非线性，顶点可有任意多个前驱和后继"
      }
    },
    {
      "type": "概念",
      "ID": "07CON001",
      "name": "顶点",
      "attributes": {
        "难度": "入门",
        "内容": "图的基本组成单元，代表实体。在图中通常用V表示顶点集合。"
      }
    },
    {
      "type": "概念",
      "ID": "07CON002",
      "name": "边",
      "attributes": {
        "难度": "入门",
        "内容": "连接图中两个顶点的连接线，表示顶点之间的关系。可以是无向边（无序对）或有向边（序偶）。在图中通常用E表示边集合。"
      }
    },
    {
      "type": "数据结构",
      "ID": "07DS002",
      "name": "有向图",
      "attributes": {
        "难度": "中等",
        "内容": "边集E(G)中所有边都是有向边（序偶）的图。",
        "存储开销": "依赖表示法",
        "核心特性": "边具有方向性"
      }
    },
    {
      "type": "数据结构",
      "ID": "07DS003",
      "name": "无向图",
      "attributes": {
        "难度": "中等",
        "内容": "边集E(G)中所有边都是无向边（无序对）的图。",
        "存储开销": "依赖表示法",
        "核心特性": "边无方向性"
      }
    },
    {
      "type": "概念",
      "ID": "07CON003",
      "name": "邻接点",
      "attributes": {
        "难度": "入门",
        "内容": "若两个顶点通过一条边直接相连，则称它们互为邻接点。有向图中区分出边邻接点和入边邻接点。"
      }
    },
    {
      "type": "概念",
      "ID": "07CON004",
      "name": "出度",
      "attributes": {
        "难度": "入门",
        "内容": "在有向图中，以某个顶点为起点的边的数目，记为OD(v)。"
      }
    },
    {
      "type": "概念",
      "ID": "07CON005",
      "name": "入度",
      "attributes": {
        "难度": "入门",
        "内容": "在有向图中，以某个顶点为终点的边的数目，记为ID(v)。"
      }
    },
    {
      "type": "概念",
      "ID": "07CON006",
      "name": "度",
      "attributes": {
        "难度": "入门",
        "内容": "在无向图中，与顶点相关联的边的数目，记为D(v)。在有向图中，度等于入度与出度之和。"
      }
    },
    {
      "type": "数据结构",
      "ID": "07DS004",
      "name": "完全图",
      "attributes": {
        "难度": "中等",
        "内容": "无向图中任意两个顶点间都有边；有向图中任意两个顶点间都有方向相反的两条边。n个顶点的无向完全图有n(n-1)/2条边，有向完全图有n(n-1)条边。",
        "存储开销": "依赖表示法",
        "核心特性": "顶点间连接最大化"
      }
    },
    {
      "type": "概念",
      "ID": "07CON007",
      "name": "稠密图",
      "attributes": {
        "难度": "入门",
        "内容": "边数接近完全图的图，通常边数e接近n(n-1)的数量级。"
      }
    },
    {
      "type": "概念",
      "ID": "07CON008",
      "name": "稀疏图",
      "attributes": {
        "难度": "入门",
        "内容": "边数远少于完全图的图，通常边数e与顶点数n同数量级 (e << n(n-1))。"
      }
    },
    {
      "type": "概念",
      "ID": "07CON009",
      "name": "子图",
      "attributes": {
        "难度": "入门",
        "内容": "设有两个图G=(V,E)和G'=(V',E')，若V'是V的子集，E'是E的子集，并且E'中的边所关联的顶点都在V'中，则称G'是G的子图。"
      }
    },
    {
      "type": "概念",
      "ID": "07CON010",
      "name": "路径",
      "attributes": {
        "难度": "入门",
        "内容": "图中从一个顶点到另一个顶点的顶点序列，相邻顶点间必须有边相连。路径长度是路径上边的数目。"
      }
    },
    {
      "type": "概念",
      "ID": "07CON011",
      "name": "简单路径",
      "attributes": {
        "难度": "入门",
        "内容": "路径上所有顶点均不相同的路径。"
      }
    },
    {
      "type": "概念",
      "ID": "07CON012",
      "name": "回路",
      "attributes": {
        "难度": "入门",
        "内容": "路径的起点和终点相同的路径，也称为环。"
      }
    },
    {
      "type": "概念",
      "ID": "07CON013",
      "name": "简单回路",
      "attributes": {
        "难度": "入门",
        "内容": "回路中除了起点和终点相同外，其余顶点均不相同的回路。"
      }
    },
    {
      "type": "概念",
      "ID": "07CON014",
      "name": "连通",
      "attributes": {
        "难度": "入门",
        "内容": "在无向图中，若顶点vi到顶点vj有路径，则称vi和vj是连通的。"
      }
    },
    {
      "type": "数据结构",
      "ID": "07DS005",
      "name": "连通图",
      "attributes": {
        "难度": "中等",
        "内容": "在无向图中，任意两个顶点之间都是连通的图。",
        "存储开销": "依赖表示法",
        "核心特性": "所有顶点互相可达"
      }
    },
    {
      "type": "数据结构",
      "ID": "07DS006",
      "name": "连通分量",
      "attributes": {
        "难度": "中等",
        "内容": "无向图中的极大连通子图。非连通图由多个连通分量组成。",
        "存储开销": "依赖表示法",
        "核心特性": "内部顶点全连通，分量间不连通"
      }
    },
    {
      "type": "概念",
      "ID": "07CON015",
      "name": "强连通",
      "attributes": {
        "难度": "入门",
        "内容": "在有向图中，若从顶点vi到顶点vj和从顶点vj到顶点vi都存在路径，则称这两个顶点是强连通的。"
      }
    },
    {
      "type": "数据结构",
      "ID": "07DS007",
      "name": "强连通图",
      "attributes": {
        "难度": "中等",
        "内容": "在有向图中，任意两个顶点之间都是强连通的图。",
        "存储开销": "依赖表示法",
        "核心特性": "所有顶点互相可达（双向）"
      }
    },
    {
      "type": "数据结构",
      "ID": "07DS008",
      "name": "强连通分量",
      "attributes": {
        "难度": "中等",
        "内容": "有向图中的极大强连通子图。非强连通图可能由多个强连通分量组成。",
        "存储开销": "依赖表示法",
        "核心特性": "内部顶点全强连通，分量间不一定"
      }
    },
    {
      "type": "概念",
      "ID": "07CON016",
      "name": "权",
      "attributes": {
        "难度": "入门",
        "内容": "赋给图中边的数值，通常为非负实数，具有特定含义（如长度、成本、容量等）。"
      }
    },
    {
      "type": "数据结构",
      "ID": "07DS009",
      "name": "带权图",
      "attributes": {
        "难度": "中等",
        "内容": "边上带有权值的图，也常称为网络（Network）。",
        "存储开销": "依赖表示法（需额外存储权值）",
        "核心特性": "边具有数值属性"
      }
    },
    {
      "type": "算法",
      "ID": "07ALG001",
      "name": "InitGraph",
      "attributes": {
        "难度": "入门",
        "内容": "初始化图的存储空间。",
        "时间复杂度": "依赖存储结构",
        "空间复杂度": "依赖存储结构",
        "设计思想": "初始化",
        "适用场景": "创建图之前"
      }
    },
    {
      "type": "算法",
      "ID": "07ALG002",
      "name": "CreateGraph",
      "attributes": {
        "难度": "中等",
        "内容": "根据图的边集E建立图的存储结构。",
        "时间复杂度": "依赖存储结构和输入",
        "空间复杂度": "依赖存储结构",
        "设计思想": "图构建",
        "适用场景": "从数据源构建图"
      }
    },
    {
      "type": "算法",
      "ID": "07ALG003",
      "name": "TraverseGraph",
      "attributes": {
        "难度": "中等",
        "内容": "按照一定次序从顶点i开始遍历图（访问所有可达顶点一次）。",
        "时间复杂度": "依赖具体遍历算法和存储结构",
        "空间复杂度": "依赖具体遍历算法和存储结构",
        "设计思想": "系统性访问",
        "适用场景": "图的搜索、分析"
      }
    },
    {
      "type": "算法",
      "ID": "07ALG004",
      "name": "FindGraph",
      "attributes": {
        "难度": "入门",
        "内容": "从图中查找具有给定值的顶点。",
        "时间复杂度": "依赖存储结构（通常O(n)）",
        "空间复杂度": "O(1)",
        "设计思想": "搜索",
        "适用场景": "定位图中特定顶点"
      }
    },
    {
      "type": "算法",
      "ID": "07ALG005",
      "name": "PrintGraph",
      "attributes": {
        "难度": "入门",
        "内容": "按照图的一种表示方法输出图。",
        "时间复杂度": "依赖存储结构",
        "空间复杂度": "O(1)（不计输出）",
        "设计思想": "可视化/调试",
        "适用场景": "展示图结构"
      }
    },
    {
      "type": "算法",
      "ID": "07ALG006",
      "name": "ClearGraph",
      "attributes": {
        "难度": "入门",
        "内容": "清除图中动态分配的存储空间。",
        "时间复杂度": "依赖存储结构",
        "空间复杂度": "O(1)",
        "设计思想": "资源管理",
        "适用场景": "释放图内存"
      }
    },
    {
      "type": "算法",
      "ID": "07ALG007",
      "name": "MinSpanGraph",
      "attributes": {
        "难度": "高级",
        "内容": "求图的最小生成树（将在第8章讨论）。",
        "时间复杂度": "如Prim O(n^2)或O(elog n), Kruskal O(elog e)",
        "空间复杂度": "O(n+e)",
        "设计思想": "贪心",
        "适用场景": "网络建设、成本优化"
      }
    },
    {
      "type": "算法",
      "ID": "07ALG008",
      "name": "MinPathGraph",
      "attributes": {
        "难度": "高级",
        "内容": "求图顶点之间的最短路径（将在第8章讨论）。",
        "时间复杂度": "如Dijkstra O(n^2)或O(elog n), Floyd O(n^3)",
        "空间复杂度": "O(n^2)或O(n)",
        "设计思想": "动态规划、贪心",
        "适用场景": "路径规划、网络路由"
      }
    },
    {
      "type": "算法",
      "ID": "07ALG009",
      "name": "TopolGraph",
      "attributes": {
        "难度": "高级",
        "内容": "求有向无环图（DAG）顶点的拓扑序列（将在第8章讨论）。",
        "时间复杂度": "O(n+e)",
        "空间复杂度": "O(n)",
        "设计思想": "DFS或基于入度",
        "适用场景": "任务调度、依赖分析"
      }
    },
    {
      "type": "算法",
      "ID": "07ALG010",
      "name": "KeyPathGraph",
      "attributes": {
        "难度": "高级",
        "内容": "求有向带权图（通常是AOE网）的关键路径（将在第8章讨论）。",
        "时间复杂度": "O(n+e)",
        "空间复杂度": "O(n)",
        "设计思想": "拓扑排序+动态规划",
        "适用场景": "项目管理、关键任务识别"
      }
    },
    {
      "type": "数据结构",
      "ID": "07DS010",
      "name": "邻接矩阵",
      "attributes": {
        "难度": "中等",
        "内容": "用n阶方阵表示n个顶点图的邻接关系。A[i,j]=1（或权值）表示顶点i到j有边，否则为0（或无穷大）。",
        "存储开销": "O(n^2)",
        "核心特性": "判断边存在O(1)，求度/邻接点O(n)，适用于稠密图"
      }
    },
    {
      "type": "算法",
      "ID": "07ALG011",
      "name": "InitMatrix",
      "attributes": {
        "难度": "入门",
        "内容": "初始化邻接矩阵存储空间，根据图是否有权设置初始值。",
        "时间复杂度": "O(n^2)",
        "空间复杂度": "O(1)",
        "设计思想": "初始化",
        "适用场景": "创建邻接矩阵前"
      }
    },
    {
      "type": "算法",
      "ID": "07ALG012",
      "name": "CreateMatrix",
      "attributes": {
        "难度": "中等",
        "内容": "根据边集字符串生成图的邻接矩阵。",
        "时间复杂度": "O(n^2 + L) (L是边集字符串长度，初始化矩阵O(n^2)) 或 O(e)",
        "空间复杂度": "O(1)",
        "设计思想": "图构建",
        "适用场景": "从边集数据创建邻接矩阵表示"
      }
    },
    {
      "type": "算法",
      "ID": "07ALG013",
      "name": "PrintMatrix",
      "attributes": {
        "难度": "入门",
        "内容": "输出用邻接矩阵表示的图的顶点集和边集。",
        "时间复杂度": "O(n^2)",
        "空间复杂度": "O(1)",
        "设计思想": "可视化/调试",
        "适用场景": "展示邻接矩阵表示的图结构"
      }
    },
    {
      "type": "数据结构",
      "ID": "07DS011",
      "name": "邻接表",
      "attributes": {
        "难度": "中等",
        "内容": "为图中每个顶点建立一个存储其所有邻接点的单链表，并将这些链表的头指针存储在一个数组（向量）中。",
        "存储开销": "O(n+e)",
        "核心特性": "查找邻接点高效O(degree)，节省稀疏图空间，求入度不方便（有向图）"
      }
    },
    {
      "type": "概念",
      "ID": "07CON017",
      "name": "边结点",
      "attributes": {
        "难度": "入门",
        "内容": "邻接表中存储边信息的结点，通常包含邻接点域(adjvex)、权域(weight)和链域(next)。"
      }
    },
    {
      "type": "算法",
      "ID": "07ALG014",
      "name": "InitAdjoin",
      "attributes": {
        "难度": "入门",
        "内容": "初始化邻接表的表头指针向量。",
        "时间复杂度": "O(n)",
        "空间复杂度": "O(1)",
        "设计思想": "初始化",
        "适用场景": "创建邻接表前"
      }
    },
    {
      "type": "算法",
      "ID": "07ALG015",
      "name": "CreateAdjoin",
      "attributes": {
        "难度": "中等",
        "内容": "根据边集字符串生成图的邻接表。",
        "时间复杂度": "O(n+e)",
        "空间复杂度": "O(n+e)",
        "设计思想": "图构建",
        "适用场景": "从边集数据创建邻接表表示"
      }
    },
    {
      "type": "算法",
      "ID": "07ALG016",
      "name": "PrintAdjJoin",
      "attributes": {
        "难度": "入门",
        "内容": "输出用邻接表表示的图的顶点集和边集。",
        "时间复杂度": "O(n+e)",
        "空间复杂度": "O(1)",
        "设计思想": "可视化/调试",
        "适用场景": "展示邻接表表示的图结构"
      }
    },
    {
      "type": "数据结构",
      "ID": "07DS012",
      "name": "逆邻接表",
      "attributes": {
        "难度": "中等",
        "内容": "一种邻接表的变体，每个顶点的链表存储指向该顶点的所有入边信息（存储入边邻接点序号）。",
        "存储开销": "O(n+e)",
        "核心特性": "方便查找顶点的入边和计算入度"
      }
    },
    {
      "type": "数据结构",
      "ID": "07DS013",
      "name": "十字邻接表",
      "attributes": {
        "难度": "高级",
        "内容": "一种用于有向图的邻接表变体，结合了邻接表和逆邻接表的特点。边结点包含起点、终点、权、指向同起点的下一条出边链域、指向同终点的下一条入边链域。",
        "存储开销": "O(n+e)",
        "核心特性": "方便查找顶点的出边和入边"
      }
    },
    {
      "type": "数据结构",
      "ID": "07DS014",
      "name": "边集数组",
      "attributes": {
        "难度": "中等",
        "内容": "使用一维数组直接存储图中所有的边，数组每个元素包含一条边的起点、终点和权值（若有）。",
        "存储开销": "O(e)",
        "核心特性": "适合对边进行处理的算法，查找特定边或顶点度效率低O(e)"
      }
    },
    {
      "type": "算法",
      "ID": "07ALG017",
      "name": "InitArray",
      "attributes": {
        "难度": "入门",
        "内容": "初始化边集数组。",
        "时间复杂度": "O(MaxEdgeNum)",
        "空间复杂度": "O(1)",
        "设计思想": "初始化",
        "适用场景": "创建边集数组前"
      }
    },
    {
      "type": "算法",
      "ID": "07ALG018",
      "name": "CreateArray",
      "attributes": {
        "难度": "中等",
        "内容": "根据边集字符串生成图的边集数组。",
        "时间复杂度": "O(e) 或 O(L)",
        "空间复杂度": "O(1)",
        "设计思想": "图构建",
        "适用场景": "从边集数据创建边集数组表示"
      }
    },
    {
      "type": "算法",
      "ID": "07ALG019",
      "name": "PrintArray",
      "attributes": {
        "难度": "入门",
        "内容": "输出用边集数组表示的图的顶点集和边集。",
        "时间复杂度": "O(e)",
        "空间复杂度": "O(1)",
        "设计思想": "可视化/调试",
        "适用场景": "展示边集数组表示的图结构"
      }
    },
    {
      "type": "概念",
      "ID": "07CON018",
      "name": "图遍历",
      "attributes": {
        "难度": "中等",
        "内容": "从图的指定初始点出发，按照某种搜索策略访问图中所有可达顶点一次且仅一次的过程。需要标记已访问顶点以避免重复。"
      }
    },
    {
      "type": "算法",
      "ID": "07ALG020",
      "name": "深度优先搜索",
      "attributes": {
        "难度": "中等",
        "内容": "一种图遍历算法。从起点出发，尽可能深地搜索图的分支，遇到尽头回溯，访问未访问的邻接点。类似于树的先根遍历。",
        "时间复杂度": "邻接矩阵O(n^2)，邻接表O(n+e)",
        "空间复杂度": "O(n)（递归栈或显式栈）",
        "设计思想": "递归、回溯、栈",
        "适用场景": "连通性判断、拓扑排序、寻找路径、查找环"
      }
    },
    {
      "type": "算法",
      "ID": "07ALG021",
      "name": "dfsMatrix",
      "attributes": {
        "难度": "中等",
        "内容": "使用邻接矩阵实现的深度优先搜索遍历算法。",
        "时间复杂度": "O(n^2)",
        "空间复杂度": "O(n)",
        "设计思想": "递归、回溯",
        "适用场景": "在邻接矩阵表示的图上进行DFS"
      }
    },
    {
      "type": "算法",
      "ID": "07ALG022",
      "name": "dfsAdjion",
      "attributes": {
        "难度": "中等",
        "内容": "使用邻接表实现的深度优先搜索遍历算法。",
        "时间复杂度": "O(n+e)",
        "空间复杂度": "O(n)",
        "设计思想": "递归、回溯",
        "适用场景": "在邻接表表示的图上进行DFS"
      }
    },
    {
      "type": "算法",
      "ID": "07ALG023",
      "name": "广度优先搜索",
      "attributes": {
        "难度": "中等",
        "内容": "一种图遍历算法。从起点出发，首先访问所有邻接点，然后按距离逐层访问。类似于树的层序遍历。",
        "时间复杂度": "邻接矩阵O(n^2)，邻接表O(n+e)",
        "空间复杂度": "O(n)（队列）",
        "设计思想": "队列、迭代",
        "适用场景": "查找无权图最短路径、层序遍历"
      }
    },
    {
      "type": "算法",
      "ID": "07ALG024",
      "name": "bfsMatrix",
      "attributes": {
        "难度": "中等",
        "内容": "使用邻接矩阵实现的广度优先搜索遍历算法。",
        "时间复杂度": "O(n^2)",
        "空间复杂度": "O(n)（队列）",
        "设计思想": "队列、迭代",
        "适用场景": "在邻接矩阵表示的图上进行BFS"
      }
    },
    {
      "type": "算法",
      "ID": "07ALG025",
      "name": "bfsAdjoin",
      "attributes": {
        "难度": "中等",
        "内容": "使用邻接表实现的广度优先搜索遍历算法。",
        "时间复杂度": "O(n+e)",
        "空间复杂度": "O(n)（队列）",
        "设计思想": "队列、迭代",
        "适用场景": "在邻接表表示的图上进行BFS"
      }
    }
  ],
  "relations": [
    {
      "type": "继承",
      "关系ID": "07REL001",
      "source": "07DS001",
      "target": "07DS002",
      "attributes": {
        "父类 ID": "07DS001",
        "子类 ID": "07DS002",
        "约束条件": "边必须是有向的"
      }
    },
    {
      "type": "继承",
      "关系ID": "07REL002",
      "source": "07DS001",
      "target": "07DS003",
      "attributes": {
        "父类 ID": "07DS001",
        "子类 ID": "07DS003",
        "约束条件": "边必须是无向的"
      }
    },
    {
      "type": "继承",
      "关系ID": "07REL003",
      "source": "07DS001",
      "target": "07DS004",
      "attributes": {
        "父类 ID": "07DS001",
        "子类 ID": "07DS004",
        "约束条件": "任意顶点对之间都存在边（有向/无向对应）"
      }
    },
    {
      "type": "继承",
      "关系ID": "07REL004",
      "source": "07DS003",
      "target": "07DS005",
      "attributes": {
        "父类 ID": "07DS003",
        "子类 ID": "07DS005",
        "约束条件": "任意两个顶点都连通"
      }
    },
    {
      "type": "继承",
      "关系ID": "07REL005",
      "source": "07DS002",
      "target": "07DS007",
      "attributes": {
        "父类 ID": "07DS002",
        "子类 ID": "07DS007",
        "约束条件": "任意两个顶点都强连通"
      }
    },
    {
      "type": "继承",
      "关系ID": "07REL006",
      "source": "07DS001",
      "target": "07DS009",
      "attributes": {
        "父类 ID": "07DS001",
        "子类 ID": "07DS009",
        "约束条件": "边具有权值"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "07REL007",
      "source": "07DS001",
      "target": "07CON001",
      "attributes": {
        "实体 ID": "07DS001",
        "概念 ID": "07CON001",
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "07REL008",
      "source": "07DS001",
      "target": "07CON002",
      "attributes": {
        "实体 ID": "07DS001",
        "概念 ID": "07CON002",
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "07REL009",
      "source": "07CON006",
      "target": "07CON001",
      "attributes": {
        "实体 ID": "07CON006",
        "概念 ID": "07CON001",
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "07REL010",
      "source": "07CON005",
      "target": "07CON001",
      "attributes": {
        "实体 ID": "07CON005",
        "概念 ID": "07CON001",
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "07REL011",
      "source": "07CON004",
      "target": "07CON001",
      "attributes": {
        "实体 ID": "07CON004",
        "概念 ID": "07CON001",
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "07REL012",
      "source": "07CON003",
      "target": "07CON001",
      "attributes": {
        "实体 ID": "07CON003",
        "概念 ID": "07CON001",
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "07REL013",
      "source": "07CON014",
      "target": "07CON010",
      "attributes": {
        "实体 ID": "07CON014",
        "概念 ID": "07CON010",
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "07REL014",
      "source": "07DS005",
      "target": "07CON014",
      "attributes": {
        "实体 ID": "07DS005",
        "概念 ID": "07CON014",
        "依赖强度": "强"
      }
    },
     {
      "type": "理论依赖",
      "关系ID": "07REL015",
      "source": "07DS006",
      "target": "07CON014",
      "attributes": {
        "实体 ID": "07DS006",
        "概念 ID": "07CON014",
        "依赖强度": "强"
      }
    },
     {
      "type": "理论依赖",
      "关系ID": "07REL016",
      "source": "07DS006",
      "target": "07CON009",
      "attributes": {
        "实体 ID": "07DS006",
        "概念 ID": "07CON009",
        "依赖强度": "中"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "07REL017",
      "source": "07CON015",
      "target": "07CON010",
      "attributes": {
        "实体 ID": "07CON015",
        "概念 ID": "07CON010",
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "07REL018",
      "source": "07DS007",
      "target": "07CON015",
      "attributes": {
        "实体 ID": "07DS007",
        "概念 ID": "07CON015",
        "依赖强度": "强"
      }
    },
     {
      "type": "理论依赖",
      "关系ID": "07REL019",
      "source": "07DS008",
      "target": "07CON015",
      "attributes": {
        "实体 ID": "07DS008",
        "概念 ID": "07CON015",
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "07REL020",
      "source": "07DS008",
      "target": "07CON009",
      "attributes": {
        "实体 ID": "07DS008",
        "概念 ID": "07CON009",
        "依赖强度": "中"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "07REL021",
      "source": "07DS009",
      "target": "07CON016",
      "attributes": {
        "实体 ID": "07DS009",
        "概念 ID": "07CON016",
        "依赖强度": "强"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "07REL022",
      "source": "07ALG001",
      "target": "07DS001",
      "attributes": {
        "算法 ID": "07ALG001",
        "数据结构 ID": "07DS001",
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "07REL023",
      "source": "07ALG002",
      "target": "07DS001",
      "attributes": {
        "算法 ID": "07ALG002",
        "数据结构 ID": "07DS001",
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "07REL024",
      "source": "07ALG003",
      "target": "07DS001",
      "attributes": {
        "算法 ID": "07ALG003",
        "数据结构 ID": "07DS001",
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "07REL025",
      "source": "07ALG004",
      "target": "07DS001",
      "attributes": {
        "算法 ID": "07ALG004",
        "数据结构 ID": "07DS001",
        "必需性": "否"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "07REL026",
      "source": "07ALG005",
      "target": "07DS001",
      "attributes": {
        "算法 ID": "07ALG005",
        "数据结构 ID": "07DS001",
        "必需性": "否"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "07REL027",
      "source": "07ALG006",
      "target": "07DS001",
      "attributes": {
        "算法 ID": "07ALG006",
        "数据结构 ID": "07DS001",
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "07REL028",
      "source": "07ALG007",
      "target": "07DS001",
      "attributes": {
        "算法 ID": "07ALG007",
        "数据结构 ID": "07DS001",
        "必需性": "否"
      }
    },
     {
      "type": "操作绑定",
      "关系ID": "07REL029",
      "source": "07ALG008",
      "target": "07DS001",
      "attributes": {
        "算法 ID": "07ALG008",
        "数据结构 ID": "07DS001",
        "必需性": "否"
      }
    },
     {
      "type": "操作绑定",
      "关系ID": "07REL030",
      "source": "07ALG009",
      "target": "07DS001",
      "attributes": {
        "算法 ID": "07ALG009",
        "数据结构 ID": "07DS001",
        "必需性": "否"
      }
    },
     {
      "type": "操作绑定",
      "关系ID": "07REL031",
      "source": "07ALG010",
      "target": "07DS001",
      "attributes": {
        "算法 ID": "07ALG010",
        "数据结构 ID": "07DS001",
        "必需性": "否"
      }
    },
    {
      "type": "变体",
      "关系ID": "07REL032",
      "source": "07ALG001",
      "target": "07ALG011",
      "attributes": {
        "基础 ID": "07ALG001",
        "变体 ID": "07ALG011",
        "变体类型": "邻接矩阵实现"
      }
    },
     {
      "type": "操作绑定",
      "关系ID": "07REL033",
      "source": "07ALG011",
      "target": "07DS010",
      "attributes": {
        "算法 ID": "07ALG011",
        "数据结构 ID": "07DS010",
        "必需性": "是"
      }
    },
    {
      "type": "变体",
      "关系ID": "07REL034",
      "source": "07ALG002",
      "target": "07ALG012",
      "attributes": {
        "基础 ID": "07ALG002",
        "变体 ID": "07ALG012",
        "变体类型": "邻接矩阵实现"
      }
    },
     {
      "type": "操作绑定",
      "关系ID": "07REL035",
      "source": "07ALG012",
      "target": "07DS010",
      "attributes": {
        "算法 ID": "07ALG012",
        "数据结构 ID": "07DS010",
        "必需性": "是"
      }
    },
    {
      "type": "变体",
      "关系ID": "07REL036",
      "source": "07ALG005",
      "target": "07ALG013",
      "attributes": {
        "基础 ID": "07ALG005",
        "变体 ID": "07ALG013",
        "变体类型": "邻接矩阵实现"
      }
    },
     {
      "type": "操作绑定",
      "关系ID": "07REL037",
      "source": "07ALG013",
      "target": "07DS010",
      "attributes": {
        "算法 ID": "07ALG013",
        "数据结构 ID": "07DS010",
        "必需性": "是"
      }
    },
    {
      "type": "使用",
      "关系ID": "07REL038",
      "source": "07DS011",
      "target": "07CON017",
      "attributes": {
        "使用方ID": "07DS011",
        "被使用的数据结构 ID": "07CON017",
        "使用角色": "核心组件"
      }
    },
    {
      "type": "变体",
      "关系ID": "07REL039",
      "source": "07ALG001",
      "target": "07ALG014",
      "attributes": {
        "基础 ID": "07ALG001",
        "变体 ID": "07ALG014",
        "变体类型": "邻接表实现"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "07REL040",
      "source": "07ALG014",
      "target": "07DS011",
      "attributes": {
        "算法 ID": "07ALG014",
        "数据结构 ID": "07DS011",
        "必需性": "是"
      }
    },
    {
      "type": "变体",
      "关系ID": "07REL041",
      "source": "07ALG002",
      "target": "07ALG015",
      "attributes": {
        "基础 ID": "07ALG002",
        "变体 ID": "07ALG015",
        "变体类型": "邻接表实现"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "07REL042",
      "source": "07ALG015",
      "target": "07DS011",
      "attributes": {
        "算法 ID": "07ALG015",
        "数据结构 ID": "07DS011",
        "必需性": "是"
      }
    },
    {
      "type": "变体",
      "关系ID": "07REL043",
      "source": "07ALG005",
      "target": "07ALG016",
      "attributes": {
        "基础 ID": "07ALG005",
        "变体 ID": "07ALG016",
        "变体类型": "邻接表实现"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "07REL044",
      "source": "07ALG016",
      "target": "07DS011",
      "attributes": {
        "算法 ID": "07ALG016",
        "数据结构 ID": "07DS011",
        "必需性": "是"
      }
    },
    {
      "type": "变体",
      "关系ID": "07REL045",
      "source": "07DS011",
      "target": "07DS012",
      "attributes": {
        "基础 ID": "07DS011",
        "变体 ID": "07DS012",
        "变体类型": "存储入边"
      }
    },
    {
      "type": "变体",
      "关系ID": "07REL046",
      "source": "07DS011",
      "target": "07DS013",
      "attributes": {
        "基础 ID": "07DS011",
        "变体 ID": "07DS013",
        "变体类型": "结合出边与入边链（用于有向图）"
      }
    },
        {
      "type": "变体",
      "关系ID": "07REL047",
      "source": "07ALG001",
      "target": "07ALG017",
      "attributes": {
        "基础 ID": "07ALG001",
        "变体 ID": "07ALG017",
        "变体类型": "边集数组实现"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "07REL048",
      "source": "07ALG017",
      "target": "07DS014",
      "attributes": {
        "算法 ID": "07ALG017",
        "数据结构 ID": "07DS014",
        "必需性": "是"
      }
    },
    {
      "type": "变体",
      "关系ID": "07REL049",
      "source": "07ALG002",
      "target": "07ALG018",
      "attributes": {
        "基础 ID": "07ALG002",
        "变体 ID": "07ALG018",
        "变体类型": "边集数组实现"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "07REL050",
      "source": "07ALG018",
      "target": "07DS014",
      "attributes": {
        "算法 ID": "07ALG018",
        "数据结构 ID": "07DS014",
        "必需性": "是"
      }
    },
    {
      "type": "变体",
      "关系ID": "07REL051",
      "source": "07ALG005",
      "target": "07ALG019",
      "attributes": {
        "基础 ID": "07ALG005",
        "变体 ID": "07ALG019",
        "变体类型": "边集数组实现"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "07REL052",
      "source": "07ALG019",
      "target": "07DS014",
      "attributes": {
        "算法 ID": "07ALG019",
        "数据结构 ID": "07DS014",
        "必需性": "是"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "07REL053",
      "source": "07ALG020",
      "target": "07CON018",
      "attributes": {
        "实体 ID": "07ALG020",
        "概念 ID": "07CON018",
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "07REL054",
      "source": "07ALG023",
      "target": "07CON018",
      "attributes": {
        "实体 ID": "07ALG023",
        "概念 ID": "07CON018",
        "依赖强度": "强"
      }
    },
    {
      "type": "变体",
      "关系ID": "07REL055",
      "source": "07ALG020",
      "target": "07ALG021",
      "attributes": {
        "基础 ID": "07ALG020",
        "变体 ID": "07ALG021",
        "变体类型": "邻接矩阵实现"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "07REL056",
      "source": "07ALG021",
      "target": "07DS010",
      "attributes": {
        "算法 ID": "07ALG021",
        "数据结构 ID": "07DS010",
        "必需性": "是"
      }
    },
     {
      "type": "变体",
      "关系ID": "07REL057",
      "source": "07ALG020",
      "target": "07ALG022",
      "attributes": {
        "基础 ID": "07ALG020",
        "变体 ID": "07ALG022",
        "变体类型": "邻接表实现"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "07REL058",
      "source": "07ALG022",
      "target": "07DS011",
      "attributes": {
        "算法 ID": "07ALG022",
        "数据结构 ID": "07DS011",
        "必需性": "是"
      }
    },
    {
      "type": "变体",
      "关系ID": "07REL059",
      "source": "07ALG023",
      "target": "07ALG024",
      "attributes": {
        "基础 ID": "07ALG023",
        "变体 ID": "07ALG024",
        "变体类型": "邻接矩阵实现"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "07REL060",
      "source": "07ALG024",
      "target": "07DS010",
      "attributes": {
        "算法 ID": "07ALG024",
        "数据结构 ID": "07DS010",
        "必需性": "是"
      }
    },
     {
      "type": "变体",
      "关系ID": "07REL061",
      "source": "07ALG023",
      "target": "07ALG025",
      "attributes": {
        "基础 ID": "07ALG023",
        "变体 ID": "07ALG025",
        "变体类型": "邻接表实现"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "07REL062",
      "source": "07ALG025",
      "target": "07DS011",
      "attributes": {
        "算法 ID": "07ALG025",
        "数据结构 ID": "07DS011",
        "必需性": "是"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "07REL063",
      "source": "07ALG020",
      "target": "07CON003",
      "attributes": {
        "实体 ID": "07ALG020",
        "概念 ID": "07CON003",
        "依赖强度": "强"
      }
    },
     {
      "type": "理论依赖",
      "关系ID": "07REL064",
      "source": "07ALG023",
      "target": "07CON003",
      "attributes": {
        "实体 ID": "07ALG023",
        "概念 ID": "07CON003",
        "依赖强度": "强"
      }
    }
  ]
}