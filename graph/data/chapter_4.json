{
  "entities": [
    {
      "type": "数据结构",
      "ID": "04DS001",
      "name": "栈",
      "attributes": {
        "难度": "入门",
        "内容": "一种运算受限的线性表，仅允许在一端进行插入和删除运算。后进先出（LIFO）。",
        "存储开销": "取决于具体实现，顺序栈使用连续空间，链栈使用链式存储。",
        "核心特性": "后进先出（LIFO）"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "04CON001",
      "name": "栈顶",
      "attributes": {
        "难度": "入门",
        "内容": "栈中进行插入和删除操作的一端。",
        "存储开销": "无",
        "核心特性": "进行插入和删除操作"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "04CON002",
      "name": "栈底",
      "attributes": {
        "难度": "入门",
        "内容": "栈中与栈顶相对的另一端。",
        "存储开销": "无",
        "核心特性": "和栈顶相对"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "04CON003",
      "name": "进栈",
      "attributes": {
        "难度": "入门",
        "内容": "向栈中插入新元素的操作。",
        "存储开销": "取决于具体实现",
        "核心特性": "插入"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "04CON004",
      "name": "出栈",
      "attributes": {
        "难度": "入门",
        "内容": "从栈中删除元素的操作。",
        "存储开销": "取决于具体实现",
        "核心特性": "删除"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "04DS002",
      "name": "队列",
      "attributes": {
        "难度": "入门",
        "内容": "一种运算受限的线性表，仅允许在表的一端进行插入，另一端进行删除。先进先出（FIFO）。",
        "存储开销": "取决于具体实现，顺序队列使用连续空间，链队列使用链式存储。",
        "核心特性": "先进先出（FIFO）"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "04CON005",
      "name": "队尾",
      "attributes": {
        "难度": "入门",
        "内容": "队列中进行插入操作的一端。",
        "存储开销": "无",
        "核心特性": "插入"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "04CON006",
      "name": "队首",
      "attributes": {
        "难度": "入门",
        "内容": "队列中进行删除操作的一端。",
        "存储开销": "无",
        "核心特性": "删除"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "04CON007",
      "name": "进队",
      "attributes": {
        "难度": "入门",
        "内容": "向队列中插入新元素的操作。",
        "存储开销": "取决于具体实现",
        "核心特性": "插入"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "04CON008",
      "name": "出队",
      "attributes": {
        "难度": "入门",
        "内容": "从队列中删除元素的操作。",
        "存储开销": "取决于具体实现",
        "核心特性": "删除"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "04DS003",
      "name": "顺序存储结构",
      "attributes": {
        "难度": "入门",
        "内容": "使用数组实现数据结构的存储。",
        "存储开销": "需要预先分配固定大小的存储空间。",
        "核心特性": "使用数组"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "04DS004",
      "name": "顺序栈",
      "attributes": {
        "难度": "中等",
        "内容": "使用顺序存储结构实现的栈。",
        "存储开销": "需要预先分配固定大小的存储空间。",
        "核心特性": "基于数组的栈"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "04DS005",
      "name": "链栈",
      "attributes": {
        "难度": "中等",
        "内容": "使用链式存储结构实现的栈。",
        "存储开销": "每个元素需要额外的指针空间。",
        "核心特性": "基于链表的栈"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "04DS006",
      "name": "链接存储结构",
      "attributes": {
        "难度": "入门",
        "内容": "使用链表实现数据结构的存储。",
        "存储开销": "每个元素需要额外的指针空间。",
        "核心特性": "使用链表"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "04DS007",
      "name": "顺序队列",
      "attributes": {
        "难度": "中等",
        "内容": "使用顺序存储结构实现的队列，通常实现为循环队列。",
        "存储开销": "需要预先分配固定大小的存储空间。",
        "核心特性": "基于数组的队列"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "04DS008",
      "name": "循环队列",
      "attributes": {
        "难度": "中等",
        "内容": "顺序队列的一种优化实现，通过循环使用数组空间来避免假溢出。",
        "存储开销": "需要预先分配固定大小的存储空间。",
        "核心特性": "空间循环利用"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "04DS009",
      "name": "链队",
      "attributes": {
        "难度": "中等",
        "内容": "使用链式存储结构实现的队列。",
        "存储开销": "每个元素需要额外的指针空间。",
        "核心特性": "基于链表的队列"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "04DS010",
      "name": "优先级队列",
      "attributes": {
        "难度": "高级",
        "内容": "每个元素都有优先级的队列，出队顺序基于优先级而非入队顺序。",
        "存储开销": "取决于具体实现，可能需要额外的空间来维护优先级。",
        "核心特性": "基于优先级的出队顺序"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "04ALG001",
      "name": "括号配对检查",
      "attributes": {
        "难度": "中等",
        "内容": "检查程序中的括号（大括号、方括号、圆括号）是否正确配对。",
        "时间复杂度": "O(n)",
        "空间复杂度": "O(n)",
        "设计思想": "使用栈来存储左括号，遇到右括号时检查栈顶是否为对应的左括号。"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "04ALG002",
      "name": "十进制转换为任意进制",
      "attributes": {
        "难度": "中等",
        "内容": "将十进制整数转换为二至九之间任一进制数。",
        "时间复杂度": "O(log n)",
        "空间复杂度": "O(log n)",
        "设计思想": "使用栈来存储转换过程中得到的余数，然后依次出栈输出。"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "04ALG003",
      "name": "后缀表达式求值",
      "attributes": {
        "难度": "中等",
        "内容": "计算后缀表达式的值。",
        "时间复杂度": "O(n)",
        "空间复杂度": "O(n)",
        "设计思想": "使用栈来存储操作数和中间结果，遇到运算符时从栈中弹出操作数进行计算。"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "04ALG004",
      "name": "中缀表达式转换为后缀表达式",
      "attributes": {
        "难度": "中等",
        "内容": "将中缀表达式转换为后缀表达式。",
        "时间复杂度": "O(n)",
        "空间复杂度": "O(n)",
        "设计思想": "使用栈来存储运算符，根据运算符的优先级进行转换。"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "04ALG005",
      "name": "递归求解阶乘",
      "attributes": {
        "难度": "入门",
        "内容": "使用递归算法求解正整数n的阶乘。",
        "时间复杂度": "O(n)",
        "空间复杂度": "O(n)",
        "设计思想": "将n的阶乘定义为n乘以(n-1)的阶乘，递归调用直到n=0。"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "04ALG006",
      "name": "输出布尔量所有可能组合",
      "attributes": {
        "难度": "中等",
        "内容": "使用递归算法输出n个布尔量所有可能组合。",
        "时间复杂度": "O(n*2^n)",
        "空间复杂度": "O(n)",
        "设计思想": "将问题分解为在每个位置上选择0或1，递归调用直到所有位置都确定。"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "04ALG007",
      "name": "输出n个元素全排列",
      "attributes": {
        "难度": "中等",
        "内容": "使用递归算法输出自然数1~n这n个元素的全排列。",
        "时间复杂度": "O(n!)",
        "空间复杂度": "O(n)",
        "设计思想": "每次选择一个元素放到当前位置，然后对剩余元素进行全排列。"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "04ALG008",
      "name": "求解迷宫问题",
      "attributes": {
        "难度": "中等",
        "内容": "使用递归算法求解迷宫问题，找到从入口到出口的路径。",
        "时间复杂度": "O(m*n)",
        "空间复杂度": "O(m*n)",
        "设计思想": "从入口出发，尝试向各个方向前进，如果遇到死路则回溯。"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "04ALG009",
      "name": "求解汉诺塔问题",
      "attributes": {
        "难度": "中等",
        "内容": "使用递归算法求解汉诺塔问题。",
        "时间复杂度": "O(2^n)",
        "空间复杂度": "O(n)",
        "设计思想": "将n个盘子从A柱移动到C柱，先将n-1个盘子移动到B柱，然后将最大的盘子移动到C柱，最后将B柱的n-1个盘子移动到C柱。"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    }
  ],
  "relations": [
    {
      "type": "继承",
      "关系ID": "04REL001",
      "source": "04DS004",
      "target": "04DS001",
      "attributes": {
        "约束条件": "使用顺序存储结构"
      }
    },
    {
      "type": "继承",
      "关系ID": "04REL002",
      "source": "04DS005",
      "target": "04DS001",
      "attributes": {
        "约束条件": "使用链接存储结构"
      }
    },
    {
      "type": "继承",
      "关系ID": "04REL003",
      "source": "04DS007",
      "target": "04DS002",
      "attributes": {
        "约束条件": "使用顺序存储结构"
      }
    },
    {
      "type": "继承",
      "关系ID": "04REL004",
      "source": "04DS008",
      "target": "04DS007",
      "attributes": {
        "约束条件": "优化空间利用"
      }
    },
    {
      "type": "继承",
      "关系ID": "04REL005",
      "source": "04DS009",
      "target": "04DS002",
      "attributes": {
        "约束条件": "使用链接存储结构"
      }
    },
    {
      "type": "使用",
      "关系ID": "04REL006",
      "source": "04ALG001",
      "target": "04DS001",
      "attributes": {
        "使用角色": "核心"
      }
    },
    {
      "type": "使用",
      "关系ID": "04REL007",
      "source": "04ALG002",
      "target": "04DS001",
      "attributes": {
        "使用角色": "核心"
      }
    },
    {
      "type": "使用",
      "关系ID": "04REL008",
      "source": "04ALG003",
      "target": "04DS001",
      "attributes": {
        "使用角色": "核心"
      }
    },
    {
      "type": "使用",
      "关系ID": "04REL009",
      "source": "04ALG004",
      "target": "04DS001",
      "attributes": {
        "使用角色": "核心"
      }
    },
    {
      "type": "使用",
      "关系ID": "04REL010",
      "source": "04ALG008",
      "target": "04DS001",
      "attributes": {
        "使用角色": "辅助"
      }
    }
  ]
}