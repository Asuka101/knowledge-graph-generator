{
  "entities": [
    {
      "type": "数据结构",
      "ID": "01DS001",
      "name": "数据结构",
      "attributes": {
        "难度": "入门",
        "内容": "数据以及相互之间联系。它根据人们解决实际问题需要问题本身所含数据之间内在联系而抽象出来。这种数据结构与如何利用计算机存储处理无关，所以称为数据逻辑结构。数据逻辑结构包括集合、线、树、图基本结构，由它们组合嵌套可以形成较复杂结构。",
        "存储开销": "未知",
        "核心特性": "逻辑结构"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "01CON001",
      "name": "数据",
      "attributes": {
        "难度": "入门",
        "内容": "人们利用便于书写、记忆交流符号对现实世界事物及其活动所做记录。数值、单词、一句话、一篇文章、一幅图画都称为数据。当然，若要利用计算机存储、处理加工数据，则必须按照一定规则对其进行二进制信息编码，变为二进制形式数据。",
        "存储开销": "未知",
        "核心特性": "信息的符号化表示"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "01CON002",
      "name": "数据元素",
      "attributes": {
        "难度": "入门",
        "内容": "简称元素，它数据整体相对独立单位。对于一个二维表格数据来说，每行信息就是它数据元素；对于字符串数据来说，每个字符就是它数据元素；对于一维数组数据来说，每个下标位置所存储值就是它数据元素。数据数据元素相对而言。",
        "存储开销": "未知",
        "核心特性": "数据集合中的个体"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "01CON003",
      "name": "数据记录",
      "attributes": {
        "难度": "入门",
        "内容": "简称记录，它数据处理领域组织数据基本单位，数据每个数据元素许多应用场合都组织成记录结构。数据记录由或多个数据项(item)所组成，每个数据项可以简单数据项，即不可再分，数值、字符；也可以组合数据项，字符串、数组、记录、对象。",
        "存储开销": "未知",
        "核心特性": "数据组织的基本单位"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "01CON004",
      "name": "数据项",
      "attributes": {
        "难度": "入门",
        "内容": "组成数据记录的元素，可以是简单数据项（不可再分），也可以是组合数据项（如字符串、数组、记录、对象）。",
        "存储开销": "未知",
        "核心特性": "记录的组成部分"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "01CON005",
      "name": "关键项",
      "attributes": {
        "难度": "入门",
        "内容": "表或文件中，若所有记录某个数据项对应值均不同，则每个值就能够唯一地标识记录，把这个数据项称为表或文件关键数据项，简称关键项（keyitem）。",
        "存储开销": "未知",
        "核心特性": "唯一标识记录的数据项"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "01CON006",
      "name": "关键字",
      "attributes": {
        "难度": "入门",
        "内容": "把关键项中每个值称为所在记录关键字（keyword或key）。",
        "存储开销": "未知",
        "核心特性": "关键项中的具体值"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "01CON007",
      "name": "数据处理",
      "attributes": {
        "难度": "入门",
        "内容": "指利用计算机对数据进行存储、检索、插入、删除、合并、拆分、排序、统计、计算、转换、输入、输出处理过程。",
        "存储开销": "未知",
        "核心特性": "计算机对数据的操作"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "01CON008",
      "name": "数据逻辑结构",
      "attributes": {
        "难度": "入门",
        "内容": "数据以及相互之间联系。它根据人们解决实际问题需要问题本身所含数据之间内在联系而抽象出来。这种数据结构与如何利用计算机存储处理无关。",
        "存储开销": "未知",
        "核心特性": "数据元素间的抽象关系"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "01DS002",
      "name": "集合结构",
      "attributes": {
        "难度": "入门",
        "内容": "只存在元素集合，不存在关系集合，或者说关系为空，这表明只考虑表1-2每条记录，而不考虑它们之间任何联系。对于集合结构，也可以看作按元素任意一种次序（先后位置有序）排列线性结构，存储空间可以根据需要按任一种存储方法进行存储。",
        "存储开销": "未知",
        "核心特性": "元素间无特定关系"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "01DS003",
      "name": "线性结构",
      "attributes": {
        "难度": "入门",
        "内容": "每个数据元素有且仅有直接前驱元素（除结构第1个元素外），有且仅有直接后继元素（除结构最后元素外）。这种数据结构特点数据元素之间1对1（1:1）联系，即线性关系。",
        "存储开销": "未知",
        "核心特性": "元素间一对一关系"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "01DS004",
      "name": "树形结构",
      "attributes": {
        "难度": "入门",
        "内容": "每个结点有且只有前驱结点（除树根结点外），但可以有任意多个后继结点（树叶结点可看做具有0个后继结点）。这种数据结构特点数据元素之间1对N（1:N）联系（Ngeq0），即层次关系。",
        "存储开销": "未知",
        "核心特性": "元素间一对多关系"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "01DS005",
      "name": "图形结构",
      "attributes": {
        "难度": "入门",
        "内容": "结点之间联系M对N（Mgeqslant0,Ngeqslant0）联系，即网状关系。也就是说，每个结点可以有任意多个前驱结点任意多个后继结点。",
        "存储开销": "未知",
        "核心特性": "元素间多对多关系"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "01CON009",
      "name": "非线性结构",
      "attributes": {
        "难度": "入门",
        "内容": "树形结构图形结构统称非线性结构。",
        "存储开销": "未知",
        "核心特性": "区别于线性结构的结构"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "01CON010",
      "name": "数据类型",
      "attributes": {
        "难度": "入门",
        "内容": "对数据取值范围、数据元素之间结构以及允许施加操作一种总体描述。",
        "存储开销": "未知",
        "核心特性": "数据的属性和操作的集合"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "01CON011",
      "name": "简单类型",
      "attributes": {
        "难度": "入门",
        "内容": "任一种简单类型每个数据都无法再分割整体，整数、实数、字符、指针、枚举值、逻辑值都无法再分割整体。",
        "存储开销": "未知",
        "核心特性": "不可再分割的数据类型"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "01CON012",
      "name": "结构类型",
      "attributes": {
        "难度": "入门",
        "内容": "任一种结构类型都由简单类型数据按照一定规则构造而成，并且结构类型仍可以包含结构类型，所以一种结构类型数据（即结构数据）可以分解若干个简单数据或结构数据，每个结构数据仍可再分。数组就是一种结构类型，它由固定个数同一元素类型数据按线性结构排列而成。",
        "存储开销": "未知",
        "核心特性": "由简单类型组合而成的数据类型"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "01CON013",
      "name": "抽象数据类型",
      "attributes": {
        "难度": "中等",
        "内容": "由一种数据结构其上所有操作（运算）所组成。抽象数据类型包含有一般数据类型含义，但含义比一般数据类型更广、更抽象。一般数据类型通常由具体语言系统内部定义，直接提供给编程者定义数据并进行相应运算，因此称它们系统预定义数据类型。",
        "存储开销": "未知",
        "核心特性": "数据结构及其操作的集合"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "01CON014",
      "name": "数据对象",
      "attributes": {
        "难度": "入门",
        "内容": "简称对象，它属于一种数据类型特定实例，该数据类型既可以一般数据类型，也可以抽象数据类型。",
        "存储开销": "未知",
        "核心特性": "数据类型的实例"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "01ALG001",
      "name": "算法",
      "attributes": {
        "难度": "入门",
        "内容": "就是解决特定问题方法。描述算法可以采用文字叙述，也可以采用传统流程图、N-S图或PAD图，但要计算机上实现，则最终必须采用一种程序设计语言编写程序。",
        "时间复杂度": "未知",
        "空间复杂度": "未知",
        "设计思想": "未知",
        "适用场景": "未知"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "01ALG002",
      "name": "数值算法",
      "attributes": {
        "难度": "入门",
        "内容": "解决数值问题算法叫做数值算法，科学工程计算方面算法大都属于数值算法，求解数值积分、求解线性方程组、求解代数方程求解微分方程。",
        "时间复杂度": "未知",
        "空间复杂度": "未知",
        "设计思想": "未知",
        "适用场景": "科学工程计算"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "01ALG003",
      "name": "非数值算法",
      "attributes": {
        "难度": "入门",
        "内容": "解决非数值问题算法叫做非数值算法，数据处理方面算法大都属于非数值算法，各种数据结构上进行排序算法、查找算法、插入算法、删除算法遍历算法。",
        "时间复杂度": "未知",
        "空间复杂度": "未知",
        "设计思想": "未知",
        "适用场景": "数据处理"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "01ALG004",
      "name": "递归算法",
      "attributes": {
        "难度": "入门",
        "内容": "特定问题可能递归，也可能是非递归，因而解决它们算法就有递归算法非递归算法之分。",
        "时间复杂度": "未知",
        "空间复杂度": "未知",
        "设计思想": "未知",
        "适用场景": "未知"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "01ALG005",
      "name": "非递归算法",
      "attributes": {
        "难度": "入门",
        "内容": "特定问题可能递归，也可能是非递归，因而解决它们算法就有递归算法非递归算法之分。",
        "时间复杂度": "未知",
        "空间复杂度": "未知",
        "设计思想": "未知",
        "适用场景": "未知"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "01ALG006",
      "name": "求n个元素最大值",
      "attributes": {
        "难度": "入门",
        "内容": "从n个整数元素中查找出最大值。",
        "时间复杂度": "未知",
        "空间复杂度": "未知",
        "设计思想": "未知",
        "适用场景": "未知"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "01ALG007",
      "name": "累加求和",
      "attributes": {
        "难度": "入门",
        "内容": "计算数组元素的总和。",
        "时间复杂度": "O(n)",
        "空间复杂度": "O(1)",
        "设计思想": "迭代累加",
        "适用场景": "未知"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "01ALG008",
      "name": "矩阵相加",
      "attributes": {
        "难度": "入门",
        "内容": "实现矩阵a[n,n]b[n,n]加法,其存入c[n,n]",
        "时间复杂度": "O(n^2)",
        "空间复杂度": "O(1)",
        "设计思想": "双重循环",
        "适用场景": "未知"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "01ALG009",
      "name": "简单选择排序",
      "attributes": {
        "难度": "中等",
        "内容": "通过双重for循环，外层for循环循环变量i，它0取值到n-2，对于i每一取值，首先通过k=i赋初值语句内层for循环语句，b[i]~b[n-1]之间顺序查找出具有最小值元素b[k]，然后通过3条赋值语句交换b[i]b[k]值，使得b[i]b[i]~b[n-1]之间最小值。这样，当算法执行结束后，数组bn个元素就按照其值从小到大次序排列好。",
        "时间复杂度": "O(n^2)",
        "空间复杂度": "O(1)",
        "设计思想": "未知",
        "适用场景": "未知"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "01ALG010",
      "name": "顺序查找",
      "attributes": {
        "难度": "入门",
        "内容": "在一维数组a[n]中顺序查找其值等于给定值item元素。",
        "时间复杂度": "O(n)",
        "空间复杂度": "O(1)",
        "设计思想": "逐个比较",
        "适用场景": "未知"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "01CON015",
      "name": "数据存储结构",
      "attributes": {
        "难度": "入门",
        "内容": "存储数据结构有各种不同方法，大体上有顺序、链接、索引、散列基本方法，由它们不同组合嵌套可以形成各种更为复杂方法。每种存储方法都使数据存储器表现出相应结构，称此数据存储结构或物理结构。数据存储结构与其存储方法相对应，同样分为顺序、链接、索引、散列基本形式。",
        "存储开销": "未知",
        "核心特性": "数据在计算机中的物理组织形式"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "01CON016",
      "name": "时间复杂度",
      "attributes": {
        "难度": "中等",
        "内容": "或称时间复杂性,又称计算复杂度(computationalcomplexity),它算法有效性量度之一,量度有效性另指标空间复杂度。时间复杂度算法运行时间相对度量。",
        "存储开销": "未知",
        "核心特性": "算法运行时间的度量"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "01CON017",
      "name": "空间复杂度",
      "attributes": {
        "难度": "中等",
        "内容": "或称空间复杂性对算法运行过程临时占用存储空间大小量度，它也衡量算法有效性指标。",
        "存储开销": "未知",
        "核心特性": "算法占用存储空间的度量"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "01CON018",
      "name": "正确性",
      "attributes": {
        "难度": "入门",
        "内容": "设计评价算法首要条件,如果算法不正确,即不能完成或不能较好地完成所要求任务,其他方面也就无从谈起。",
        "存储开销": "未知",
        "核心特性": "算法能得出正确结果"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "01CON019",
      "name": "稳健性",
      "attributes": {
        "难度": "入门",
        "内容": "指算法对不合理（又称不正确、非法、错误）数据输入反应处理能力。",
        "存储开销": "未知",
        "核心特性": "算法对错误输入的处理能力"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "01CON020",
      "name": "可读性",
      "attributes": {
        "难度": "入门",
        "内容": "指算法供人们阅读容易程度。",
        "存储开销": "未知",
        "核心特性": "算法的易理解性"
      },
      "resources": {
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    }
  ],
  "relations": [
    {
      "type": "理论依赖",
      "关系ID": "01REL001",
      "source": "01DS001",
      "target": "01CON001",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "使用",
      "关系ID": "01REL002",
      "source": "01ALG003",
      "target": "01DS001",
      "attributes": {
        "使用角色": "操作对象"
      }
    },
    {
      "type": "继承",
      "关系ID": "01REL003",
      "source": "01DS002",
      "target": "01DS001",
      "attributes": {}
    },
    {
      "type": "继承",
      "关系ID": "01REL004",
      "source": "01DS003",
      "target": "01DS001",
      "attributes": {}
    },
    {
      "type": "继承",
      "关系ID": "01REL005",
      "source": "01DS004",
      "target": "01DS001",
      "attributes": {}
    },
    {
      "type": "继承",
      "关系ID": "01REL006",
      "source": "01DS005",
      "target": "01DS001",
      "attributes": {}
    },
    {
      "type": "继承",
      "关系ID": "01REL007",
      "source": "01DS003",
      "target": "01DS002",
      "attributes": {}
    },
    {
      "type": "继承",
      "关系ID": "01REL008",
      "source": "01DS004",
      "target": "01DS005",
      "attributes": {}
    },
    {
      "type": "理论依赖",
      "关系ID": "01REL009",
      "source": "01ALG001",
      "target": "01CON015",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "01REL010",
      "source": "01ALG001",
      "target": "01CON016",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "01REL011",
      "source": "01ALG001",
      "target": "01CON017",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "01REL012",
      "source": "01ALG001",
      "target": "01CON018",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "01REL013",
      "source": "01ALG001",
      "target": "01CON019",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "01REL014",
      "source": "01ALG001",
      "target": "01CON020",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "优化",
      "关系ID": "01REL015",
      "source": "01ALG009",
      "target": "01ALG007",
      "attributes": {
        "优化方向": "代码简化"
      }
    }
  ]
}