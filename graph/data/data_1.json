{
  "entities": [
    {
      "type": "概念",
      "ID": "01CON001",
      "name": "数据",
      "attributes": {
        "难度": "入门",
        "内容": "对现实世界事物及其活动所做的便于书写、记忆和交流的符号记录。在计算机中需编码为二进制形式。"
      }
    },
    {
      "type": "概念",
      "ID": "01CON002",
      "name": "数据元素",
      "attributes": {
        "难度": "入门",
        "内容": "数据整体中相对独立的单位。与'数据'有时不严格区分。"
      }
    },
    {
      "type": "概念",
      "ID": "01CON003",
      "name": "数据记录",
      "attributes": {
        "难度": "入门",
        "内容": "数据处理领域组织数据的基本单位，由一个或多个数据项组成。"
      }
    },
    {
      "type": "概念",
      "ID": "01CON004",
      "name": "数据项",
      "attributes": {
        "难度": "入门",
        "内容": "组成数据记录的部分，可以是简单数据项（不可再分）或组合数据项。"
      }
    },
    {
      "type": "概念",
      "ID": "01CON005",
      "name": "关键数据项",
      "attributes": {
        "难度": "入门",
        "内容": "其值能唯一标识一个记录的数据项。"
      }
    },
    {
      "type": "概念",
      "ID": "01CON006",
      "name": "关键字",
      "attributes": {
        "难度": "入门",
        "内容": "关键数据项中的具体值，用于唯一标识记录。"
      }
    },
    {
      "type": "概念",
      "ID": "01CON007",
      "name": "数据处理",
      "attributes": {
        "难度": "入门",
        "内容": "利用计算机对数据进行存储、检索、插入、删除、合并、拆分、排序、统计、计算、转换、输入、输出等处理过程。"
      }
    },
    {
      "type": "概念",
      "ID": "01CON008",
      "name": "逻辑结构",
      "attributes": {
        "难度": "入门",
        "内容": "数据及其相互之间的联系，抽象自问题本身，与计算机存储无关。基本类型包括集合、线、树、图。"
      }
    },
    {
      "type": "概念",
      "ID": "01CON009",
      "name": "存储结构",
      "attributes": {
        "难度": "入门",
        "内容": "数据结构在计算机存储器中的表现形式或物理结构。基本方法有顺序、链接、索引、散列。"
      }
    },
    {
      "type": "概念",
      "ID": "01CON010",
      "name": "顺序存储",
      "attributes": {
        "难度": "入门",
        "内容": "一种基本的物理存储方法。"
      }
    },
    {
      "type": "概念",
      "ID": "01CON011",
      "name": "链式存储",
      "attributes": {
        "难度": "入门",
        "内容": "一种基本的物理存储方法。"
      }
    },
    {
      "type": "概念",
      "ID": "01CON012",
      "name": "索引存储",
      "attributes": {
        "难度": "入门",
        "内容": "一种基本的物理存储方法。"
      }
    },
    {
      "type": "概念",
      "ID": "01CON013",
      "name": "散列存储",
      "attributes": {
        "难度": "入门",
        "内容": "一种基本的物理存储方法。"
      }
    },
    {
      "type": "概念",
      "ID": "01CON014",
      "name": "二元组表示法",
      "attributes": {
        "难度": "中等",
        "内容": "用 B=(K, R) 的形式描述数据结构，K是数据元素集合，R是K上的关系集合。"
      }
    },
    {
      "type": "概念",
      "ID": "01CON015",
      "name": "关系",
      "attributes": {
        "难度": "入门",
        "内容": "数据元素之间的联系，在二元组表示法中是序偶的集合R。"
      }
    },
    {
      "type": "概念",
      "ID": "01CON016",
      "name": "序偶",
      "attributes": {
        "难度": "入门",
        "内容": "<x, y> 形式的元素对，表示x与y之间存在特定方向的关系。"
      }
    },
    {
      "type": "概念",
      "ID": "01CON017",
      "name": "直接前驱",
      "attributes": {
        "难度": "入门",
        "内容": "在序偶<x, y>中，x是y的直接前驱。"
      }
    },
    {
      "type": "概念",
      "ID": "01CON018",
      "name": "直接后继",
      "attributes": {
        "难度": "入门",
        "内容": "在序偶<x, y>中，y是x的直接后继。"
      }
    },
    {
      "type": "概念",
      "ID": "01CON019",
      "name": "结点 / 顶点",
      "attributes": {
        "难度": "入门",
        "内容": "数据结构的图形表示中，对应数据元素的点。"
      }
    },
    {
      "type": "概念",
      "ID": "01CON020",
      "name": "有向边 / 弧",
      "attributes": {
        "难度": "入门",
        "内容": "数据结构的图形表示中，连接两个结点并带有箭头的线，对应关系中的序偶。"
      }
    },
    {
      "type": "概念",
      "ID": "01CON021",
      "name": "树根结点",
      "attributes": {
        "难度": "入门",
        "内容": "树形结构中没有前驱结点的唯一结点。"
      }
    },
    {
      "type": "概念",
      "ID": "01CON022",
      "name": "树叶结点",
      "attributes": {
        "难度": "入门",
        "内容": "树形结构中没有后继结点的结点。"
      }
    },
    {
      "type": "概念",
      "ID": "01CON023",
      "name": "树枝结点",
      "attributes": {
        "难度": "入门",
        "内容": "树形结构中除树根和树叶结点之外的中间结点。"
      }
    },
    {
      "type": "概念",
      "ID": "01CON024",
      "name": "对称关系",
      "attributes": {
        "难度": "中等",
        "内容": "如果关系R中存在<x, y>，则必存在<y, x>。"
      }
    },
    {
      "type": "概念",
      "ID": "01CON025",
      "name": "无向边",
      "attributes": {
        "难度": "入门",
        "内容": "在图形表示中，用于替代表示对称关系的两个相反方向有向边的连线。"
      }
    },
    {
      "type": "概念",
      "ID": "01CON026",
      "name": "非线性结构",
      "attributes": {
        "难度": "入门",
        "内容": "树形结构和图形结构的统称，区别于线性结构。"
      }
    },
    {
      "type": "概念",
      "ID": "01CON027",
      "name": "数据类型",
      "attributes": {
        "难度": "入门",
        "内容": "对数据的取值范围、数据元素之间的结构以及允许施加操作的一种总体描述。"
      }
    },
    {
      "type": "概念",
      "ID": "01CON028",
      "name": "简单类型",
      "attributes": {
        "难度": "入门",
        "内容": "数据无法再分割的类型，如整数、字符、指针等。"
      }
    },
    {
      "type": "概念",
      "ID": "01CON029",
      "name": "结构类型",
      "attributes": {
        "难度": "入门",
        "内容": "由简单类型数据按一定规则构造而成，可以分解，如数组、记录。"
      }
    },
    {
      "type": "概念",
      "ID": "01CON030",
      "name": "抽象数据类型 (ADT)",
      "attributes": {
        "难度": "中等",
        "内容": "由一种数据结构和在其上的所有操作组成。强调逻辑结构和操作说明，不考虑具体实现。"
      }
    },
    {
      "type": "概念",
      "ID": "01CON031",
      "name": "类",
      "attributes": {
        "难度": "中等",
        "内容": "C++中用于实现抽象数据类型的机制，通常包含私有/保护数据成员和公共成员函数。"
      }
    },
    {
      "type": "概念",
      "ID": "01CON032",
      "name": "信息隐藏",
      "attributes": {
        "难度": "中等",
        "内容": "面向对象设计原则，隐藏数据结构和操作实现的细节，只暴露接口。"
      }
    },
    {
      "type": "概念",
      "ID": "01CON033",
      "name": "封装",
      "attributes": {
        "难度": "中等",
        "内容": "面向对象设计原则，将数据（属性）和操作（方法）捆绑在同一个单元（如类）中。"
      }
    },
    {
      "type": "概念",
      "ID": "01CON034",
      "name": "引用参数",
      "attributes": {
        "难度": "中等",
        "内容": "C++中的一种参数传递方式，形参成为实参的别名，修改形参会影响实参。"
      }
    },
    {
      "type": "概念",
      "ID": "01CON035",
      "name": "值参数",
      "attributes": {
        "难度": "中等",
        "内容": "一种参数传递方式，将实参的值复制给形参，修改形参不影响实参。"
      }
    },
    {
      "type": "概念",
      "ID": "01CON036",
      "name": "指针参数",
      "attributes": {
        "难度": "中等",
        "内容": "一种参数传递方式，将实参的地址传递给形参（指针），可通过指针修改实参指向的内容。"
      }
    },
    {
      "type": "概念",
      "ID": "01CON037",
      "name": "数据对象",
      "attributes": {
        "难度": "入门",
        "内容": "数据类型的特定实例或值。"
      }
    },
    {
      "type": "概念",
      "ID": "01CON038",
      "name": "算法特性-有穷性",
      "attributes": {
        "难度": "入门",
        "内容": "算法必须在执行有穷步之后结束。"
      }
    },
    {
      "type": "概念",
      "ID": "01CON039",
      "name": "算法特性-确定性",
      "attributes": {
        "难度": "入门",
        "内容": "算法中的每一步都必须具有确切的含义，无二义性。"
      }
    },
    {
      "type": "概念",
      "ID": "01CON040",
      "name": "算法特性-可行性",
      "attributes": {
        "难度": "入门",
        "内容": "算法中的每一步都必须是可行的，能在有限时间内通过有限次操作实现。"
      }
    },
    {
      "type": "概念",
      "ID": "01CON041",
      "name": "算法特性-输入",
      "attributes": {
        "难度": "入门",
        "内容": "一个算法可以有0个或多个输入量。"
      }
    },
    {
      "type": "概念",
      "ID": "01CON042",
      "name": "算法特性-输出",
      "attributes": {
        "难度": "入门",
        "内容": "一个算法执行结束后至少要有一个输出量。"
      }
    },
    {
      "type": "概念",
      "ID": "01CON043",
      "name": "数值算法",
      "attributes": {
        "难度": "入门",
        "内容": "解决数值问题的算法，主要进行算术运算。"
      }
    },
    {
      "type": "概念",
      "ID": "01CON044",
      "name": "非数值算法",
      "attributes": {
        "难度": "入门",
        "内容": "解决非数值问题的算法，主要进行比较和逻辑运算。"
      }
    },
    {
      "type": "概念",
      "ID": "01CON045",
      "name": "递归算法",
      "attributes": {
        "难度": "中等",
        "内容": "一个算法直接或间接调用自身。"
      }
    },
    {
      "type": "概念",
      "ID": "01CON046",
      "name": "非递归算法",
      "attributes": {
        "难度": "中等",
        "内容": "不使用递归调用的算法，通常使用循环等结构实现。"
      }
    },
    {
      "type": "概念",
      "ID": "01CON047",
      "name": "流程图",
      "attributes": {
        "难度": "入门",
        "内容": "一种用于描述算法步骤和流程的图形化工具。"
      }
    },
    {
      "type": "概念",
      "ID": "01CON048",
      "name": "算法评价-正确性",
      "attributes": {
        "难度": "入门",
        "内容": "评价算法的首要条件，指算法在合理输入下能在有限时间内得出正确结果。"
      }
    },
    {
      "type": "概念",
      "ID": "01CON049",
      "name": "算法评价-稳健性",
      "attributes": {
        "难度": "入门",
        "内容": "算法对不合理（非法）数据输入的反应和处理能力。"
      }
    },
    {
      "type": "概念",
      "ID": "01CON050",
      "name": "算法评价-可读性",
      "attributes": {
        "难度": "入门",
        "内容": "算法易于人们阅读和理解的程度。"
      }
    },
    {
      "type": "概念",
      "ID": "01CON051",
      "name": "时间复杂度",
      "attributes": {
        "难度": "中等",
        "内容": "算法运行时间的相对度量，通常表示为算法中简单操作次数关于问题规模n的函数，常用大O表示法。"
      }
    },
    {
      "type": "概念",
      "ID": "01CON052",
      "name": "简单操作",
      "attributes": {
        "难度": "入门",
        "内容": "构成算法基本执行步骤的操作，如赋值、比较、计算等，其执行次数用于估算时间复杂度。"
      }
    },
    {
      "type": "概念",
      "ID": "01CON053",
      "name": "问题规模",
      "attributes": {
        "难度": "入门",
        "内容": "衡量输入数据量大小的参数，通常用n表示，算法复杂度是其函数。"
      }
    },
    {
      "type": "概念",
      "ID": "01CON054",
      "name": "大 O 表示法",
      "attributes": {
        "难度": "中等",
        "内容": "表示算法时间或空间复杂度数量级的渐进表示法，忽略常数因子和低阶项。"
      }
    },
    {
      "type": "概念",
      "ID": "01CON055",
      "name": "O(1) 复杂度",
      "attributes": {
        "难度": "入门",
        "内容": "常量复杂度，执行时间/空间不随问题规模n增长。"
      }
    },
    {
      "type": "概念",
      "ID": "01CON056",
      "name": "O(log n) 复杂度",
      "attributes": {
        "难度": "入门",
        "内容": "对数复杂度，执行时间/空间随n的对数增长。"
      }
    },
    {
      "type": "概念",
      "ID": "01CON057",
      "name": "O(n) 复杂度",
      "attributes": {
        "难度": "入门",
        "内容": "线性复杂度，执行时间/空间随n线性增长。"
      }
    },
    {
      "type": "概念",
      "ID": "01CON058",
      "name": "O(n log n) 复杂度",
      "attributes": {
        "难度": "中等",
        "内容": "线性对数复杂度，执行时间/空间随n*log n增长。"
      }
    },
    {
      "type": "概念",
      "ID": "01CON059",
      "name": "O(n^2) 复杂度",
      "attributes": {
        "难度": "入门",
        "内容": "平方复杂度，执行时间/空间随n的平方增长。"
      }
    },
    {
      "type": "概念",
      "ID": "01CON060",
      "name": "O(n^3) 复杂度",
      "attributes": {
        "难度": "入门",
        "内容": "立方复杂度，执行时间/空间随n的立方增长。"
      }
    },
    {
      "type": "概念",
      "ID": "01CON061",
      "name": "O(2^n) 复杂度",
      "attributes": {
        "难度": "中等",
        "内容": "指数复杂度，执行时间/空间随2的n次方增长，通常认为效率较低。"
      }
    },
    {
      "type": "概念",
      "ID": "01CON062",
      "name": "O(n!) 复杂度",
      "attributes": {
        "难度": "中等",
        "内容": "阶乘复杂度，执行时间/空间随n的阶乘增长，效率极低。"
      }
    },
    {
      "type": "概念",
      "ID": "01CON063",
      "name": "最好情况复杂度",
      "attributes": {
        "难度": "入门",
        "内容": "算法在特定输入下运行时间最短（或资源消耗最少）的情况下的复杂度。"
      }
    },
    {
      "type": "概念",
      "ID": "01CON064",
      "name": "最差情况复杂度",
      "attributes": {
        "难度": "入门",
        "内容": "算法在特定输入下运行时间最长（或资源消耗最多）的情况下的复杂度，提供性能下限保证。"
      }
    },
    {
      "type": "概念",
      "ID": "01CON065",
      "name": "平均情况复杂度",
      "attributes": {
        "难度": "中等",
        "内容": "算法在所有可能输入下期望的运行时间（或资源消耗）的复杂度，更能反映算法的普遍性能。"
      }
    },
    {
      "type": "概念",
      "ID": "01CON066",
      "name": "空间复杂度",
      "attributes": {
        "难度": "中等",
        "内容": "算法在运行过程中临时占用的存储空间大小的量度，包括算法本身、输入输出和临时工作单元。"
      }
    },
    {
      "type": "概念",
      "ID": "01CON067",
      "name": "就地算法",
      "attributes": {
        "难度": "入门",
        "内容": "只需要常量额外空间（O(1)）的算法，即不随问题规模增大而占用更多临时空间。"
      }
    },
    {
      "type": "概念",
      "ID": "01CON068",
      "name": "函数重载",
      "attributes": {
        "难度": "中等",
        "内容": "C++特性，允许在同一作用域内定义多个同名函数，但它们的参数列表（个数或类型）必须不同。"
      }
    },
    {
      "type": "概念",
      "ID": "01CON069",
      "name": "运算符重载",
      "attributes": {
        "难度": "中等",
        "内容": "C++特性，允许为自定义类型（如类或结构体）重新定义或赋予已存在运算符新的含义。"
      }
    },
    {
      "type": "概念",
      "ID": "01CON070",
      "name": "数据结构 [概念]",
      "attributes": {
        "难度": "入门",
        "内容": "研究数据如何在计算机中表示、存取和处理的方法的学科领域；广义上指数据及其相互之间的联系。"
      }
    },
    {
      "type": "概念",
      "ID": "01CON071",
      "name": "算法 [概念]",
      "attributes": {
        "难度": "入门",
        "内容": "解决特定问题的有限步骤或方法，具备有穷性、确定性、可行性、输入、输出五个特性。"
      }
    },
    {
      "type": "数据结构",
      "ID": "01DS001",
      "name": "集合结构",
      "attributes": {
        "难度": "入门",
        "内容": "数据元素同属一个集合，元素之间没有其他特定关系。逻辑关系为1:0。",
        "存储开销": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "01DS002",
      "name": "线性结构",
      "attributes": {
        "难度": "入门",
        "内容": "数据元素之间存在一对一的线性关系。除首尾元素外，每个元素有且仅有一个直接前驱和一个直接后继。",
        "存储开销": "未知 (取决于具体实现如数组或链表)"
      }
    },
    {
      "type": "数据结构",
      "ID": "01DS003",
      "name": "树形结构",
      "attributes": {
        "难度": "中等",
        "内容": "数据元素之间存在一对多的层次关系。除根结点外，每个结点有且仅有一个直接前驱；结点可以有零个或多个直接后继。",
        "存储开销": "未知 (取决于具体实现)"
      }
    },
    {
      "type": "数据结构",
      "ID": "01DS004",
      "name": "图形结构",
      "attributes": {
        "难度": "中等",
        "内容": "数据元素之间存在多对多的关系（网状关系）。结点可以有任意多个直接前驱和任意多个直接后继。",
        "存储开销": "未知 (取决于具体实现)"
      }
    },
    {
      "type": "数据结构",
      "ID": "01DS005",
      "name": "数组",
      "attributes": {
        "难度": "入门",
        "内容": "数目固定的、同一类型的数据元素按线性结构顺序组合。可通过下标直接访问元素。",
        "存储开销": "通常为连续内存空间，大小固定"
      }
    },
    {
      "type": "数据结构",
      "ID": "01DS006",
      "name": "记录",
      "attributes": {
        "难度": "入门",
        "内容": "数目固定的、可包含不同类型的数据项（域）按线性结构排列的组合体。可通过成员名访问域。",
        "存储开销": "通常为连续内存空间，大小固定"
      }
    },
    {
      "type": "数据结构",
      "ID": "01DS007",
      "name": "字符串",
      "attributes": {
        "难度": "入门",
        "内容": "零个或多个字符组成的有限序列，是字符按顺序排列的线性结构。通常作为特殊的一维字符数组实现。",
        "存储开销": "通常为连续内存空间，长度可变但需预留空间或动态管理"
      }
    },
    {
      "type": "数据结构",
      "ID": "01DS008",
      "name": "文件",
      "attributes": {
        "难度": "入门",
        "内容": "存储在外存上的、按位置有序的数据集合。逻辑上可视为线性结构。",
        "存储开销": "外部存储，大小可变"
      }
    },
    {
      "type": "操作",
      "ID": "01OP001",
      "name": "InitRectangle",
      "attributes": {
        "难度": "入门",
        "内容": "初始化矩形ADT实例的长度和宽度属性。"
      }
    },
    {
      "type": "操作",
      "ID": "01OP002",
      "name": "Circumference",
      "attributes": {
        "难度": "入门",
        "内容": "计算并返回矩形ADT实例的周长。"
      }
    },
    {
      "type": "操作",
      "ID": "01OP003",
      "name": "Area",
      "attributes": {
        "难度": "入门",
        "内容": "计算并返回矩形ADT实例的面积。"
      }
    },
    {
      "type": "算法",
      "ID": "01ALG001",
      "name": "累加求和",
      "attributes": {
        "难度": "入门",
        "内容": "计算一个包含n个元素的数组中所有元素的总和。基本步骤：初始化和s=0，遍历数组将每个元素加到s上，返回s。",
        "时间复杂度": "O(n)",
        "空间复杂度": "O(1)"
      }
    },
    {
      "type": "算法",
      "ID": "01ALG002",
      "name": "矩阵相加",
      "attributes": {
        "难度": "入门",
        "内容": "计算两个相同维度（n x n）的矩阵对应元素之和，结果存入第三个矩阵。基本步骤：双重循环遍历行i和列j，执行c[i][j] = a[i][j] + b[i][j]。",
        "时间复杂度": "O(n^2)",
        "空间复杂度": "O(1) (不计输入输出矩阵空间)"
      }
    },
    {
      "type": "算法",
      "ID": "01ALG003",
      "name": "简单选择排序",
      "attributes": {
        "难度": "入门",
        "内容": "一种原地排序算法。在未排序序列中找到最小（或最大）元素，存放到排序序列的起始位置，然后，再从剩余未排序元素中继续寻找最小（大）元素，然后放到已排序序列的末尾。以此类推，直到所有元素均排序完毕。",
        "时间复杂度": "O(n^2)",
        "空间复杂度": "O(1)"
      }
    },
    {
      "type": "算法",
      "ID": "01ALG004",
      "name": "顺序查找",
      "attributes": {
        "难度": "入门",
        "内容": "在一维数组（或线性表）中从头到尾依次比较元素，查找给定值。若找到则返回元素位置（下标），否则返回查找失败标识（如-1）。",
        "时间复杂度": "O(1) (最好), O(n) (最差), O(n) (平均)",
        "空间复杂度": "O(1)"
      }
    }
  ],
  "relations": [
    {
      "type": "继承",
      "关系ID": "01REL001",
      "source": "01DS003",
      "target": "01DS004",
      "attributes": {
        "父类 ID": "01DS004",
        "子类 ID": "01DS003",
        "约束条件": "图形结构中每个结点最多只有一个前驱（除根结点外）的特例"
      }
    },
    {
      "type": "继承",
      "关系ID": "01REL002",
      "source": "01DS002",
      "target": "01DS003",
      "attributes": {
        "父类 ID": "01DS003",
        "子类 ID": "01DS002",
        "约束条件": "树形结构中每个结点最多只有一个后继（除尾结点外）的特例"
      }
    },
    {
      "type": "继承",
      "关系ID": "01REL003",
      "source": "01DS005",
      "target": "01DS002",
      "attributes": {
        "父类 ID": "01DS002",
        "子类 ID": "01DS005",
        "约束条件": "元素类型相同，大小固定，通过下标访问的线性结构实现"
      }
    },
    {
      "type": "继承",
      "关系ID": "01REL004",
      "source": "01DS006",
      "target": "01DS002",
      "attributes": {
        "父类 ID": "01DS002",
        "子类 ID": "01DS006",
        "约束条件": "元素类型可不同，大小固定，通过成员名访问的线性结构实现"
      }
    },
    {
      "type": "继承",
      "关系ID": "01REL005",
      "source": "01DS007",
      "target": "01DS005",
      "attributes": {
        "父类 ID": "01DS005",
        "子类 ID": "01DS007",
        "约束条件": "元素类型为字符的特殊一维数组，通常以空字符结尾"
      }
    },
    {
      "type": "继承",
      "关系ID": "01REL006",
      "source": "01DS008",
      "target": "01DS002",
      "attributes": {
        "父类 ID": "01DS002",
        "子类 ID": "01DS008",
        "约束条件": "按位置有序的数据集合，逻辑上视为线性结构，存储在外存"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "01REL007",
      "source": "01CON008",
      "target": "01CON015",
      "attributes": {
        "实体 ID": "01CON008",
        "概念 ID": "01CON015",
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "01REL008",
      "source": "01CON009",
      "target": "01CON010",
      "attributes": {
        "实体 ID": "01CON009",
        "概念 ID": "01CON010",
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "01REL009",
      "source": "01CON009",
      "target": "01CON011",
      "attributes": {
        "实体 ID": "01CON009",
        "概念 ID": "01CON011",
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "01REL010",
      "source": "01CON009",
      "target": "01CON012",
      "attributes": {
        "实体 ID": "01CON009",
        "概念 ID": "01CON012",
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "01REL011",
      "source": "01CON009",
      "target": "01CON013",
      "attributes": {
        "实体 ID": "01CON009",
        "概念 ID": "01CON013",
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "01REL012",
      "source": "01CON030",
      "target": "01CON070",
      "attributes": {
        "实体 ID": "01CON030",
        "概念 ID": "01CON070",
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "01REL013",
      "source": "01CON030",
      "target": "01CON027",
      "attributes": {
        "实体 ID": "01CON030",
        "概念 ID": "01CON027",
        "依赖强度": "强"
      }
    },
    {
      "type": "使用",
      "关系ID": "01REL014",
      "source": "01ALG001",
      "target": "01DS005",
      "attributes": {
        "算法 ID": "01ALG001",
        "数据结构 ID": "01DS005",
        "使用角色": "输入数据"
      }
    },
    {
      "type": "使用",
      "关系ID": "01REL015",
      "source": "01ALG002",
      "target": "01DS005",
      "attributes": {
        "算法 ID": "01ALG002",
        "数据结构 ID": "01DS005",
        "使用角色": "输入输出数据 (二维数组)"
      }
    },
    {
      "type": "使用",
      "关系ID": "01REL016",
      "source": "01ALG003",
      "target": "01DS005",
      "attributes": {
        "算法 ID": "01ALG003",
        "数据结构 ID": "01DS005",
        "使用角色": "待排序数据"
      }
    },
    {
      "type": "使用",
      "关系ID": "01REL017",
      "source": "01ALG004",
      "target": "01DS005",
      "attributes": {
        "算法 ID": "01ALG004",
        "数据结构 ID": "01DS005",
        "使用角色": "待查找数据"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "01REL018",
      "source": "01ALG001",
      "target": "01CON051",
      "attributes": {
        "实体 ID": "01ALG001",
        "概念 ID": "01CON051",
        "依赖强度": "中"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "01REL019",
      "source": "01ALG001",
      "target": "01CON066",
      "attributes": {
        "实体 ID": "01ALG001",
        "概念 ID": "01CON066",
        "依赖强度": "中"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "01REL020",
      "source": "01ALG002",
      "target": "01CON051",
      "attributes": {
        "实体 ID": "01ALG002",
        "概念 ID": "01CON051",
        "依赖强度": "中"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "01REL021",
      "source": "01ALG002",
      "target": "01CON066",
      "attributes": {
        "实体 ID": "01ALG002",
        "概念 ID": "01CON066",
        "依赖强度": "中"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "01REL022",
      "source": "01ALG003",
      "target": "01CON051",
      "attributes": {
        "实体 ID": "01ALG003",
        "概念 ID": "01CON051",
        "依赖强度": "中"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "01REL023",
      "source": "01ALG003",
      "target": "01CON066",
      "attributes": {
        "实体 ID": "01ALG003",
        "概念 ID": "01CON066",
        "依赖强度": "中"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "01REL024",
      "source": "01ALG004",
      "target": "01CON051",
      "attributes": {
        "实体 ID": "01ALG004",
        "概念 ID": "01CON051",
        "依赖强度": "中"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "01REL025",
      "source": "01ALG004",
      "target": "01CON066",
      "attributes": {
        "实体 ID": "01ALG004",
        "概念 ID": "01CON066",
        "依赖强度": "中"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "01REL026",
      "source": "01ALG004",
      "target": "01CON063",
      "attributes": {
        "实体 ID": "01ALG004",
        "概念 ID": "01CON063",
        "依赖强度": "中"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "01REL027",
      "source": "01ALG004",
      "target": "01CON064",
      "attributes": {
        "实体 ID": "01ALG004",
        "概念 ID": "01CON064",
        "依赖强度": "中"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "01REL028",
      "source": "01ALG004",
      "target": "01CON065",
      "attributes": {
        "实体 ID": "01ALG004",
        "概念 ID": "01CON065",
        "依赖强度": "中"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "01REL029",
      "source": "01DS001",
      "target": "01CON070",
      "attributes": {
        "实体 ID": "01DS001",
        "概念 ID": "01CON070",
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "01REL030",
      "source": "01DS002",
      "target": "01CON070",
      "attributes": {
        "实体 ID": "01DS002",
        "概念 ID": "01CON070",
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "01REL031",
      "source": "01DS003",
      "target": "01CON070",
      "attributes": {
        "实体 ID": "01DS003",
        "概念 ID": "01CON070",
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "01REL032",
      "source": "01DS004",
      "target": "01CON070",
      "attributes": {
        "实体 ID": "01DS004",
        "概念 ID": "01CON070",
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "01REL033",
      "source": "01DS001",
      "target": "01CON008",
      "attributes": {
        "实体 ID": "01DS001",
        "概念 ID": "01CON008",
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "01REL034",
      "source": "01DS002",
      "target": "01CON008",
      "attributes": {
        "实体 ID": "01DS002",
        "概念 ID": "01CON008",
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "01REL035",
      "source": "01DS003",
      "target": "01CON008",
      "attributes": {
        "实体 ID": "01DS003",
        "概念 ID": "01CON008",
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "01REL036",
      "source": "01DS004",
      "target": "01CON008",
      "attributes": {
        "实体 ID": "01DS004",
        "概念 ID": "01CON008",
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "01REL037",
      "source": "01OP001",
      "target": "01CON030",
      "attributes": {
        "实体 ID": "01OP001",
        "概念 ID": "01CON030",
        "依赖强度": "中"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "01REL038",
      "source": "01OP002",
      "target": "01CON030",
      "attributes": {
        "实体 ID": "01OP002",
        "概念 ID": "01CON030",
        "依赖强度": "中"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "01REL039",
      "source": "01OP003",
      "target": "01CON030",
      "attributes": {
        "实体 ID": "01OP003",
        "概念 ID": "01CON030",
        "依赖强度": "中"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "01REL040",
      "source": "01CON030",
      "target": "01CON031",
      "attributes": {
        "实体 ID": "01CON030",
        "概念 ID": "01CON031",
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "01REL041",
      "source": "01CON030",
      "target": "01CON032",
      "attributes": {
        "实体 ID": "01CON030",
        "概念 ID": "01CON032",
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "01REL042",
      "source": "01CON030",
      "target": "01CON033",
      "attributes": {
        "实体 ID": "01CON030",
        "概念 ID": "01CON033",
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "01REL043",
      "source": "01CON051",
      "target": "01CON054",
      "attributes": {
        "实体 ID": "01CON051",
        "概念 ID": "01CON054",
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "01REL044",
      "source": "01CON066",
      "target": "01CON054",
      "attributes": {
        "实体 ID": "01CON066",
        "概念 ID": "01CON054",
        "依赖强度": "强"
      }
    }
  ]
}