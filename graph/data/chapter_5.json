{
  "entities": [
    {
      "type": "数据结构",
      "ID": "05DS001",
      "name": "树",
      "attributes": {
        "难度": "入门",
        "内容": "树形结构的简称, 重要的非线性数据结构。空树或非空树(有且仅有一个根结点, 其余结点分为m>=0个互不相交的子树)。定义是递归的。",
        "存储开销": "取决于存储方式",
        "核心特性": "层次性, 递归性",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "05CON001",
      "name": "结点",
      "attributes": {
        "难度": "入门",
        "内容": "树结构中的基本元素。",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "05CON002",
      "name": "根",
      "attributes": {
        "难度": "入门",
        "内容": "非空树中有且仅有的一个没有前驱的结点。",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "05CON003",
      "name": "子树",
      "attributes": {
        "难度": "入门",
        "内容": "非空树中根结点之外的结点被分成的m(m>=0)棵互不相交的树，每棵子树的根是原树根的后继。",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "05CON004",
      "name": "递归",
      "attributes": {
        "难度": "中等",
        "内容": "一种定义或解决问题的方法，其中函数或结构直接或间接调用自身。树的定义是递归的。",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "05CON005",
      "name": "前驱",
      "attributes": {
        "难度": "入门",
        "内容": "在树结构中，一个结点指向其子树根结点的关系，该结点是子树根的前驱。",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "05CON006",
      "name": "后继",
      "attributes": {
        "难度": "入门",
        "内容": "在树结构中，一个结点的子树的根结点是该结点的后继。",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "05CON007",
      "name": "树的表示法",
      "attributes": {
        "难度": "入门",
        "内容": "表示树结构的方法，包括树形表示法、二元组表示法、集合图表示、凹入表示、广义表表示。",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "05CON008",
      "name": "广义表表示法",
      "attributes": {
        "难度": "中等",
        "内容": "树的一种表示法，根结点作为表名放在前面，子树构成表的内容。例如 A(B(D,E(H,I),F),C(G))。",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "05CON009",
      "name": "度",
      "attributes": {
        "难度": "入门",
        "内容": "结点的度指其子树数或后继结点数。树的度指树中所有结点的度的最大值。",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "05CON010",
      "name": "叶子结点",
      "attributes": {
        "难度": "入门",
        "内容": "度为0的结点，也称终端结点。",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "05CON011",
      "name": "分支结点",
      "attributes": {
        "难度": "入门",
        "内容": "度大于0的结点，也称非终端结点。",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "05CON012",
      "name": "孩子结点",
      "attributes": {
        "难度": "入门",
        "内容": "一个结点的子树的根，或该结点的后继。",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "05CON013",
      "name": "双亲结点",
      "attributes": {
        "难度": "入门",
        "内容": "孩子结点的前驱结点。",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "05CON014",
      "name": "兄弟结点",
      "attributes": {
        "难度": "入门",
        "内容": "具有同一双亲结点的孩子结点互称兄弟。",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "05CON015",
      "name": "层数",
      "attributes": {
        "难度": "入门",
        "内容": "结点在树中的层次，根为第1层，其孩子为第2层，以此类推。",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "05CON016",
      "name": "深度",
      "attributes": {
        "难度": "入门",
        "内容": "树中所有结点的最大层数，也称高度。",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "05CON017",
      "name": "有序树",
      "attributes": {
        "难度": "入门",
        "内容": "树中各结点的子树按一定次序从左到右排列的树。",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "05CON018",
      "name": "无序树",
      "attributes": {
        "难度": "入门",
        "内容": "树中各结点的子树没有固定次序的树。",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "05CON019",
      "name": "森林",
      "attributes": {
        "难度": "入门",
        "内容": "m(m>=0)棵互不相交的树的集合。",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "05DS002",
      "name": "k叉树",
      "attributes": {
        "难度": "入门",
        "内容": "度为k的树，即每个结点最多有k个孩子。也称多元树或多叉树。",
        "存储开销": "取决于存储方式",
        "核心特性": "每个结点最多k个孩子",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "05DS003",
      "name": "满k叉树",
      "attributes": {
        "难度": "中等",
        "内容": "深度为h的k叉树，其结点总数达到最大值 (k^h - 1) / (k - 1)。",
        "存储开销": "密集",
        "核心特性": "结构完全饱和",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "05DS004",
      "name": "二叉树",
      "attributes": {
        "难度": "入门",
        "内容": "度为2的有序树。递归定义：空树或由一个根结点及两棵互不相交的左、右子树组成，左、右子树也为二叉树。",
        "存储开销": "取决于存储方式",
        "核心特性": "有序性, 每个结点最多两个孩子(左/右)",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "05CON020",
      "name": "左孩子",
      "attributes": {
        "难度": "入门",
        "内容": "二叉树中，一个结点的左子树的根结点。",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "05CON021",
      "name": "右孩子",
      "attributes": {
        "难度": "入门",
        "内容": "二叉树中，一个结点的右子树的根结点。",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "05DS005",
      "name": "满二叉树",
      "attributes": {
        "难度": "中等",
        "内容": "深度为h且含有2^h - 1个结点的二叉树，即每一层都达到最大结点数。",
        "存储开销": "密集",
        "核心特性": "结构完全饱和",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "05DS006",
      "name": "完全二叉树",
      "attributes": {
        "难度": "中等",
        "内容": "深度为h的二叉树，除第h层外，其它各层(1~h-1)的结点数都达到最大个数，第h层的所有结点都连续集中在最左边。",
        "存储开销": "较密集, 适合顺序存储",
        "核心特性": "层序编号连续(除末尾)",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "05DS007",
      "name": "理想平衡二叉树",
      "attributes": {
        "难度": "中等",
        "内容": "除最后一层外，其余层都是满的，最后一层结点可以任意分布的二叉树。包含满二叉树和完全二叉树。",
        "存储开销": "相对平衡",
        "核心特性": "高度接近logN",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "05ALG001",
      "name": "初始化二叉树",
      "attributes": {
        "难度": "入门",
        "内容": "将二叉树置为空树，通常是将根指针置为NULL。",
        "时间复杂度": "O(1)",
        "空间复杂度": "O(1)",
        "设计思想": "赋值",
        "适用场景": "创建新的二叉树或清空现有树后",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "05ALG002",
      "name": "建立二叉树",
      "attributes": {
        "难度": "中等",
        "内容": "根据特定输入格式（如广义表字符串）创建二叉树的链接存储结构。",
        "时间复杂度": "O(n)",
        "空间复杂度": "O(h)",
        "设计思想": "递归或栈辅助",
        "适用场景": "从外部表示构造内存中的二叉树",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "05CON022",
      "name": "栈",
      "attributes": {
        "难度": "入门",
        "内容": "一种后进先出（LIFO）的线性数据结构。",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "05ALG003",
      "name": "判断二叉树是否为空",
      "attributes": {
        "难度": "入门",
        "内容": "检查二叉树的根指针是否为NULL。",
        "时间复杂度": "O(1)",
        "空间复杂度": "O(1)",
        "设计思想": "指针检查",
        "适用场景": "在操作二叉树前进行有效性判断",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "05CON023",
      "name": "遍历二叉树",
      "attributes": {
        "难度": "中等",
        "内容": "按照一定次序访问二叉树中的所有结点，且每个结点仅被访问一次。常见有前序、中序、后序、层序。",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "05ALG004",
      "name": "查找二叉树结点",
      "attributes": {
        "难度": "中等",
        "内容": "在二叉树中查找具有特定值的结点。",
        "时间复杂度": "O(n)",
        "空间复杂度": "O(h)",
        "设计思想": "递归遍历",
        "适用场景": "定位二叉树中的数据",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "05ALG005",
      "name": "求二叉树深度",
      "attributes": {
        "难度": "中等",
        "内容": "计算二叉树的最大层数。",
        "时间复杂度": "O(n)",
        "空间复杂度": "O(h)",
        "设计思想": "递归 (深度 = max(左子树深度, 右子树深度) + 1)",
        "适用场景": "分析树的规模和结构",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "05ALG006",
      "name": "输出二叉树",
      "attributes": {
        "难度": "中等",
        "内容": "将二叉树的结构以某种形式（如广义表）打印出来。",
        "时间复杂度": "O(n)",
        "空间复杂度": "O(h)",
        "设计思想": "递归遍历（类前序）",
        "适用场景": "可视化或序列化二叉树结构",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "05ALG007",
      "name": "清除二叉树",
      "attributes": {
        "难度": "中等",
        "内容": "删除二叉树中的所有结点，释放内存，使其变为空树。",
        "时间复杂度": "O(n)",
        "空间复杂度": "O(h)",
        "设计思想": "递归（类后序），先删除子树再删除根",
        "适用场景": "销毁不再使用的二叉树",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "05DS008",
      "name": "二叉树顺序存储结构",
      "attributes": {
        "难度": "中等",
        "内容": "使用一维数组存储二叉树结点，按下标（编号）反映结点间的逻辑关系。根结点编号为1 (或0)，结点i的左孩子为2i (或2i+1)，右孩子为2i+1 (或2i+2)。",
        "存储开销": "对于完全二叉树空间效率高，对于一般或单支树浪费严重。",
        "核心特性": "随机访问父子结点(通过下标计算)",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "05CON024",
      "name": "一维数组",
      "attributes": {
        "难度": "入门",
        "内容": "一种线性数据结构，用于存储固定大小的同类型元素序列，可通过索引访问。",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "05DS009",
      "name": "二叉树链接存储结构",
      "attributes": {
        "难度": "入门",
        "内容": "使用指针将离散存储的结点连接起来，反映二叉树的逻辑结构。常见为二叉链表。",
        "存储开销": "按需分配，有指针开销",
        "核心特性": "通过指针访问父子结点",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "05DS010",
      "name": "二叉链表",
      "attributes": {
        "难度": "入门",
        "内容": "二叉树链接存储的一种基本形式，每个结点包含数据域、指向左孩子的指针域和指向右孩子的指针域。",
        "存储开销": "每个结点3个域 (数据+2指针)",
        "核心特性": "易于查找孩子结点",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "05DS011",
      "name": "带双亲指针的二叉链表",
      "attributes": {
        "难度": "入门",
        "内容": "在二叉链表的基础上，为每个结点增加一个指向其双亲结点的指针域。",
        "存储开销": "每个结点4个域 (数据+3指针)",
        "核心特性": "易于查找孩子和双亲结点",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "05ALG008",
      "name": "前序遍历",
      "attributes": {
        "难度": "中等",
        "内容": "二叉树遍历算法之一。访问顺序：根结点 -> 左子树 -> 右子树 (DLR)。",
        "时间复杂度": "O(n)",
        "空间复杂度": "O(h)",
        "设计思想": "递归",
        "适用场景": "复制树、表达式树求前缀表达式",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "05ALG009",
      "name": "中序遍历",
      "attributes": {
        "难度": "中等",
        "内容": "二叉树遍历算法之一。访问顺序：左子树 -> 根结点 -> 右子树 (LDR)。",
        "时间复杂度": "O(n)",
        "空间复杂度": "O(h)",
        "设计思想": "递归",
        "适用场景": "二叉搜索树排序输出、表达式树求中缀表达式",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "05ALG010",
      "name": "后序遍历",
      "attributes": {
        "难度": "中等",
        "内容": "二叉树遍历算法之一。访问顺序：左子树 -> 右子树 -> 根结点 (LRD)。",
        "时间复杂度": "O(n)",
        "空间复杂度": "O(h)",
        "设计思想": "递归",
        "适用场景": "计算表达式树、释放树结点内存",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "05ALG011",
      "name": "按层遍历",
      "attributes": {
        "难度": "中等",
        "内容": "二叉树遍历算法之一。按照从上到下、同一层从左到右的次序访问结点。",
        "时间复杂度": "O(n)",
        "空间复杂度": "O(W)",
        "设计思想": "非递归，使用队列",
        "适用场景": "求最短路径（如BFS）、按层输出",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "05CON025",
      "name": "队列",
      "attributes": {
        "难度": "入门",
        "内容": "一种先进先出（FIFO）的线性数据结构。",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "05ALG012",
      "name": "初始化树",
      "attributes": {
        "难度": "入门",
        "内容": "将一般树（k叉树）置为空树，通常是将根指针置为NULL。",
        "时间复杂度": "O(1)",
        "空间复杂度": "O(1)",
        "设计思想": "赋值",
        "适用场景": "创建新的k叉树或清空现有树后",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "05ALG013",
      "name": "建立树",
      "attributes": {
        "难度": "高级",
        "内容": "根据特定输入格式（如广义表字符串）创建一般树（k叉树）的链接存储结构（如k叉链表）。",
        "时间复杂度": "O(n)",
        "空间复杂度": "O(h)",
        "设计思想": "栈辅助",
        "适用场景": "从外部表示构造内存中的k叉树",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "05DS012",
      "name": "k叉链表",
      "attributes": {
        "难度": "中等",
        "内容": "一般树（k叉树）的链接存储结构（标准方式），每个结点包含数据域和k个指向孩子结点的指针域。",
        "存储开销": "每个结点1个数据域 + k个指针域，k固定时可能浪费空间",
        "核心特性": "直接访问k个孩子",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "05DS013",
      "name": "树链接存储结构",
      "attributes": {
        "难度": "入门",
        "内容": "使用指针将离散存储的结点连接起来，反映一般树的逻辑结构。包括标准方式(k叉链表)、广义标准方式、二叉树方式(孩子兄弟表示法)。",
        "存储开销": "按需分配，有指针开销",
        "核心特性": "通过指针访问相关结点",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "05CON026",
      "name": "遍历树",
      "attributes": {
        "难度": "中等",
        "内容": "按照一定次序访问一般树中的所有结点，且每个结点仅被访问一次。常见有先根、后根、按层遍历。",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "05ALG014",
      "name": "查找树结点",
      "attributes": {
        "难度": "中等",
        "内容": "在一般树（k叉树）中查找具有特定值的结点。",
        "时间复杂度": "O(n)",
        "空间复杂度": "O(h)",
        "设计思想": "递归遍历（类先根）",
        "适用场景": "定位k叉树中的数据",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "05ALG015",
      "name": "输出树",
      "attributes": {
        "难度": "中等",
        "内容": "将一般树（k叉树）的结构以某种形式（如广义表）打印出来。",
        "时间复杂度": "O(n)",
        "空间复杂度": "O(h)",
        "设计思想": "递归遍历（类先根）",
        "适用场景": "可视化或序列化k叉树结构",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "05ALG016",
      "name": "判断树是否为空",
      "attributes": {
        "难度": "入门",
        "内容": "检查一般树（k叉树）的根指针是否为NULL。",
        "时间复杂度": "O(1)",
        "空间复杂度": "O(1)",
        "设计思想": "指针检查",
        "适用场景": "在操作k叉树前进行有效性判断",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "05ALG017",
      "name": "清除树",
      "attributes": {
        "难度": "中等",
        "内容": "删除一般树（k叉树）中的所有结点，释放内存，使其变为空树。",
        "时间复杂度": "O(n)",
        "空间复杂度": "O(h)",
        "设计思想": "递归（类后根），先删除子树再删除根",
        "适用场景": "销毁不再使用的k叉树",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "05DS014",
      "name": "树顺序存储结构",
      "attributes": {
        "难度": "中等",
        "内容": "使用一维数组存储k叉树结点，按下标（编号）反映结点间的逻辑关系。结点i的k个孩子编号有特定计算规则。",
        "存储开销": "对于满k叉树或完全k叉树合适，否则浪费严重。",
        "核心特性": "随机访问父子结点(通过下标计算)",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "05DS015",
      "name": "广义标准方式",
      "attributes": {
        "难度": "中等",
        "内容": "树的链接存储方式之一，在标准方式（k叉链表）的基础上，为每个结点增加一个指向其双亲结点的指针域。",
        "存储开销": "每个结点1个数据域 + k个孩子指针 + 1个双亲指针",
        "核心特性": "方便查找孩子和双亲",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "05DS016",
      "name": "二叉树方式",
      "attributes": {
        "难度": "中等",
        "内容": "树的链接存储方式之一，也称孩子兄弟表示法。将树转换为二叉树存储：结点的左指针指向第一个孩子，右指针指向其下一个兄弟。",
        "存储开销": "等同于二叉链表",
        "核心特性": "节省空间(相比k叉链表), 方便查找第一孩子和兄弟",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "05ALG018",
      "name": "先根遍历",
      "attributes": {
        "难度": "中等",
        "内容": "一般树（k叉树）遍历算法之一。访问顺序：根结点 -> 从左到右依次先根遍历各子树。",
        "时间复杂度": "O(n)",
        "空间复杂度": "O(h)",
        "设计思想": "递归",
        "适用场景": "树的复制、输出",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "05ALG019",
      "name": "后根遍历",
      "attributes": {
        "难度": "中等",
        "内容": "一般树（k叉树）遍历算法之一。访问顺序：从左到右依次后根遍历各子树 -> 根结点。",
        "时间复杂度": "O(n)",
        "空间复杂度": "O(h)",
        "设计思想": "递归",
        "适用场景": "计算树的某些属性（如结点数、高度）、释放树内存",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "05ALG020",
      "name": "按层遍历 (树)",
      "attributes": {
        "难度": "中等",
        "内容": "一般树（k叉树）遍历算法之一。按照从上到下、同一层从左到右的次序访问结点。",
        "时间复杂度": "O(n)",
        "空间复杂度": "O(W)",
        "设计思想": "非递归，使用队列",
        "适用场景": "按层输出、广度优先搜索",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "05ALG021",
      "name": "求树深度",
      "attributes": {
        "难度": "中等",
        "内容": "计算一般树（k叉树）的最大层数。",
        "时间复杂度": "O(n)",
        "空间复杂度": "O(h)",
        "设计思想": "递归 (深度 = max(各子树深度) + 1)",
        "适用场景": "分析树的规模和结构",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知",
        "相关习题": "未知",
        "相关实验": "未知"
      }
    }
  ],
  "relations": [
    {
      "type": "理论依赖",
      "关系ID": "05REL001",
      "source": "05DS001",
      "target": "05CON004",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "05REL002",
      "source": "05CON002",
      "target": "05CON005",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "05REL003",
      "source": "05CON003",
      "target": "05CON006",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "05REL004",
      "source": "05CON008",
      "target": "05CON007",
      "attributes": {
        "依赖强度": "中"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "05REL005",
      "source": "05CON010",
      "target": "05CON009",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "05REL006",
      "source": "05CON011",
      "target": "05CON009",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "05REL007",
      "source": "05CON012",
      "target": "05CON006",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "05REL008",
      "source": "05CON013",
      "target": "05CON005",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "05REL009",
      "source": "05CON014",
      "target": "05CON013",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "05REL010",
      "source": "05CON016",
      "target": "05CON015",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "05REL011",
      "source": "05CON019",
      "target": "05DS001",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "继承",
      "关系ID": "05REL012",
      "source": "05DS002",
      "target": "05DS001",
      "attributes": {
        "父类 ID": "05DS001",
        "子类 ID": "05DS002",
        "约束条件": "度为k"
      }
    },
    {
      "type": "继承",
      "关系ID": "05REL013",
      "source": "05DS003",
      "target": "05DS002",
      "attributes": {
        "父类 ID": "05DS002",
        "子类 ID": "05DS003",
        "约束条件": "结点数达到最大值"
      }
    },
    {
      "type": "继承",
      "关系ID": "05REL014",
      "source": "05DS004",
      "target": "05DS001",
      "attributes": {
        "父类 ID": "05DS001",
        "子类 ID": "05DS004",
        "约束条件": "度为2"
      }
    },
    {
      "type": "继承",
      "关系ID": "05REL015",
      "source": "05DS004",
      "target": "05CON017",
      "attributes": {
        "父类 ID": "05CON017",
        "子类 ID": "05DS004",
        "约束条件": "子树区分左右"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "05REL016",
      "source": "05DS004",
      "target": "05CON004",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "05REL017",
      "source": "05CON020",
      "target": "05CON012",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "05REL018",
      "source": "05CON021",
      "target": "05CON012",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "继承",
      "关系ID": "05REL019",
      "source": "05DS005",
      "target": "05DS004",
      "attributes": {
        "父类 ID": "05DS004",
        "子类 ID": "05DS005",
        "约束条件": "每层都满"
      }
    },
    {
      "type": "继承",
      "关系ID": "05REL020",
      "source": "05DS005",
      "target": "05DS003",
      "attributes": {
        "父类 ID": "05DS003",
        "子类 ID": "05DS005",
        "约束条件": "k=2"
      }
    },
    {
      "type": "继承",
      "关系ID": "05REL021",
      "source": "05DS006",
      "target": "05DS004",
      "attributes": {
        "父类 ID": "05DS004",
        "子类 ID": "05DS006",
        "约束条件": "除最后一层外满, 最后一层靠左"
      }
    },
    {
      "type": "继承",
      "关系ID": "05REL022",
      "source": "05DS005",
      "target": "05DS006",
      "attributes": {
        "父类 ID": "05DS006",
        "子类 ID": "05DS005",
        "约束条件": "最后一层也满"
      }
    },
    {
      "type": "继承",
      "关系ID": "05REL023",
      "source": "05DS007",
      "target": "05DS004",
      "attributes": {
        "父类 ID": "05DS004",
        "子类 ID": "05DS007",
        "约束条件": "除最后一层外满"
      }
    },
    {
      "type": "继承",
      "关系ID": "05REL024",
      "source": "05DS006",
      "target": "05DS007",
      "attributes": {
        "父类 ID": "05DS007",
        "子类 ID": "05DS006",
        "约束条件": "最后一层靠左"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "05REL025",
      "source": "05ALG001",
      "target": "05DS004",
      "attributes": {
        "算法 ID": "05ALG001",
        "数据结构 ID": "05DS004",
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "05REL026",
      "source": "05ALG002",
      "target": "05DS004",
      "attributes": {
        "算法 ID": "05ALG002",
        "数据结构 ID": "05DS004",
        "必需性": "是"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "05REL027",
      "source": "05ALG002",
      "target": "05CON008",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "使用",
      "关系ID": "05REL028",
      "source": "05ALG002",
      "target": "05CON022",
      "attributes": {
        "使用方ID": "05ALG002",
        "被使用的数据结构 ID": "05CON022",
        "使用角色": "辅助结构"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "05REL029",
      "source": "05ALG003",
      "target": "05DS004",
      "attributes": {
        "算法 ID": "05ALG003",
        "数据结构 ID": "05DS004",
        "必需性": "是"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "05REL030",
      "source": "05CON023",
      "target": "05DS004",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "05REL031",
      "source": "05ALG004",
      "target": "05DS004",
      "attributes": {
        "算法 ID": "05ALG004",
        "数据结构 ID": "05DS004",
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "05REL032",
      "source": "05ALG005",
      "target": "05DS004",
      "attributes": {
        "算法 ID": "05ALG005",
        "数据结构 ID": "05DS004",
        "必需性": "是"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "05REL033",
      "source": "05ALG005",
      "target": "05CON016",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "05REL034",
      "source": "05ALG006",
      "target": "05DS004",
      "attributes": {
        "算法 ID": "05ALG006",
        "数据结构 ID": "05DS004",
        "必需性": "是"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "05REL035",
      "source": "05ALG006",
      "target": "05CON008",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "05REL036",
      "source": "05ALG007",
      "target": "05DS004",
      "attributes": {
        "算法 ID": "05ALG007",
        "数据结构 ID": "05DS004",
        "必需性": "是"
      }
    },
    {
      "type": "使用",
      "关系ID": "05REL037",
      "source": "05DS008",
      "target": "05CON024",
      "attributes": {
        "使用方ID": "05DS008",
        "被使用的数据结构 ID": "05CON024",
        "使用角色": "底层存储"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "05REL038",
      "source": "05DS006",
      "target": "05DS008",
      "attributes": {
        "依赖强度": "中"
      }
    },
    {
      "type": "继承",
      "关系ID": "05REL039",
      "source": "05DS010",
      "target": "05DS009",
      "attributes": {
        "父类 ID": "05DS009",
        "子类 ID": "05DS010",
        "约束条件": "无双亲指针"
      }
    },
    {
      "type": "使用",
      "关系ID": "05REL040",
      "source": "05DS004",
      "target": "05DS010",
      "attributes": {
        "使用方ID": "05DS004",
        "被使用的数据结构 ID": "05DS010",
        "使用角色": "存储实现"
      }
    },
    {
      "type": "变体",
      "关系ID": "05REL041",
      "source": "05DS011",
      "target": "05DS010",
      "attributes": {
        "基础 ID": "05DS010",
        "变体 ID": "05DS011",
        "变体类型": "增加双亲指针"
      }
    },
    {
      "type": "使用",
      "关系ID": "05REL042",
      "source": "05DS004",
      "target": "05DS011",
      "attributes": {
        "使用方ID": "05DS004",
        "被使用的数据结构 ID": "05DS011",
        "使用角色": "存储实现"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "05REL043",
      "source": "05ALG008",
      "target": "05DS004",
      "attributes": {
        "算法 ID": "05ALG008",
        "数据结构 ID": "05DS004",
        "必需性": "是"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "05REL044",
      "source": "05ALG008",
      "target": "05CON023",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "05REL045",
      "source": "05ALG009",
      "target": "05DS004",
      "attributes": {
        "算法 ID": "05ALG009",
        "数据结构 ID": "05DS004",
        "必需性": "是"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "05REL046",
      "source": "05ALG009",
      "target": "05CON023",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "05REL047",
      "source": "05ALG010",
      "target": "05DS004",
      "attributes": {
        "算法 ID": "05ALG010",
        "数据结构 ID": "05DS004",
        "必需性": "是"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "05REL048",
      "source": "05ALG010",
      "target": "05CON023",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "05REL049",
      "source": "05ALG011",
      "target": "05DS004",
      "attributes": {
        "算法 ID": "05ALG011",
        "数据结构 ID": "05DS004",
        "必需性": "是"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "05REL050",
      "source": "05ALG011",
      "target": "05CON023",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "使用",
      "关系ID": "05REL051",
      "source": "05ALG011",
      "target": "05CON025",
      "attributes": {
        "使用方ID": "05ALG011",
        "被使用的数据结构 ID": "05CON025",
        "使用角色": "辅助结构"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "05REL052",
      "source": "05ALG012",
      "target": "05DS002",
      "attributes": {
        "算法 ID": "05ALG012",
        "数据结构 ID": "05DS002",
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "05REL053",
      "source": "05ALG013",
      "target": "05DS002",
      "attributes": {
        "算法 ID": "05ALG013",
        "数据结构 ID": "05DS002",
        "必需性": "是"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "05REL054",
      "source": "05ALG013",
      "target": "05CON008",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "使用",
      "关系ID": "05REL055",
      "source": "05ALG013",
      "target": "05CON022",
      "attributes": {
        "使用方ID": "05ALG013",
        "被使用的数据结构 ID": "05CON022",
        "使用角色": "辅助结构"
      }
    },
    {
      "type": "使用",
      "关系ID": "05REL056",
      "source": "05ALG013",
      "target": "05DS012",
      "attributes": {
        "使用方ID": "05ALG013",
        "被使用的数据结构 ID": "05DS012",
        "使用角色": "生成目标"
      }
    },
    {
      "type": "继承",
      "关系ID": "05REL057",
      "source": "05DS012",
      "target": "05DS013",
      "attributes": {
        "父类 ID": "05DS013",
        "子类 ID": "05DS012",
        "约束条件": "标准方式, k个孩子指针"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "05REL058",
      "source": "05CON026",
      "target": "05DS001",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "05REL059",
      "source": "05ALG014",
      "target": "05DS002",
      "attributes": {
        "算法 ID": "05ALG014",
        "数据结构 ID": "05DS002",
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "05REL060",
      "source": "05ALG015",
      "target": "05DS002",
      "attributes": {
        "算法 ID": "05ALG015",
        "数据结构 ID": "05DS002",
        "必需性": "是"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "05REL061",
      "source": "05ALG015",
      "target": "05CON008",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "05REL062",
      "source": "05ALG016",
      "target": "05DS002",
      "attributes": {
        "算法 ID": "05ALG016",
        "数据结构 ID": "05DS002",
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "05REL063",
      "source": "05ALG017",
      "target": "05DS002",
      "attributes": {
        "算法 ID": "05ALG017",
        "数据结构 ID": "05DS002",
        "必需性": "是"
      }
    },
    {
      "type": "使用",
      "关系ID": "05REL064",
      "source": "05DS014",
      "target": "05CON024",
      "attributes": {
        "使用方ID": "05DS014",
        "被使用的数据结构 ID": "05CON024",
        "使用角色": "底层存储"
      }
    },
    {
      "type": "变体",
      "关系ID": "05REL065",
      "source": "05DS015",
      "target": "05DS012",
      "attributes": {
        "基础 ID": "05DS012",
        "变体 ID": "05DS015",
        "变体类型": "增加双亲指针"
      }
    },
    {
      "type": "使用",
      "关系ID": "05REL066",
      "source": "05DS016",
      "target": "05DS010",
      "attributes": {
        "使用方ID": "05DS016",
        "被使用的数据结构 ID": "05DS010",
        "使用角色": "底层存储"
      }
    },
    {
      "type": "使用",
      "关系ID": "05REL067",
      "source": "05DS001",
      "target": "05DS016",
      "attributes": {
        "使用方ID": "05DS001",
        "被使用的数据结构 ID": "05DS016",
        "使用角色": "存储实现"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "05REL068",
      "source": "05ALG018",
      "target": "05DS002",
      "attributes": {
        "算法 ID": "05ALG018",
        "数据结构 ID": "05DS002",
        "必需性": "是"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "05REL069",
      "source": "05ALG018",
      "target": "05CON026",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "05REL070",
      "source": "05ALG019",
      "target": "05DS002",
      "attributes": {
        "算法 ID": "05ALG019",
        "数据结构 ID": "05DS002",
        "必需性": "是"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "05REL071",
      "source": "05ALG019",
      "target": "05CON026",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "05REL072",
      "source": "05ALG020",
      "target": "05DS002",
      "attributes": {
        "算法 ID": "05ALG020",
        "数据结构 ID": "05DS002",
        "必需性": "是"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "05REL073",
      "source": "05ALG020",
      "target": "05CON026",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "使用",
      "关系ID": "05REL074",
      "source": "05ALG020",
      "target": "05CON025",
      "attributes": {
        "使用方ID": "05ALG020",
        "被使用的数据结构 ID": "05CON025",
        "使用角色": "辅助结构"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "05REL075",
      "source": "05ALG021",
      "target": "05DS002",
      "attributes": {
        "算法 ID": "05ALG021",
        "数据结构 ID": "05DS002",
        "必需性": "是"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "05REL076",
      "source": "05ALG021",
      "target": "05CON016",
      "attributes": {
        "依赖强度": "强"
      }
    }
  ]
}