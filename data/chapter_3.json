{
  "entities": [
    {
      "type": "数据结构",
      "ID": "03DS001",
      "name": "集合",
      "attributes": {
        "难度": "入门",
        "内容": "由具有相同属性的数据元素组合而成的数据结构，数据元素之间没有任何前驱和后继关系（无序性），且元素唯一。支持初始化、清除、求长度、判空、判断归属、查找、插入、删除、并集、交集、差集等操作。",
        "存储开销": "顺序存储为O(MaxSize)，链接存储为O(n)，其中n为元素个数。",
        "核心特性": "无序性、唯一性",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "03DS002",
      "name": "集合的顺序存储结构",
      "attributes": {
        "难度": "入门",
        "内容": "使用数组存储集合元素，并用一个变量记录当前集合长度。插入和删除元素时，为保持无序性，通常将被删元素位置用最后一个元素填充，或将新元素添加到末尾，无需移动大量元素。",
        "存储开销": "O(MaxSize)，其中MaxSize为数组预分配大小。",
        "核心特性": "基于数组、随机访问（非集合特性）、动态调整大小（可选）",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "03DS003",
      "name": "集合的链接存储结构",
      "attributes": {
        "难度": "入门",
        "内容": "使用单链表存储集合元素，每个结点存储一个元素值。插入通常在表头进行，删除需要查找结点并修改指针。",
        "存储开销": "O(n)，其中n为元素个数。",
        "核心特性": "基于链表、动态大小",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "03DS004",
      "name": "稀疏矩阵",
      "attributes": {
        "难度": "中等",
        "内容": "非零元素个数远少于零元素个数的矩阵。为了节省存储空间和计算时间，通常只存储非零元素。",
        "存储开销": "依赖具体存储方式，如三元组顺序表O(t)，链接存储O(t + m + n)，t为非零元个数，m行n列。",
        "核心特性": "稀疏性",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "03DS005",
      "name": "三元组线性表",
      "attributes": {
        "难度": "入门",
        "内容": "用于表示稀疏矩阵的一种线性结构，表中每个元素是一个三元组(行号, 列号, 非零元素值)。通常按行号主序、列号辅序排列。",
        "存储开销": "O(t)，t为非零元个数。",
        "核心特性": "有序性（按行列）",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "03DS006",
      "name": "稀疏矩阵的顺序存储结构",
      "attributes": {
        "难度": "中等",
        "内容": "将稀疏矩阵对应的三元组线性表存储在数组中。结构通常包含矩阵的行数、列数、非零元个数以及存储三元组的数组。",
        "存储开销": "O(t)，t为非零元个数。",
        "核心特性": "基于数组、存储三元组",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "03DS007",
      "name": "带行指针向量的链接存储",
      "attributes": {
        "难度": "中等",
        "内容": "稀疏矩阵的一种链接存储方式。使用一个指针向量（数组）存放每行非零元链表的头指针，同一行的非零元（三元组结点）按列号链接成单链表。",
        "存储开销": "O(t + m)，t为非零元个数，m为行数。",
        "核心特性": "行链接、便于按行处理",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "03DS008",
      "name": "十字链接存储",
      "attributes": {
        "难度": "高级",
        "内容": "稀疏矩阵的一种链接存储方式。每个非零元结点包含行号、列号、值以及指向同行下一个结点和同列下一个结点的指针。同时使用行指针向量和列指针向量。",
        "存储开销": "O(t + m + n)，t为非零元个数，m为行数，n为列数。",
        "核心特性": "行列双向链接、便于按行按列处理",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "03DS009",
      "name": "广义表",
      "attributes": {
        "难度": "中等",
        "内容": "线性表的推广，是n(n>=0)个元素的一个有限序列，元素可以是单元素或子表（本身也是广义表）。一种递归定义的数据结构。",
        "存储开销": "通常采用链接存储，O(N)，N为结点总数。",
        "核心特性": "递归结构、异质元素（单元素/子表）",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "03DS010",
      "name": "广义表的链接存储结构",
      "attributes": {
        "难度": "中等",
        "内容": "采用动态链接结构存储广义表。结点分为单元素结点（存值和后继指针）和子表结点（存标志、子表头指针和后继指针）。",
        "存储开销": "O(N)，N为结点总数。",
        "核心特性": "递归链接、区分原子与子表",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "03DS011",
      "name": "数组",
      "attributes": {
        "难度": "入门",
        "内容": "一种线性数据结构，用连续的内存空间存储相同类型的数据元素，可通过下标随机访问。",
        "存储开销": "O(N)，N为数组大小。",
        "核心特性": "连续存储、随机访问",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "03DS012",
      "name": "单链表",
      "attributes": {
        "难度": "入门",
        "内容": "一种链式数据结构，每个结点包含数据域和指向下一个结点的指针域。",
        "存储开销": "O(n)，n为结点数。",
        "核心特性": "链式存储、顺序访问",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "03ALG001",
      "name": "初始化集合",
      "attributes": {
        "难度": "入门",
        "内容": "将集合设置为空状态。对于顺序存储，通常置长度为0；对于动态顺序存储，还需分配初始空间；对于链接存储，置头指针为NULL。",
        "时间复杂度": "O(1)",
        "空间复杂度": "O(1) 或 O(initial_size)（动态数组）",
        "设计思想": "初始化",
        "适用场景": "创建新集合时",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "03ALG002",
      "name": "清除集合",
      "attributes": {
        "难度": "入门",
        "内容": "移除集合中所有元素。对于动态存储（数组或链表），需要释放所占用的内存空间。",
        "时间复杂度": "O(1)（静态数组置长度）或 O(n)（释放链表结点）",
        "空间复杂度": "O(1)",
        "设计思想": "资源释放",
        "适用场景": "销毁集合或重用前",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "03ALG003",
      "name": "求集合长度",
      "attributes": {
        "难度": "入门",
        "内容": "返回集合中元素的个数。",
        "时间复杂度": "O(1)（顺序存储带长度变量）或 O(n)（遍历链表）",
        "空间复杂度": "O(1)",
        "设计思想": "计数",
        "适用场景": "获取集合大小",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "03ALG004",
      "name": "判断集合为空",
      "attributes": {
        "难度": "入门",
        "内容": "检查集合是否不包含任何元素。",
        "时间复杂度": "O(1)",
        "空间复杂度": "O(1)",
        "设计思想": "状态检查",
        "适用场景": "进行集合操作前的判断",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "03ALG005",
      "name": "判断元素是否属于集合",
      "attributes": {
        "难度": "入门",
        "内容": "检查给定元素是否存在于集合中。",
        "时间复杂度": "O(n)（顺序查找）",
        "空间复杂度": "O(1)",
        "设计思想": "顺序查找",
        "适用场景": "成员资格检查",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "03ALG006",
      "name": "输出集合",
      "attributes": {
        "难度": "入门",
        "内容": "遍历并显示集合中的所有元素。可选择按特定顺序（如排序后）输出。",
        "时间复杂度": "O(n)（直接输出）或 O(n^2)（排序后输出，如用简单选择排序）",
        "空间复杂度": "O(1) 或 O(n)（若需临时数组排序）",
        "设计思想": "遍历",
        "适用场景": "展示集合内容",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "03ALG007",
      "name": "查找集合元素",
      "attributes": {
        "难度": "入门",
        "内容": "在集合中查找与给定关键字匹配的元素，并返回其完整信息。",
        "时间复杂度": "O(n)（顺序查找）",
        "空间复杂度": "O(1)",
        "设计思想": "顺序查找",
        "适用场景": "检索集合中的特定数据",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "03ALG008",
      "name": "修改集合元素",
      "attributes": {
        "难度": "入门",
        "内容": "查找集合中与给定关键字匹配的元素，并用新值更新该元素。",
        "时间复杂度": "O(n)（顺序查找）",
        "空间复杂度": "O(1)",
        "设计思想": "查找与更新",
        "适用场景": "更新集合中的数据",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "03ALG009",
      "name": "插入集合元素",
      "attributes": {
        "难度": "入门",
        "内容": "向集合中添加一个新元素。需要先检查元素是否已存在（保证唯一性），若不存在则添加。对于顺序存储，可能涉及空间扩展。",
        "时间复杂度": "O(n)（检查存在性）+ O(1)（插入）或 O(n)（空间扩展）",
        "空间复杂度": "O(1)（平均）或 O(n)（触发空间扩展）",
        "设计思想": "查找与添加",
        "适用场景": "向集合增加数据",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "03ALG010",
      "name": "删除集合元素",
      "attributes": {
        "难度": "入门",
        "内容": "从集合中移除一个指定元素。需要先查找元素，找到后移除。对于顺序存储，通常用末尾元素填补空位。可能涉及空间收缩。",
        "时间复杂度": "O(n)（查找）+ O(1)（删除）",
        "空间复杂度": "O(1)（平均）或 O(n)（触发空间收缩）",
        "设计思想": "查找与移除",
        "适用场景": "从集合移除数据",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "03ALG011",
      "name": "求集合并集",
      "attributes": {
        "难度": "入门",
        "内容": "计算两个集合S1和S2的并集，结果存入新集合S。包含S1和S2中所有不重复的元素。",
        "时间复杂度": "O(n*m)（基于顺序查找插入）或 O(n+m)（若使用哈希等优化）",
        "空间复杂度": "O(n+m)（结果集）",
        "设计思想": "合并与去重",
        "适用场景": "合并两个集合",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "03ALG012",
      "name": "求集合交集",
      "attributes": {
        "难度": "入门",
        "内容": "计算两个集合S1和S2的交集，结果存入新集合S。包含同时存在于S1和S2中的元素。",
        "时间复杂度": "O(n*m)（基于顺序查找）",
        "空间复杂度": "O(min(n,m))（结果集）",
        "设计思想": "查找共同元素",
        "适用场景": "找出两个集合的共同部分",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "03ALG013",
      "name": "求集合差集",
      "attributes": {
        "难度": "入门",
        "内容": "计算两个集合S1和S2的差集 (S1 - S2)，结果存入新集合S。包含存在于S1但不存在于S2中的元素。",
        "时间复杂度": "O(n*m)（基于顺序查找）",
        "空间复杂度": "O(n)（结果集）",
        "设计思想": "查找并排除元素",
        "适用场景": "找出第一个集合独有的元素",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "03ALG014",
      "name": "初始化稀疏矩阵",
      "attributes": {
        "难度": "入门",
        "内容": "将稀疏矩阵设置为空状态，通常将行数、列数、非零元个数置为0。对于链接存储，还需初始化指针向量。",
        "时间复杂度": "O(1) 或 O(m+n)（初始化指针向量）",
        "空间复杂度": "O(1)",
        "设计思想": "初始化",
        "适用场景": "创建新稀疏矩阵时",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "03ALG015",
      "name": "输入稀疏矩阵",
      "attributes": {
        "难度": "入门",
        "内容": "根据用户输入（通常是三元组序列）构建稀疏矩阵的存储结构。",
        "时间复杂度": "O(t)（顺序存储）或 O(t*max(m,n))（十字链表末尾插入）",
        "空间复杂度": "O(t)（存储结构）",
        "设计思想": "数据构建",
        "适用场景": "从外部源创建稀疏矩阵",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "03ALG016",
      "name": "输出稀疏矩阵",
      "attributes": {
        "难度": "入门",
        "内容": "按照特定格式（如三元组线性表格式）显示稀疏矩阵的内容。",
        "时间复杂度": "O(t)",
        "空间复杂度": "O(1)",
        "设计思想": "遍历与格式化输出",
        "适用场景": "展示稀疏矩阵内容",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "03ALG017",
      "name": "普通转置方法",
      "attributes": {
        "难度": "中等",
        "内容": "对稀疏矩阵（顺序存储）进行转置。通过n次扫描原三元组列表（n为列数），每次找出对应列的元素，交换行列号后存入新列表。",
        "时间复杂度": "O(n*t)",
        "空间复杂度": "O(t)（存储转置结果）",
        "设计思想": "按列扫描收集",
        "适用场景": "稀疏矩阵转置（效率较低）",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "03ALG018",
      "name": "快速转置方法",
      "attributes": {
        "难度": "中等",
        "内容": "对稀疏矩阵（顺序存储）进行转置的优化算法。通过两次扫描：第一次统计原矩阵每列非零元个数，计算转置后每行第一个元素的位置；第二次扫描将元素直接放到转置矩阵的正确位置。",
        "时间复杂度": "O(n+t)",
        "空间复杂度": "O(t+n)（存储转置结果和辅助数组）",
        "设计思想": "计数定位、空间换时间",
        "适用场景": "高效稀疏矩阵转置",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "03ALG019",
      "name": "稀疏矩阵加法",
      "attributes": {
        "难度": "中等",
        "内容": "计算两个相同维度的稀疏矩阵之和。对于带行指针向量的链接存储，按行合并两个矩阵的非零元链表，对应位置元素相加，和为零则不存。",
        "时间复杂度": "O(t1+t2)",
        "空间复杂度": "O(t1+t2)（结果矩阵）",
        "设计思想": "按行归并合并",
        "适用场景": "计算稀疏矩阵的和",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "03ALG020",
      "name": "求广义表长度",
      "attributes": {
        "难度": "入门",
        "内容": "计算广义表顶层元素的个数。通常使用递归或迭代遍历顶层链表。",
        "时间复杂度": "O(L)，L为广义表顶层长度。",
        "空间复杂度": "O(1)（迭代）或 O(L)（递归）",
        "设计思想": "遍历顶层链表",
        "适用场景": "获取广义表顶层元素数量",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "03ALG021",
      "name": "求广义表深度",
      "attributes": {
        "难度": "中等",
        "内容": "计算广义表中括号嵌套的最大层数。通常使用递归实现，深度等于所有子表深度的最大值加1，空表或原子表深度为1。",
        "时间复杂度": "O(N)，N为广义表中结点总数。",
        "空间复杂度": "O(m)，m为广义表深度（递归栈深度）。",
        "设计思想": "递归遍历",
        "适用场景": "分析广义表的嵌套层级",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "03ALG022",
      "name": "创建广义表",
      "attributes": {
        "难度": "中等",
        "内容": "根据特定输入格式（如带括号和逗号的字符串）构建广义表的链接存储结构。通常使用递归实现。",
        "时间复杂度": "O(N)，N为输入字符串长度或结点数。",
        "空间复杂度": "O(N)，N为结点数（递归栈深度和存储结构）。",
        "设计思想": "递归解析与构建",
        "适用场景": "从外部表示生成广义表",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "03ALG023",
      "name": "打印广义表",
      "attributes": {
        "难度": "中等",
        "内容": "将广义表的链接存储结构转换回其字符串表示形式（带括号和逗号）。通常使用递归实现。",
        "时间复杂度": "O(N)，N为广义表中结点总数。",
        "空间复杂度": "O(m)，m为广义表深度（递归栈深度）。",
        "设计思想": "递归遍历与格式化输出",
        "适用场景": "显示广义表内容",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "03CON001",
      "name": "矩阵",
      "attributes": {
        "难度": "入门",
        "内容": "一个m行n列的数表，包含m*n个元素，每个元素由其行号和列号唯一确定。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "03CON002",
      "name": "方阵",
      "attributes": {
        "难度": "入门",
        "内容": "行数和列数相等的矩阵（m=n），也称为n阶矩阵。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "03CON003",
      "name": "三元组",
      "attributes": {
        "难度": "入门",
        "内容": "由三个相关元素组成的有序序列，在稀疏矩阵中通常指(行号, 列号, 非零元素值)。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "03CON004",
      "name": "抽象数据类型",
      "attributes": {
        "难度": "入门",
        "内容": "定义了数据的逻辑结构和在该结构上的一组操作，与具体实现分离。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "03CON005",
      "name": "线性表",
      "attributes": {
        "难度": "入门",
        "内容": "n(n>=0)个数据元素的有限序列，元素之间存在一对一的线性关系。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    }
  ],
  "relations": [
    {
      "type": "使用",
      "ID": "03REL001",
      "source": "03DS002",
      "target": "03DS011"
    },
    {
      "type": "使用",
      "ID": "03REL002",
      "source": "03DS003",
      "target": "03DS012"
    },
    {
      "type": "继承",
      "ID": "03REL003",
      "source": "03DS004",
      "target": "03CON001"
    },
    {
      "type": "继承",
      "ID": "03REL004",
      "source": "03CON002",
      "target": "03CON001"
    },
    {
      "type": "使用",
      "ID": "03REL005",
      "source": "03DS004",
      "target": "03DS005"
    },
    {
      "type": "理论依赖",
      "ID": "03REL006",
      "source": "03DS005",
      "target": "03CON003"
    },
    {
      "type": "使用",
      "ID": "03REL007",
      "source": "03DS006",
      "target": "03DS005"
    },
    {
      "type": "使用",
      "ID": "03REL008",
      "source": "03DS006",
      "target": "03DS011"
    },
    {
      "type": "使用",
      "ID": "03REL009",
      "source": "03DS007",
      "target": "03DS005"
    },
    {
      "type": "使用",
      "ID": "03REL010",
      "source": "03DS007",
      "target": "03DS012"
    },
    {
      "type": "使用",
      "ID": "03REL011",
      "source": "03DS007",
      "target": "03DS011"
    },
    {
      "type": "使用",
      "ID": "03REL012",
      "source": "03DS008",
      "target": "03DS005"
    },
    {
      "type": "使用",
      "ID": "03REL013",
      "source": "03DS008",
      "target": "03DS012"
    },
    {
      "type": "使用",
      "ID": "03REL014",
      "source": "03DS008",
      "target": "03DS011"
    },
    {
      "type": "继承",
      "ID": "03REL015",
      "source": "03DS009",
      "target": "03CON005"
    },
    {
      "type": "使用",
      "ID": "03REL016",
      "source": "03DS010",
      "target": "03DS012"
    },
    {
      "type": "操作绑定",
      "ID": "03REL017",
      "source": "03ALG001",
      "target": "03DS001"
    },
    {
      "type": "操作绑定",
      "ID": "03REL018",
      "source": "03ALG002",
      "target": "03DS001"
    },
    {
      "type": "操作绑定",
      "ID": "03REL019",
      "source": "03ALG003",
      "target": "03DS001"
    },
    {
      "type": "操作绑定",
      "ID": "03REL020",
      "source": "03ALG004",
      "target": "03DS001"
    },
    {
      "type": "操作绑定",
      "ID": "03REL021",
      "source": "03ALG005",
      "target": "03DS001"
    },
    {
      "type": "操作绑定",
      "ID": "03REL022",
      "source": "03ALG006",
      "target": "03DS001"
    },
    {
      "type": "操作绑定",
      "ID": "03REL023",
      "source": "03ALG007",
      "target": "03DS001"
    },
    {
      "type": "操作绑定",
      "ID": "03REL024",
      "source": "03ALG008",
      "target": "03DS001"
    },
    {
      "type": "操作绑定",
      "ID": "03REL025",
      "source": "03ALG009",
      "target": "03DS001"
    },
    {
      "type": "操作绑定",
      "ID": "03REL026",
      "source": "03ALG010",
      "target": "03DS001"
    },
    {
      "type": "操作绑定",
      "ID": "03REL027",
      "source": "03ALG011",
      "target": "03DS001"
    },
    {
      "type": "操作绑定",
      "ID": "03REL028",
      "source": "03ALG012",
      "target": "03DS001"
    },
    {
      "type": "操作绑定",
      "ID": "03REL029",
      "source": "03ALG013",
      "target": "03DS001"
    },
    {
      "type": "操作绑定",
      "ID": "03REL030",
      "source": "03ALG014",
      "target": "03DS004"
    },
    {
      "type": "操作绑定",
      "ID": "03REL031",
      "source": "03ALG015",
      "target": "03DS004"
    },
    {
      "type": "操作绑定",
      "ID": "03REL032",
      "source": "03ALG016",
      "target": "03DS004"
    },
    {
      "type": "操作绑定",
      "ID": "03REL033",
      "source": "03ALG017",
      "target": "03DS004"
    },
    {
      "type": "操作绑定",
      "ID": "03REL034",
      "source": "03ALG018",
      "target": "03DS004"
    },
    {
      "type": "优化",
      "ID": "03REL035",
      "source": "03ALG018",
      "target": "03ALG017"
    },
    {
      "type": "操作绑定",
      "ID": "03REL036",
      "source": "03ALG019",
      "target": "03DS004"
    },
    {
      "type": "操作绑定",
      "ID": "03REL037",
      "source": "03ALG020",
      "target": "03DS009"
    },
    {
      "type": "操作绑定",
      "ID": "03REL038",
      "source": "03ALG021",
      "target": "03DS009"
    },
    {
      "type": "操作绑定",
      "ID": "03REL039",
      "source": "03ALG022",
      "target": "03DS009"
    },
    {
      "type": "操作绑定",
      "ID": "03REL040",
      "source": "03ALG023",
      "target": "03DS009"
    },
    {
      "type": "理论依赖",
      "ID": "03REL041",
      "source": "03DS001",
      "target": "03CON004"
    },
    {
      "type": "理论依赖",
      "ID": "03REL042",
      "source": "03DS004",
      "target": "03CON004"
    },
    {
      "type": "使用",
      "ID": "03REL043",
      "source": "03DS002",
      "target": "03DS001"
    },
    {
      "type": "使用",
      "ID": "03REL044",
      "source": "03DS003",
      "target": "03DS001"
    },
    {
      "type": "使用",
      "ID": "03REL045",
      "source": "03DS006",
      "target": "03DS004"
    },
    {
      "type": "使用",
      "ID": "03REL046",
      "source": "03DS007",
      "target": "03DS004"
    },
    {
      "type": "使用",
      "ID": "03REL047",
      "source": "03DS008",
      "target": "03DS004"
    },
    {
      "type": "使用",
      "ID": "03REL048",
      "source": "03DS010",
      "target": "03DS009"
    }
  ]
}