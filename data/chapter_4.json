{
  "entities": [
    {
      "type": "数据结构",
      "ID": "04DS001",
      "name": "栈",
      "attributes": {
        "难度": "入门",
        "内容": "栈（stack）又称堆栈，它是一种运算受限的线性表，其限制是仅允许在表的一端进行插入和删除运算。对栈进行运算的一端称为栈顶，另一端称为栈底。",
        "存储开销": "O(n)",
        "核心特性": "后进先出（LIFO）",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "04DS002",
      "name": "队列",
      "attributes": {
        "难度": "入门",
        "内容": "队列（queue）简称队，它也是一种运算受限的线性表，其限制是仅允许在表的一端进行插入，而在表的另一端进行删除。进行插入的一端称作队尾（rear），进行删除的一端称作队首（front）。",
        "存储开销": "O(n)",
        "核心特性": "先进先出（FIFO）",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "04DS003",
      "name": "线性表",
      "attributes": {
        "难度": "入门",
        "内容": "数据元素之间存在一对一逻辑关系的数据结构。栈和队列都属于线性表。",
        "存储开销": "O(n)",
        "核心特性": "线性结构",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "04DS004",
      "name": "顺序栈",
      "attributes": {
        "难度": "入门",
        "内容": "栈的一种实现方式，采用顺序存储结构（数组）实现。利用数组存储栈中所有元素，利用整型变量存储栈顶元素的下标位置。",
        "存储开销": "O(n)",
        "核心特性": "基于数组，栈顶操作O(1)，可能需要动态扩容",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "04DS005",
      "name": "链栈",
      "attributes": {
        "难度": "入门",
        "内容": "栈的一种实现方式，采用链接存储结构（单链表）实现。表头指针被称为栈顶指针，指向栈顶结点。",
        "存储开销": "O(n)",
        "核心特性": "基于单链表，栈顶操作O(1)",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "04DS006",
      "name": "顺序队列",
      "attributes": {
        "难度": "入门",
        "内容": "队列的一种实现方式，采用顺序存储结构（数组）实现。利用数组存储队列元素，利用整型变量存储队首和队尾位置。通常实现为循环队列。",
        "存储开销": "O(n)",
        "核心特性": "基于数组，队首队尾操作O(1)",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "04DS007",
      "name": "循环队列",
      "attributes": {
        "难度": "中等",
        "内容": "顺序存储的队列的一种变体，利用取模运算使存储空间首尾相接，循环利用。需要队首指针和队尾指针。",
        "存储开销": "O(n)",
        "核心特性": "基于数组，循环利用空间，队首队尾操作O(1)",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "04DS008",
      "name": "链队",
      "attributes": {
        "难度": "入门",
        "内容": "队列的一种实现方式，采用链接存储结构（单链表）实现。需要队首指针和队尾指针，分别指向链表的表头和表尾。",
        "存储开销": "O(n)",
        "核心特性": "基于单链表，队首队尾操作O(1)",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "04DS009",
      "name": "优先级队列",
      "attributes": {
        "难度": "中等",
        "内容": "一种特殊的队列，每个元素带优先级号。优先级最高的元素必须处在队首位置。插入和删除需调整元素位置。",
        "存储开销": "O(n)",
        "核心特性": "按优先级出队",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "04DS010",
      "name": "堆",
      "attributes": {
        "难度": "中等",
        "内容": "一种数据结构，常用于实现优先级队列。将在第6章介绍。",
        "存储开销": "O(n)",
        "核心特性": "堆属性（父节点与子节点的大小关系）",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "04DS011",
      "name": "数组",
      "attributes": {
        "难度": "入门",
        "内容": "一种顺序存储结构，用于存储一组相同类型的元素。",
        "存储开销": "O(n)",
        "核心特性": "连续存储，通过索引随机访问O(1)",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "04DS012",
      "name": "单链表",
      "attributes": {
        "难度": "入门",
        "内容": "一种链接存储结构，由一系列结点组成，每个结点包含数据和指向下一个结点的指针。",
        "存储开销": "O(n)",
        "核心特性": "动态大小，插入删除O(1)（已知位置）",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "04ALG001",
      "name": "进栈",
      "attributes": {
        "难度": "入门",
        "内容": "向栈顶插入新元素的操作。",
        "时间复杂度": "O(1)（顺序栈动态扩容时为O(n)）",
        "空间复杂度": "O(1)",
        "设计思想": "尾部/头部插入",
        "适用场景": "向栈中添加元素",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "04ALG002",
      "name": "出栈",
      "attributes": {
        "难度": "入门",
        "内容": "从栈顶删除元素并返回的操作。",
        "时间复杂度": "O(1)",
        "空间复杂度": "O(1)",
        "设计思想": "尾部/头部删除",
        "适用场景": "从栈中移除元素",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "04ALG003",
      "name": "读取栈顶",
      "attributes": {
        "难度": "入门",
        "内容": "返回栈顶元素的值，但不改变栈的状态的操作。",
        "时间复杂度": "O(1)",
        "空间复杂度": "O(1)",
        "设计思想": "只读访问",
        "适用场景": "查看栈顶元素而不删除",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "04ALG004",
      "name": "检查栈空",
      "attributes": {
        "难度": "入门",
        "内容": "判断栈是否为空的操作。",
        "时间复杂度": "O(1)",
        "空间复杂度": "O(1)",
        "设计思想": "检查特定状态",
        "适用场景": "避免对空栈进行操作",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "04ALG005",
      "name": "清除栈",
      "attributes": {
        "难度": "入门",
        "内容": "清除栈中所有元素，使之成为空栈的操作。",
        "时间复杂度": "O(n)（释放动态空间）",
        "空间复杂度": "O(1)",
        "设计思想": "释放所有元素",
        "适用场景": "重置栈",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "04ALG006",
      "name": "进队",
      "attributes": {
        "难度": "入门",
        "内容": "将新元素插入队尾的操作。",
        "时间复杂度": "O(1)（顺序队列动态扩容时为O(n)）",
        "空间复杂度": "O(1)",
        "设计思想": "尾部插入",
        "适用场景": "向队列中添加元素",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "04ALG007",
      "name": "出队",
      "attributes": {
        "难度": "入门",
        "内容": "从队首删除元素并返回的操作。",
        "时间复杂度": "O(1)",
        "空间复杂度": "O(1)",
        "设计思想": "头部删除",
        "适用场景": "从队列中移除元素",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "04ALG008",
      "name": "读取队首",
      "attributes": {
        "难度": "入门",
        "内容": "返回队首元素的值，但不改变队列状态的操作。",
        "时间复杂度": "O(1)",
        "空间复杂度": "O(1)",
        "设计思想": "只读访问",
        "适用场景": "查看队首元素而不删除",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "04ALG009",
      "name": "检查队空",
      "attributes": {
        "难度": "入门",
        "内容": "判断队列是否为空的操作。",
        "时间复杂度": "O(1)",
        "空间复杂度": "O(1)",
        "设计思想": "检查特定状态",
        "适用场景": "避免对空队列进行操作",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "04ALG010",
      "name": "清除队列",
      "attributes": {
        "难度": "入门",
        "内容": "清除队列中所有元素，使之变为空队的操作。",
        "时间复杂度": "O(n)（释放动态空间）",
        "空间复杂度": "O(1)",
        "设计思想": "释放所有元素",
        "适用场景": "重置队列",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "04ALG011",
      "name": "后缀表达式求值算法",
      "attributes": {
        "难度": "中等",
        "内容": "计算后缀表达式的值。扫描表达式，遇操作数入栈，遇运算符弹出栈顶两个操作数计算，结果入栈。",
        "时间复杂度": "O(n)",
        "空间复杂度": "O(n)",
        "设计思想": "基于栈，一次扫描",
        "适用场景": "计算机内部计算表达式",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "04ALG012",
      "name": "中缀转后缀算法",
      "attributes": {
        "难度": "中等",
        "内容": "将中缀表达式转换为后缀表达式。使用运算符栈，根据运算符优先级处理。",
        "时间复杂度": "O(n)",
        "空间复杂度": "O(n)",
        "设计思想": "基于栈，处理优先级和括号",
        "适用场景": "计算机处理表达式前转换",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "04ALG013",
      "name": "递归算法",
      "attributes": {
        "难度": "中等",
        "内容": "通过求解与原问题具有同样解法的子问题而得到的算法。包含递归调用和终止条件。",
        "时间复杂度": "O(根据问题而定)",
        "空间复杂度": "O(递归深度)（由系统栈决定）",
        "设计思想": "分解为相似子问题，依赖系统栈",
        "适用场景": "问题结构天然递归，简化代码",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "04ALG014",
      "name": "阶乘算法（递归）",
      "attributes": {
        "难度": "入门",
        "内容": "采用递归算法求解正整数n的阶乘(n!)。n! = n * (n-1)!, 0! = 1。",
        "时间复杂度": "O(n)",
        "空间复杂度": "O(n)",
        "设计思想": "递归",
        "适用场景": "演示递归基本概念",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "04ALG015",
      "name": "布尔组合算法（递归）",
      "attributes": {
        "难度": "中等",
        "内容": "输出n个布尔量的所有可能的组合（2^n种）。通过递归填充每个位置0或1来实现。",
        "时间复杂度": "O(n * 2^n)",
        "空间复杂度": "O(n)",
        "设计思想": "递归，枚举",
        "适用场景": "枚举所有可能的布尔值组合",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "04ALG016",
      "name": "全排列算法（递归）",
      "attributes": {
        "难度": "中等",
        "内容": "输出自然数1~n这n个元素的全排列（n!种）。通过递归和交换元素实现。",
        "时间复杂度": "O(n!)",
        "空间复杂度": "O(n)",
        "设计思想": "递归，回溯，交换",
        "适用场景": "生成序列所有排列",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "04ALG017",
      "name": "迷宫求解算法（递归）",
      "attributes": {
        "难度": "中等",
        "内容": "从迷宫入口寻找一条通向出口的路径。递归尝试不同方向，标记访问过的位置，遇死路回溯。",
        "时间复杂度": "O(m*n)（最差），O(m+n)（最好）",
        "空间复杂度": "O(m*n)（最差），O(m+n)（最好）",
        "设计思想": "递归，回溯，深度优先搜索",
        "适用场景": "路径寻找问题",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "04ALG018",
      "name": "汉诺塔求解算法（递归）",
      "attributes": {
        "难度": "中等",
        "内容": "求解汉诺塔问题，将n个圆盘从一个柱子移动到另一个，遵循规则。递归将问题分解为移动n-1个盘子。",
        "时间复杂度": "O(2^n)",
        "空间复杂度": "O(n)",
        "设计思想": "递归，分治",
        "适用场景": "演示递归和指数级增长",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "04CON001",
      "name": "栈顶",
      "attributes": {
        "难度": "入门",
        "内容": "栈中允许进行插入和删除运算的一端。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "04CON002",
      "name": "栈底",
      "attributes": {
        "难度": "入门",
        "内容": "栈中不允许进行插入和删除运算的另一端。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "04CON003",
      "name": "后进先出表（LIFO）",
      "attributes": {
        "难度": "入门",
        "内容": "描述栈行为的原则，即最后插入的元素最先被删除。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "04CON004",
      "name": "队尾",
      "attributes": {
        "难度": "入门",
        "内容": "队列中允许进行插入运算的一端。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "04CON005",
      "name": "队首",
      "attributes": {
        "难度": "入门",
        "内容": "队列中允许进行删除运算的一端。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "04CON006",
      "name": "先进先出表（FIFO）",
      "attributes": {
        "难度": "入门",
        "内容": "描述队列行为的原则，即最先插入的元素最先被删除。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "04CON007",
      "name": "抽象数据类型（ADT）",
      "attributes": {
        "难度": "入门",
        "内容": "数据结构的定义，包括数据元素的逻辑关系和对数据的操作集合，不考虑存储方式。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "04CON008",
      "name": "顺序存储结构",
      "attributes": {
        "难度": "入门",
        "内容": "将数据元素存储在地址连续的存储单元中，如数组。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "04CON009",
      "name": "链接存储结构",
      "attributes": {
        "难度": "入门",
        "内容": "数据元素存储在任意的存储单元中，通过指针域表示元素间的逻辑关系，如链表。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "04CON010",
      "name": "栈顶指针",
      "attributes": {
        "难度": "入门",
        "内容": "在顺序栈中，指示栈顶元素位置的变量；在链栈中，指向栈顶结点的指针。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "04CON011",
      "name": "队首指针",
      "attributes": {
        "难度": "入门",
        "内容": "在顺序队列/循环队列中，指示队首位置的变量；在链队中，指向队首结点的指针。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "04CON012",
      "name": "队尾指针",
      "attributes": {
        "难度": "入门",
        "内容": "在顺序队列/循环队列中，指示队尾位置的变量；在链队中，指向队尾结点的指针。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "04CON013",
      "name": "算术表达式",
      "attributes": {
        "难度": "入门",
        "内容": "由操作数、运算符和圆括号连接而成的式子。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "04CON014",
      "name": "中缀表示法",
      "attributes": {
        "难度": "入门",
        "内容": "算术表达式的一种书写习惯表示，双目运算符出现在两个操作数中间。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "04CON015",
      "name": "后缀表示法",
      "attributes": {
        "难度": "入门",
        "内容": "算术表达式的一种表示，又称逆波兰式，把运算符放在两个运算对象的后面。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "04CON016",
      "name": "逆波兰式（RPN）",
      "attributes": {
        "难度": "入门",
        "内容": "算术表达式的后缀表示法。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "04CON017",
      "name": "操作数",
      "attributes": {
        "难度": "入门",
        "内容": "算术表达式中参与运算的数据，可以是常量、变量或函数。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "04CON018",
      "name": "运算符",
      "attributes": {
        "难度": "入门",
        "内容": "算术表达式中表示运算方式的符号，包括单目运算符和双目运算符。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "04CON019",
      "name": "优先级",
      "attributes": {
        "难度": "入门",
        "内容": "算术表达式中不同运算符的运算先后次序规则。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "04CON020",
      "name": "递归",
      "attributes": {
        "难度": "中等",
        "内容": "一种非常重要的数学概念和解决问题的方法，当求解一个问题时，是通过求解与它具有同样解法的子问题而得到的。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "04CON021",
      "name": "递归终止条件",
      "attributes": {
        "难度": "入门",
        "内容": "一个递归的求解问题必然包含有终止递归的条件，当满足一定条件时就终止向下递归。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "04CON022",
      "name": "系统栈",
      "attributes": {
        "难度": "中等",
        "content": "计算机系统在执行函数调用（包括递归调用）时自动使用的工作栈，用于保存参数、局部变量和返回地址。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "未知"
      }
    }
  ],
  "relations": [
    {
      "type": "继承",
      "ID": "04REL001",
      "source": "04DS001",
      "target": "04DS003"
    },
    {
      "type": "继承",
      "ID": "04REL002",
      "source": "04DS002",
      "target": "04DS003"
    },
    {
      "type": "变体",
      "ID": "04REL003",
      "source": "04DS004",
      "target": "04DS001"
    },
    {
      "type": "变体",
      "ID": "04REL004",
      "source": "04DS005",
      "target": "04DS001"
    },
    {
      "type": "变体",
      "ID": "04REL005",
      "source": "04DS007",
      "target": "04DS006"
    },
    {
      "type": "变体",
      "ID": "04REL006",
      "source": "04DS009",
      "target": "04DS002"
    },
    {
      "type": "使用",
      "ID": "04REL007",
      "source": "04DS004",
      "target": "04DS011"
    },
    {
      "type": "使用",
      "ID": "04REL008",
      "source": "04DS005",
      "target": "04DS012"
    },
    {
      "type": "使用",
      "ID": "04REL009",
      "source": "04DS006",
      "target": "04DS011"
    },
    {
      "type": "使用",
      "ID": "04REL010",
      "source": "04DS008",
      "target": "04DS012"
    },
    {
      "type": "使用",
      "ID": "04REL011",
      "source": "04DS009",
      "target": "04DS010"
    },
    {
      "type": "操作绑定",
      "ID": "04REL012",
      "source": "04ALG001",
      "target": "04DS001"
    },
    {
      "type": "操作绑定",
      "ID": "04REL013",
      "source": "04ALG002",
      "target": "04DS001"
    },
    {
      "type": "操作绑定",
      "ID": "04REL014",
      "source": "04ALG003",
      "target": "04DS001"
    },
    {
      "type": "操作绑定",
      "ID": "04REL015",
      "source": "04ALG004",
      "target": "04DS001"
    },
    {
      "type": "操作绑定",
      "ID": "04REL016",
      "source": "04ALG005",
      "target": "04DS001"
    },
    {
      "type": "操作绑定",
      "ID": "04REL017",
      "source": "04ALG006",
      "target": "04DS002"
    },
    {
      "type": "操作绑定",
      "ID": "04REL018",
      "source": "04ALG007",
      "target": "04DS002"
    },
    {
      "type": "操作绑定",
      "ID": "04REL019",
      "source": "04ALG008",
      "target": "04DS002"
    },
    {
      "type": "操作绑定",
      "ID": "04REL020",
      "source": "04ALG009",
      "target": "04DS002"
    },
    {
      "type": "操作绑定",
      "ID": "04REL021",
      "source": "04ALG010",
      "target": "04DS002"
    },
    {
      "type": "使用",
      "ID": "04REL022",
      "source": "04ALG011",
      "target": "04DS001"
    },
    {
      "type": "使用",
      "ID": "04REL023",
      "source": "04ALG012",
      "target": "04DS001"
    },
    {
      "type": "使用",
      "ID": "04REL024",
      "source": "04ALG013",
      "target": "04CON022"
    },
    {
      "type": "使用",
      "ID": "04REL025",
      "source": "04ALG014",
      "target": "04ALG013"
    },
    {
      "type": "使用",
      "ID": "04REL026",
      "source": "04ALG015",
      "target": "04ALG013"
    },
    {
      "type": "使用",
      "ID": "04REL027",
      "source": "04ALG016",
      "target": "04ALG013"
    },
    {
      "type": "使用",
      "ID": "04REL028",
      "source": "04ALG017",
      "target": "04ALG013"
    },
    {
      "type": "使用",
      "ID": "04REL029",
      "source": "04ALG018",
      "target": "04ALG013"
    },
    {
      "type": "使用",
      "ID": "04REL030",
      "source": "04ALG017",
      "target": "04DS011"
    },
    {
      "type": "理论依赖",
      "ID": "04REL031",
      "source": "04ALG011",
      "target": "04CON015"
    },
    {
      "type": "理论依赖",
      "ID": "04REL032",
      "source": "04ALG012",
      "target": "04CON014"
    },
    {
      "type": "理论依赖",
      "ID": "04REL033",
      "source": "04ALG012",
      "target": "04CON015"
    },
    {
      "type": "理论依赖",
      "ID": "04REL034",
      "source": "04ALG013",
      "target": "04CON020"
    },
    {
      "type": "理论依赖",
      "ID": "04REL035",
      "source": "04CON022",
      "target": "04CON020"
    },
    {
      "type": "理论依赖",
      "ID": "04REL036",
      "source": "04DS001",
      "target": "04CON003"
    },
    {
      "type": "理论依赖",
      "ID": "04REL037",
      "source": "04DS002",
      "target": "04CON006"
    },
    {
      "type": "理论依赖",
      "ID": "04REL038",
      "source": "04DS001",
      "target": "04CON007"
    },
    {
      "type": "理论依赖",
      "ID": "04REL039",
      "source": "04DS002",
      "target": "04CON007"
    },
     {
      "type": "理论依赖",
      "ID": "04REL040",
      "source": "04ALG012",
      "target": "04CON019"
    }
  ]
}