{
  "entities": [
    {
      "type": "数据结构",
      "ID": "07DS001",
      "name": "图",
      "attributes": {
        "难度": "中等",
        "内容": "定义：图由顶点集（V）和边集（E）组成，表示顶点之间的关系。特性：非线性数据结构，顶点可以有任意多个前驱和后继，比线性表和树更具广泛性。适用场景：社交网络分析、地图导航、网络路由、流程图等。",
        "存储开销": "取决于存储方式，如邻接矩阵O(n^2)，邻接表O(n+e)",
        "核心特性": "表示多对多的关系",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "图论在解决实际问题中的广泛应用体现了理论与实践的结合，如网络规划、物流优化等，服务社会发展需要。"
      }
    },
    {
      "type": "概念",
      "ID": "07CON001",
      "name": "顶点",
      "attributes": {
        "难度": "入门",
        "内容": "图的基本组成部分，代表研究的对象或实体。在图的二元组定义G=(V,E)中，V是顶点集合。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "图中的顶点可以代表现实世界中的个体或节点，体现了抽象思维在建立模型以解决复杂问题中的重要作用。"
      }
    },
    {
      "type": "概念",
      "ID": "07CON002",
      "name": "边",
      "attributes": {
        "难度": "入门",
        "内容": "连接图中两个顶点的线，代表顶点之间的关系。在图的二元组定义G=(V,E)中，E是边的集合，可以是序偶（有向边）或无序对（无向边）。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "边代表事物或概念之间的联系，启发学生思考现实世界中普遍存在的相互关联性，培养系统思维。"
      }
    },
    {
      "type": "数据结构",
      "ID": "07DS002",
      "name": "有向图",
      "attributes": {
        "难度": "中等",
        "内容": "边集E(G)中均为有向边（序偶）的图。边表示的关系具有方向性。",
        "存储开销": "邻接矩阵O(n^2)，邻接表O(n+e)",
        "核心特性": "边具有方向性",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "有向图能有效表示非对称关系，如流程、依赖关系、信息流向等，体现了事物发展或相互作用的方向性和顺序性。"
      }
    },
    {
      "type": "数据结构",
      "ID": "07DS003",
      "name": "无向图",
      "attributes": {
        "难度": "中等",
        "内容": "边集E(G)中均为无向边（无序对）的图。边表示的关系是对称的。",
        "存储开销": "邻接矩阵O(n^2)，邻接表O(n+e)",
        "核心特性": "边无方向性",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "无向图能有效表示对称关系，如社交网络中的朋友关系、地理位置的连接关系，体现了平等互联的思想。"
      }
    },
    {
      "type": "概念",
      "ID": "07CON003",
      "name": "端点",
      "attributes": {
        "难度": "入门",
        "内容": "一条边所连接的两个顶点。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "理解基本术语是掌握复杂知识的基础，强调概念精确性的重要。"
      }
    },
    {
      "type": "概念",
      "ID": "07CON004",
      "name": "邻接点",
      "attributes": {
        "难度": "入门",
        "内容": "若两个顶点之间存在一条边，则称它们互为邻接点。在有向图中区分出边邻接点和入边邻接点。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "邻接关系是图结构的核心，理解邻接点有助于分析节点间的直接联系，是图遍历等算法的基础。"
      }
    },
    {
      "type": "概念",
      "ID": "07CON005",
      "name": "出边",
      "attributes": {
        "难度": "入门",
        "内容": "在有向图中，从顶点v_i出发指向顶点v_j的边<v_i, v_j>称为v_i的一条出边。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "区分出入关系有助于理解有向图中的流向和依赖，培养辨证看待事物联系的能力。"
      }
    },
    {
      "type": "概念",
      "ID": "07CON006",
      "name": "入边",
      "attributes": {
        "难度": "入门",
        "内容": "在有向图中，从顶点v_i指向顶点v_j的边<v_i, v_j>称为v_j的一条入边。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "区分出入关系有助于理解有向图中的流向和依赖，培养辨证看待事物联系的能力。"
      }
    },
    {
      "type": "概念",
      "ID": "07CON007",
      "name": "起点",
      "attributes": {
        "难度": "入门",
        "内容": "在有向图中，边<v_i, v_j>的起始顶点v_i。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "明确起点和终点是理解有向关系的基础，有助于分析因果或流程。"
      }
    },
    {
      "type": "概念",
      "ID": "07CON008",
      "name": "终点",
      "attributes": {
        "难度": "入门",
        "内容": "在有向图中，边<v_i, v_j>的终止顶点v_j。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "明确起点和终点是理解有向关系的基础，有助于分析因果或流程。"
      }
    },
    {
      "type": "概念",
      "ID": "07CON009",
      "name": "度",
      "attributes": {
        "难度": "入门",
        "内容": "无向图中与顶点v相关联的边的数目，记为D(v)。有向图中顶点的度等于其入度与出度之和。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "顶点的度反映了节点在网络中的连接程度或活跃度，是网络分析中的重要指标。"
      }
    },
    {
      "type": "概念",
      "ID": "07CON010",
      "name": "入度",
      "attributes": {
        "难度": "入门",
        "内容": "有向图中以顶点v为终点的边的数目（入边的数目），记为ID(v)。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "入度反映了节点受其他节点影响或指向该节点的程度，在分析依赖关系、受欢迎度等方面有应用。"
      }
    },
    {
      "type": "概念",
      "ID": "07CON011",
      "name": "出度",
      "attributes": {
        "难度": "入门",
        "内容": "有向图中以顶点v为起点的边的数目（出边的数目），记为OD(v)。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "出度反映了节点影响其他节点或从该节点出发的程度，在分析影响力、资源分配等方面有应用。"
      }
    },
    {
      "type": "数据结构",
      "ID": "07DS004",
      "name": "完全图",
      "attributes": {
        "难度": "入门",
        "内容": "无向图中任意两个顶点间都存在边；有向图中任意两个顶点间都存在方向相反的两条边。n个顶点的无向完全图有n(n-1)/2条边，有向完全图有n(n-1)条边。",
        "存储开销": "O(n^2)",
        "核心特性": "顶点间全连接",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "完全图代表了最紧密的连接状态，是一种理想化的模型，有助于理解网络连接的上限和密度概念。"
      }
    },
    {
      "type": "概念",
      "ID": "07CON012",
      "name": "稠密图",
      "attributes": {
        "难度": "入门",
        "内容": "边数接近完全图边数的图，通常指边数e与n(n-1)接近（或e的数量级为O(n^2)）。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "稠密与稀疏是相对概念，启发学生理解不同问题背景下数据关联度的差异，并选择合适的处理方法。"
      }
    },
    {
      "type": "概念",
      "ID": "07CON013",
      "name": "稀疏图",
      "attributes": {
        "难度": "入门",
        "内容": "边数远少于完全图边数的图，通常指边数e远小于n(n-1)（或e的数量级为O(n)）。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "稠密与稀疏是相对概念，启发学生理解不同问题背景下数据关联度的差异，并选择合适的处理方法，体现具体问题具体分析的思想。"
      }
    },
    {
      "type": "概念",
      "ID": "07CON014",
      "name": "子图",
      "attributes": {
        "难度": "入门",
        "内容": "设有两个图G=(V,E)和G'=(V',E')，若V'⊆V且E'⊆E，并且E'中的边所关联的顶点均在V'中，则称G'是G的子图。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "子图概念体现了整体与部分的关系，是分析复杂系统结构、进行问题分解的基础。"
      }
    },
    {
      "type": "概念",
      "ID": "07CON015",
      "name": "路径",
      "attributes": {
        "难度": "入门",
        "内容": "图中从一个顶点到另一个顶点经过的顶点序列。路径长度是路径上边的数目。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "路径是探索图结构、解决寻路问题的核心概念，体现了事物发展或联系的过程性。"
      }
    },
    {
      "type": "概念",
      "ID": "07CON016",
      "name": "回路",
      "attributes": {
        "难度": "入门",
        "内容": "起点和终点相同的路径。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "回路代表了图中的闭合结构或循环现象，在检测依赖循环、分析周期性问题中有重要意义。"
      }
    },
    {
      "type": "概念",
      "ID": "07CON017",
      "name": "简单路径",
      "attributes": {
        "难度": "入门",
        "内容": "路径序列中顶点不重复出现的路径。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "简单路径排除了重复访问，是许多图算法（如最短路径）研究的基础路径形式。"
      }
    },
    {
      "type": "概念",
      "ID": "07CON018",
      "name": "简单回路",
      "attributes": {
        "难度": "入门",
        "内容": "除了起点和终点相同外，其余顶点不重复出现的回路。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "简单回路是图中基本的环结构，对于理解图的结构特性、检测循环依赖等非常重要。"
      }
    },
    {
      "type": "概念",
      "ID": "07CON019",
      "name": "连通",
      "attributes": {
        "难度": "入门",
        "内容": "在无向图中，若从顶点v_i到顶点v_j有路径，则称v_i和v_j是连通的。在有向图中，若从v_i到v_j有路径，称v_i到v_j是连通的。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "连通性是衡量图整体性的重要指标，关系到信息能否在网络中传播、节点间是否可达等问题。"
      }
    },
    {
      "type": "数据结构",
      "ID": "07DS005",
      "name": "连通图",
      "attributes": {
        "难度": "入门",
        "内容": "在无向图中，任意两个顶点之间都是连通的图。",
        "存储开销": "O(n^2)或O(n+e)",
        "核心特性": "任意顶点间存在路径",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "连通图保证了网络中任意两点间的可达性，是许多网络应用的基础要求，体现了系统的整体性。"
      }
    },
    {
      "type": "概念",
      "ID": "07CON020",
      "name": "连通分量",
      "attributes": {
        "难度": "中等",
        "内容": "无向图的极大连通子图。非连通图有多个连通分量。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "连通分量揭示了非连通图中相互独立的区域，有助于对大型网络进行分解和局部研究。"
      }
    },
    {
      "type": "数据结构",
      "ID": "07DS006",
      "name": "强连通图",
      "attributes": {
        "难度": "中等",
        "内容": "在有向图中，任意两个顶点v_i和v_j之间都存在从v_i到v_j和从v_j到v_i的路径。",
        "存储开销": "O(n^2)或O(n+e)",
        "核心特性": "任意顶点间相互可达",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "强连通性描述了有向图中更强的连接关系，即任意两点间可以相互到达，体现了网络的高度耦合和信息流通的无障碍性。"
      }
    },
    {
      "type": "概念",
      "ID": "07CON021",
      "name": "强连通分量",
      "attributes": {
        "难度": "中等",
        "内容": "有向图的极大强连通子图。非强连通图有多个强连通分量。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "强连通分量识别出有向图中高度耦合的部分，是网络分析、编译器优化（如检测循环依赖）等领域的重要概念。"
      }
    },
    {
      "type": "概念",
      "ID": "07CON022",
      "name": "权",
      "attributes": {
        "难度": "入门",
        "内容": "图中每条边可以标上具有某种含义的数值，称为该边的权（通常为非负实数），如距离、成本、时间等。",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "权值赋予了边实际意义，使图模型能更好地反映现实世界的复杂性（如成本、距离），强调了量化分析在解决问题中的作用。"
      }
    },
    {
      "type": "数据结构",
      "ID": "07DS007",
      "name": "网",
      "attributes": {
        "难度": "入门",
        "内容": "边上带有权的图，也称带权图。",
        "存储开销": "取决于存储方式和权值类型",
        "核心特性": "边带权值",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "网结构是解决最优化问题（如最短路径、最小生成树）的基础，广泛应用于交通、物流、通信等领域，服务经济社会发展。"
      }
    },
    {
      "type": "数据结构",
      "ID": "07DS008",
      "name": "邻接矩阵",
      "attributes": {
        "难度": "入门",
        "内容": "用一个n阶方阵A表示具有n个顶点的图，A[i][j]的值表示顶点v_i到v_j之间是否存在边（或边的权值）。",
        "存储开销": "O(n^2)",
        "核心特性": "判断边存在/获取权值时间O(1)，空间固定，适合稠密图",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "邻接矩阵体现了用数学工具（矩阵）解决计算机问题的思想，结构直观，但需关注空间效率问题，启发学生思考不同场景下的适用性。"
      }
    },
    {
      "type": "数据结构",
      "ID": "07DS009",
      "name": "邻接表",
      "attributes": {
        "难度": "入门",
        "内容": "为图中每个顶点建立一个单链表，存储所有邻接于该顶点的边（或顶点）信息。用一个数组存储各链表的头指针。",
        "存储开销": "O(n+e)",
        "核心特性": "节省空间（尤其稀疏图），方便查找顶点的邻接点，适合稀疏图",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "邻接表体现了链式存储在处理稀疏数据时的空间效率优势，是计算机科学中空间与时间权衡思想的典型范例。"
      }
    },
    {
      "type": "数据结构",
      "ID": "07DS010",
      "name": "边集数组",
      "attributes": {
        "难度": "入门",
        "内容": "用一个数组存储图中所有边的信息，每个数组元素包含一条边的起点、终点和权值（若有）。",
        "存储开销": "O(e)",
        "核心特性": "直接存储和访问所有边，不便于顶点相关操作",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "边集数组结构简单，直观反映边的集合，适用于侧重于对边进行整体处理的算法（如Kruskal），体现了针对特定问题设计合适数据结构的思想。"
      }
    },
    {
      "type": "数据结构",
      "ID": "07DS011",
      "name": "逆邻接表",
      "attributes": {
        "难度": "中等",
        "内容": "邻接表的变体，每个顶点的链表存储的是所有指向该顶点的入边信息（或入边邻接点序号）。",
        "存储开销": "O(n+e)",
        "核心特性": "方便查找顶点的入度、入边及入边邻接点",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "逆邻接表是针对特定需求（快速查找入边信息）对基础数据结构进行优化的实例，体现了问题导向的设计思路。"
      }
    },
    {
      "type": "数据结构",
      "ID": "07DS012",
      "name": "十字邻接表",
      "attributes": {
        "难度": "中等",
        "内容": "主要用于有向图，结合了邻接表和逆邻接表的思想。每个边结点包含起点、终点、权、指向同起点的下一条出边指针、指向同终点的下一条入边指针。顶点结点包含第一个入边和第一个出边指针。",
        "存储开销": "O(n+e)",
        "核心特性": "方便查找顶点的出度和入度及其相关边信息",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "十字邻接表通过集成不同结构的优点来满足更复杂的操作需求（同时高效访问出入边），体现了结构设计的组合与优化思想。"
      }
    },
    {
      "type": "算法",
      "ID": "07ALG001",
      "name": "深度优先搜索",
      "attributes": {
        "难度": "中等",
        "内容": "图遍历算法。从初始点出发，尽可能深地访问图的分支，访问一个顶点后，递归访问其未被访问的邻接点，直到所有邻接点被访问完再回溯。",
        "时间复杂度": "O(n+e) (邻接表), O(n^2) (邻接矩阵)",
        "空间复杂度": "O(n) (递归栈深度或标记数组)",
        "设计思想": "递归、栈、回溯",
        "适用场景": "查找路径、检测环、拓扑排序、查找连通分量/强连通分量",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "深度优先搜索体现了“不撞南墙不回头”的探索策略，在解决迷宫、路径查找等问题中有直观应用，启发学生面对复杂问题时勇于探索的精神。"
      }
    },
    {
      "type": "算法",
      "ID": "07ALG002",
      "name": "广度优先搜索",
      "attributes": {
        "难度": "中等",
        "内容": "图遍历算法。从初始点出发，首先访问其所有邻接点，然后按访问顺序依次访问这些邻接点的未被访问过的邻接点，逐层向外扩展。",
        "时间复杂度": "O(n+e) (邻接表), O(n^2) (邻接矩阵)",
        "空间复杂度": "O(n) (队列或标记数组)",
        "设计思想": "队列、层次遍历",
        "适用场景": "查找无权图最短路径、查找连通分量、网络广播",
        "教学视频": "未知",
        "教学材料": "未知",
        "思政点": "广度优先搜索体现了“稳扎稳打、层层推进”的策略，在解决最短距离、网络扩散等问题中有应用，启发学生系统性、全面性地分析和解决问题。"
      }
    }
  ],
  "relations": [
    {
      "type": "理论依赖",
      "ID": "07REL001",
      "source": "07DS001",
      "target": "07CON001"
    },
    {
      "type": "理论依赖",
      "ID": "07REL002",
      "source": "07DS001",
      "target": "07CON002"
    },
    {
      "type": "继承",
      "ID": "07REL003",
      "source": "07DS002",
      "target": "07DS001"
    },
    {
      "type": "继承",
      "ID": "07REL004",
      "source": "07DS003",
      "target": "07DS001"
    },
    {
      "type": "继承",
      "ID": "07REL005",
      "source": "07DS004",
      "target": "07DS001"
    },
    {
      "type": "继承",
      "ID": "07REL006",
      "source": "07CON017",
      "target": "07CON015"
    },
    {
      "type": "继承",
      "ID": "07REL007",
      "source": "07CON018",
      "target": "07CON016"
    },
    {
      "type": "继承",
      "ID": "07REL008",
      "source": "07DS005",
      "target": "07DS003"
    },
    {
      "type": "理论依赖",
      "ID": "07REL009",
      "source": "07CON020",
      "target": "07CON019"
    },
    {
      "type": "理论依赖",
      "ID": "07REL010",
      "source": "07CON020",
      "target": "07CON014"
    },
    {
      "type": "继承",
      "ID": "07REL011",
      "source": "07DS006",
      "target": "07DS002"
    },
    {
      "type": "理论依赖",
      "ID": "07REL012",
      "source": "07CON021",
      "target": "07DS006"
    },
    {
      "type": "理论依赖",
      "ID": "07REL013",
      "source": "07CON021",
      "target": "07CON014"
    },
    {
      "type": "继承",
      "ID": "07REL014",
      "source": "07DS007",
      "target": "07DS001"
    },
    {
      "type": "理论依赖",
      "ID": "07REL015",
      "source": "07DS007",
      "target": "07CON022"
    },
    {
      "type": "变体",
      "ID": "07REL016",
      "source": "07DS011",
      "target": "07DS009"
    },
    {
      "type": "变体",
      "ID": "07REL017",
      "source": "07DS012",
      "target": "07DS009"
    },
    {
      "type": "使用",
      "ID": "07REL018",
      "source": "07ALG001",
      "target": "07DS001"
    },
    {
      "type": "使用",
      "ID": "07REL019",
      "source": "07ALG002",
      "target": "07DS001"
    },
    {
      "type": "使用",
      "ID": "07REL022",
      "source": "07ALG001",
      "target": "07DS008"
    },
    {
      "type": "使用",
      "ID": "07REL023",
      "source": "07ALG001",
      "target": "07DS009"
    },
    {
      "type": "使用",
      "ID": "07REL024",
      "source": "07ALG002",
      "target": "07DS008"
    },
    {
      "type": "使用",
      "ID": "07REL025",
      "source": "07ALG002",
      "target": "07DS009"
    },
    {
      "type": "理论依赖",
      "ID": "07REL026",
      "source": "07CON004",
      "target": "07CON001"
    },
    {
      "type": "继承",
      "ID": "07REL027",
      "source": "07CON005",
      "target": "07CON002"
    },
    {
      "type": "继承",
      "ID": "07REL028",
      "source": "07CON006",
      "target": "07CON002"
    },
    {
      "type": "继承",
      "ID": "07REL029",
      "source": "07CON007",
      "target": "07CON001"
    },
    {
      "type": "继承",
      "ID": "07REL030",
      "source": "07CON008",
      "target": "07CON001"
    },
    {
      "type": "理论依赖",
      "ID": "07REL031",
      "source": "07CON009",
      "target": "07CON001"
    },
    {
      "type": "理论依赖",
      "ID": "07REL032",
      "source": "07CON009",
      "target": "07CON002"
    },
    {
      "type": "理论依赖",
      "ID": "07REL033",
      "source": "07CON010",
      "target": "07CON001"
    },
    {
      "type": "理论依赖",
      "ID": "07REL034",
      "source": "07CON010",
      "target": "07CON006"
    },
    {
      "type": "理论依赖",
      "ID": "07REL035",
      "source": "07CON011",
      "target": "07CON001"
    },
    {
      "type": "理论依赖",
      "ID": "07REL036",
      "source": "07CON011",
      "target": "07CON005"
    },
    {
      "type": "理论依赖",
      "ID": "07REL037",
      "source": "07CON012",
      "target": "07DS001"
    },
    {
      "type": "理论依赖",
      "ID": "07REL038",
      "source": "07CON013",
      "target": "07DS001"
    },
    {
      "type": "理论依赖",
      "ID": "07REL039",
      "source": "07CON014",
      "target": "07DS001"
    },
    {
      "type": "理论依赖",
      "ID": "07REL040",
      "source": "07CON015",
      "target": "07DS001"
    },
    {
      "type": "理论依赖",
      "ID": "07REL041",
      "source": "07CON016",
      "target": "07DS001"
    },
    {
      "type": "理论依赖",
      "ID": "07REL042",
      "source": "07CON019",
      "target": "07DS003"
    },
    {
      "type": "理论依赖",
      "ID": "07REL043",
      "source": "07CON019",
      "target": "07CON015"
    },
    {
      "type": "理论依赖",
      "ID": "07REL044",
      "source": "07CON022",
      "target": "07CON002"
    },
    {
      "type": "理论依赖",
      "ID": "07REL047",
      "source": "07DS008",
      "target": "07DS001"
    },
    {
      "type": "理论依赖",
      "ID": "07REL048",
      "source": "07DS009",
      "target": "07DS001"
    },
    {
      "type": "理论依赖",
      "ID": "07REL049",
      "source": "07DS010",
      "target": "07DS001"
    },
    {
      "type": "理论依赖",
      "ID": "07REL050",
      "source": "07CON003",
      "target": "07CON002"
    },
     {
      "type": "理论依赖",
      "ID": "07REL051",
      "source": "07CON003",
      "target": "07CON001"
    }
  ]
}