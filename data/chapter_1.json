{
  "entities": [
    {
      "type": "概念",
      "ID": "01CON001",
      "name": "数据结构",
      "attributes": {
        "难度": "入门",
        "内容": "研究从解决现实问题中抽象出来的数据如何在计算机系统中很好地表示、存取和处理的方法；指数据以及相互之间的联系"
      }
    },
    {
      "type": "概念",
      "ID": "01CON002",
      "name": "算法",
      "attributes": {
        "难度": "入门",
        "内容": "解决特定问题或执行特定计算而设计的一系列明确、有限的步骤，包含数据结构的基本操作、逻辑设计与应用；解决特定问题的方法"
      }
    },
    {
      "type": "概念",
      "ID": "01CON003",
      "name": "数据",
      "attributes": {
        "难度": "入门",
        "内容": "人们利用便于书写、记忆和交流的符号对现实世界的事物及其活动所做的记录"
      }
    },
    {
      "type": "概念",
      "ID": "01CON004",
      "name": "数据元素",
      "attributes": {
        "难度": "入门",
        "内容": "一个数据整体中相对独立的单位"
      }
    },
    {
      "type": "概念",
      "ID": "01CON005",
      "name": "数据记录",
      "attributes": {
        "难度": "入门",
        "内容": "数据处理领域组织数据的基本单位，由一个或多个数据项组成"
      }
    },
    {
      "type": "概念",
      "ID": "01CON006",
      "name": "数据项",
      "attributes": {
        "难度": "入门",
        "内容": "数据记录的组成部分，可以是简单数据项或组合数据项"
      }
    },
    {
      "type": "概念",
      "ID": "01CON007",
      "name": "关键项",
      "attributes": {
        "难度": "入门",
        "内容": "在一个表或文件中，其值能唯一标识一个记录的数据项"
      }
    },
    {
      "type": "概念",
      "ID": "01CON008",
      "name": "关键字",
      "attributes": {
        "难度": "入门",
        "内容": "关键项中的每个值称为所在记录的关键字"
      }
    },
    {
      "type": "概念",
      "ID": "01CON009",
      "name": "数据处理",
      "attributes": {
        "难度": "入门",
        "内容": "利用计算机对数据进行存储、检索、插入、删除、合并、拆分、排序、统计、计算、转换、输入、输出等的处理过程"
      }
    },
    {
      "type": "概念",
      "ID": "01CON010",
      "name": "逻辑结构",
      "attributes": {
        "难度": "入门",
        "内容": "根据数据之间的内在联系而抽象出来的结构，与计算机存储和处理无关，包括集合、线、树、图等基本结构"
      }
    },
    {
      "type": "概念",
      "ID": "01CON011",
      "name": "存储结构",
      "attributes": {
        "难度": "入门",
        "content": "数据在存储器中表现出的结构，与存储方法相对应，包括顺序、链接、索引、散列等基本形式"
      }
    },
    {
      "type": "概念",
      "ID": "01CON012",
      "name": "顺序存储",
      "attributes": {
        "难度": "入门",
        "内容": "一种存储方法，数据元素存储在连续的存储位置"
      }
    },
    {
      "type": "概念",
      "ID": "01CON013",
      "name": "链接存储",
      "attributes": {
        "难度": "入门",
        "内容": "一种存储方法，通过指针将数据元素链接起来"
      }
    },
    {
      "type": "概念",
      "ID": "01CON014",
      "name": "索引存储",
      "attributes": {
        "难度": "入门",
        "内容": "一种存储方法，通过索引表来确定数据元素位置"
      }
    },
    {
      "type": "概念",
      "ID": "01CON015",
      "name": "散列存储",
      "attributes": {
        "难度": "入门",
        "内容": "一种存储方法，通过散列函数确定数据元素位置"
      }
    },
    {
      "type": "数据结构",
      "ID": "01DS001",
      "name": "集合结构",
      "attributes": {
        "难度": "入门",
        "内容": "一种逻辑结构，只存在元素的集合，不考虑它们之间的任何联系",
        "核心特性": "元素之间无确定关系"
      }
    },
    {
      "type": "数据结构",
      "ID": "01DS002",
      "name": "线性结构",
      "attributes": {
        "难度": "入门",
        "内容": "一种逻辑结构，数据元素之间的1对1联系",
        "核心特性": "1:1关系, 有序序列"
      }
    },
    {
      "type": "数据结构",
      "ID": "01DS003",
      "name": "树形结构",
      "attributes": {
        "难度": "入门",
        "内容": "一种逻辑结构，数据元素之间的1对N（N>=0）联系，即层次关系",
        "核心特性": "1:N关系, 层次结构, 单一前驱"
      }
    },
    {
      "type": "数据结构",
      "ID": "01DS004",
      "name": "图形结构",
      "attributes": {
        "难度": "入门",
        "内容": "一种逻辑结构，数据元素之间的M对N（M>=0,N>=0）联系，即网状关系",
        "核心特性": "M:N关系, 网状结构"
      }
    },
    {
      "type": "数据结构",
      "ID": "01DS005",
      "name": "数组",
      "attributes": {
        "难度": "入门",
        "内容": "数目固定的具有同一类型的数据元素的顺序组合，具有线性结构",
        "存储开销": "固定大小，取决于元素个数和类型",
        "核心特性": "固定大小, 同一类型元素, 顺序存储, 下标访问 (随机访问)"
      }
    },
    {
      "type": "数据结构",
      "ID": "01DS006",
      "name": "字符串",
      "attributes": {
        "难度": "入门",
        "内容": "一种特殊的一维字符数组类型，由连续字符组成，以空字符'0'结束",
        "存储开销": "长度+1字节",
        "核心特性": "字符序列, 空结束符, 顺序访问"
      }
    },
    {
      "type": "数据结构",
      "ID": "01DS007",
      "name": "记录",
      "attributes": {
        "难度": "入门",
        "内容": "多个不同数据类型（也可相同）的组合体，物理存储按定义顺序顺序存储",
        "存储开销": "各成员大小之和",
        "核心特性": "异构元素, 成员访问"
      }
    },
    {
      "type": "数据结构",
      "ID": "01DS008",
      "name": "文件",
      "attributes": {
        "难度": "入门",
        "内容": "按位置有序的数据集合，存储在外存上，具有线性结构",
        "存储开销": "取决于内容大小",
        "核心特性": "有序, 外部存储"
      }
    },
    {
      "type": "数据结构",
      "ID": "01DS009",
      "name": "单链表",
      "attributes": {
        "难度": "入门",
        "内容": "通过next域把同类型的结点（对象）链接起来形成的结构",
        "存储开销": "结点数 * (数据大小 + 指针大小)",
        "核心特性": "动态大小, 链接存储, 顺序访问"
      }
    },
    {
      "type": "概念",
      "ID": "01CON016",
      "name": "数据类型",
      "attributes": {
        "难度": "入门",
        "内容": "对数据的取值范围、数据元素之间的结构以及允许施加操作的一种总体描述"
      }
    },
    {
      "type": "概念",
      "ID": "01CON017",
      "name": "简单类型",
      "attributes": {
        "难度": "入门",
        "内容": "数据类型的一种，每个数据是无法再分割的整体，如整数、实数、字符、指针等"
      }
    },
    {
      "type": "概念",
      "ID": "01CON018",
      "name": "结构类型",
      "attributes": {
        "难度": "入门",
        "内容": "数据类型的一种，由简单类型数据按照一定的规则构造而成，数据可以分解，如数组、记录、文件等"
      }
    },
    {
      "type": "概念",
      "ID": "01CON019",
      "name": "记录结构类型",
      "attributes": {
        "难度": "入门",
        "内容": "在C/C++语言中通过struct关键字定义的、包含多个不同数据类型（也可相同）的组合体"
      }
    },
    {
      "type": "概念",
      "ID": "01CON020",
      "name": "抽象数据类型",
      "attributes": {
        "难度": "入门",
        "内容": "由一种数据结构和在其上的所有操作（运算）所组成，定义数据的逻辑结构和操作说明，不考虑存储结构和具体实现"
      }
    },
    {
      "type": "概念",
      "ID": "01CON021",
      "name": "数据对象",
      "attributes": {
        "难度": "入门",
        "内容": "属于一种数据类型中的特定实例"
      }
    },
    {
      "type": "概念",
      "ID": "01CON022",
      "name": "算法描述",
      "attributes": {
        "难度": "入门",
        "内容": "借助各种工具（文字、流程图、程序设计语言等）描述算法的方法"
      }
    },
    {
      "type": "概念",
      "ID": "01CON023",
      "name": "算法评价",
      "attributes": {
        "难度": "入门",
        "内容": "从多个算法中选择较合适的一种，或改进现有算法的方法，评价方面包括正确性、稳健性、可读性、时间复杂度、空间复杂度"
      }
    },
    {
      "type": "概念",
      "ID": "01CON024",
      "name": "正确性",
      "attributes": {
        "难度": "入门",
        "内容": "算法的评价标准之一，指在合理输入下能够在有限时间内得出正确结果"
      }
    },
    {
      "type": "概念",
      "ID": "01CON025",
      "name": "稳健性",
      "attributes": {
        "难度": "入门",
        "内容": "算法的评价标准之一，指对不合理数据输入的反应和处理能力"
      }
    },
    {
      "type": "概念",
      "ID": "01CON026",
      "name": "可读性",
      "attributes": {
        "难度": "入门",
        "内容": "算法的评价标准之一，指算法供人们阅读的容易程度"
      }
    },
    {
      "type": "概念",
      "ID": "01CON027",
      "name": "时间复杂度",
      "attributes": {
        "难度": "入门",
        "内容": "算法有效性的量度之一，算法运行时间的相对度量，算法中包含简单操作次数的多少"
      }
    },
    {
      "type": "概念",
      "ID": "01CON028",
      "name": "空间复杂度",
      "attributes": {
        "难度": "入门",
        "内容": "算法有效性的量度之一，算法在运行过程中临时占用存储空间大小的量度"
      }
    },
    {
      "type": "概念",
      "ID": "01CON029",
      "name": "数量级",
      "attributes": {
        "难度": "入门",
        "内容": "表示算法时间复杂度或空间复杂度的形式，通常用大O表示法，反映算法性能随问题规模增长的速度"
      }
    },
    {
      "type": "概念",
      "ID": "01CON030",
      "name": "数值算法",
      "attributes": {
        "难度": "入门",
        "内容": "解决数值问题的算法，主要进行算术运算"
      }
    },
    {
      "type": "概念",
      "ID": "01CON031",
      "name": "非数值算法",
      "attributes": {
        "难度": "入门",
        "内容": "解决非数值问题的算法，主要进行比较和逻辑运算"
      }
    },
    {
      "type": "概念",
      "ID": "01CON032",
      "name": "递归算法",
      "attributes": {
        "难度": "入门",
        "内容": "直接或间接调用自身的算法"
      }
    },
    {
      "type": "概念",
      "ID": "01CON033",
      "name": "非递归算法",
      "attributes": {
        "难度": "入门",
        "内容": "不调用自身的算法"
      }
    },
    {
      "type": "算法",
      "ID": "01ALG001",
      "name": "顺序查找算法",
      "attributes": {
        "难度": "入门",
        "内容": "从线性数据结构（如数组）的开头依次遍历元素，直到找到目标或遍历结束",
        "时间复杂度": "O(n)",
        "空间复杂度": "O(1)",
        "设计思想": "线性扫描",
        "适用场景": "数据未排序或频繁插入/删除"
      }
    },
    {
      "type": "算法",
      "ID": "01ALG002",
      "name": "简单选择排序算法",
      "attributes": {
        "难度": "入门",
        "内容": "重复地从待排序的数据中找到最小（或最大）元素，存放到排序序列的起始位置，然后，再从剩余未排序元素中继续寻找最小（或最大）元素，然后放到已排序序列的末尾",
        "时间复杂度": "O(n^2)",
        "空间复杂度": "O(1)",
        "设计思想": "选择",
        "适用场景": "数据量较小，对交换次数有限制"
      }
    },
    {
      "type": "算法",
      "ID": "01ALG003",
      "name": "二分查找算法",
      "attributes": {
        "难度": "入门",
        "内容": "在有序表中，通过比较中间元素，每次将查找范围缩小一半",
        "时间复杂度": "O(lgn)",
        "空间复杂度": "O(1)",
        "设计思想": "分治",
        "适用场景": "数据已排序"
      }
    },
    {
      "type": "算法",
      "ID": "01ALG004",
      "name": "快速排序算法",
      "attributes": {
        "难度": "中等",
        "内容": "通过一趟排序将待排记录分隔成独立的两部分，其中一部分记录的关键字均比另一部分的关键字小，则可分别对这两部分记录继续进行排序",
        "时间复杂度": "O(n*lgn) (平均), O(n^2) (最坏)",
        "空间复杂度": "O(lgn) (平均)",
        "设计思想": "分治, 枢轴划分",
        "适用场景": "大多数情况下的通用排序"
      }
    },
    {
      "type": "算法",
      "ID": "01ALG005",
      "name": "归并排序算法",
      "attributes": {
        "难度": "中等",
        "内容": "将两个或两个以上的有序表合并成一个新的有序表",
        "时间复杂度": "O(n*lgn)",
        "空间复杂度": "O(n)",
        "设计思想": "分治, 合并",
        "适用场景": "外部排序, 稳定性要求高的排序"
      }
    },
    {
      "type": "算法",
      "ID": "01ALG006",
      "name": "矩阵乘法算法",
      "attributes": {
        "难度": "入门",
        "内容": "计算两个矩阵的乘积，通常指标准的三重循环算法",
        "时间复杂度": "O(n^3) (对于n阶矩阵)",
        "空间复杂度": "O(n^2)",
        "设计思想": "直接计算",
        "适用场景": "矩阵运算"
      }
    },
    {
      "type": "算法",
      "ID": "01ALG007",
      "name": "集合所有子集算法",
      "attributes": {
        "难度": "中等",
        "内容": "求具有n个元素集合的所有子集的算法",
        "时间复杂度": "O(2^n * n)",
        "空间复杂度": "O(n)",
        "设计思想": "回溯或位运算",
        "适用场景": "需要生成所有子集的场景"
      }
    },
    {
      "type": "算法",
      "ID": "01ALG008",
      "name": "全排列算法",
      "attributes": {
        "难度": "中等",
        "内容": "求具有n个元素的全排列的算法",
        "时间复杂度": "O(n! * n)",
        "空间复杂度": "O(n)",
        "设计思想": "回溯",
        "适用场景": "需要生成所有排列的场景"
      }
    },
    {
      "type": "概念",
      "ID": "01CON034",
      "name": "有序表",
      "attributes": {
        "难度": "入门",
        "内容": "数据元素按特定顺序排列的数据集合"
      }
    },
    {
      "type": "概念",
      "ID": "01CON035",
      "name": "C++语言",
      "attributes": {
        "难度": "入门",
        "内容": "一种计算机语言，用于描述数据处理方法和过程，可用于编写程序，能够兼容C语言，增加了类、引用参数、函数重载、运算符重载等特性"
      }
    },
    {
      "type": "概念",
      "ID": "01CON036",
      "name": "函数",
      "attributes": {
        "难度": "入门",
        "内容": "C/C++语言中程序的基本组成模块，实现特定功能，可带参数和返回值"
      }
    },
    {
      "type": "概念",
      "ID": "01CON037",
      "name": "函数重载",
      "attributes": {
        "难度": "入门",
        "内容": "在C++语言中，允许有多个同名函数，但参数个数或类型不同"
      }
    },
    {
      "type": "概念",
      "ID": "01CON038",
      "name": "运算符重载",
      "attributes": {
        "难度": "入门",
        "内容": "在C++语言中，允许对大多数运算符进行重载，使其应用于自定义类型"
      }
    },
    {
      "type": "概念",
      "ID": "01CON039",
      "name": "引用参数",
      "attributes": {
        "难度": "入门",
        "内容": "函数参数传递方式，形参是实参的别名，改变形参会影响实参，在C++中引入"
      }
    },
    {
      "type": "概念",
      "ID": "01CON040",
      "name": "值参数",
      "attributes": {
        "难度": "入门",
        "内容": "函数参数传递方式，传递实参的值，形参有独立存储空间，改变形参不影响实参"
      }
    },
    {
      "type": "概念",
      "ID": "01CON041",
      "name": "指针参数",
      "attributes": {
        "难度": "入门",
        "内容": "函数参数传递方式，传递实参的地址，通过指针可以访问和修改实参所指向的内容，在C语言中常用于实现引用功能"
      }
    },
    {
      "type": "概念",
      "ID": "01CON042",
      "name": "iostream.h",
      "attributes": {
        "难度": "入门",
        "content": "C++头文件，用于标准输入/输出流（cin, cout, cerr）"
      }
    },
    {
      "type": "概念",
      "ID": "01CON043",
      "name": "stdlib.h",
      "attributes": {
        "难度": "入门",
        "content": "C++头文件，包含标准库函数（内存分配、随机数、程序退出等）"
      }
    },
    {
      "type": "概念",
      "ID": "01CON044",
      "name": "fstream.h",
      "attributes": {
        "难度": "入门",
        "content": "C++头文件，用于文件流操作（ifstream, ofstream, fstream）"
      }
    },
    {
      "type": "概念",
      "ID": "01CON045",
      "name": "string.h",
      "attributes": {
        "难度": "入门",
        "content": "C++头文件，用于C风格字符串处理函数"
      }
    },
    {
      "type": "概念",
      "ID": "01CON046",
      "name": "iomanip.h",
      "attributes": {
        "难度": "入门",
        "content": "C++头文件，用于输入/输出格式控制"
      }
    }
  ],
  "relations": [
    {
      "type": "理论依赖",
      "ID": "01REL001",
      "source": "01DS001",
      "target": "01CON010"
    },
    {
      "type": "理论依赖",
      "ID": "01REL002",
      "source": "01DS002",
      "target": "01CON010"
    },
    {
      "type": "理论依赖",
      "ID": "01REL003",
      "source": "01DS003",
      "target": "01CON010"
    },
    {
      "type": "理论依赖",
      "ID": "01REL004",
      "source": "01DS004",
      "target": "01CON010"
    },
    {
      "type": "继承",
      "ID": "01REL005",
      "source": "01DS003",
      "target": "01DS004"
    },
    {
      "type": "继承",
      "ID": "01REL006",
      "source": "01DS002",
      "target": "01DS003"
    },
    {
      "type": "理论依赖",
      "ID": "01REL007",
      "source": "01CON012",
      "target": "01CON011"
    },
    {
      "type": "理论依赖",
      "ID": "01REL008",
      "source": "01CON013",
      "target": "01CON011"
    },
    {
      "type": "理论依赖",
      "ID": "01REL009",
      "source": "01CON014",
      "target": "01CON011"
    },
    {
      "type": "理论依赖",
      "ID": "01REL010",
      "source": "01CON015",
      "target": "01CON011"
    },
    {
      "type": "理论依赖",
      "ID": "01REL011",
      "source": "01DS005",
      "target": "01CON018"
    },
    {
      "type": "理论依赖",
      "ID": "01REL012",
      "source": "01DS006",
      "target": "01CON018"
    },
    {
      "type": "理论依赖",
      "ID": "01REL013",
      "source": "01DS007",
      "target": "01CON018"
    },
    {
      "type": "理论依赖",
      "ID": "01REL014",
      "source": "01DS008",
      "target": "01CON018"
    },
    {
      "type": "使用",
      "ID": "01REL015",
      "source": "01DS009",
      "target": "01DS007"
    },
    {
      "type": "理论依赖",
      "ID": "01REL016",
      "source": "01CON017",
      "target": "01CON016"
    },
    {
      "type": "理论依赖",
      "ID": "01REL017",
      "source": "01CON018",
      "target": "01CON016"
    },
    {
      "type": "理论依赖",
      "ID": "01REL018",
      "source": "01CON019",
      "target": "01CON018"
    },
    {
      "type": "理论依赖",
      "ID": "01REL019",
      "source": "01CON020",
      "target": "01CON001"
    },
    {
      "type": "理论依赖",
      "ID": "01REL020",
      "source": "01CON020",
      "target": "01CON002"
    },
    {
      "type": "理论依赖",
      "ID": "01REL021",
      "source": "01CON021",
      "target": "01CON016"
    },
    {
      "type": "理论依赖",
      "ID": "01REL022",
      "source": "01CON004",
      "target": "01CON003"
    },
    {
      "type": "理论依赖",
      "ID": "01REL023",
      "source": "01CON005",
      "target": "01CON004"
    },
    {
      "type": "理论依赖",
      "ID": "01REL024",
      "source": "01CON006",
      "target": "01CON005"
    },
    {
      "type": "理论依赖",
      "ID": "01REL025",
      "source": "01CON007",
      "target": "01CON006"
    },
    {
      "type": "理论依赖",
      "ID": "01REL026",
      "source": "01CON008",
      "target": "01CON007"
    },
    {
      "type": "理论依赖",
      "ID": "01REL027",
      "source": "01CON009",
      "target": "01CON003"
    },
    {
      "type": "理论依赖",
      "ID": "01REL028",
      "source": "01CON027",
      "target": "01CON002"
    },
    {
      "type": "理论依赖",
      "ID": "01REL029",
      "source": "01CON028",
      "target": "01CON002"
    },
    {
      "type": "理论依赖",
      "ID": "01REL030",
      "source": "01CON029",
      "target": "01CON027"
    },
    {
      "type": "理论依赖",
      "ID": "01REL031",
      "source": "01CON029",
      "target": "01CON028"
    },
    {
      "type": "理论依赖",
      "ID": "01REL032",
      "source": "01CON030",
      "target": "01CON002"
    },
    {
      "type": "理论依赖",
      "ID": "01REL033",
      "source": "01CON031",
      "target": "01CON002"
    },
    {
      "type": "理论依赖",
      "ID": "01REL034",
      "source": "01CON032",
      "target": "01CON002"
    },
    {
      "type": "理论依赖",
      "ID": "01REL035",
      "source": "01CON033",
      "target": "01CON002"
    },
    {
      "type": "操作绑定",
      "ID": "01REL036",
      "source": "01ALG001",
      "target": "01DS005"
    },
    {
      "type": "操作绑定",
      "ID": "01REL037",
      "source": "01ALG002",
      "target": "01DS005"
    },
    {
      "type": "操作绑定",
      "ID": "01REL038",
      "source": "01ALG003",
      "target": "01CON034"
    },
    {
      "type": "操作绑定",
      "ID": "01REL039",
      "source": "01ALG004",
      "target": "01DS005"
    },
    {
      "type": "操作绑定",
      "ID": "01REL040",
      "source": "01ALG005",
      "target": "01DS005"
    },
    {
      "type": "操作绑定",
      "ID": "01REL041",
      "source": "01ALG006",
      "target": "01DS005"
    },
    {
      "type": "操作绑定",
      "ID": "01REL042",
      "source": "01ALG007",
      "target": "01DS001"
    },
    {
      "type": "操作绑定",
      "ID": "01REL043",
      "source": "01ALG008",
      "target": "01DS001"
    },
    {
      "type": "理论依赖",
      "ID": "01REL044",
      "source": "01CON036",
      "target": "01CON035"
    },
    {
      "type": "理论依赖",
      "ID": "01REL045",
      "source": "01CON037",
      "target": "01CON036"
    },
    {
      "type": "理论依赖",
      "ID": "01REL046",
      "source": "01CON038",
      "target": "01CON035"
    },
    {
      "type": "理论依赖",
      "ID": "01REL047",
      "source": "01CON039",
      "target": "01CON036"
    },
    {
      "type": "理论依赖",
      "ID": "01REL048",
      "source": "01CON040",
      "target": "01CON036"
    },
    {
      "type": "理论依赖",
      "ID": "01REL049",
      "source": "01CON041",
      "target": "01CON036"
    },
    {
      "type": "理论依赖",
      "ID": "01REL050",
      "source": "01CON042",
      "target": "01CON035"
    },
    {
      "type": "理论依赖",
      "ID": "01REL051",
      "source": "01CON043",
      "target": "01CON035"
    },
    {
      "type": "理论依赖",
      "ID": "01REL052",
      "source": "01CON044",
      "target": "01CON035"
    },
    {
      "type": "理论依赖",
      "ID": "01REL053",
      "source": "01CON045",
      "target": "01CON035"
    },
    {
      "type": "理论依赖",
      "ID": "01REL054",
      "source": "01CON046",
      "target": "01CON035"
    },
    {
      "type": "理论依赖",
      "ID": "01REL055",
      "source": "01CON034",
      "target": "01CON001"
    },
    {
      "type": "理论依赖",
      "ID": "01REL056",
      "source": "01ALG001",
      "target": "01CON031"
    },
    {
      "type": "理论依赖",
      "ID": "01REL057",
      "source": "01ALG002",
      "target": "01CON031"
    },
    {
      "type": "理论依赖",
      "ID": "01REL058",
      "source": "01ALG003",
      "target": "01CON031"
    },
    {
      "type": "理论依赖",
      "ID": "01REL059",
      "source": "01ALG004",
      "target": "01CON031"
    },
    {
      "type": "理论依赖",
      "ID": "01REL060",
      "source": "01ALG005",
      "target": "01CON031"
    },
    {
      "type": "理论依赖",
      "ID": "01REL061",
      "source": "01ALG006",
      "target": "01CON030"
    },
    {
      "type": "理论依赖",
      "ID": "01REL062",
      "source": "01ALG007",
      "target": "01CON031"
    },
    {
      "type": "理论依赖",
      "ID": "01REL063",
      "source": "01ALG008",
      "target": "01CON031"
    }
  ]
}