```cpp
cout<<"还有汽车未渡江,暂不能结束!"<<endl;
break;                      //结束 switch 语句
}
if(n!=0) {
    cout<<"渡轮上有车,不能结束,需命令开渡轮!"<<endl;
    break;                  //结束 switch 语句
}
cout<<"程序运行结束!"<<endl;
return;                     //执行结束返回
}                           //switch 语句终端位置
} while(1);                 //外层 do 循环终端位置
ClearQueue(q1);
ClearQueue(q2);
}                           //主函数结束位置

习 题 4

【习题 4-1】运算题。

1. 有 6 个元素 A、B、C、D、E、F 依次进栈，允许任何时候出栈，能否得到下列的每个出栈序列，若能，给出栈的操作过程，若不能，简述其理由。
(1) CDBEFA
(2) ABEDFC
(3) DCEABF
(4) BAEFCD

2. 有 4 个元素 a,b,c,d 依次进栈，任何时候都可以出栈，请写出所有可能的出栈序列和所有不存在的序列。

3. 用一维数组 a[7]顺序存储一个循环队列，队首和队尾指针分别用 front 和 rear 表示，当前队列中已有 5 个元素：23,45,67,80,34，其中，23 为队首元素，front 的值为 3，请画出对应的存储状态，当连续做 4 次出队运算后，再让 15,36,48 元素依次进队，请再次画出对应的存储状态。

4. 用于顺序存储一个队列的数组的长度为 N，队首和队尾指针分别为 front 和 rear，写出求此队列长度（即所含元素个数）的公式。

【习题 4-2】算法分析，写出每个算法的功能。

1. int AE(int a[], int n)
{
    if(n==0) return 0;
    else return a[n-1]+AE(a,n-1);
}

2. int AF(int k, int s)                       //第1次使用 AF(0,0)调用此算法
{
    if(s>=1000) return k-1;
    else {
        k++;
        s+=k*k;
        return AF(k,s);
    }
}
```
