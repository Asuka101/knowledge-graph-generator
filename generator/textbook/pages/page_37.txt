1.4.1 包含文件语句

包含文件语句以关键字#include 开头，后跟用尖括号或双引号括起来的头文件名，行末尾不需要使用分号。下面介绍几个常用的系统头文件的作用。

1. #include<iostream.h>

在程序的开始使用该语句后，在其后的每一个函数中，都可以使用标准输入设备（键盘）流对象 cin、标准输出设备（屏幕）流对象 cout 和标准错误输出设备（屏幕）流对象 cerr，以及使用用于输入的提取操作符 “$>$”和用于输出的插入操作符 “$<$”进行数据输入/输出操作。对于基本类型为 char、short、int、long、char *（字符串型）、float、double、long double 的数据能够直接进行输入和输出；对于非字符指针类型的指针型数据能够直接输出指针（即操作数地址）；对于其他类型的数据，只有通过对“$>$”和“$<$”操作符重载后才能直接输入和输出，当然若数据中的元素为基本数据类型，则可对其元素直接输入和输出。例如，一种记录结构类型如下。

struct worker {
    int id;
    char name[20];
    float wage;
}

若要对该记录类型的一个对象（用 wk 表示）输入或输出数据，可使用如下输入或输出语句。

cin>>wk.id>>wk.name>>wk.wage;
cout<wk.id<<"" "<wk.name<<"" "<wk.wage<<endl;

若要对记录整体进行输入或输出，则必须对该类型进行提取或插入操作符的重载，它们的重载函数定义如下。

istream& operator>>(istream& istr, worker& x)
{
    istr>>x.id>>x.name>>x.wage;
    return istr;
}
ostream& operator<<(ostream& ostr, const worker& x)
{
    ostr<x.id<<"" "<x.name<<"" "<x.wage<<endl;
    return ostr;
}

按照上述定义后，可使用如下语句对 worker 类型的对象 wk 进行输入或输出。

cin>>wk;
