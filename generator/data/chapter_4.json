{
  "entities": [
    {
      "type": "数据结构",
      "ID": "04DS001",
      "name": "栈",
      "attributes": {
        "难度": "入门",
        "内容": "又称堆栈，是一种运算受限的线性表，其限制是仅允许在表的一端（栈顶）进行插入和删除运算。具有后进先出（LIFO）的特点。",
        "存储开销": "取决于具体实现（顺序或链式）",
        "核心特性": "后进先出 (LIFO)",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "04DS002",
      "name": "线性表",
      "attributes": {
        "难度": "入门",
        "内容": "数据元素之间存在一对一的线性关系的数据结构。栈和队列是其特例。",
        "存储开销": "取决于具体实现（顺序或链式）",
        "核心特性": "线性关系",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "04CON001",
      "name": "栈顶",
      "attributes": {
        "难度": "入门",
        "内容": "对栈进行插入和删除运算的一端。",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "04CON002",
      "name": "栈底",
      "attributes": {
        "难度": "入门",
        "内容": "与栈顶相对的另一端。",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "04CON003",
      "name": "栈顶元素",
      "attributes": {
        "难度": "入门",
        "内容": "位于栈顶位置的元素。",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "04ALG001",
      "name": "进栈",
      "attributes": {
        "难度": "入门",
        "内容": "向栈顶插入一个新元素，使其成为新的栈顶元素。也称入栈。",
        "时间复杂度": "O(1) (摊销)",
        "空间复杂度": "O(1) (摊销)",
        "设计思想": "栈基本操作",
        "适用场景": "栈数据管理",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "04ALG002",
      "name": "出栈",
      "attributes": {
        "难度": "入门",
        "内容": "删除栈顶元素，使下一个元素成为新的栈顶元素。也称退栈。",
        "时间复杂度": "O(1)",
        "空间复杂度": "O(1)",
        "设计思想": "栈基本操作",
        "适用场景": "栈数据管理",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "04CON004",
      "name": "后进先出",
      "attributes": {
        "难度": "入门",
        "内容": "Last In First Out (LIFO)。栈的核心特性，最后进入栈的元素最先被移除。",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "04ALG003",
      "name": "初始化栈",
      "attributes": {
        "难度": "入门",
        "内容": "创建一个空栈。",
        "时间复杂度": "O(1)",
        "空间复杂度": "O(1) 或 O(初始容量)",
        "设计思想": "栈基本操作",
        "适用场景": "使用栈之前",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "04ALG004",
      "name": "读取栈顶元素",
      "attributes": {
        "难度": "入门",
        "内容": "返回栈顶元素的值，但不删除它。",
        "时间复杂度": "O(1)",
        "空间复杂度": "O(1)",
        "设计思想": "栈基本操作",
        "适用场景": "查看栈顶状态",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "04ALG005",
      "name": "判断栈是否为空",
      "attributes": {
        "难度": "入门",
        "内容": "检查栈中是否包含任何元素。",
        "时间复杂度": "O(1)",
        "空间复杂度": "O(1)",
        "设计思想": "栈状态检查",
        "适用场景": "栈操作前的条件判断",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "04ALG006",
      "name": "清空栈",
      "attributes": {
        "难度": "入门",
        "内容": "移除栈中所有元素，使其变为空栈。",
        "时间复杂度": "O(1) 或 O(N)",
        "空间复杂度": "O(1)",
        "设计思想": "栈管理",
        "适用场景": "重置栈状态",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "04DS003",
      "name": "顺序栈",
      "attributes": {
        "难度": "入门",
        "内容": "使用数组和栈顶指针实现的栈。通常在数组的一端（逻辑上的表尾）进行操作，时间复杂度为O(1)。可能需要处理栈满和动态扩容。",
        "存储开销": "连续内存空间 (数组大小)",
        "核心特性": "顺序存储, O(1)操作(摊销)",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "04DS004",
      "name": "数组",
      "attributes": {
        "难度": "入门",
        "内容": "在连续内存中存储相同类型元素的集合，可通过下标访问。",
        "存储开销": "连续内存，大小固定或需调整",
        "核心特性": "随机访问 (O(1)索引)",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "04CON005",
      "name": "栈顶指针",
      "attributes": {
        "难度": "入门",
        "内容": "在顺序栈实现中，指示栈顶元素位置（通常是下标）的变量。",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "04CON006",
      "name": "栈空",
      "attributes": {
        "难度": "入门",
        "内容": "栈内没有元素的状态。顺序栈中通常用top == -1表示。",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "04CON007",
      "name": "栈满",
      "attributes": {
        "难度": "入门",
        "内容": "顺序栈的存储空间已用尽的状态。通常用top == MaxSize - 1表示。",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "04ALG007",
      "name": "顺序栈初始化",
      "attributes": {
        "难度": "入门",
        "内容": "为顺序栈分配存储空间（数组），并将栈顶指针（top）初始化为表示空栈的值（如-1）。",
        "时间复杂度": "O(1) 或 O(MaxSize)",
        "空间复杂度": "O(MaxSize)",
        "设计思想": "顺序栈实现",
        "适用场景": "创建顺序栈实例",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "04ALG008",
      "name": "顺序栈进栈",
      "attributes": {
        "难度": "入门",
        "内容": "检查栈是否已满（可能需要扩容），栈顶指针加1，将元素存入栈顶指针指向的位置。",
        "时间复杂度": "O(1) (摊销)",
        "空间复杂度": "O(1) (摊销)",
        "设计思想": "顺序栈实现",
        "适用场景": "向顺序栈添加元素",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "04ALG009",
      "name": "顺序栈出栈",
      "attributes": {
        "难度": "入门",
        "内容": "检查栈是否为空，读取栈顶指针指向的元素，栈顶指针减1。",
        "时间复杂度": "O(1)",
        "空间复杂度": "O(1)",
        "设计思想": "顺序栈实现",
        "适用场景": "从顺序栈移除元素",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "04ALG010",
      "name": "顺序栈读取栈顶",
      "attributes": {
        "难度": "入门",
        "内容": "检查栈是否为空，返回栈顶指针指向的元素，不修改栈顶指针。",
        "时间复杂度": "O(1)",
        "空间复杂度": "O(1)",
        "设计思想": "顺序栈实现",
        "适用场景": "查看顺序栈顶元素",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "04ALG011",
      "name": "顺序栈判空",
      "attributes": {
        "难度": "入门",
        "内容": "检查栈顶指针是否等于表示空栈的值（如-1）。",
        "时间复杂度": "O(1)",
        "空间复杂度": "O(1)",
        "设计思想": "顺序栈实现",
        "适用场景": "检查顺序栈状态",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "04ALG012",
      "name": "顺序栈清空",
      "attributes": {
        "难度": "入门",
        "内容": "重置栈顶指针为表示空栈的值（如-1），可能释放动态分配的内存。",
        "时间复杂度": "O(1)",
        "空间复杂度": "O(1)",
        "设计思想": "顺序栈实现",
        "适用场景": "重置顺序栈",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "04DS005",
      "name": "链栈",
      "attributes": {
        "难度": "入门",
        "内容": "使用单链表实现的栈。链表的表头作为栈顶，插入和删除操作在表头进行，时间复杂度为O(1)。",
        "存储开销": "节点动态分配，每个节点有数据域和指针域开销",
        "核心特性": "链式存储, O(1)操作",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "04DS006",
      "name": "单链表",
      "attributes": {
        "难度": "入门",
        "内容": "由节点组成的线性数据结构，每个节点包含数据域和指向下一个节点的指针域。",
        "存储开销": "节点动态分配，指针开销",
        "核心特性": "链式存储, 插入删除方便(若有前驱指针)",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "04CON008",
      "name": "栈顶指针(链栈)",
      "attributes": {
        "难度": "入门",
        "内容": "在链栈实现中，指向链表头结点的指针，即栈顶结点。",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "04CON009",
      "name": "栈顶结点",
      "attributes": {
        "难度": "入门",
        "内容": "链栈中由栈顶指针指向的链表头结点。",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "04ALG013",
      "name": "链栈初始化",
      "attributes": {
        "难度": "入门",
        "内容": "将链栈的栈顶指针设置为NULL。",
        "时间复杂度": "O(1)",
        "空间复杂度": "O(1)",
        "设计思想": "链栈实现",
        "适用场景": "创建链栈实例",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "04ALG014",
      "name": "链栈进栈",
      "attributes": {
        "难度": "入门",
        "内容": "创建一个新节点存储元素，将新节点的next指向原栈顶结点，更新栈顶指针指向新节点。",
        "时间复杂度": "O(1)",
        "空间复杂度": "O(1)",
        "设计思想": "链栈实现(头插法)",
        "适用场景": "向链栈添加元素",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "04ALG015",
      "name": "链栈出栈",
      "attributes": {
        "难度": "入门",
        "内容": "检查栈是否为空，暂存栈顶结点，更新栈顶指针指向下一个结点，释放原栈顶结点内存，返回元素值。",
        "时间复杂度": "O(1)",
        "空间复杂度": "O(1)",
        "设计思想": "链栈实现(头删法)",
        "适用场景": "从链栈移除元素",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "04ALG016",
      "name": "链栈读取栈顶",
      "attributes": {
        "难度": "入门",
        "内容": "检查栈是否为空，返回栈顶结点的数据域，不修改链表结构。",
        "时间复杂度": "O(1)",
        "空间复杂度": "O(1)",
        "设计思想": "链栈实现",
        "适用场景": "查看链栈顶元素",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "04ALG017",
      "name": "链栈判空",
      "attributes": {
        "难度": "入门",
        "内容": "检查链栈的栈顶指针是否为NULL。",
        "时间复杂度": "O(1)",
        "空间复杂度": "O(1)",
        "设计思想": "链栈实现",
        "适用场景": "检查链栈状态",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "04ALG018",
      "name": "链栈清空",
      "attributes": {
        "难度": "入门",
        "内容": "遍历链栈，依次删除所有结点并释放内存，最后将栈顶指针置为NULL。",
        "时间复杂度": "O(N)",
        "空间复杂度": "O(1)",
        "设计思想": "链栈实现",
        "适用场景": "重置链栈",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "04ALG019",
      "name": "括号配对检查",
      "attributes": {
        "难度": "中等",
        "内容": "利用栈检查表达式或代码中的括号（如(), [], {}）是否正确配对。遇左括号进栈，遇右括号检查栈顶是否匹配，匹配则出栈，不匹配或最后栈非空则错误。",
        "时间复杂度": "O(N)",
        "空间复杂度": "O(N)",
        "设计思想": "栈的应用",
        "适用场景": "语法分析、代码检查",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "04ALG020",
      "name": "进制转换",
      "attributes": {
        "难度": "中等",
        "内容": "将一个十进制数转换为其他进制数。常用方法是“除基取余法”，将余数依次进栈，然后出栈得到转换结果。",
        "时间复杂度": "O(log_r N)",
        "空间复杂度": "O(log_r N)",
        "设计思想": "栈的应用(逆序输出)",
        "适用场景": "数值表示转换",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "04CON010",
      "name": "算术表达式",
      "attributes": {
        "难度": "入门",
        "内容": "由操作数（常量、变量、函数等）、运算符（+、-、*、/等）以及改变运算次序的括号组成的式子。",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "04CON011",
      "name": "操作数",
      "attributes": {
        "难度": "入门",
        "内容": "算术表达式中参与运算的数据，也称运算对象或运算量。",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "04CON012",
      "name": "运算符",
      "attributes": {
        "难度": "入门",
        "内容": "算术表达式中执行运算的符号，分为单目运算符（如取负-）和双目运算符（如+、-、*、/）。",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "04CON013",
      "name": "中缀表示",
      "attributes": {
        "难度": "入门",
        "内容": "算术表达式的常规书写方式，双目运算符位于其两个操作数之间。",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "04CON014",
      "name": "后缀表示",
      "attributes": {
        "难度": "入门",
        "内容": "算术表达式的一种表示法，运算符位于其两个操作数之后，也称逆波兰式。计算时无需考虑括号和优先级，只需顺序处理。",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "04CON015",
      "name": "运算符优先级",
      "attributes": {
        "难度": "入门",
        "内容": "规定不同运算符计算先后顺序的规则，例如乘除运算优先于加减运算。",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "04ALG021",
      "name": "后缀表达式求值",
      "attributes": {
        "难度": "中等",
        "内容": "使用栈计算后缀表达式的值。从左到右扫描，遇到操作数则压栈，遇到运算符则从栈中弹出所需数量的操作数进行计算，并将结果压回栈中。表达式结束时，栈中唯一的值即为结果。",
        "时间复杂度": "O(N)",
        "空间复杂度": "O(N)",
        "设计思想": "栈的应用",
        "适用场景": "计算机求值",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "04ALG022",
      "name": "中缀转后缀",
      "attributes": {
        "难度": "中等",
        "内容": "将中缀表达式转换为等价的后缀表达式。使用一个运算符栈，根据运算符优先级和括号规则处理。",
        "时间复杂度": "O(N)",
        "空间复杂度": "O(N)",
        "设计思想": "栈的应用",
        "适用场景": "编译器、计算器",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "04CON016",
      "name": "递归",
      "attributes": {
        "难度": "中等",
        "内容": "一种解决问题的方法，其中函数或过程直接或间接调用自身来解决规模更小的同类子问题，必须包含终止条件以结束调用。",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "04ALG023",
      "name": "阶乘(递归)",
      "attributes": {
        "难度": "入门",
        "内容": "使用递归计算非负整数n的阶乘。定义为 f(n) = n * f(n-1) 当 n > 0，f(0) = 1。",
        "时间复杂度": "O(N)",
        "空间复杂度": "O(N) (递归栈深度)",
        "设计思想": "递归",
        "适用场景": "数学计算示例",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "04ALG024",
      "name": "布尔组合生成",
      "attributes": {
        "难度": "中等",
        "内容": "使用递归生成n个布尔变量所有可能的真/假组合（共2^n种）。",
        "时间复杂度": "O(N * 2^N)",
        "空间复杂度": "O(N) (递归栈深度)",
        "设计思想": "递归",
        "适用场景": "组合生成",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "04ALG025",
      "name": "全排列生成",
      "attributes": {
        "难度": "中等",
        "内容": "使用递归生成n个不同元素的所有排列（共n!种）。",
        "时间复杂度": "O(N * N!)",
        "空间复杂度": "O(N) (递归栈深度)",
        "设计思想": "递归, 回溯",
        "适用场景": "组合数学问题",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "04ALG026",
      "name": "迷宫求解(递归)",
      "attributes": {
        "难度": "中等",
        "内容": "使用递归（深度优先搜索）寻找从迷宫入口到出口的路径。通过标记已访问位置避免循环，并回溯。",
        "时间复杂度": "O(M*N)",
        "空间复杂度": "O(M*N) (递归栈深度或标记数组)",
        "设计思想": "递归, 回溯, DFS",
        "适用场景": "路径查找问题",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "04ALG027",
      "name": "汉诺塔",
      "attributes": {
        "难度": "中等",
        "内容": "经典的递归问题。将n个盘子从源柱借助辅助柱移动到目标柱，遵循大盘在下、每次移动一个盘子的规则。",
        "时间复杂度": "O(2^N)",
        "空间复杂度": "O(N) (递归栈深度)",
        "设计思想": "递归",
        "适用场景": "递归教学示例",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "04DS007",
      "name": "队列",
      "attributes": {
        "难度": "入门",
        "内容": "简称队，是一种运算受限的线性表，允许在表的一端（队尾）进行插入，而在另一端（队首）进行删除。具有先进先出（FIFO）的特点。",
        "存储开销": "取决于具体实现（顺序或链式）",
        "核心特性": "先进先出 (FIFO)",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "04CON017",
      "name": "队尾",
      "attributes": {
        "难度": "入门",
        "内容": "队列中允许插入元素的一端。",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "04CON018",
      "name": "队首",
      "attributes": {
        "难度": "入门",
        "内容": "队列中允许删除元素的一端。",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "04ALG028",
      "name": "进队",
      "attributes": {
        "难度": "入门",
        "内容": "向队尾插入一个新元素。也称入队。",
        "时间复杂度": "O(1) (摊销)",
        "空间复杂度": "O(1) (摊销)",
        "设计思想": "队列基本操作",
        "适用场景": "队列数据管理",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "04ALG029",
      "name": "出队",
      "attributes": {
        "难度": "入门",
        "内容": "从队首删除一个元素。也称离队。",
        "时间复杂度": "O(1)",
        "空间复杂度": "O(1)",
        "设计思想": "队列基本操作",
        "适用场景": "队列数据管理",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "04CON019",
      "name": "先进先出",
      "attributes": {
        "难度": "入门",
        "内容": "First In First Out (FIFO)。队列的核心特性，最先进入队列的元素最先被移除。",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "04ALG030",
      "name": "初始化队列",
      "attributes": {
        "难度": "入门",
        "内容": "创建一个空队列。",
        "时间复杂度": "O(1)",
        "空间复杂度": "O(1) 或 O(初始容量)",
        "设计思想": "队列基本操作",
        "适用场景": "使用队列之前",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "04ALG031",
      "name": "读取队首元素",
      "attributes": {
        "难度": "入门",
        "内容": "返回队首元素的值，但不删除它。",
        "时间复杂度": "O(1)",
        "空间复杂度": "O(1)",
        "设计思想": "队列基本操作",
        "适用场景": "查看队首状态",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "04ALG032",
      "name": "判断队列是否为空",
      "attributes": {
        "难度": "入门",
        "内容": "检查队列中是否包含任何元素。",
        "时间复杂度": "O(1)",
        "空间复杂度": "O(1)",
        "设计思想": "队列状态检查",
        "适用场景": "队列操作前的条件判断",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "04ALG033",
      "name": "清空队列",
      "attributes": {
        "难度": "入门",
        "内容": "移除队列中所有元素，使其变为空队列。",
        "时间复杂度": "O(1) 或 O(N)",
        "空间复杂度": "O(1)",
        "设计思想": "队列管理",
        "适用场景": "重置队列状态",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "04DS008",
      "name": "顺序队列",
      "attributes": {
        "难度": "入门",
        "内容": "使用数组和队首、队尾指针实现的队列。通常采用循环数组（循环队列）来有效利用空间，避免“假溢出”。",
        "存储开销": "连续内存空间 (数组大小)",
        "核心特性": "顺序存储, 循环利用空间, O(1)操作(摊销)",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "04CON020",
      "name": "队首指针(顺序队列)",
      "attributes": {
        "难度": "入门",
        "内容": "在顺序队列（特别是循环队列）中，指示队首元素位置（或其前一个位置）的变量（通常是下标）。",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "04CON021",
      "name": "队尾指针(顺序队列)",
      "attributes": {
        "难度": "入门",
        "内容": "在顺序队列（特别是循环队列）中，指示队尾元素插入位置（通常是队尾元素的下一个位置或队尾元素本身的位置）的变量（通常是下标）。",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "04CON022",
      "name": "队空(顺序队列)",
      "attributes": {
        "难度": "入门",
        "内容": "顺序队列没有元素的状态。在循环队列中，通常用 front == rear 判断。",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "04CON023",
      "name": "队满(顺序队列)",
      "attributes": {
        "难度": "入门",
        "内容": "顺序队列的存储空间已用尽的状态。在循环队列中，为区分队空，通常牺牲一个存储单元，用 (rear + 1) % MaxSize == front 判断。",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "04ALG034",
      "name": "顺序队列初始化",
      "attributes": {
        "难度": "入门",
        "内容": "为顺序队列（循环队列）分配存储空间（数组），并将队首和队尾指针初始化为表示空队列的值（如0）。",
        "时间复杂度": "O(1) 或 O(MaxSize)",
        "空间复杂度": "O(MaxSize)",
        "设计思想": "顺序队列实现",
        "适用场景": "创建顺序队列实例",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "04ALG035",
      "name": "顺序队列进队",
      "attributes": {
        "难度": "入门",
        "内容": "检查队列是否已满（可能需要扩容），将元素存入队尾指针指向的位置，然后队尾指针按循环方式后移。",
        "时间复杂度": "O(1) (摊销)",
        "空间复杂度": "O(1) (摊销)",
        "设计思想": "顺序队列实现",
        "适用场景": "向顺序队列添加元素",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "04ALG036",
      "name": "顺序队列出队",
      "attributes": {
        "难度": "入门",
        "内容": "检查队列是否为空，队首指针按循环方式后移，返回原队首指针位置的元素。",
        "时间复杂度": "O(1)",
        "空间复杂度": "O(1)",
        "设计思想": "顺序队列实现",
        "适用场景": "从顺序队列移除元素",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "04ALG037",
      "name": "顺序队列读队首",
      "attributes": {
        "难度": "入门",
        "内容": "检查队列是否为空，返回队首指针下一个位置的元素，不修改指针。",
        "时间复杂度": "O(1)",
        "空间复杂度": "O(1)",
        "设计思想": "顺序队列实现",
        "适用场景": "查看顺序队列首元素",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "04ALG038",
      "name": "顺序队列判空",
      "attributes": {
        "难度": "入门",
        "内容": "检查队首指针是否等于队尾指针。",
        "时间复杂度": "O(1)",
        "空间复杂度": "O(1)",
        "设计思想": "顺序队列实现",
        "适用场景": "检查顺序队列状态",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "04ALG039",
      "name": "顺序队列清空",
      "attributes": {
        "难度": "入门",
        "内容": "重置队首和队尾指针为相同的值（如0），可能释放动态分配的内存。",
        "时间复杂度": "O(1)",
        "空间复杂度": "O(1)",
        "设计思想": "顺序队列实现",
        "适用场景": "重置顺序队列",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "04DS009",
      "name": "链队",
      "attributes": {
        "难度": "入门",
        "内容": "使用带队首和队尾指针的单链表实现的队列。插入在链表尾部，删除在链表头部，时间复杂度均为O(1)。",
        "存储开销": "节点动态分配，每个节点有数据域和指针域以及头尾指针开销",
        "核心特性": "链式存储, O(1)操作",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "04CON024",
      "name": "队首指针(链队)",
      "attributes": {
        "难度": "入门",
        "内容": "在链队实现中，指向链表头结点的指针。",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "04CON025",
      "name": "队尾指针(链队)",
      "attributes": {
        "难度": "入门",
        "内容": "在链队实现中，指向链表尾结点的指针。",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "04ALG040",
      "name": "链队初始化",
      "attributes": {
        "难度": "入门",
        "内容": "将链队的队首指针和队尾指针都设置为NULL。",
        "时间复杂度": "O(1)",
        "空间复杂度": "O(1)",
        "设计思想": "链队实现",
        "适用场景": "创建链队实例",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "04ALG041",
      "name": "链队进队",
      "attributes": {
        "难度": "入门",
        "内容": "创建新节点存储元素，将新节点链接到队尾（原队尾节点的next指向新节点），更新队尾指针指向新节点。需要处理空队特殊情况。",
        "时间复杂度": "O(1)",
        "空间复杂度": "O(1)",
        "设计思想": "链队实现",
        "适用场景": "向链队添加元素",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "04ALG042",
      "name": "链队出队",
      "attributes": {
        "难度": "入门",
        "内容": "检查队列是否为空，暂存队首结点，更新队首指针指向下一个结点，释放原队首结点内存，返回元素值。需要处理删除后变为空队的特殊情况。",
        "时间复杂度": "O(1)",
        "空间复杂度": "O(1)",
        "设计思想": "链队实现",
        "适用场景": "从链队移除元素",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "04ALG043",
      "name": "链队读队首",
      "attributes": {
        "难度": "入门",
        "内容": "检查队列是否为空，返回队首结点的数据域，不修改链表结构。",
        "时间复杂度": "O(1)",
        "空间复杂度": "O(1)",
        "设计思想": "链队实现",
        "适用场景": "查看链队首元素",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "04ALG044",
      "name": "链队判空",
      "attributes": {
        "难度": "入门",
        "内容": "检查链队的队首指针（或队尾指针）是否为NULL。",
        "时间复杂度": "O(1)",
        "空间复杂度": "O(1)",
        "设计思想": "链队实现",
        "适用场景": "检查链队状态",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "04ALG045",
      "name": "链队清空",
      "attributes": {
        "难度": "入门",
        "内容": "遍历链队，依次删除所有结点并释放内存，最后将队首和队尾指针都置为NULL。",
        "时间复杂度": "O(N)",
        "空间复杂度": "O(1)",
        "设计思想": "链队实现",
        "适用场景": "重置链队",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "04DS010",
      "name": "优先级队列",
      "attributes": {
        "难度": "中等",
        "内容": "一种特殊的队列，其中每个元素关联一个优先级。出队时总是移除优先级最高的元素。插入和删除操作需要维护优先级顺序。",
        "存储开销": "取决于实现（如堆）",
        "核心特性": "优先级排序",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "04ALG046",
      "name": "渡口管理",
      "attributes": {
        "难度": "中等",
        "内容": "模拟轮船渡口车辆管理。使用两个队列分别存储客车和货车，根据特定规则（同类FIFO，客车优先，客货比例限制，渡轮容量）安排车辆上船。",
        "时间复杂度": "依赖于车辆到达和渡轮调度",
        "空间复杂度": "O(N) (N为等待车辆数)",
        "设计思想": "队列应用, 模拟",
        "适用场景": "事件调度、资源管理模拟",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    }
  ],
  "relations": [
    {
      "type": "继承",
      "关系ID": "04REL001",
      "source": "04DS001",
      "target": "04DS002",
      "attributes": {
        "约束条件": "运算受限，仅限一端（栈顶）操作"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "04REL002",
      "source": "04ALG001",
      "target": "04DS001",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "04REL003",
      "source": "04ALG002",
      "target": "04DS001",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "04REL004",
      "source": "04DS001",
      "target": "04CON004",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "04REL005",
      "source": "04ALG003",
      "target": "04DS001",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "04REL006",
      "source": "04ALG004",
      "target": "04DS001",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "04REL007",
      "source": "04ALG005",
      "target": "04DS001",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "04REL008",
      "source": "04ALG006",
      "target": "04DS001",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "继承",
      "关系ID": "04REL009",
      "source": "04DS003",
      "target": "04DS001",
      "attributes": {}
    },
    {
      "type": "使用",
      "关系ID": "04REL010",
      "source": "04DS003",
      "target": "04DS004",
      "attributes": {
        "使用角色": "核心存储"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "04REL011",
      "source": "04ALG007",
      "target": "04DS003",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "04REL012",
      "source": "04ALG008",
      "target": "04DS003",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "04REL013",
      "source": "04ALG009",
      "target": "04DS003",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "04REL014",
      "source": "04ALG010",
      "target": "04DS003",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "04REL015",
      "source": "04ALG011",
      "target": "04DS003",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "04REL016",
      "source": "04ALG012",
      "target": "04DS003",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "继承",
      "关系ID": "04REL017",
      "source": "04DS005",
      "target": "04DS001",
      "attributes": {}
    },
    {
      "type": "使用",
      "关系ID": "04REL018",
      "source": "04DS005",
      "target": "04DS006",
      "attributes": {
        "使用角色": "核心存储"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "04REL019",
      "source": "04ALG013",
      "target": "04DS005",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "04REL020",
      "source": "04ALG014",
      "target": "04DS005",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "04REL021",
      "source": "04ALG015",
      "target": "04DS005",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "04REL022",
      "source": "04ALG016",
      "target": "04DS005",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "04REL023",
      "source": "04ALG017",
      "target": "04DS005",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "04REL024",
      "source": "04ALG018",
      "target": "04DS005",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "使用",
      "关系ID": "04REL025",
      "source": "04ALG019",
      "target": "04DS001",
      "attributes": {
        "使用角色": "核心"
      }
    },
    {
      "type": "使用",
      "关系ID": "04REL026",
      "source": "04ALG020",
      "target": "04DS001",
      "attributes": {
        "使用角色": "核心"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "04REL027",
      "source": "04CON013",
      "target": "04CON010",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "04REL028",
      "source": "04CON014",
      "target": "04CON010",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "04REL029",
      "source": "04CON013",
      "target": "04CON015",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "使用",
      "关系ID": "04REL030",
      "source": "04ALG021",
      "target": "04DS001",
      "attributes": {
        "使用角色": "核心"
      }
    },
    {
      "type": "使用",
      "关系ID": "04REL031",
      "source": "04ALG022",
      "target": "04DS001",
      "attributes": {
        "使用角色": "运算符栈"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "04REL032",
      "source": "04ALG022",
      "target": "04CON015",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "04REL033",
      "source": "04CON016",
      "target": "04DS001",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "04REL034",
      "source": "04ALG023",
      "target": "04CON016",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "04REL035",
      "source": "04ALG024",
      "target": "04CON016",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "04REL036",
      "source": "04ALG025",
      "target": "04CON016",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "04REL037",
      "source": "04ALG026",
      "target": "04CON016",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "使用",
      "关系ID": "04REL038",
      "source": "04ALG026",
      "target": "04DS004",
      "attributes": {
        "使用角色": "迷宫表示/标记"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "04REL039",
      "source": "04ALG027",
      "target": "04CON016",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "继承",
      "关系ID": "04REL040",
      "source": "04DS007",
      "target": "04DS002",
      "attributes": {
        "约束条件": "运算受限，队尾插入，队首删除"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "04REL041",
      "source": "04ALG028",
      "target": "04DS007",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "04REL042",
      "source": "04ALG029",
      "target": "04DS007",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "04REL043",
      "source": "04DS007",
      "target": "04CON019",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "04REL044",
      "source": "04ALG030",
      "target": "04DS007",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "04REL045",
      "source": "04ALG031",
      "target": "04DS007",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "04REL046",
      "source": "04ALG032",
      "target": "04DS007",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "04REL047",
      "source": "04ALG033",
      "target": "04DS007",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "继承",
      "关系ID": "04REL048",
      "source": "04DS008",
      "target": "04DS007",
      "attributes": {}
    },
    {
      "type": "使用",
      "关系ID": "04REL049",
      "source": "04DS008",
      "target": "04DS004",
      "attributes": {
        "使用角色": "核心存储"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "04REL050",
      "source": "04ALG034",
      "target": "04DS008",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "04REL051",
      "source": "04ALG035",
      "target": "04DS008",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "04REL052",
      "source": "04ALG036",
      "target": "04DS008",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "04REL053",
      "source": "04ALG037",
      "target": "04DS008",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "04REL054",
      "source": "04ALG038",
      "target": "04DS008",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "04REL055",
      "source": "04ALG039",
      "target": "04DS008",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "继承",
      "关系ID": "04REL056",
      "source": "04DS009",
      "target": "04DS007",
      "attributes": {}
    },
    {
      "type": "使用",
      "关系ID": "04REL057",
      "source": "04DS009",
      "target": "04DS006",
      "attributes": {
        "使用角色": "核心存储"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "04REL058",
      "source": "04ALG040",
      "target": "04DS009",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "04REL059",
      "source": "04ALG041",
      "target": "04DS009",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "04REL060",
      "source": "04ALG042",
      "target": "04DS009",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "04REL061",
      "source": "04ALG043",
      "target": "04DS009",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "04REL062",
      "source": "04ALG044",
      "target": "04DS009",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "04REL063",
      "source": "04ALG045",
      "target": "04DS009",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "使用",
      "关系ID": "04REL064",
      "source": "04ALG046",
      "target": "04DS007",
      "attributes": {
        "使用角色": "核心"
      }
    }
  ]
}