{
  "entities": [
    {
      "type": "概念",
      "ID": "08CON001",
      "name": "图",
      "attributes": {
        "难度": "入门",
        "内容": "由顶点（Vertex）和边（Edge）组成的数据结构，用于表示对象之间的关系。",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "08CON002",
      "name": "连通图",
      "attributes": {
        "难度": "入门",
        "内容": "图中任意两个顶点之间都存在路径的图。",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "08CON003",
      "name": "子图",
      "attributes": {
        "难度": "入门",
        "内容": "一个图G'=(V', E')，其中V'是图G=(V,E)的顶点集V的子集，E'是边集E的子集，且E'中的边的端点都在V'中。",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "08DS001",
      "name": "生成树",
      "attributes": {
        "难度": "中等",
        "内容": "连通图G的一个子图G'，包含G的所有顶点，且边集是G的边集的子集，使得G'连通且无回路。包含n个顶点的生成树恰好有n-1条边。是能够连通图中所有顶点的极小连通子图。",
        "存储开销": "取决于表示方式，通常与边数相关 O(n-1)",
        "核心特性": "连通性, 无环性, 包含所有顶点, 边数最少",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "08DS002",
      "name": "深度优先生成树",
      "attributes": {
        "难度": "中等",
        "内容": "通过深度优先搜索（DFS）遍历连通图得到的生成树。",
        "存储开销": "O(n-1)",
        "核心特性": "连通性, 无环性, DFS特性",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "08DS003",
      "name": "广度优先生成树",
      "attributes": {
        "难度": "中等",
        "内容": "通过广度优先搜索（BFS）遍历连通图得到的生成树。",
        "存储开销": "O(n-1)",
        "核心特性": "连通性, 无环性, BFS特性",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "08CON004",
      "name": "极小连通子图",
      "attributes": {
        "难度": "中等",
        "内容": "连通图的生成树是能够连通图中所有顶点的极小连通子图。",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "08CON005",
      "name": "连通网",
      "attributes": {
        "难度": "入门",
        "内容": "无向连通带权图，通常假定边权大于零。",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "08CON006",
      "name": "权",
      "attributes": {
        "难度": "入门",
        "内容": "赋给图的边或顶点的值，通常表示成本、距离、时间等。",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "08DS004",
      "name": "最小生成树",
      "attributes": {
        "难度": "中等",
        "内容": "在连通网中，所有生成树里权值总和最小的那棵生成树。",
        "存储开销": "O(n-1)",
        "核心特性": "连通性, 无环性, 包含所有顶点, 权值和最小",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "08ALG001",
      "name": "普里姆算法",
      "attributes": {
        "难度": "中等",
        "内容": "从一个顶点开始，逐步扩展生成树，每次选择连接已选顶点和未选顶点中权值最小的边，直到包含所有顶点。用于求最小生成树。",
        "时间复杂度": "O(n^2) (使用邻接矩阵和简单查找)",
        "空间复杂度": "O(1) (辅助空间，不计图存储)",
        "设计思想": "贪心",
        "适用场景": "稠密图",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "08ALG002",
      "name": "克鲁斯卡尔算法",
      "attributes": {
        "难度": "中等",
        "内容": "将图中所有边按权值从小到大排序，依次选择边加入生成树，如果加入该边不形成回路则保留，否则舍弃，直到选够n-1条边。用于求最小生成树。",
        "时间复杂度": "O(e log e) 或 O(e log n) (取决于排序和并查集实现), 文中提到O(n^2)可能是特定实现",
        "空间复杂度": "O(n^2) (文中提及的特定实现), 通常O(n+e)或O(n)",
        "设计思想": "贪心",
        "适用场景": "稀疏图",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "08DS005",
      "name": "邻接矩阵",
      "attributes": {
        "难度": "入门",
        "内容": "用二维数组表示图中顶点间的邻接关系和边的权值。",
        "存储开销": "O(n^2)",
        "核心特性": "快速判断两点间是否有边, 方便修改边权",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "08DS006",
      "name": "边集数组",
      "attributes": {
        "难度": "入门",
        "内容": "用数组存储图的所有边，每条边包含起点、终点和权值。",
        "存储开销": "O(e)",
        "核心特性": "方便按权值排序边",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "08CON007",
      "name": "最短路径",
      "attributes": {
        "难度": "中等",
        "内容": "图中从一个顶点到另一个顶点的路径中，经过边数最少（无权图）或路径上边的权值之和最小（带权图）的路径。",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "08CON008",
      "name": "路径长度",
      "attributes": {
        "难度": "入门",
        "内容": "路径上所经过的边的数目。",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "08CON009",
      "name": "带权路径长度",
      "attributes": {
        "难度": "入门",
        "内容": "路径上所经过边的权值之和。",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "08CON010",
      "name": "最短路径长度",
      "attributes": {
        "难度": "入门",
        "内容": "最短路径上的路径长度（无权图）或带权路径长度（带权图），也称最短距离。",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "08CON011",
      "name": "源点",
      "attributes": {
        "难度": "入门",
        "内容": "在路径问题中，路径的起始顶点。",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "08CON012",
      "name": "终点",
      "attributes": {
        "难度": "入门",
        "内容": "在路径问题中，路径的结束顶点。",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "08ALG003",
      "name": "狄克斯特拉算法",
      "attributes": {
        "难度": "中等",
        "内容": "用于计算带权图中从单一源点到所有其他顶点的最短路径。按路径长度递增的次序产生最短路径。",
        "时间复杂度": "O(n^2) (使用邻接矩阵和简单查找), O(e log n) (使用优先队列)",
        "空间复杂度": "O(n) (辅助数组)",
        "设计思想": "贪心",
        "适用场景": "单源最短路径，边权非负",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "08ALG004",
      "name": "弗洛伊德算法",
      "attributes": {
        "难度": "中等",
        "内容": "用于计算带权图中所有顶点对之间的最短路径。通过动态规划思想，逐步考虑中间顶点来优化路径。",
        "时间复杂度": "O(n^3)",
        "空间复杂度": "O(n^2) (存储距离矩阵)",
        "设计思想": "动态规划",
        "适用场景": "所有顶点对最短路径，允许负权边（无负权回路）",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "08CON013",
      "name": "活动",
      "attributes": {
        "难度": "入门",
        "内容": "工程中的子工程或任务。在AOV网中通常由顶点表示，在AOE网中通常由边表示。",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "08DS007",
      "name": "AOV网",
      "attributes": {
        "难度": "中等",
        "内容": "顶点活动网（Activity On Vertex network）。用顶点表示活动，有向边表示活动间的先后（前驱）关系的有向图。通常要求是无环图。",
        "存储开销": "取决于表示方式，邻接表为O(n+e)",
        "核心特性": "有向性, 无环性（正常情况下）, 顶点表示活动",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "08CON014",
      "name": "拓扑序列",
      "attributes": {
        "难度": "中等",
        "内容": "AOV网中所有顶点的一种线性排序，使得对于任何存在从顶点u到顶点v的有向边的活动，u都出现在v之前。有向无环图至少存在一个拓扑序列，可能不唯一。",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "08ALG005",
      "name": "拓扑排序",
      "attributes": {
        "难度": "中等",
        "内容": "由AOV网构造其拓扑序列的过程。常用方法是重复选择入度为0的顶点并将其移除。",
        "时间复杂度": "O(n+e)",
        "空间复杂度": "O(n) (存储入度或栈)",
        "设计思想": "基于入度/出度的图遍历",
        "适用场景": "检测有向图环路, 任务调度",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "08CON015",
      "name": "入度",
      "attributes": {
        "难度": "入门",
        "内容": "在有向图中，指向一个顶点的边的数量。",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "08CON016",
      "name": "回路",
      "attributes": {
        "难度": "入门",
        "内容": "有向图中起点和终点相同的路径。也称环。",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "08DS008",
      "name": "邻接表",
      "attributes": {
        "难度": "入门",
        "内容": "用数组存储顶点信息，每个顶点关联一个链表，存储从该顶点出发的边的信息（邻接点、权值等）。",
        "存储开销": "O(n+e)",
        "核心特性": "节省空间（对稀疏图）, 方便查找顶点的所有出边",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "08DS009",
      "name": "栈",
      "attributes": {
        "难度": "入门",
        "内容": "一种后进先出（LIFO）的线性数据结构。",
        "存储开销": "O(n)",
        "核心特性": "LIFO",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "08DS010",
      "name": "AOE网",
      "attributes": {
        "难度": "中等",
        "内容": "边活动网（Activity On Edge network）。用有向边表示活动，边上的权表示活动持续时间，顶点表示事件（活动的开始或结束）。通常用于工程计划。",
        "存储开销": "取决于表示方式，邻接表为O(n+e)",
        "核心特性": "有向性, 带权性, 边表示活动, 顶点表示事件",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "08CON017",
      "name": "事件",
      "attributes": {
        "难度": "入门",
        "内容": "AOE网中的顶点，表示活动的转接点，即某些活动的完成和另一些活动的开始。",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "08CON018",
      "name": "活动持续时间",
      "attributes": {
        "难度": "入门",
        "内容": "AOE网中边上的权值，表示完成该活动所需的时间。",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "08CON019",
      "name": "事件最早发生时间",
      "attributes": {
        "难度": "中等",
        "内容": "AOE网中事件（顶点）v_k可能发生的最早时间，等于从源点到v_k的最长路径长度。用ve[k]表示。",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "08CON020",
      "name": "活动最早开始时间",
      "attributes": {
        "难度": "中等",
        "内容": "AOE网中活动a_i（边<j,k>）可能开始的最早时间，等于其起点事件v_j的最早发生时间ve[j]。用e[i]表示。",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "08CON021",
      "name": "事件最迟发生时间",
      "attributes": {
        "难度": "中等",
        "内容": "AOE网中事件（顶点）v_j在不影响整个工程按时完成的前提下，必须发生的最晚时间。用vl[j]表示。",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "08CON022",
      "name": "活动最迟开始时间",
      "attributes": {
        "难度": "中等",
        "内容": "AOE网中活动a_i（边<j,k>）在不影响整个工程按时完成的前提下，必须开始的最晚时间，等于其终点事件v_k的最迟发生时间vl[k]减去活动持续时间dut(<j,k>)。用l[i]表示。",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "08CON023",
      "name": "开始时间余量",
      "attributes": {
        "难度": "中等",
        "内容": "AOE网中活动a_i的最迟开始时间l[i]与其最早开始时间e[i]之差。表示活动可以推迟开始的时间。",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "08CON024",
      "name": "关键活动",
      "attributes": {
        "难度": "中等",
        "内容": "AOE网中开始时间余量为0的活动。这些活动必须按时开始和完成，否则会延误整个工程。",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "08CON025",
      "name": "关键路径",
      "attributes": {
        "难度": "中等",
        "内容": "AOE网中从源点到汇点的、完全由关键活动组成的路径。关键路径的长度等于整个工程所需的最短完成时间。",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "08ALG006",
      "name": "关键路径算法",
      "attributes": {
        "难度": "高级",
        "内容": "用于找出AOE网中的所有关键活动和关键路径的算法。通常包括计算所有事件的最早和最迟发生时间。",
        "时间复杂度": "O(n+e)",
        "空间复杂度": "O(n) (存储最早/最迟时间等)",
        "设计思想": "基于拓扑排序计算事件时间",
        "适用场景": "工程项目管理，进度优化",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    }
  ],
  "relations": [
    {
      "type": "继承",
      "关系ID": "08REL001",
      "source": "08DS001",
      "target": "08CON003",
      "attributes": {
        "约束条件": "包含所有顶点, 连通, 无回路"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "08REL002",
      "source": "08DS001",
      "target": "08CON002",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "继承",
      "关系ID": "08REL003",
      "source": "08DS002",
      "target": "08DS001",
      "attributes": {
        "约束条件": "由DFS生成"
      }
    },
    {
      "type": "继承",
      "关系ID": "08REL004",
      "source": "08DS003",
      "target": "08DS001",
      "attributes": {
        "约束条件": "由BFS生成"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "08REL005",
      "source": "08DS001",
      "target": "08CON004",
      "attributes": {
        "依赖强度": "中"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "08REL006",
      "source": "08DS004",
      "target": "08CON005",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "08REL007",
      "source": "08DS004",
      "target": "08CON006",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "继承",
      "关系ID": "08REL008",
      "source": "08DS004",
      "target": "08DS001",
      "attributes": {
        "约束条件": "权值总和最小"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "08REL009",
      "source": "08ALG001",
      "target": "08DS004",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "08REL010",
      "source": "08ALG002",
      "target": "08DS004",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "使用",
      "关系ID": "08REL011",
      "source": "08ALG001",
      "target": "08DS005",
      "attributes": {
        "使用角色": "图表示"
      }
    },
    {
      "type": "使用",
      "关系ID": "08REL012",
      "source": "08ALG002",
      "target": "08DS006",
      "attributes": {
        "使用角色": "边存储与排序"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "08REL013",
      "source": "08CON007",
      "target": "08CON001",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "08REL014",
      "source": "08CON009",
      "target": "08CON006",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "08REL015",
      "source": "08CON007",
      "target": "08CON008",
      "attributes": {
        "依赖强度": "中"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "08REL016",
      "source": "08CON007",
      "target": "08CON009",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "08REL017",
      "source": "08CON010",
      "target": "08CON007",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "08REL018",
      "source": "08ALG003",
      "target": "08CON007",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "08REL019",
      "source": "08ALG004",
      "target": "08CON007",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "使用",
      "关系ID": "08REL020",
      "source": "08ALG003",
      "target": "08DS005",
      "attributes": {
        "使用角色": "图表示"
      }
    },
    {
      "type": "使用",
      "关系ID": "08REL021",
      "source": "08ALG004",
      "target": "08DS005",
      "attributes": {
        "使用角色": "图表示/距离矩阵"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "08REL022",
      "source": "08DS007",
      "target": "08CON013",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "08REL023",
      "source": "08DS007",
      "target": "08CON016",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "08REL024",
      "source": "08CON014",
      "target": "08DS007",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "08REL025",
      "source": "08ALG005",
      "target": "08DS007",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "08REL026",
      "source": "08ALG005",
      "target": "08CON015",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "使用",
      "关系ID": "08REL027",
      "source": "08ALG005",
      "target": "08DS008",
      "attributes": {
        "使用角色": "图表示"
      }
    },
    {
      "type": "使用",
      "关系ID": "08REL028",
      "source": "08ALG005",
      "target": "08DS009",
      "attributes": {
        "使用角色": "存储入度为0的顶点"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "08REL029",
      "source": "08DS010",
      "target": "08CON013",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "08REL030",
      "source": "08DS010",
      "target": "08CON017",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "08REL031",
      "source": "08DS010",
      "target": "08CON018",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "08REL032",
      "source": "08CON019",
      "target": "08DS010",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "08REL033",
      "source": "08CON019",
      "target": "08ALG005",
      "attributes": {
        "依赖强度": "中"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "08REL034",
      "source": "08CON020",
      "target": "08CON019",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "08REL035",
      "source": "08CON021",
      "target": "08DS010",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "08REL036",
      "source": "08CON021",
      "target": "08ALG005",
      "attributes": {
        "依赖强度": "中"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "08REL037",
      "source": "08CON022",
      "target": "08CON021",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "08REL038",
      "source": "08CON022",
      "target": "08CON018",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "08REL039",
      "source": "08CON023",
      "target": "08CON020",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "08REL040",
      "source": "08CON023",
      "target": "08CON022",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "08REL041",
      "source": "08CON024",
      "target": "08CON023",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "08REL042",
      "source": "08CON025",
      "target": "08CON024",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "08REL043",
      "source": "08CON025",
      "target": "08DS010",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "08REL044",
      "source": "08ALG006",
      "target": "08CON025",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "使用",
      "关系ID": "08REL045",
      "source": "08ALG006",
      "target": "08DS008",
      "attributes": {
        "使用角色": "图表示"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "08REL046",
      "source": "08ALG006",
      "target": "08ALG005",
      "attributes": {
        "依赖强度": "强"
      }
    }
  ]
}