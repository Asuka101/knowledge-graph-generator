{
    "entities": [
        {
            "type": "数据结构",
            "ID": "01DS001",
            "name": "数据结构",
            "attributes": {
                "难度": "入门",
                "内容": "研究现实问题抽象出来数据如何计算机系统很好地表示、存取处理方法",
                "存储开销": "未知"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "01CON001",
            "name": "数据",
            "attributes": {
                "难度": "入门",
                "内容": "人们利用便于书写、记忆交流符号对现实世界事物及其活动所做记录",
                "存储开销": "未知"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "01CON002",
            "name": "数据元素",
            "attributes": {
                "难度": "入门",
                "内容": "数据整体相对独立单位",
                "存储开销": "未知"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "01CON003",
            "name": "数据记录",
            "attributes": {
                "难度": "入门",
                "内容": "数据处理领域组织数据基本单位，数据每个数据元素许多应用场合都组织成记录结构",
                "存储开销": "未知"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "01CON004",
            "name": "数据项",
            "attributes": {
                "难度": "入门",
                "内容": "数据记录由或多个数据项所组成，每个数据项可以简单数据项，即不可再分，数值、字符；也可以组合数据项，字符串、数组、记录、对象",
                "存储开销": "未知"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "01CON005",
            "name": "关键项",
            "attributes": {
                "难度": "入门",
                "内容": "表或文件，若所有记录某个数据项对应值均不同，则每个值就能够唯一地标识记录，把这个数据项称为表或文件关键数据项",
                "存储开销": "未知"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "01CON006",
            "name": "关键字",
            "attributes": {
                "难度": "入门",
                "内容": "关键项中每个值称为所在记录关键字",
                "存储开销": "未知"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "01CON007",
            "name": "数据处理",
            "attributes": {
                "难度": "入门",
                "内容": "指利用计算机对数据进行存储、检索、插入、删除、合并、拆分、排序、统计、计算、转换、输入、输出处理过程",
                "存储开销": "未知"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "01CON008",
            "name": "数据逻辑结构",
            "attributes": {
                "难度": "入门",
                "内容": "数据以及相互之间联系。它根据人们解决实际问题需要问题本身所含数据之间内在联系而抽象出来。这种数据结构与如何利用计算机存储处理无关",
                "存储开销": "未知"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "01CON009",
            "name": "数据存储结构",
            "attributes": {
                "难度": "入门",
                "内容": "存储数据结构有各种不同方法，大体上有顺序、链接、索引、散列基本方法，由它们不同组合嵌套可以形成各种更为复杂方法。每种存储方法都使数据存储器表现出相应结构",
                "存储开销": "未知"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "数据结构",
            "ID": "01DS002",
            "name": "集合结构",
            "attributes": {
                "难度": "入门",
                "内容": "只存在元素集合，不存在关系集合，或者说关系为空，这表明只考虑表1-2每条记录，而不考虑它们之间任何联系",
                "存储开销": "未知"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "数据结构",
            "ID": "01DS003",
            "name": "线性结构",
            "attributes": {
                "难度": "入门",
                "内容": "每个数据元素有且仅有直接前驱元素（除结构第1个元素外），有且仅有直接后继元素（除结构最后元素外）。这种数据结构特点数据元素之间1对1（1:1）联系，即线性关系",
                "存储开销": "未知"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "数据结构",
            "ID": "01DS004",
            "name": "树形结构",
            "attributes": {
                "难度": "入门",
                "内容": "每个结点有且只有前驱结点（除树根结点外），但可以有任意多个后继结点（树叶结点可看做具有0个后继结点）。这种数据结构特点数据元素之间1对N（1:N）联系（Ngeq0），即层次关系",
                "存储开销": "未知"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "数据结构",
            "ID": "01DS005",
            "name": "图形结构",
            "attributes": {
                "难度": "入门",
                "内容": "结点之间联系M对N（Mgeqslant0,Ngeqslant0）联系，即网状关系。也就是说，每个结点可以有任意多个前驱结点任意多个后继结点",
                "存储开销": "未知"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "01CON010",
            "name": "非线性结构",
            "attributes": {
                "难度": "入门",
                "内容": "树形结构图形结构统称非线性结构",
                "存储开销": "未知"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "01CON011",
            "name": "数据类型",
            "attributes": {
                "难度": "入门",
                "内容": "对数据取值范围、数据元素之间结构以及允许施加操作一种总体描述",
                "存储开销": "未知"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "01CON012",
            "name": "简单类型",
            "attributes": {
                "难度": "入门",
                "内容": "任一种简单类型每个数据都无法再分割整体，整数、实数、字符、指针、枚举值、逻辑值都无法再分割整体",
                "存储开销": "未知"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "01CON013",
            "name": "结构类型",
            "attributes": {
                "难度": "入门",
                "内容": "任一种结构类型都由简单类型数据按照一定规则构造而成，并且结构类型仍可以包含结构类型，所以一种结构类型数据（即结构数据）可以分解若干个简单数据或结构数据，每个结构数据仍可以再分",
                "存储开销": "未知"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "01CON014",
            "name": "抽象数据类型",
            "attributes": {
                "难度": "中等",
                "内容": "由一种数据结构其上所有操作（运算）所组成",
                "存储开销": "未知"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "01CON015",
            "name": "数据对象",
            "attributes": {
                "难度": "入门",
                "内容": "属于一种数据类型特定实例，该数据类型既可以一般数据类型，也可以抽象数据类型",
                "存储开销": "未知"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "01ALG001",
            "name": "算法",
            "attributes": {
                "难度": "入门",
                "内容": "就是解决特定问题方法",
                "时间复杂度": "未知",
                "空间复杂度": "未知",
                "设计思想": "未知",
                "适用场景": "未知"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "01ALG002",
            "name": "数值算法",
            "attributes": {
                "难度": "入门",
                "内容": "解决数值问题算法",
                "时间复杂度": "未知",
                "空间复杂度": "未知",
                "设计思想": "未知",
                "适用场景": "未知"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "01ALG003",
            "name": "非数值算法",
            "attributes": {
                "难度": "入门",
                "内容": "解决非数值问题算法",
                "时间复杂度": "未知",
                "空间复杂度": "未知",
                "设计思想": "未知",
                "适用场景": "未知"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "01ALG004",
            "name": "递归算法",
            "attributes": {
                "难度": "入门",
                "内容": "解决递归问题算法",
                "时间复杂度": "未知",
                "空间复杂度": "未知",
                "设计思想": "未知",
                "适用场景": "未知"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "01ALG005",
            "name": "非递归算法",
            "attributes": {
                "难度": "入门",
                "内容": "解决非递归问题算法",
                "时间复杂度": "未知",
                "空间复杂度": "未知",
                "设计思想": "未知",
                "适用场景": "未知"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "01CON016",
            "name": "正确性",
            "attributes": {
                "难度": "入门",
                "内容": "设计评价算法首要条件,如果算法不正确,即不能完成或不能较好地完成所要求任务,其他方面也就无从谈起",
                "存储开销": "未知"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "01CON017",
            "name": "稳健性",
            "attributes": {
                "难度": "入门",
                "内容": "指算法对不合理（又称不正确、非法、错误）数据输入反应处理能力",
                "存储开销": "未知"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "01CON018",
            "name": "可读性",
            "attributes": {
                "难度": "入门",
                "内容": "指算法供人们阅读容易程度",
                "存储开销": "未知"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "01CON019",
            "name": "时间复杂度",
            "attributes": {
                "难度": "中等",
                "内容": "算法运行时间相对度量",
                "存储开销": "未知"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "01CON020",
            "name": "空间复杂度",
            "attributes": {
                "难度": "中等",
                "内容": "对算法运行过程临时占用存储空间大小量度",
                "存储开销": "未知"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "01ALG006",
            "name": "累加求和",
            "attributes": {
                "难度": "入门",
                "内容": "计算数组元素的总和",
                "时间复杂度": "O(n)",
                "空间复杂度": "O(1)",
                "设计思想": "循环遍历",
                "适用场景": "需要计算数组元素之和的场景"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "01ALG007",
            "name": "矩阵相加",
            "attributes": {
                "难度": "入门",
                "内容": "将两个矩阵的对应元素相加",
                "时间复杂度": "O(n^2)",
                "空间复杂度": "O(1)",
                "设计思想": "双重循环遍历",
                "适用场景": "需要进行矩阵加法运算的场景"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "01ALG008",
            "name": "简单选择排序",
            "attributes": {
                "难度": "中等",
                "内容": "通过不断选择剩余元素的最小值来实现排序",
                "时间复杂度": "O(n^2)",
                "空间复杂度": "O(1)",
                "设计思想": "选择",
                "适用场景": "小规模数据排序"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "数据结构",
            "ID": "02DS001",
            "name": "线性表",
            "attributes": {
                "难度": "入门",
                "内容": "具有相同属性的数据元素的一个有限序列。元素按前后位置线性有序，每个元素至多有一个直接前驱和一个直接后继。长度可变。",
                "核心特性": "有序性（逻辑顺序）"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "02CON001",
            "name": "线性表长度",
            "attributes": {
                "难度": "入门",
                "内容": "线性表中所含元素的个数，用n表示，n>=0。n=0时为空表。"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "02CON002",
            "name": "表头元素",
            "attributes": {
                "难度": "入门",
                "内容": "线性表中第一个元素。"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "02CON003",
            "name": "表尾元素",
            "attributes": {
                "难度": "入门",
                "内容": "线性表中最后一个元素。"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "02CON004",
            "name": "前驱",
            "attributes": {
                "难度": "入门",
                "内容": "在线性序列中，元素ai的前一个元素ai-1称为ai的前驱。表头元素没有前驱。"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "02CON005",
            "name": "后继",
            "attributes": {
                "难度": "入门",
                "内容": "在线性序列中，元素ai的后一个元素ai+1称为ai的后继。表尾元素没有后继。"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "02CON006",
            "name": "线性结构",
            "attributes": {
                "难度": "入门",
                "内容": "数据元素之间存在一对一的线性关系的数据结构。可以用线性表形式表示。"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "02CON007",
            "name": "有序表",
            "attributes": {
                "难度": "入门",
                "内容": "线性表中存在按值的升序或降序排列的字段（有序字段）。"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "02CON008",
            "name": "无序表",
            "attributes": {
                "难度": "入门",
                "内容": "线性表中不存在任何按值有序的字段，元素仅按前后位置有序。"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "02CON009",
            "name": "抽象数据类型",
            "attributes": {
                "难度": "入门",
                "内容": "定义数据对象、数据关系以及对数据对象的基本操作集合。如ADT LinearList定义了线性表的数据和操作。"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "02ALG001",
            "name": "InitList",
            "attributes": {
                "难度": "入门",
                "内容": "初始化线性表操作。对于顺序表，分配存储空间并将size置0；对于链表，将头指针置NULL或指向附加头结点。",
                "时间复杂度": "O(1)（链表），O(1)或O(MaxSize)（顺序表，取决于分配方式）",
                "空间复杂度": "O(1)（链表），O(MaxSize)（顺序表）",
                "适用场景": "创建新的空线性表"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "02ALG002",
            "name": "ClearList",
            "attributes": {
                "难度": "入门",
                "内容": "清空线性表操作。对于顺序表，将size置0，可选择释放空间；对于链表，需遍历释放所有结点并将头指针置NULL。",
                "时间复杂度": "O(1)（顺序表，不释放空间），O(n)（链表，需释放结点）",
                "空间复杂度": "O(1)",
                "适用场景": "使线性表变为空表"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "02ALG003",
            "name": "LengthList",
            "attributes": {
                "难度": "入门",
                "内容": "求线性表长度操作。对于顺序表，直接返回size值；对于链表，需遍历计数。",
                "时间复杂度": "O(1)（顺序表），O(n)（链表）",
                "空间复杂度": "O(1)",
                "适用场景": "获取线性表中元素个数"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "02ALG004",
            "name": "EmptyList",
            "attributes": {
                "难度": "入门",
                "内容": "判断线性表是否为空操作。对于顺序表，检查size是否为0；对于链表，检查头指针是否为NULL。",
                "时间复杂度": "O(1)",
                "空间复杂度": "O(1)",
                "适用场景": "检查线性表状态"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "02ALG005",
            "name": "GetList",
            "attributes": {
                "难度": "入门",
                "内容": "获取线性表中指定位置（pos）的元素值。对于顺序表，直接访问list[pos-1]；对于链表，需从头遍历到第pos个结点。",
                "时间复杂度": "O(1)（顺序表），O(n)（链表）",
                "空间复杂度": "O(1)",
                "适用场景": "按位置读取元素"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "02ALG006",
            "name": "TraverseList",
            "attributes": {
                "难度": "入门",
                "内容": "遍历线性表操作，按逻辑顺序访问每个元素一次。对于顺序表，按数组下标访问；对于链表，沿指针域访问。",
                "时间复杂度": "O(n)",
                "空间复杂度": "O(1)",
                "适用场景": "访问或处理线性表中所有元素"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "02ALG007",
            "name": "FindList",
            "attributes": {
                "难度": "入门",
                "内容": "在线性表中查找第一个值等于给定item的元素。通常采用顺序查找。",
                "时间复杂度": "O(n)（顺序查找）",
                "空间复杂度": "O(1)",
                "适用场景": "按值查找元素"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "02ALG008",
            "name": "UpdateList",
            "attributes": {
                "难度": "入门",
                "内容": "更新线性表中第一个值等于给定item的元素。先查找，找到后修改。",
                "时间复杂度": "O(n)（顺序查找）",
                "空间复杂度": "O(1)",
                "适用场景": "修改线性表中特定元素的值"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "02ALG009",
            "name": "InsertList",
            "attributes": {
                "难度": "中等",
                "内容": "向线性表指定位置（pos）或按值有序插入元素item。对于顺序表，需移动pos之后的所有元素；对于链表，需修改相邻结点的指针。",
                "时间复杂度": "O(n)（顺序表，平均情况），O(1)（顺序表，表尾插入），O(n)（链表，查找插入位置），O(1)（链表，表头插入）",
                "空间复杂度": "O(1)（可能需要动态扩容，均摊O(1)）",
                "适用场景": "向线性表添加元素"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "02ALG010",
            "name": "DeleteList",
            "attributes": {
                "难度": "中等",
                "内容": "从线性表中删除指定位置（pos）或第一个值等于给定item的元素。对于顺序表，需移动pos之后的所有元素；对于链表，需修改相邻结点的指针并释放结点。",
                "时间复杂度": "O(n)（顺序表，平均情况），O(1)（顺序表，表尾删除），O(n)（链表，查找删除位置），O(1)（链表，表头删除）",
                "空间复杂度": "O(1)（可能需要动态缩容）",
                "适用场景": "从线性表移除元素"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "02ALG011",
            "name": "SortList",
            "attributes": {
                "难度": "中等",
                "内容": "对线性表中的元素按给定条件（如值的升序）进行排序。",
                "时间复杂度": "取决于具体排序算法，如插入排序为O(n^2)",
                "空间复杂度": "取决于具体排序算法，如插入排序为O(1)",
                "适用场景": "使线性表元素有序"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "02CON010",
            "name": "顺序存储结构",
            "attributes": {
                "难度": "入门",
                "内容": "将线性表中的所有元素按照其逻辑顺序依次存储到计算机存储器中一块连续的存储空间中。逻辑相邻的元素物理存储位置也相邻。",
                "存储开销": "n * sizeof(ElemType)"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "数据结构",
            "ID": "02DS002",
            "name": "数组",
            "attributes": {
                "难度": "入门",
                "内容": "存储相同类型元素的连续内存空间集合，可通过下标随机访问元素。",
                "存储开销": "MaxSize * sizeof(ElemType)",
                "核心特性": "连续存储，可索引"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "02CON011",
            "name": "动态分配",
            "attributes": {
                "难度": "入门",
                "内容": "在程序运行时根据需要分配内存空间，如使用new或malloc。可以实现存储空间的动态扩展（如realloc）。"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "02ALG012",
            "name": "插入排序",
            "attributes": {
                "难度": "入门",
                "内容": "将线性表分为有序区和无序区，每次从无序区取第一个元素，插入到有序区的合适位置，直到无序区为空。",
                "时间复杂度": "O(n^2)（平均/最坏），O(n)（最好）",
                "空间复杂度": "O(1)",
                "设计思想": "增量法",
                "适用场景": "基本有序或小规模数据"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "02CON012",
            "name": "记录",
            "attributes": {
                "难度": "入门",
                "内容": "由若干个数据项（域或属性）组成的数据元素，通常用结构体（struct）表示。例如商品记录包含代号、名称、库存量等域。"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "02CON013",
            "name": "链接存储结构",
            "attributes": {
                "难度": "入门",
                "内容": "用一组任意的存储单元存储线性表的元素，每个存储单元（结点）包含数据域和指向后继（或前驱）元素的指针域。逻辑相邻的元素物理存储位置不必相邻。",
                "存储开销": "n * (sizeof(ElemType) + sizeof(pointer)) 或更多指针"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "02CON014",
            "name": "结点",
            "attributes": {
                "难度": "入门",
                "内容": "链接存储结构中的基本单元，包含存储数据元素的值域和存储地址的指针域。"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "02CON015",
            "name": "值域",
            "attributes": {
                "难度": "入门",
                "内容": "结点中用于存储数据元素本身信息的部分。"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "02CON016",
            "name": "指针域",
            "attributes": {
                "难度": "入门",
                "内容": "结点中用于存储后继或前驱结点地址的部分，用于建立结点间的逻辑联系。"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "数据结构",
            "ID": "02DS003",
            "name": "链表",
            "attributes": {
                "难度": "入门",
                "内容": "数据的链接存储表示。通过结点中的指针域将逻辑上相邻的元素链接起来。",
                "核心特性": "非连续存储，动态增删 O(1)（已知位置）"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "数据结构",
            "ID": "02DS004",
            "name": "单链表",
            "attributes": {
                "难度": "入门",
                "内容": "链表中每个结点只包含一个指向其后继结点的指针域。",
                "存储开销": "n * (sizeof(ElemType) + sizeof(pointer))",
                "核心特性": "单向访问"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "数据结构",
            "ID": "02DS005",
            "name": "多链表",
            "attributes": {
                "难度": "中等",
                "内容": "链表中每个结点包含多个指针域，指向不同的后继或相关结点。"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "数据结构",
            "ID": "02DS006",
            "name": "双向链表",
            "attributes": {
                "难度": "入门",
                "内容": "链表中每个结点包含两个指针域，分别指向其直接前驱和直接后继结点。",
                "存储开销": "n * (sizeof(ElemType) + 2 * sizeof(pointer))",
                "核心特性": "双向访问"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "02CON017",
            "name": "表头结点",
            "attributes": {
                "难度": "入门",
                "内容": "链表中存储第一个数据元素的结点。"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "02CON018",
            "name": "表尾结点",
            "attributes": {
                "难度": "入门",
                "内容": "链表中存储最后一个数据元素的结点。"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "02CON019",
            "name": "表头指针",
            "attributes": {
                "难度": "入门",
                "内容": "指向链表中第一个结点（表头结点或表头附加结点）的指针变量。用于标识和访问整个链表。"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "02CON020",
            "name": "随机存取",
            "attributes": {
                "难度": "入门",
                "内容": "存取数据中任一元素的时间与元素位置无关，可以直接计算出存储地址。如数组支持随机存取。"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "02CON021",
            "name": "顺序存取",
            "attributes": {
                "难度": "入门",
                "内容": "访问某个元素必须通过访问其前驱（或后继）结点来实现，存取时间与元素位置有关。如链表是顺序存取。"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "02CON022",
            "name": "表头附加结点",
            "attributes": {
                "难度": "入门",
                "内容": "在链表的第一个元素结点之前增加的一个结点，其数据域可以为空或存储表信息。它可以简化链表在表头位置的插入和删除操作，统一操作逻辑。",
                "存储开销": "sizeof(Node)"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "数据结构",
            "ID": "02DS007",
            "name": "循环链表",
            "attributes": {
                "难度": "入门",
                "内容": "链表中最后一个结点的指针域指向头结点（或表头附加结点），形成一个环状结构。",
                "核心特性": "环状结构，可从任一结点遍历整个链表"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "数据结构",
            "ID": "02DS008",
            "name": "循环单链表",
            "attributes": {
                "难度": "入门",
                "内容": "单链表的表尾结点的next指针指向头结点（或表头附加结点）。"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "数据结构",
            "ID": "02DS009",
            "name": "循环双向链表",
            "attributes": {
                "难度": "入门",
                "内容": "双向链表的表尾结点的right指针指向头结点（或表头附加结点），头结点（或表头附加结点）的left指针指向表尾结点。"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "02CON023",
            "name": "空闲链表",
            "attributes": {
                "难度": "入门",
                "内容": "在使用静态数组模拟链表存储时，将所有未被使用的数组元素（结点）链接起来形成的链表，用于管理可分配的结点空间。"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "02CON024",
            "name": "多项式",
            "attributes": {
                "难度": "入门",
                "内容": "由常数与变量经过有限次乘法和加法运算得到的代数式，形如 P(x) = a0 + a1*x + a2*x^2 + ... + an*x^n。"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "数据结构",
            "ID": "02DS010",
            "name": "Term",
            "attributes": {
                "难度": "入门",
                "内容": "用于表示多项式中一个非零项的结构，包含系数域（coef）和指数域（exp）。"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "02ALG013",
            "name": "PolySum1",
            "attributes": {
                "难度": "入门",
                "内容": "多项式求值算法（基于系数线性表表示）。遍历系数表，累加每一项 a_i * x^i 的值。",
                "时间复杂度": "O(n)，n为多项式最高次幂+1",
                "空间复杂度": "O(1)",
                "适用场景": "计算用系数线性表表示的多项式的值"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "02ALG014",
            "name": "PolySum2",
            "attributes": {
                "难度": "入门",
                "内容": "多项式求值算法（基于非零项线性表表示）。遍历非零项表，累加每一项 coef * pow(x, exp) 的值。",
                "时间复杂度": "O(m)，m为非零项个数（若pow函数为O(1)或对数级）",
                "空间复杂度": "O(1)",
                "适用场景": "计算用非零项线性表表示的多项式的值，尤其适用于稀疏多项式"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "02ALG015",
            "name": "PolyAdd1",
            "attributes": {
                "难度": "中等",
                "内容": "两个多项式相加算法（基于非零项链表表示，调用InsertList）。合并两个有序链表，指数相同的项系数相加，系数为0则舍弃。",
                "时间复杂度": "O((m+n)^2)，若InsertList插入表尾为O(m+n)",
                "空间复杂度": "O(m+n)，用于存储结果多项式",
                "设计思想": "归并思想",
                "适用场景": "合并两个用非零项链表表示的多项式"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "02ALG016",
            "name": "PolyAdd2",
            "attributes": {
                "难度": "中等",
                "内容": "两个多项式相加算法（基于非零项链表表示，直接链接）。合并两个有序链表，通过维护尾指针直接链接新结点，效率更高。",
                "时间复杂度": "O(m+n)",
                "空间复杂度": "O(m+n)，用于存储结果多项式",
                "设计思想": "归并思想，尾插法优化",
                "适用场景": "高效合并两个用非零项链表表示的多项式"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "数据结构",
            "ID": "03DS001",
            "name": "集合",
            "attributes": {
                "难度": "入门",
                "内容": "由具有相同属性的数据元素组合而成，数据之间没有任何前驱和后继关系。集合中数据元素的个数称为集合的长度(n>=0)。集合中的元素可以按任何次序排列，无序性是其核心特性。长度可变。",
                "存储开销": "可变 (取决于实现)",
                "核心特性": "无序性"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "03CON001",
            "name": "空集",
            "attributes": {
                "难度": "入门",
                "内容": "集合长度为0时的集合，表示为 {}。"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "03ALG001",
            "name": "初始化集合",
            "attributes": {
                "难度": "入门",
                "内容": "初始化集合为空。操作名通常为 InitSet。",
                "时间复杂度": "O(1)",
                "空间复杂度": "O(1)",
                "设计思想": "初始化",
                "适用场景": "创建新集合实例"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "03ALG002",
            "name": "清除集合",
            "attributes": {
                "难度": "入门",
                "内容": "清除集合中的所有元素，可能涉及释放存储空间。操作名通常为 ClearSet。",
                "时间复杂度": "O(n) / O(1)",
                "空间复杂度": "O(1)",
                "设计思想": "资源管理",
                "适用场景": "销毁或重用集合"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "03ALG003",
            "name": "求集合长度",
            "attributes": {
                "难度": "入门",
                "内容": "求出集合中元素个数。操作名通常为 LengthSet。",
                "时间复杂度": "O(1) / O(n)",
                "空间复杂度": "O(1)",
                "设计思想": "查询",
                "适用场景": "获取集合大小"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "03ALG004",
            "name": "判断集合是否为空",
            "attributes": {
                "难度": "入门",
                "内容": "判断集合是否为空。操作名通常为 EmptySet。",
                "时间复杂度": "O(1)",
                "空间复杂度": "O(1)",
                "设计思想": "查询",
                "适用场景": "检查集合状态"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "03ALG005",
            "name": "判断元素是否属于集合",
            "attributes": {
                "难度": "入门",
                "内容": "判断一个元素是否属于集合。操作名通常为 InSet。",
                "时间复杂度": "O(n)",
                "空间复杂度": "O(1)",
                "设计思想": "查找",
                "适用场景": "成员检查"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "03ALG006",
            "name": "输出集合元素",
            "attributes": {
                "难度": "入门",
                "内容": "输出集合中所有元素。操作名通常为 OutputSet。",
                "时间复杂度": "O(n)",
                "空间复杂度": "O(1)",
                "设计思想": "遍历",
                "适用场景": "查看集合内容"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "03ALG007",
            "name": "查找集合元素",
            "attributes": {
                "难度": "入门",
                "内容": "从集合中查找一个元素，通常根据关键字查找并返回完整元素信息。操作名通常为 FindSet。",
                "时间复杂度": "O(n)",
                "空间复杂度": "O(1)",
                "设计思想": "查找",
                "适用场景": "获取元素完整信息"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "03ALG008",
            "name": "修改集合元素",
            "attributes": {
                "难度": "入门",
                "内容": "修改集合中的一个指定元素（通常先查找后修改）。操作名通常为 ModifySet。",
                "时间复杂度": "O(n)",
                "空间复杂度": "O(1)",
                "设计思想": "修改",
                "适用场景": "更新元素信息"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "03ALG009",
            "name": "向集合插入元素",
            "attributes": {
                "难度": "入门",
                "内容": "向集合插入一个元素，需确保元素唯一性（不允许重复）。操作名通常为 InsertSet。",
                "时间复杂度": "O(n)",
                "空间复杂度": "O(1) (摊销)",
                "设计思想": "插入",
                "适用场景": "添加新元素"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "03ALG010",
            "name": "从集合删除元素",
            "attributes": {
                "难度": "入门",
                "内容": "从集合删除一个指定元素。操作名通常为 DeleteSet。",
                "时间复杂度": "O(n)",
                "空间复杂度": "O(1)",
                "设计思想": "删除",
                "适用场景": "移除元素"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "03ALG011",
            "name": "求集合并集",
            "attributes": {
                "难度": "中等",
                "内容": "求两个集合的并集。操作名通常为 UnionSet。",
                "时间复杂度": "O(n*m)",
                "空间复杂度": "O(n+m)",
                "设计思想": "集合运算",
                "适用场景": "合并集合"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "03ALG012",
            "name": "求集合交集",
            "attributes": {
                "难度": "中等",
                "内容": "求两个集合的交集。操作名通常为 IntersectSet。",
                "时间复杂度": "O(n*m)",
                "空间复杂度": "O(min(n,m))",
                "设计思想": "集合运算",
                "适用场景": "查找共同元素"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "03ALG013",
            "name": "求集合差集",
            "attributes": {
                "难度": "中等",
                "内容": "求两个集合的差集 (S1 - S2)。操作名通常为 DifferenceSet。",
                "时间复杂度": "O(n*m)",
                "空间复杂度": "O(n)",
                "设计思想": "集合运算",
                "适用场景": "查找S1独有元素"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "数据结构",
            "ID": "03DS002",
            "name": "集合顺序存储",
            "attributes": {
                "难度": "入门",
                "内容": "使用数组存储集合元素，并用一个变量记录当前长度。插入删除时通常将最后一个元素填补空位以避免移动。可实现动态扩容。",
                "存储开销": "O(MaxSize) 或 O(n) (动态)",
                "核心特性": "基于数组, 随机访问(物理), 逻辑无序"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "数据结构",
            "ID": "03DS003",
            "name": "数组",
            "attributes": {
                "难度": "入门",
                "内容": "存储相同类型元素的连续内存空间，可通过下标（索引）直接访问元素。",
                "存储开销": "O(N)",
                "核心特性": "连续存储, 可索引"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "03ALG014",
            "name": "简单选择排序",
            "attributes": {
                "难度": "入门",
                "内容": "一种简单的排序算法。在每一轮中从未排序的部分选择最小（或最大）的元素，放到已排序部分的末尾。",
                "时间复杂度": "O(n^2)",
                "空间复杂度": "O(1)",
                "设计思想": "选择",
                "适用场景": "小规模数据排序, 教学演示"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "03ALG015",
            "name": "有序输出集合元素",
            "attributes": {
                "难度": "中等",
                "内容": "输出集合中所有元素，并按值的升序排列，同时保持原有集合状态不变。通常需要辅助空间和排序算法。操作名示例: OutputSet1。",
                "时间复杂度": "O(n^2) (若使用简单排序)",
                "空间复杂度": "O(n)",
                "设计思想": "遍历, 排序",
                "适用场景": "需要按序查看集合内容时"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "数据结构",
            "ID": "03DS004",
            "name": "集合链接存储",
            "attributes": {
                "难度": "入门",
                "内容": "使用链表（通常是单链表）存储集合元素，每个元素对应一个结点。插入删除操作不需移动元素，但查找效率较低。",
                "存储开销": "O(n)",
                "核心特性": "基于链表, 动态大小, 逻辑无序"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "数据结构",
            "ID": "03DS005",
            "name": "单链表",
            "attributes": {
                "难度": "入门",
                "内容": "通过指针将结点链接起来的线性数据结构。每个结点包含数据域和指向下一个结点的指针域。",
                "存储开销": "O(n)",
                "核心特性": "非连续存储, 动态大小, 顺序访问"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "03CON002",
            "name": "矩阵",
            "attributes": {
                "难度": "入门",
                "内容": "一个m行n列的二维数表，包含m*n个元素，每个元素由其行号和列号唯一确定。"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "数据结构",
            "ID": "03DS006",
            "name": "稀疏矩阵",
            "attributes": {
                "难度": "中等",
                "内容": "矩阵的一种特殊情况，其中非零元素的个数远少于零元素的个数。为了节省存储空间和计算时间，通常采用特殊方式存储。",
                "存储开销": "目标远小于 O(m*n)",
                "核心特性": "稀疏性"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "03CON003",
            "name": "三元组",
            "attributes": {
                "难度": "入门",
                "内容": "用于表示稀疏矩阵中非零元素的数据单元，通常包含三个信息：行号(row)、列号(col)和元素值(value)。记作 (i, j, a_ij)。"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "数据结构",
            "ID": "03DS007",
            "name": "三元组线性表",
            "attributes": {
                "难度": "中等",
                "内容": "将稀疏矩阵的所有非零元素表示为三元组，并按照行号为主序、列号为辅序排列构成的线性表。是稀疏矩阵的一种逻辑表示和存储基础。",
                "存储开销": "O(t) (t为非零元个数)",
                "核心特性": "有序性 (按行列)"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "03ALG016",
            "name": "稀疏矩阵转置",
            "attributes": {
                "难度": "中等",
                "内容": "求一个稀疏矩阵的转置矩阵。转置操作将原矩阵的行和列互换，即 B[j][i] = A[i][j]。",
                "时间复杂度": "依赖具体实现 (O(n*t) 或 O(n+t))",
                "空间复杂度": "O(t)",
                "设计思想": "矩阵运算, 坐标变换",
                "适用场景": "需要行列变换的矩阵计算"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "03ALG017",
            "name": "稀疏矩阵加法",
            "attributes": {
                "难度": "中等",
                "内容": "计算两个行数和列数分别相同的稀疏矩阵的和。结果矩阵 C[i][j] = A[i][j] + B[i][j]。",
                "时间复杂度": "O(t1 + t2)",
                "空间复杂度": "O(t1 + t2) (最坏情况)",
                "设计思想": "矩阵运算, 对应元素相加",
                "适用场景": "合并或叠加稀疏矩阵表示的信息"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "03ALG018",
            "name": "稀疏矩阵乘法",
            "attributes": {
                "难度": "高级",
                "内容": "计算两个稀疏矩阵的乘积。要求第一个矩阵的列数等于第二个矩阵的行数 (A[m][n] * B[n][p] = C[m][p])。C[i][j] = sum(A[i][k] * B[k][j]) for k=1 to n。",
                "时间复杂度": "依赖具体实现和稀疏度",
                "空间复杂度": "依赖结果矩阵稀疏度",
                "设计思想": "矩阵运算, 点积累加",
                "适用场景": "线性变换组合, 图算法等"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "03ALG019",
            "name": "初始化稀疏矩阵",
            "attributes": {
                "难度": "入门",
                "内容": "初始化一个稀疏矩阵结构，使其表示一个空矩阵（通常设置行、列、非零元个数为0）。操作名通常为 InitMatrix。",
                "时间复杂度": "O(1) 或 O(m+n) (取决于存储结构)",
                "空间复杂度": "O(1)",
                "设计思想": "初始化",
                "适用场景": "创建新的稀疏矩阵实例"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "03ALG020",
            "name": "输入稀疏矩阵",
            "attributes": {
                "难度": "中等",
                "内容": "根据输入的非零元素三元组（行、列、值）构建稀疏矩阵的存储结构。操作名通常为 InputMatrix。",
                "时间复杂度": "依赖具体实现 (如 O(t) 或 O(t*logt) 或更复杂)",
                "空间复杂度": "O(t)",
                "设计思想": "构建, 解析",
                "适用场景": "从外部数据源创建稀疏矩阵"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "03ALG021",
            "name": "输出稀疏矩阵",
            "attributes": {
                "难度": "入门",
                "内容": "将稀疏矩阵的存储结构按一定格式（如三元组列表）输出。操作名通常为 OutputMatrix。",
                "时间复杂度": "O(t)",
                "空间复杂度": "O(1)",
                "设计思想": "遍历, 输出",
                "适用场景": "查看稀疏矩阵内容"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "数据结构",
            "ID": "03DS008",
            "name": "稀疏矩阵顺序存储",
            "attributes": {
                "难度": "中等",
                "内容": "使用一个结构体存储稀疏矩阵的元数据（行数m, 列数n, 非零元个数t），并用一个一维数组（如Triple sm[]）按行主序存储所有非零元素的三元组。",
                "存储开销": "O(t)",
                "核心特性": "基于数组存储三元组, 结构简单"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "数据结构",
            "ID": "03DS009",
            "name": "稀疏矩阵链接存储",
            "attributes": {
                "难度": "中等",
                "内容": "使用链式结构来存储稀疏矩阵的非零元素及其关系，以克服顺序存储在插入删除方面的不足。",
                "存储开销": "O(t) 或 O(m+n+t)",
                "核心特性": "基于链表存储三元组, 动态性好"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "数据结构",
            "ID": "03DS010",
            "name": "带行指针向量的链接存储",
            "attributes": {
                "难度": "中等",
                "内容": "使用一个指针数组（行指针向量），数组的第i个元素指向第i行非零元素构成的单链表的头结点。行内链表通常按列号有序。",
                "存储开销": "O(m + t)",
                "核心特性": "按行访问方便, 行内有序"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "数据结构",
            "ID": "03DS011",
            "name": "十字链表存储",
            "attributes": {
                "难度": "高级",
                "内容": "每个非零元素结点包含五个域：行号、列号、值、指向同行下一个结点的指针(right)、指向同列下一个结点的指针(down)。同时使用行指针向量和列指针向量分别指向各行和各列链表的头结点。",
                "存储开销": "O(m + n + t)",
                "核心特性": "行列访问均方便, 结构复杂"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "03ALG022",
            "name": "普通转置方法",
            "attributes": {
                "难度": "中等",
                "内容": "一种稀疏矩阵转置算法（通常基于顺序存储）。按列扫描原矩阵的三元组表，找到属于当前列的元素，交换行列号后存入结果矩阵的三元组表。",
                "时间复杂度": "O(n*t)",
                "空间复杂度": "O(t)",
                "设计思想": "遍历, 转换",
                "适用场景": "稀疏矩阵转置的简单实现"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "03ALG023",
            "name": "快速转置方法",
            "attributes": {
                "难度": "中等",
                "内容": "一种更高效的稀疏矩阵转置算法（通常基于顺序存储）。通过两遍扫描：第一遍统计原矩阵每列的非零元个数，计算转置后每行第一个元素在结果数组中的起始位置；第二遍按原顺序遍历三元组，根据计算好的位置直接放入结果数组。",
                "时间复杂度": "O(n+t)",
                "空间复杂度": "O(n+t)",
                "设计思想": "计数, 预计算位置, 映射",
                "适用场景": "需要高效转置稀疏矩阵（顺序存储）"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "数据结构",
            "ID": "03DS012",
            "name": "广义表",
            "attributes": {
                "难度": "高级",
                "内容": "线性表的推广，是n(n>=0)个元素的有限序列，其中元素可以是原子（单元素）或子表（本身也是广义表）。具有递归定义特性。",
                "存储开销": "O(N) (N为原子和子表结点总数)",
                "核心特性": "递归结构, 元素可为表"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "03CON004",
            "name": "单元素",
            "attributes": {
                "难度": "入门",
                "内容": "广义表中的基本数据项，不可再分解，也称为原子（Atom）。区别于子表。"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "03CON005",
            "name": "子表",
            "attributes": {
                "难度": "入门",
                "内容": "广义表中的一种元素，其本身也是一个广义表。"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "03CON006",
            "name": "表头",
            "attributes": {
                "难度": "入门",
                "内容": "非空广义表的第一个元素。可以是原子或子表。"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "03CON007",
            "name": "表尾",
            "attributes": {
                "难度": "入门",
                "内容": "非空广义表除去表头元素后，由其余元素组成的广义表。表尾总是一个广义表（可能为空）。"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "03CON008",
            "name": "广义表长度",
            "attributes": {
                "难度": "入门",
                "内容": "广义表中最顶层元素的个数。"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "03CON009",
            "name": "广义表深度",
            "attributes": {
                "难度": "入门",
                "内容": "广义表中括号嵌套的最大层数。空表深度为1（或0，定义可能不同，此处按文本为1），原子深度为0。"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "数据结构",
            "ID": "03DS013",
            "name": "广义表链接存储",
            "attributes": {
                "难度": "高级",
                "内容": "广义表的常用存储结构，采用动态链接。结点通常包含一个标志域(tag)区分原子/子表，一个联合体存储原子值(data)或子表指针(sublist)，以及一个指向下一个兄弟元素的指针(next)。也称为头尾链表表示法。",
                "存储开销": "O(N) (N为结点总数)",
                "核心特性": "递归结构表示, 动态"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "03CON010",
            "name": "表头附加结点",
            "attributes": {
                "难度": "入门",
                "内容": "在广义表链接存储的实际表头结点前增加的一个额外的表类型结点。该附加结点的sublist域指向真正的第一个元素（或子表头），next域通常为空。使用它可以统一对空表和非空表的处理，简化某些操作。"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "03ALG024",
            "name": "求广义表长度",
            "attributes": {
                "难度": "中等",
                "内容": "计算广义表顶层元素的个数。对于链接存储结构，即计算顶层链表的结点数。",
                "时间复杂度": "O(L) (L为顶层长度)",
                "空间复杂度": "O(L) (递归) 或 O(1) (迭代)",
                "设计思想": "遍历顶层链表, 递归/迭代计数",
                "适用场景": "获取广义表顶层大小"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "03ALG025",
            "name": "求广义表深度",
            "attributes": {
                "难度": "高级",
                "内容": "计算广义表中括号嵌套的最大层数。递归算法：遍历当前层，对每个子表递归求深度，取最大深度加1。",
                "时间复杂度": "O(N) (N为结点总数)",
                "空间复杂度": "O(D) (D为最大深度)",
                "设计思想": "递归遍历",
                "适用场景": "分析广义表结构复杂度"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "03ALG026",
            "name": "建立广义表存储结构",
            "attributes": {
                "难度": "高级",
                "内容": "根据输入的字符串表示（如\"(a,(b,c))\"）递归地构建广义表的链接存储结构。",
                "时间复杂度": "O(n) (n为输入长度/结点数)",
                "空间复杂度": "O(n) (最坏情况递归深度)",
                "设计思想": "递归构建, 字符串解析",
                "适用场景": "从文本表示创建广义表实例"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "03ALG027",
            "name": "打印广义表",
            "attributes": {
                "难度": "高级",
                "内容": "将广义表的链接存储结构转换回其标准的括号表示法字符串并输出。",
                "时间复杂度": "O(n) (n为结点总数)",
                "空间复杂度": "O(D) (D为最大深度)",
                "设计思想": "递归遍历, 格式化输出",
                "适用场景": "查看或序列化广义表"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "数据结构",
            "ID": "04DS001",
            "name": "栈",
            "attributes": {
                "难度": "入门",
                "内容": "又称堆栈，是一种运算受限的线性表，仅允许在表的一端（栈顶）进行插入（进栈/入栈）和删除（出栈/退栈）运算。具有后进先出（LIFO）的特性。另一端称为栈底。应用：表达式求值、括号匹配、递归实现、进制转换等。",
                "存储开销": "依赖具体实现（顺序或链式）",
                "核心特性": "后进先出 (LIFO)",
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "04CON001",
            "name": "栈顶",
            "attributes": {
                "难度": "入门",
                "内容": "栈允许进行插入和删除操作的一端。",
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "04CON002",
            "name": "栈底",
            "attributes": {
                "难度": "入门",
                "内容": "栈不允许进行插入和删除操作的一端，与栈顶相对。",
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "04CON003",
            "name": "栈顶元素",
            "attributes": {
                "难度": "入门",
                "内容": "位于栈顶位置的元素。",
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "04ALG001",
            "name": "进栈",
            "attributes": {
                "难度": "入门",
                "内容": "向栈顶插入一个新元素，使其成为新的栈顶元素。也称压栈、入栈。顺序栈实现通常 O(1)，链栈实现 O(1)。",
                "时间复杂度": "O(1)",
                "空间复杂度": "O(1)",
                "设计思想": "直接操作",
                "适用场景": "向栈中添加元素",
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "04ALG002",
            "name": "出栈",
            "attributes": {
                "难度": "入门",
                "内容": "删除栈顶元素，使其下面的相邻元素成为新的栈顶元素。也称弹栈、退栈。顺序栈实现通常 O(1)，链栈实现 O(1)。",
                "时间复杂度": "O(1)",
                "空间复杂度": "O(1)",
                "设计思想": "直接操作",
                "适用场景": "从栈中移除并获取元素",
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "04CON004",
            "name": "后进先出表",
            "attributes": {
                "难度": "入门",
                "内容": "Last In First Out (LIFO)，描述栈的操作特性，最后进入栈的元素最先被移出。",
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "04ALG003",
            "name": "读取栈顶元素",
            "attributes": {
                "难度": "入门",
                "内容": "返回栈顶元素的值，但不改变栈的状态（不删除元素）。也称 Peek。顺序栈实现 O(1)，链栈实现 O(1)。",
                "时间复杂度": "O(1)",
                "空间复杂度": "O(1)",
                "设计思想": "访问操作",
                "适用场景": "查看栈顶元素",
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "04ALG004",
            "name": "检查栈是否为空",
            "attributes": {
                "难度": "入门",
                "内容": "判断栈中是否包含任何元素。顺序栈实现 O(1)，链栈实现 O(1)。",
                "时间复杂度": "O(1)",
                "空间复杂度": "O(1)",
                "设计思想": "状态检查",
                "适用场景": "判断栈空条件",
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "04ALG005",
            "name": "初始化栈",
            "attributes": {
                "难度": "入门",
                "内容": "创建一个空栈。对于动态分配空间的实现，还包括分配初始内存。",
                "时间复杂度": "O(1) 或 O(MaxSize)",
                "空间复杂度": "O(1) 或 O(MaxSize)",
                "设计思想": "初始化",
                "适用场景": "使用栈之前",
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "04ALG006",
            "name": "清除栈",
            "attributes": {
                "难度": "入门",
                "内容": "移除栈中所有元素，使其变为空栈。对于动态分配空间的实现，还可能包括释放内存。",
                "时间复杂度": "O(1) 或 O(N)",
                "空间复杂度": "O(1)",
                "设计思想": "重置",
                "适用场景": "清空栈内容",
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "数据结构",
            "ID": "04DS002",
            "name": "顺序栈",
            "attributes": {
                "难度": "入门",
                "内容": "使用数组（顺序存储结构）实现的栈。需要一个数组存储元素和一个整型变量（栈顶指针）指示栈顶位置。",
                "存储开销": "固定或动态数组开销，可能存在空间浪费",
                "核心特性": "基于数组，访问 O(1)",
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "数据结构",
            "ID": "04DS003",
            "name": "数组",
            "attributes": {
                "难度": "入门",
                "内容": "一种线性数据结构，用连续的内存空间存储相同类型的元素集合。可通过索引直接访问元素。",
                "存储开销": "元素数量 * 单个元素大小",
                "核心特性": "连续存储，随机访问 O(1)",
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "04CON005",
            "name": "栈顶指针",
            "attributes": {
                "难度": "入门",
                "内容": "用于指示栈顶元素位置的变量。在顺序栈中通常是数组下标；在链栈中是指向栈顶结点的指针。",
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "04CON006",
            "name": "栈满",
            "attributes": {
                "难度": "入门",
                "内容": "顺序栈的状态，表示存储空间已被完全占用，无法再插入新元素（除非动态扩容）。",
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "04CON007",
            "name": "栈空",
            "attributes": {
                "难度": "入门",
                "内容": "栈的状态，表示栈中不包含任何元素。",
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "数据结构",
            "ID": "04DS004",
            "name": "链栈",
            "attributes": {
                "难度": "入门",
                "内容": "使用链式存储结构（通常是单链表）实现的栈。栈顶指针指向链表的头结点。",
                "存储开销": "结点数量 * (数据大小 + 指针大小)",
                "核心特性": "基于链表，动态增长，插入删除 O(1)",
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "数据结构",
            "ID": "04DS005",
            "name": "单链表",
            "attributes": {
                "难度": "入门",
                "内容": "一种链式数据结构，每个结点包含数据域和指向下一个结点的指针域。",
                "存储开销": "结点数量 * (数据大小 + 指针大小)",
                "核心特性": "非连续存储，插入删除（特定位置）O(1)，查找 O(N)",
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "04CON008",
            "name": "结点",
            "attributes": {
                "难度": "入门",
                "内容": "链式存储结构中的基本单元，通常包含数据域和指向其他结点的指针域。",
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "04ALG007",
            "name": "括号配对检查",
            "attributes": {
                "难度": "中等",
                "内容": "检查一个表达式或代码段中的括号（如 '()', '[]', '{}'）是否正确配对和嵌套。通常使用栈来实现。",
                "时间复杂度": "O(N)",
                "空间复杂度": "O(N)",
                "设计思想": "栈应用",
                "适用场景": "语法分析、代码检查",
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "04ALG008",
            "name": "进制转换",
            "attributes": {
                "难度": "入门",
                "内容": "将一个数值从一种进制表示转换为另一种进制表示。例如，十进制转二进制、八进制等。使用栈可以方便地处理除基取余法得到的逆序数位。",
                "时间复杂度": "O(log_r N)",
                "空间复杂度": "O(log_r N)",
                "设计思想": "栈应用、数论",
                "适用场景": "数值表示转换",
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "04CON009",
            "name": "算术表达式",
            "attributes": {
                "难度": "入门",
                "内容": "由操作数、运算符和括号组成的式子，用于表示数学计算。",
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "04CON010",
            "name": "中缀表示",
            "attributes": {
                "难度": "入门",
                "内容": "算术表达式的常规书写方式，运算符位于其操作数之间。计算时需考虑运算符优先级和括号。",
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "04CON011",
            "name": "后缀表示",
            "attributes": {
                "难度": "入门",
                "内容": "算术表达式的一种表示法，运算符位于其操作数之后。也称逆波兰式。计算时无需考虑优先级和括号，只需顺序扫描。",
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "04CON012",
            "name": "操作数",
            "attributes": {
                "难度": "入门",
                "内容": "算术表达式中参与运算的数据，可以是常量、变量或函数返回值。",
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "04CON013",
            "name": "运算符",
            "attributes": {
                "难度": "入门",
                "内容": "算术表达式中表示运算操作的符号，如 +, -, *, /。",
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "04CON014",
            "name": "运算符优先级",
            "attributes": {
                "难度": "入门",
                "内容": "规定不同运算符在计算时的先后顺序，如乘除优先于加减。",
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "04ALG009",
            "name": "后缀表达式求值",
            "attributes": {
                "难度": "中等",
                "内容": "计算后缀表示（逆波兰式）的算术表达式的值。通常使用栈来存储操作数和中间结果。",
                "时间复杂度": "O(N)",
                "空间复杂度": "O(N)",
                "设计思想": "栈应用",
                "适用场景": "计算后缀表达式",
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "04ALG010",
            "name": "中缀表达式转换为后缀表达式",
            "attributes": {
                "难度": "中等",
                "内容": "将常规的中缀算术表达式转换为等价的后缀表达式（逆波兰式）。通常使用栈来暂存运算符。",
                "时间复杂度": "O(N)",
                "空间复杂度": "O(N)",
                "设计思想": "栈应用",
                "适用场景": "表达式转换，便于后续求值",
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "04CON015",
            "name": "递归",
            "attributes": {
                "难度": "中等",
                "内容": "一种解决问题的方法，其中函数直接或间接调用自身来解决规模更小的子问题。需要有明确的终止条件。在计算机中通常通过调用栈来实现。",
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "04ALG011",
            "name": "阶乘",
            "attributes": {
                "难度": "入门",
                "内容": "计算非负整数 n 的阶乘 (n!)。递归定义为 n! = n * (n-1)!，且 0! = 1。可用递归或循环实现。",
                "时间复杂度": "O(N)",
                "空间复杂度": "O(N)（递归）或 O(1)（循环）",
                "设计思想": "递归、循环",
                "适用场景": "数学计算、组合问题",
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "04ALG012",
            "name": "布尔量组合",
            "attributes": {
                "难度": "中等",
                "内容": "生成 n 个布尔变量（取值为 0 或 1）的所有可能组合。共有 2^n 种组合。通常使用递归实现。",
                "时间复杂度": "O(N * 2^N)",
                "空间复杂度": "O(N)",
                "设计思想": "递归、回溯",
                "适用场景": "组合生成、状态枚举",
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "04ALG013",
            "name": "全排列",
            "attributes": {
                "难度": "中等",
                "内容": "生成 n 个不同元素的所有可能排列顺序。共有 n! 种排列。通常使用递归实现。",
                "时间复杂度": "O(N * N!)",
                "空间复杂度": "O(N)",
                "设计思想": "递归、回溯、交换",
                "适用场景": "组合问题、搜索",
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "04ALG014",
            "name": "迷宫求解",
            "attributes": {
                "难度": "中等",
                "内容": "寻找从迷宫入口到出口的一条可行路径。常用方法包括深度优先搜索（DFS，可用递归或栈实现）和广度优先搜索（BFS，用队列实现）。",
                "时间复杂度": "O(M*N) (M, N为迷宫尺寸)",
                "空间复杂度": "O(M*N)",
                "设计思想": "递归、回溯、DFS、图搜索",
                "适用场景": "路径查找、图遍历",
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "04ALG015",
            "name": "汉诺塔",
            "attributes": {
                "难度": "中等",
                "内容": "经典的递归问题。将 n 个大小不同的圆盘从起始柱借助辅助柱移动到目标柱，每次只能移动一个，且大盘不能在小盘之上。",
                "时间复杂度": "O(2^N)",
                "空间复杂度": "O(N)",
                "设计思想": "递归、分治",
                "适用场景": "递归教学、问题分解",
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "数据结构",
            "ID": "04DS006",
            "name": "队列",
            "attributes": {
                "难度": "入门",
                "内容": "简称队，是一种运算受限的线性表，允许在表的一端（队尾）进行插入（入队），在另一端（队首）进行删除（出队）。具有先进先出（FIFO）的特性。应用：广度优先搜索、任务调度、缓冲区管理、渡口管理等。",
                "存储开销": "依赖具体实现（顺序或链式）",
                "核心特性": "先进先出 (FIFO)",
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "04CON016",
            "name": "队首",
            "attributes": {
                "难度": "入门",
                "内容": "队列允许进行删除操作的一端。",
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "04CON017",
            "name": "队尾",
            "attributes": {
                "难度": "入门",
                "内容": "队列允许进行插入操作的一端。",
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "04ALG016",
            "name": "入队",
            "attributes": {
                "难度": "入门",
                "内容": "向队尾插入一个新元素，使其成为新的队尾元素。也称进队。顺序队列实现通常 O(1)（非满时），链队实现 O(1)。",
                "时间复杂度": "O(1)",
                "空间复杂度": "O(1)",
                "设计思想": "直接操作",
                "适用场景": "向队列中添加元素",
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "04ALG017",
            "name": "出队",
            "attributes": {
                "难度": "入门",
                "内容": "删除队首元素，使其后继元素成为新的队首元素。也称离队。顺序队列实现 O(1)，链队实现 O(1)。",
                "时间复杂度": "O(1)",
                "空间复杂度": "O(1)",
                "设计思想": "直接操作",
                "适用场景": "从队列中移除并获取元素",
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "04CON018",
            "name": "队首元素",
            "attributes": {
                "难度": "入门",
                "内容": "位于队首位置的元素。",
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "04CON019",
            "name": "队尾元素",
            "attributes": {
                "难度": "入门",
                "内容": "位于队尾位置的元素。",
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "04CON020",
            "name": "先进先出表",
            "attributes": {
                "难度": "入门",
                "内容": "First In First Out (FIFO)，描述队列的操作特性，最先进入队列的元素最先被移出。",
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "04ALG018",
            "name": "读取队首元素",
            "attributes": {
                "难度": "入门",
                "内容": "返回队首元素的值，但不改变队列的状态。也称 PeekQueue。顺序队列实现 O(1)，链队实现 O(1)。",
                "时间复杂度": "O(1)",
                "空间复杂度": "O(1)",
                "设计思想": "访问操作",
                "适用场景": "查看队首元素",
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "04ALG019",
            "name": "检查队列是否为空",
            "attributes": {
                "难度": "入门",
                "内容": "判断队列中是否包含任何元素。顺序队列实现 O(1)，链队实现 O(1)。",
                "时间复杂度": "O(1)",
                "空间复杂度": "O(1)",
                "设计思想": "状态检查",
                "适用场景": "判断队列空条件",
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "04ALG020",
            "name": "初始化队列",
            "attributes": {
                "难度": "入门",
                "内容": "创建一个空队列。对于动态分配空间的实现，还包括分配初始内存。",
                "时间复杂度": "O(1) 或 O(MaxSize)",
                "空间复杂度": "O(1) 或 O(MaxSize)",
                "设计思想": "初始化",
                "适用场景": "使用队列之前",
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "04ALG021",
            "name": "清除队列",
            "attributes": {
                "难度": "入门",
                "内容": "移除队列中所有元素，使其变为空队列。对于动态分配空间的实现，还可能包括释放内存。",
                "时间复杂度": "O(1) 或 O(N)",
                "空间复杂度": "O(1)",
                "设计思想": "重置",
                "适用场景": "清空队列内容",
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "数据结构",
            "ID": "04DS007",
            "name": "顺序队列",
            "attributes": {
                "难度": "入门",
                "内容": "使用数组（顺序存储结构）实现的队列。通常实现为循环队列以有效利用空间。需要数组、队首指针和队尾指针。",
                "存储开销": "固定或动态数组开销，可能需要牺牲一个空间单元或使用额外变量区分队空和队满",
                "核心特性": "基于数组，通常为循环结构",
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "04CON021",
            "name": "队首指针",
            "attributes": {
                "难度": "入门",
                "内容": "用于指示队首元素位置（或队首元素前一个位置）的变量。在顺序队列中是数组下标；在链队中是指向队首结点的指针。",
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "04CON022",
            "name": "队尾指针",
            "attributes": {
                "难度": "入门",
                "内容": "用于指示队尾元素位置的变量。在顺序队列中是数组下标；在链队中是指向队尾结点的指针。",
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "数据结构",
            "ID": "04DS008",
            "name": "链队",
            "attributes": {
                "难度": "入门",
                "内容": "使用链式存储结构（通常是带尾指针的单链表）实现的队列。需要队首和队尾两个指针。",
                "存储开销": "结点数量 * (数据大小 + 指针大小)",
                "核心特性": "基于链表，动态增长，入队出队 O(1)",
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "数据结构",
            "ID": "04DS009",
            "name": "优先级队列",
            "attributes": {
                "难度": "中等",
                "内容": "一种特殊的队列，其中每个元素关联一个优先级。出队操作总是移除优先级最高的元素。通常使用堆来实现。",
                "存储开销": "依赖实现（通常是堆）",
                "核心特性": "按优先级出队",
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "04CON023",
            "name": "队空",
            "attributes": {
                "难度": "入门",
                "内容": "队列的状态，表示队列中不包含任何元素。在循环队列中通常通过 front == rear 判断。",
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "04CON024",
            "name": "队满",
            "attributes": {
                "难度": "入门",
                "内容": "顺序队列（尤其是循环队列）的状态，表示存储空间已被完全占用。判断条件通常为 (rear+1)%MaxSize == front。",
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "数据结构",
            "ID": "04DS010",
            "name": "线性表",
            "attributes": {
                "难度": "入门",
                "内容": "由n（n>=0）个相同类型数据元素组成的有限序列。元素之间存在一对一的线性关系。栈和队列是运算受限的线性表。",
                "存储开销": "依赖具体实现（顺序或链式）",
                "核心特性": "元素有序，一对一关系",
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "数据结构",
            "ID": "05DS001",
            "name": "树",
            "attributes": {
                "难度": "入门",
                "内容": "树形结构的简称, 重要的非线性数据结构。空树或非空树(有且仅有一个根结点, 其余结点分为m>=0个互不相交的子树)。定义是递归的。",
                "存储开销": "取决于存储方式",
                "核心特性": "层次性, 递归性",
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "05CON001",
            "name": "结点",
            "attributes": {
                "难度": "入门",
                "内容": "树结构中的基本元素。",
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "05CON002",
            "name": "根",
            "attributes": {
                "难度": "入门",
                "内容": "非空树中有且仅有的一个没有前驱的结点。",
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "05CON003",
            "name": "子树",
            "attributes": {
                "难度": "入门",
                "内容": "非空树中根结点之外的结点被分成的m(m>=0)棵互不相交的树，每棵子树的根是原树根的后继。",
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "05CON004",
            "name": "递归",
            "attributes": {
                "难度": "中等",
                "内容": "一种定义或解决问题的方法，其中函数或结构直接或间接调用自身。树的定义是递归的。",
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "05CON005",
            "name": "前驱",
            "attributes": {
                "难度": "入门",
                "内容": "在树结构中，一个结点指向其子树根结点的关系，该结点是子树根的前驱。",
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "05CON006",
            "name": "后继",
            "attributes": {
                "难度": "入门",
                "内容": "在树结构中，一个结点的子树的根结点是该结点的后继。",
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "05CON007",
            "name": "树的表示法",
            "attributes": {
                "难度": "入门",
                "内容": "表示树结构的方法，包括树形表示法、二元组表示法、集合图表示、凹入表示、广义表表示。",
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "05CON008",
            "name": "广义表表示法",
            "attributes": {
                "难度": "中等",
                "内容": "树的一种表示法，根结点作为表名放在前面，子树构成表的内容。例如 A(B(D,E(H,I),F),C(G))。",
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "05CON009",
            "name": "度",
            "attributes": {
                "难度": "入门",
                "内容": "结点的度指其子树数或后继结点数。树的度指树中所有结点的度的最大值。",
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "05CON010",
            "name": "叶子结点",
            "attributes": {
                "难度": "入门",
                "内容": "度为0的结点，也称终端结点。",
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "05CON011",
            "name": "分支结点",
            "attributes": {
                "难度": "入门",
                "内容": "度大于0的结点，也称非终端结点。",
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "05CON012",
            "name": "孩子结点",
            "attributes": {
                "难度": "入门",
                "内容": "一个结点的子树的根，或该结点的后继。",
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "05CON013",
            "name": "双亲结点",
            "attributes": {
                "难度": "入门",
                "内容": "孩子结点的前驱结点。",
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "05CON014",
            "name": "兄弟结点",
            "attributes": {
                "难度": "入门",
                "内容": "具有同一双亲结点的孩子结点互称兄弟。",
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "05CON015",
            "name": "层数",
            "attributes": {
                "难度": "入门",
                "内容": "结点在树中的层次，根为第1层，其孩子为第2层，以此类推。",
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "05CON016",
            "name": "深度",
            "attributes": {
                "难度": "入门",
                "内容": "树中所有结点的最大层数，也称高度。",
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "05CON017",
            "name": "有序树",
            "attributes": {
                "难度": "入门",
                "内容": "树中各结点的子树按一定次序从左到右排列的树。",
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "05CON018",
            "name": "无序树",
            "attributes": {
                "难度": "入门",
                "内容": "树中各结点的子树没有固定次序的树。",
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "05CON019",
            "name": "森林",
            "attributes": {
                "难度": "入门",
                "内容": "m(m>=0)棵互不相交的树的集合。",
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "数据结构",
            "ID": "05DS002",
            "name": "k叉树",
            "attributes": {
                "难度": "入门",
                "内容": "度为k的树，即每个结点最多有k个孩子。也称多元树或多叉树。",
                "存储开销": "取决于存储方式",
                "核心特性": "每个结点最多k个孩子",
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "数据结构",
            "ID": "05DS003",
            "name": "满k叉树",
            "attributes": {
                "难度": "中等",
                "内容": "深度为h的k叉树，其结点总数达到最大值 (k^h - 1) / (k - 1)。",
                "存储开销": "密集",
                "核心特性": "结构完全饱和",
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "数据结构",
            "ID": "05DS004",
            "name": "二叉树",
            "attributes": {
                "难度": "入门",
                "内容": "度为2的有序树。递归定义：空树或由一个根结点及两棵互不相交的左、右子树组成，左、右子树也为二叉树。",
                "存储开销": "取决于存储方式",
                "核心特性": "有序性, 每个结点最多两个孩子(左/右)",
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "05CON020",
            "name": "左孩子",
            "attributes": {
                "难度": "入门",
                "内容": "二叉树中，一个结点的左子树的根结点。",
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "05CON021",
            "name": "右孩子",
            "attributes": {
                "难度": "入门",
                "内容": "二叉树中，一个结点的右子树的根结点。",
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "数据结构",
            "ID": "05DS005",
            "name": "满二叉树",
            "attributes": {
                "难度": "中等",
                "内容": "深度为h且含有2^h - 1个结点的二叉树，即每一层都达到最大结点数。",
                "存储开销": "密集",
                "核心特性": "结构完全饱和",
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "数据结构",
            "ID": "05DS006",
            "name": "完全二叉树",
            "attributes": {
                "难度": "中等",
                "内容": "深度为h的二叉树，除第h层外，其它各层(1~h-1)的结点数都达到最大个数，第h层的所有结点都连续集中在最左边。",
                "存储开销": "较密集, 适合顺序存储",
                "核心特性": "层序编号连续(除末尾)",
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "数据结构",
            "ID": "05DS007",
            "name": "理想平衡二叉树",
            "attributes": {
                "难度": "中等",
                "内容": "除最后一层外，其余层都是满的，最后一层结点可以任意分布的二叉树。包含满二叉树和完全二叉树。",
                "存储开销": "相对平衡",
                "核心特性": "高度接近logN",
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "05ALG001",
            "name": "初始化二叉树",
            "attributes": {
                "难度": "入门",
                "内容": "将二叉树置为空树，通常是将根指针置为NULL。",
                "时间复杂度": "O(1)",
                "空间复杂度": "O(1)",
                "设计思想": "赋值",
                "适用场景": "创建新的二叉树或清空现有树后",
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "05ALG002",
            "name": "建立二叉树",
            "attributes": {
                "难度": "中等",
                "内容": "根据特定输入格式（如广义表字符串）创建二叉树的链接存储结构。",
                "时间复杂度": "O(n)",
                "空间复杂度": "O(h)",
                "设计思想": "递归或栈辅助",
                "适用场景": "从外部表示构造内存中的二叉树",
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "05CON022",
            "name": "栈",
            "attributes": {
                "难度": "入门",
                "内容": "一种后进先出（LIFO）的线性数据结构。",
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "05ALG003",
            "name": "判断二叉树是否为空",
            "attributes": {
                "难度": "入门",
                "内容": "检查二叉树的根指针是否为NULL。",
                "时间复杂度": "O(1)",
                "空间复杂度": "O(1)",
                "设计思想": "指针检查",
                "适用场景": "在操作二叉树前进行有效性判断",
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "05CON023",
            "name": "遍历二叉树",
            "attributes": {
                "难度": "中等",
                "内容": "按照一定次序访问二叉树中的所有结点，且每个结点仅被访问一次。常见有前序、中序、后序、层序。",
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "05ALG004",
            "name": "查找二叉树结点",
            "attributes": {
                "难度": "中等",
                "内容": "在二叉树中查找具有特定值的结点。",
                "时间复杂度": "O(n)",
                "空间复杂度": "O(h)",
                "设计思想": "递归遍历",
                "适用场景": "定位二叉树中的数据",
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "05ALG005",
            "name": "求二叉树深度",
            "attributes": {
                "难度": "中等",
                "内容": "计算二叉树的最大层数。",
                "时间复杂度": "O(n)",
                "空间复杂度": "O(h)",
                "设计思想": "递归 (深度 = max(左子树深度, 右子树深度) + 1)",
                "适用场景": "分析树的规模和结构",
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "05ALG006",
            "name": "输出二叉树",
            "attributes": {
                "难度": "中等",
                "内容": "将二叉树的结构以某种形式（如广义表）打印出来。",
                "时间复杂度": "O(n)",
                "空间复杂度": "O(h)",
                "设计思想": "递归遍历（类前序）",
                "适用场景": "可视化或序列化二叉树结构",
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "05ALG007",
            "name": "清除二叉树",
            "attributes": {
                "难度": "中等",
                "内容": "删除二叉树中的所有结点，释放内存，使其变为空树。",
                "时间复杂度": "O(n)",
                "空间复杂度": "O(h)",
                "设计思想": "递归（类后序），先删除子树再删除根",
                "适用场景": "销毁不再使用的二叉树",
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "数据结构",
            "ID": "05DS008",
            "name": "二叉树顺序存储结构",
            "attributes": {
                "难度": "中等",
                "内容": "使用一维数组存储二叉树结点，按下标（编号）反映结点间的逻辑关系。根结点编号为1 (或0)，结点i的左孩子为2i (或2i+1)，右孩子为2i+1 (或2i+2)。",
                "存储开销": "对于完全二叉树空间效率高，对于一般或单支树浪费严重。",
                "核心特性": "随机访问父子结点(通过下标计算)",
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "05CON024",
            "name": "一维数组",
            "attributes": {
                "难度": "入门",
                "内容": "一种线性数据结构，用于存储固定大小的同类型元素序列，可通过索引访问。",
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "数据结构",
            "ID": "05DS009",
            "name": "二叉树链接存储结构",
            "attributes": {
                "难度": "入门",
                "内容": "使用指针将离散存储的结点连接起来，反映二叉树的逻辑结构。常见为二叉链表。",
                "存储开销": "按需分配，有指针开销",
                "核心特性": "通过指针访问父子结点",
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "数据结构",
            "ID": "05DS010",
            "name": "二叉链表",
            "attributes": {
                "难度": "入门",
                "内容": "二叉树链接存储的一种基本形式，每个结点包含数据域、指向左孩子的指针域和指向右孩子的指针域。",
                "存储开销": "每个结点3个域 (数据+2指针)",
                "核心特性": "易于查找孩子结点",
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "数据结构",
            "ID": "05DS011",
            "name": "带双亲指针的二叉链表",
            "attributes": {
                "难度": "入门",
                "内容": "在二叉链表的基础上，为每个结点增加一个指向其双亲结点的指针域。",
                "存储开销": "每个结点4个域 (数据+3指针)",
                "核心特性": "易于查找孩子和双亲结点",
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "05ALG008",
            "name": "前序遍历",
            "attributes": {
                "难度": "中等",
                "内容": "二叉树遍历算法之一。访问顺序：根结点 -> 左子树 -> 右子树 (DLR)。",
                "时间复杂度": "O(n)",
                "空间复杂度": "O(h)",
                "设计思想": "递归",
                "适用场景": "复制树、表达式树求前缀表达式",
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "05ALG009",
            "name": "中序遍历",
            "attributes": {
                "难度": "中等",
                "内容": "二叉树遍历算法之一。访问顺序：左子树 -> 根结点 -> 右子树 (LDR)。",
                "时间复杂度": "O(n)",
                "空间复杂度": "O(h)",
                "设计思想": "递归",
                "适用场景": "二叉搜索树排序输出、表达式树求中缀表达式",
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "05ALG010",
            "name": "后序遍历",
            "attributes": {
                "难度": "中等",
                "内容": "二叉树遍历算法之一。访问顺序：左子树 -> 右子树 -> 根结点 (LRD)。",
                "时间复杂度": "O(n)",
                "空间复杂度": "O(h)",
                "设计思想": "递归",
                "适用场景": "计算表达式树、释放树结点内存",
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "05ALG011",
            "name": "按层遍历",
            "attributes": {
                "难度": "中等",
                "内容": "二叉树遍历算法之一。按照从上到下、同一层从左到右的次序访问结点。",
                "时间复杂度": "O(n)",
                "空间复杂度": "O(W)",
                "设计思想": "非递归，使用队列",
                "适用场景": "求最短路径（如BFS）、按层输出",
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "05CON025",
            "name": "队列",
            "attributes": {
                "难度": "入门",
                "内容": "一种先进先出（FIFO）的线性数据结构。",
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "05ALG012",
            "name": "初始化树",
            "attributes": {
                "难度": "入门",
                "内容": "将一般树（k叉树）置为空树，通常是将根指针置为NULL。",
                "时间复杂度": "O(1)",
                "空间复杂度": "O(1)",
                "设计思想": "赋值",
                "适用场景": "创建新的k叉树或清空现有树后",
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "05ALG013",
            "name": "建立树",
            "attributes": {
                "难度": "高级",
                "内容": "根据特定输入格式（如广义表字符串）创建一般树（k叉树）的链接存储结构（如k叉链表）。",
                "时间复杂度": "O(n)",
                "空间复杂度": "O(h)",
                "设计思想": "栈辅助",
                "适用场景": "从外部表示构造内存中的k叉树",
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "数据结构",
            "ID": "05DS012",
            "name": "k叉链表",
            "attributes": {
                "难度": "中等",
                "内容": "一般树（k叉树）的链接存储结构（标准方式），每个结点包含数据域和k个指向孩子结点的指针域。",
                "存储开销": "每个结点1个数据域 + k个指针域，k固定时可能浪费空间",
                "核心特性": "直接访问k个孩子",
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "数据结构",
            "ID": "05DS013",
            "name": "树链接存储结构",
            "attributes": {
                "难度": "入门",
                "内容": "使用指针将离散存储的结点连接起来，反映一般树的逻辑结构。包括标准方式(k叉链表)、广义标准方式、二叉树方式(孩子兄弟表示法)。",
                "存储开销": "按需分配，有指针开销",
                "核心特性": "通过指针访问相关结点",
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "05CON026",
            "name": "遍历树",
            "attributes": {
                "难度": "中等",
                "内容": "按照一定次序访问一般树中的所有结点，且每个结点仅被访问一次。常见有先根、后根、按层遍历。",
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "05ALG014",
            "name": "查找树结点",
            "attributes": {
                "难度": "中等",
                "内容": "在一般树（k叉树）中查找具有特定值的结点。",
                "时间复杂度": "O(n)",
                "空间复杂度": "O(h)",
                "设计思想": "递归遍历（类先根）",
                "适用场景": "定位k叉树中的数据",
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "05ALG015",
            "name": "输出树",
            "attributes": {
                "难度": "中等",
                "内容": "将一般树（k叉树）的结构以某种形式（如广义表）打印出来。",
                "时间复杂度": "O(n)",
                "空间复杂度": "O(h)",
                "设计思想": "递归遍历（类先根）",
                "适用场景": "可视化或序列化k叉树结构",
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "05ALG016",
            "name": "判断树是否为空",
            "attributes": {
                "难度": "入门",
                "内容": "检查一般树（k叉树）的根指针是否为NULL。",
                "时间复杂度": "O(1)",
                "空间复杂度": "O(1)",
                "设计思想": "指针检查",
                "适用场景": "在操作k叉树前进行有效性判断",
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "05ALG017",
            "name": "清除树",
            "attributes": {
                "难度": "中等",
                "内容": "删除一般树（k叉树）中的所有结点，释放内存，使其变为空树。",
                "时间复杂度": "O(n)",
                "空间复杂度": "O(h)",
                "设计思想": "递归（类后根），先删除子树再删除根",
                "适用场景": "销毁不再使用的k叉树",
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "数据结构",
            "ID": "05DS014",
            "name": "树顺序存储结构",
            "attributes": {
                "难度": "中等",
                "内容": "使用一维数组存储k叉树结点，按下标（编号）反映结点间的逻辑关系。结点i的k个孩子编号有特定计算规则。",
                "存储开销": "对于满k叉树或完全k叉树合适，否则浪费严重。",
                "核心特性": "随机访问父子结点(通过下标计算)",
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "数据结构",
            "ID": "05DS015",
            "name": "广义标准方式",
            "attributes": {
                "难度": "中等",
                "内容": "树的链接存储方式之一，在标准方式（k叉链表）的基础上，为每个结点增加一个指向其双亲结点的指针域。",
                "存储开销": "每个结点1个数据域 + k个孩子指针 + 1个双亲指针",
                "核心特性": "方便查找孩子和双亲",
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "数据结构",
            "ID": "05DS016",
            "name": "二叉树方式",
            "attributes": {
                "难度": "中等",
                "内容": "树的链接存储方式之一，也称孩子兄弟表示法。将树转换为二叉树存储：结点的左指针指向第一个孩子，右指针指向其下一个兄弟。",
                "存储开销": "等同于二叉链表",
                "核心特性": "节省空间(相比k叉链表), 方便查找第一孩子和兄弟",
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "05ALG018",
            "name": "先根遍历",
            "attributes": {
                "难度": "中等",
                "内容": "一般树（k叉树）遍历算法之一。访问顺序：根结点 -> 从左到右依次先根遍历各子树。",
                "时间复杂度": "O(n)",
                "空间复杂度": "O(h)",
                "设计思想": "递归",
                "适用场景": "树的复制、输出",
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "05ALG019",
            "name": "后根遍历",
            "attributes": {
                "难度": "中等",
                "内容": "一般树（k叉树）遍历算法之一。访问顺序：从左到右依次后根遍历各子树 -> 根结点。",
                "时间复杂度": "O(n)",
                "空间复杂度": "O(h)",
                "设计思想": "递归",
                "适用场景": "计算树的某些属性（如结点数、高度）、释放树内存",
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "05ALG020",
            "name": "按层遍历 (树)",
            "attributes": {
                "难度": "中等",
                "内容": "一般树（k叉树）遍历算法之一。按照从上到下、同一层从左到右的次序访问结点。",
                "时间复杂度": "O(n)",
                "空间复杂度": "O(W)",
                "设计思想": "非递归，使用队列",
                "适用场景": "按层输出、广度优先搜索",
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "05ALG021",
            "name": "求树深度",
            "attributes": {
                "难度": "中等",
                "内容": "计算一般树（k叉树）的最大层数。",
                "时间复杂度": "O(n)",
                "空间复杂度": "O(h)",
                "设计思想": "递归 (深度 = max(各子树深度) + 1)",
                "适用场景": "分析树的规模和结构",
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "数据结构",
            "ID": "07DS001",
            "name": "图",
            "attributes": {
                "难度": "中等",
                "内容": "图(graph)是图型结构的简称，是一种复杂的非线性数据结构。由顶点集V和边集E组成，表示为G=(V,E)。允许每个顶点有任意多个前驱和后继。",
                "存储开销": "取决于存储结构，邻接矩阵O(n^2)，邻接表/边集数组O(n+e)",
                "核心特性": "非线性，顶点间关系复杂",
                "相关习题": "未知",
                "相关实验": "未知"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知"
            }
        },
        {
            "type": "数据结构",
            "ID": "07DS002",
            "name": "有向图",
            "attributes": {
                "难度": "中等",
                "内容": "边集E(G)中为有向边（序偶）的图。",
                "存储开销": "同图",
                "核心特性": "边具有方向性",
                "相关习题": "未知",
                "相关实验": "未知"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知"
            }
        },
        {
            "type": "数据结构",
            "ID": "07DS003",
            "name": "无向图",
            "attributes": {
                "难度": "中等",
                "内容": "边集E(G)中为无向边（无序对）的图。",
                "存储开销": "同图",
                "核心特性": "边无方向性",
                "相关习题": "未知",
                "相关实验": "未知"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知"
            }
        },
        {
            "type": "数据结构",
            "ID": "07DS004",
            "name": "带权图",
            "attributes": {
                "难度": "中等",
                "内容": "边上带有权值（通常为非负实数）的图，也称为网(Network)。",
                "存储开销": "同图，但存储边时需额外空间存权值",
                "核心特性": "边具有权重",
                "相关习题": "未知",
                "相关实验": "未知"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知"
            }
        },
        {
            "type": "数据结构",
            "ID": "07DS005",
            "name": "邻接矩阵",
            "attributes": {
                "难度": "入门",
                "内容": "表示图形中顶点之间相邻关系的n阶方阵。A[i,j]=1（或权值）表示顶点i到j有边，否则为0（或无穷大）。",
                "存储开销": "O(n^2)",
                "核心特性": "查找边O(1)，查找度/邻接点O(n)，适用于稠密图",
                "相关习题": "未知",
                "相关实验": "未知"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知"
            }
        },
        {
            "type": "数据结构",
            "ID": "07DS006",
            "name": "邻接表",
            "attributes": {
                "难度": "入门",
                "内容": "对图中每个顶点建立一个存储其邻接关系的单链表，表头指针用数组存储。",
                "存储开销": "O(n+e)",
                "核心特性": "查找出边/出度方便O(e/n)，查找入边需遍历O(n+e)，适用于稀疏图",
                "相关习题": "未知",
                "相关实验": "未知"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知"
            }
        },
        {
            "type": "数据结构",
            "ID": "07DS007",
            "name": "逆邻接表",
            "attributes": {
                "难度": "中等",
                "内容": "邻接表的变体，每个顶点的单链表存储所有指向该顶点的入边的信息。",
                "存储开销": "O(n+e)",
                "核心特性": "查找入边/入度方便",
                "相关习题": "未知",
                "相关实验": "未知"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知"
            }
        },
        {
            "type": "数据结构",
            "ID": "07DS008",
            "name": "十字邻接表",
            "attributes": {
                "难度": "中等",
                "内容": "结合邻接表和逆邻接表，方便查找出边和入边信息。边结点包含起点、终点、权值、入边链域、出边链域。",
                "存储开销": "O(n+e)",
                "核心特性": "查找出入边均方便",
                "相关习题": "未知",
                "相关实验": "未知"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知"
            }
        },
        {
            "type": "数据结构",
            "ID": "07DS009",
            "name": "边集数组",
            "attributes": {
                "难度": "入门",
                "内容": "利用一维数组存储图中所有边（起点、终点、权值）的信息。",
                "存储开销": "O(e)",
                "核心特性": "适合对边依次处理，查找边/度需O(e)，适用于稀疏图",
                "相关习题": "未知",
                "相关实验": "未知"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "07ALG001",
            "name": "InitGraph",
            "attributes": {
                "难度": "入门",
                "内容": "初始化图的存储空间。",
                "时间复杂度": "取决于存储结构",
                "空间复杂度": "取决于存储结构",
                "设计思想": "初始化",
                "适用场景": "创建图之前",
                "相关习题": "未知",
                "相关实验": "未知"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "07ALG002",
            "name": "CreateGraph",
            "attributes": {
                "难度": "入门",
                "内容": "根据图的边集E建立图的存储结构。",
                "时间复杂度": "取决于存储结构和边数",
                "空间复杂度": "取决于存储结构",
                "设计思想": "构造",
                "适用场景": "从边信息构建图",
                "相关习题": "未知",
                "相关实验": "未知"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "07ALG003",
            "name": "TraverseGraph",
            "attributes": {
                "难度": "中等",
                "内容": "按照一定次序从顶点i开始遍历图（如图的遍历）。",
                "时间复杂度": "O(n^2)或O(n+e)",
                "空间复杂度": "O(n)",
                "设计思想": "搜索",
                "适用场景": "访问图中所有可达顶点",
                "相关习题": "未知",
                "相关实验": "未知"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "07ALG004",
            "name": "FindGraph",
            "attributes": {
                "难度": "入门",
                "内容": "从图中查找给定值顶点。",
                "时间复杂度": "O(n)",
                "空间复杂度": "O(1)",
                "设计思想": "搜索",
                "适用场景": "定位图中顶点",
                "相关习题": "未知",
                "相关实验": "未知"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "07ALG005",
            "name": "PrintGraph",
            "attributes": {
                "难度": "入门",
                "内容": "按照图的一种表示方法输出一个图。",
                "时间复杂度": "取决于存储结构",
                "空间复杂度": "O(1)",
                "设计思想": "输出",
                "适用场景": "展示图结构",
                "相关习题": "未知",
                "相关实验": "未知"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "07ALG006",
            "name": "ClearGraph",
            "attributes": {
                "难度": "入门",
                "内容": "清除图中动态分配的存储空间。",
                "时间复杂度": "取决于存储结构",
                "空间复杂度": "O(1)",
                "设计思想": "资源管理",
                "适用场景": "销毁图对象",
                "相关习题": "未知",
                "相关实验": "未知"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "07ALG007",
            "name": "MinSpanGraph",
            "attributes": {
                "难度": "中等",
                "内容": "求图中的最小生成树 (将在第8章讨论)。",
                "时间复杂度": "常见O(elogv)或O(e+vlogv)",
                "空间复杂度": "O(n+e)",
                "设计思想": "贪心",
                "适用场景": "网络建设最低成本问题",
                "相关习题": "未知",
                "相关实验": "未知"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "07ALG008",
            "name": "MinPathGraph",
            "attributes": {
                "难度": "中等",
                "内容": "求图中顶点之间的最短路径 (将在第8章讨论)。",
                "时间复杂度": "取决于算法(如Dijkstra, Floyd)",
                "空间复杂度": "取决于算法",
                "设计思想": "动态规划/贪心",
                "适用场景": "路径规划",
                "相关习题": "未知",
                "相关实验": "未知"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "07ALG009",
            "name": "TopolGraph",
            "attributes": {
                "难度": "中等",
                "内容": "求有向图中顶点之间的拓扑序列 (将在第8章讨论)。",
                "时间复杂度": "O(n+e)",
                "空间复杂度": "O(n+e)",
                "设计思想": "DFS/BFS变种",
                "适用场景": "任务调度、依赖分析",
                "相关习题": "未知",
                "相关实验": "未知"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "07ALG010",
            "name": "KeyPathGraph",
            "attributes": {
                "难度": "高级",
                "内容": "求有向带权图中的关键路径 (将在第8章讨论)。",
                "时间复杂度": "O(n+e)",
                "空间复杂度": "O(n+e)",
                "设计思想": "拓扑排序+动态规划",
                "适用场景": "项目管理、工期估算",
                "相关习题": "未知",
                "相关实验": "未知"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "07ALG011",
            "name": "InitMatrix",
            "attributes": {
                "难度": "入门",
                "内容": "初始化图的邻接矩阵存储空间。",
                "时间复杂度": "O(n^2)",
                "空间复杂度": "O(1) (不计矩阵本身)",
                "设计思想": "初始化",
                "适用场景": "使用邻接矩阵表示图之前",
                "相关习题": "未知",
                "相关实验": "未知"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "07ALG012",
            "name": "CreateMatrix",
            "attributes": {
                "难度": "入门",
                "内容": "根据图的边集生成图的邻接矩阵。",
                "时间复杂度": "O(e)",
                "空间复杂度": "O(1) (不计矩阵本身)",
                "设计思想": "构造",
                "适用场景": "从边信息构建邻接矩阵",
                "相关习题": "未知",
                "相关实验": "未知"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "07ALG013",
            "name": "PrintMatrix",
            "attributes": {
                "难度": "入门",
                "内容": "根据图的邻接矩阵输出图的二元组表示。",
                "时间复杂度": "O(n^2)",
                "空间复杂度": "O(1)",
                "设计思想": "输出",
                "适用场景": "展示邻接矩阵表示的图结构",
                "相关习题": "未知",
                "相关实验": "未知"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "07ALG014",
            "name": "InitAdjoin",
            "attributes": {
                "难度": "入门",
                "内容": "初始化图的邻接表存储空间。",
                "时间复杂度": "O(n)",
                "空间复杂度": "O(1) (不计表头数组本身)",
                "设计思想": "初始化",
                "适用场景": "使用邻接表表示图之前",
                "相关习题": "未知",
                "相关实验": "未知"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "07ALG015",
            "name": "CreateAdjoin",
            "attributes": {
                "难度": "入门",
                "内容": "根据图的边集生成图的邻接表。",
                "时间复杂度": "O(n+e)",
                "空间复杂度": "O(e)",
                "设计思想": "构造",
                "适用场景": "从边信息构建邻接表",
                "相关习题": "未知",
                "相关实验": "未知"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "07ALG016",
            "name": "PrintAdjJoin",
            "attributes": {
                "难度": "入门",
                "内容": "根据图的邻接表输出图的二元组表示。",
                "时间复杂度": "O(n+e)",
                "空间复杂度": "O(1)",
                "设计思想": "输出",
                "适用场景": "展示邻接表表示的图结构",
                "相关习题": "未知",
                "相关实验": "未知"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "07ALG017",
            "name": "InitArray",
            "attributes": {
                "难度": "入门",
                "内容": "初始化图的边集数组。",
                "时间复杂度": "O(MaxEdgeNum)",
                "空间复杂度": "O(1) (不计数组本身)",
                "设计思想": "初始化",
                "适用场景": "使用边集数组表示图之前",
                "相关习题": "未知",
                "相关实验": "未知"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "07ALG018",
            "name": "CreateArray",
            "attributes": {
                "难度": "入门",
                "内容": "根据图的边集生成图的边集数组。",
                "时间复杂度": "O(e)",
                "空间复杂度": "O(1) (不计数组本身)",
                "设计思想": "构造",
                "适用场景": "从边信息构建边集数组",
                "相关习题": "未知",
                "相关实验": "未知"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "07ALG019",
            "name": "PrintArray",
            "attributes": {
                "难度": "入门",
                "内容": "根据图的边集数组输出图的二元组表示。",
                "时间复杂度": "O(e)",
                "空间复杂度": "O(1)",
                "设计思想": "输出",
                "适用场景": "展示边集数组表示的图结构",
                "相关习题": "未知",
                "相关实验": "未知"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "07ALG020",
            "name": "深度优先搜索",
            "attributes": {
                "难度": "中等",
                "内容": "图遍历算法，尽可能深地搜索图的分支。访问顶点v，标记已访问，然后递归访问v的未访问邻接点。",
                "时间复杂度": "邻接矩阵O(n^2)，邻接表O(n+e)",
                "空间复杂度": "O(n)（递归栈或标记数组）",
                "设计思想": "递归、回溯",
                "适用场景": "查找路径、连通性判断、拓扑排序",
                "相关习题": "未知",
                "相关实验": "未知"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "07ALG021",
            "name": "dfsMatrix",
            "attributes": {
                "难度": "中等",
                "内容": "使用邻接矩阵实现的深度优先搜索遍历。",
                "时间复杂度": "O(n^2)",
                "空间复杂度": "O(n)",
                "设计思想": "递归、回溯",
                "适用场景": "在邻接矩阵表示的图上进行DFS",
                "相关习题": "未知",
                "相关实验": "未知"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "07ALG022",
            "name": "dfsAdjion",
            "attributes": {
                "难度": "中等",
                "内容": "使用邻接表实现的深度优先搜索遍历。",
                "时间复杂度": "O(n+e)",
                "空间复杂度": "O(n)",
                "设计思想": "递归、回溯",
                "适用场景": "在邻接表表示的图上进行DFS",
                "相关习题": "未知",
                "相关实验": "未知"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "07ALG023",
            "name": "广度优先搜索",
            "attributes": {
                "难度": "中等",
                "内容": "图遍历算法，从初始点开始，逐层访问其邻接点。使用队列辅助实现。",
                "时间复杂度": "邻接矩阵O(n^2)，邻接表O(n+e)",
                "空间复杂度": "O(n)（队列或标记数组）",
                "设计思想": "队列、层次遍历",
                "适用场景": "查找最短路径（无权图）、连通性判断",
                "相关习题": "未知",
                "相关实验": "未知"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "07ALG024",
            "name": "bfsMatrix",
            "attributes": {
                "难度": "中等",
                "内容": "使用邻接矩阵实现的广度优先搜索遍历。",
                "时间复杂度": "O(n^2)",
                "空间复杂度": "O(n)",
                "设计思想": "队列、层次遍历",
                "适用场景": "在邻接矩阵表示的图上进行BFS",
                "相关习题": "未知",
                "相关实验": "未知"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "07ALG025",
            "name": "bfsAdjoin",
            "attributes": {
                "难度": "中等",
                "内容": "使用邻接表实现的广度优先搜索遍历。",
                "时间复杂度": "O(n+e)",
                "空间复杂度": "O(n)",
                "设计思想": "队列、层次遍历",
                "适用场景": "在邻接表表示的图上进行BFS",
                "相关习题": "未知",
                "相关实验": "未知"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "07CON001",
            "name": "顶点集合",
            "attributes": {
                "难度": "入门",
                "内容": "图中所有顶点的集合，通常表示为V。",
                "相关习题": "未知",
                "相关实验": "未知"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "07CON002",
            "name": "边集",
            "attributes": {
                "难度": "入门",
                "内容": "图中所有边的集合，通常表示为E。边可以是顶点的序偶（有向边）或无序对（无向边）。",
                "相关习题": "未知",
                "相关实验": "未知"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "07CON003",
            "name": "顶点",
            "attributes": {
                "难度": "入门",
                "内容": "图的基本组成单元，代表实体或对象。",
                "相关习题": "未知",
                "相关实验": "未知"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "07CON004",
            "name": "边",
            "attributes": {
                "难度": "入门",
                "内容": "连接图中两个顶点的关系，可以是有向的或无向的，可以带权。",
                "相关习题": "未知",
                "相关实验": "未知"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "07CON005",
            "name": "端点",
            "attributes": {
                "难度": "入门",
                "内容": "一条边所连接的两个顶点。",
                "相关习题": "未知",
                "相关实验": "未知"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "07CON006",
            "name": "邻接点",
            "attributes": {
                "难度": "入门",
                "内容": "若两个顶点间存在一条边，则称它们互为邻接点。",
                "相关习题": "未知",
                "相关实验": "未知"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "07CON007",
            "name": "出边",
            "attributes": {
                "难度": "入门",
                "内容": "在有向图中，从顶点vi出发的边 <vi, vj>。",
                "相关习题": "未知",
                "相关实验": "未知"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "07CON008",
            "name": "入边",
            "attributes": {
                "难度": "入门",
                "内容": "在有向图中，指向顶点vj的边 <vi, vj>。",
                "相关习题": "未知",
                "相关实验": "未知"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "07CON009",
            "name": "起始点",
            "attributes": {
                "难度": "入门",
                "内容": "有向边 <vi, vj> 的起点 vi。",
                "相关习题": "未知",
                "相关实验": "未知"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "07CON010",
            "name": "终止点",
            "attributes": {
                "难度": "入门",
                "内容": "有向边 <vi, vj> 的终点 vj。",
                "相关习题": "未知",
                "相关实验": "未知"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "07CON011",
            "name": "出边邻接点",
            "attributes": {
                "难度": "入门",
                "内容": "在有向图中，若存在边 <vi, vj>，则vj是vi的出边邻接点。",
                "相关习题": "未知",
                "相关实验": "未知"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "07CON012",
            "name": "入边邻接点",
            "attributes": {
                "难度": "入门",
                "内容": "在有向图中，若存在边 <vi, vj>，则vi是vj的入边邻接点。",
                "相关习题": "未知",
                "相关实验": "未知"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "07CON013",
            "name": "度",
            "attributes": {
                "难度": "入门",
                "内容": "无向图中与顶点v关联的边的数目，记为D(v)。有向图中等于入度与出度之和。",
                "相关习题": "未知",
                "相关实验": "未知"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "07CON014",
            "name": "入度",
            "attributes": {
                "难度": "入门",
                "内容": "有向图中指向顶点v的入边的数目，记为ID(v)。",
                "相关习题": "未知",
                "相关实验": "未知"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "07CON015",
            "name": "出度",
            "attributes": {
                "难度": "入门",
                "内容": "有向图中从顶点v出发的出边的数目，记为OD(v)。",
                "相关习题": "未知",
                "相关实验": "未知"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "07CON016",
            "name": "完全图",
            "attributes": {
                "难度": "入门",
                "内容": "无向图中任意两顶点间都有边；有向图中任意两顶点间都有方向相反的两条边。",
                "相关习题": "未知",
                "相关实验": "未知"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "07CON017",
            "name": "稠密图",
            "attributes": {
                "难度": "入门",
                "内容": "边数接近完全图的图。",
                "相关习题": "未知",
                "相关实验": "未知"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "07CON018",
            "name": "稀疏图",
            "attributes": {
                "难度": "入门",
                "内容": "边数远少于完全图的图（通常e与n同数量级）。",
                "相关习题": "未知",
                "相关实验": "未知"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "07CON019",
            "name": "子图",
            "attributes": {
                "难度": "入门",
                "内容": "图G'=(V',E')是图G=(V,E)的子图，如果V'是V的子集，E'是E的子集，且E'中涉及的顶点都在V'中。",
                "相关习题": "未知",
                "相关实验": "未知"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "07CON020",
            "name": "路径",
            "attributes": {
                "难度": "入门",
                "内容": "从顶点v到顶点v'的一个顶点序列，序列中相邻顶点间必须有边相连。",
                "相关习题": "未知",
                "相关实验": "未知"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "07CON021",
            "name": "路径长度",
            "attributes": {
                "难度": "入门",
                "内容": "路径上经过的边的数目。",
                "相关习题": "未知",
                "相关实验": "未知"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "07CON022",
            "name": "简单路径",
            "attributes": {
                "难度": "入门",
                "内容": "路径上所有顶点均不相同的路径。",
                "相关习题": "未知",
                "相关实验": "未知"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "07CON023",
            "name": "回路",
            "attributes": {
                "难度": "入门",
                "内容": "起点和终点相同的路径，也称环(Cycle)。",
                "相关习题": "未知",
                "相关实验": "未知"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "07CON024",
            "name": "简单回路",
            "attributes": {
                "难度": "入门",
                "内容": "回路中除起点和终点相同外，其余顶点均不相同的回路，也称简单环。",
                "相关习题": "未知",
                "相关实验": "未知"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "07CON025",
            "name": "连通",
            "attributes": {
                "难度": "入门",
                "内容": "无向图中，若顶点vi到vj有路径，则称vi和vj是连通的。有向图中，若从vi到vj有路径，则称从vi到vj是连通的。",
                "相关习题": "未知",
                "相关实验": "未知"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "07CON026",
            "name": "连通图",
            "attributes": {
                "难度": "入门",
                "内容": "无向图中任意两个顶点都连通的图。",
                "相关习题": "未知",
                "相关实验": "未知"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "07CON027",
            "name": "非连通图",
            "attributes": {
                "难度": "入门",
                "内容": "无向图中存在不连通顶点的图。",
                "相关习题": "未知",
                "相关实验": "未知"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "07CON028",
            "name": "连通分量",
            "attributes": {
                "难度": "入门",
                "内容": "无向图G的极大连通子图。",
                "相关习题": "未知",
                "相关实验": "未知"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "07CON029",
            "name": "强连通图",
            "attributes": {
                "难度": "中等",
                "内容": "有向图中任意两个顶点vi和vj，从vi到vj和从vj到vi都存在路径。",
                "相关习题": "未知",
                "相关实验": "未知"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "07CON030",
            "name": "强连通分量",
            "attributes": {
                "难度": "中等",
                "内容": "有向图G的极大强连通子图。",
                "相关习题": "未知",
                "相关实验": "未知"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "07CON031",
            "name": "权",
            "attributes": {
                "难度": "入门",
                "内容": "图中每条边可以标上具有某种含义的数值（通常为非负实数），称为该边的权(weight)。",
                "相关习题": "未知",
                "相关实验": "未知"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "07CON032",
            "name": "图的存储结构",
            "attributes": {
                "难度": "入门",
                "内容": "图在计算机中的表示方法，如邻接矩阵、邻接表、边集数组等。",
                "相关习题": "未知",
                "相关实验": "未知"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "07CON033",
            "name": "边结点",
            "attributes": {
                "难度": "入门",
                "内容": "在邻接表中，存储边的信息（如邻接点序号、权值、下一边结点指针）的结点。",
                "相关习题": "未知",
                "相关实验": "未知"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "07CON034",
            "name": "图的遍历",
            "attributes": {
                "难度": "入门",
                "内容": "从图中指定初始点出发，按一定搜索方法对图中所有顶点访问一次且仅访问一次的过程。",
                "相关习题": "未知",
                "相关实验": "未知"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "07CON035",
            "name": "初始点",
            "attributes": {
                "难度": "入门",
                "内容": "图遍历开始访问的第一个顶点。",
                "相关习题": "未知",
                "相关实验": "未知"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知"
            }
        },
        {
            "type": "数据结构",
            "ID": "07DS010",
            "name": "队列",
            "attributes": {
                "难度": "入门",
                "内容": "一种先进先出（FIFO）的线性数据结构，常用于广度优先搜索。",
                "存储开销": "O(n)",
                "核心特性": "FIFO",
                "相关习题": "未知",
                "相关实验": "未知"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "08CON001",
            "name": "图 (Graph)",
            "attributes": {
                "难度": "入门",
                "内容": "由顶点和边构成的数据结构，用于表示对象之间的关系。本章讨论其在工程和生活中的应用，涉及最小生成树、最短路径、拓扑序列、关键路径等运算。"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "08CON002",
            "name": "生成树 (Spanning Tree)",
            "attributes": {
                "难度": "中等",
                "内容": "在一个连通图G中，取其全部顶点和一部分边构成一个无回路的子图G'，且连通所有顶点。包含n个顶点的生成树必有n-1条边。同一个图可以有不同的生成树，如深度优先生成树、广度优先生成树。"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "08CON003",
            "name": "最小生成树 (MST)",
            "attributes": {
                "难度": "中等",
                "内容": "对于一个连通网（带权连通图），其所有生成树中权值总和最小的那棵生成树。用于解决如通信系统总造价最低等问题。"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "08CON004",
            "name": "连通图 (Connected Graph)",
            "attributes": {
                "难度": "入门",
                "内容": "图中任意两个顶点之间都存在路径的图。生成树和最小生成树是基于连通图的概念。"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "08CON005",
            "name": "连通网 (Connected Network)",
            "attributes": {
                "难度": "入门",
                "内容": "无向连通带权图。最小生成树是针对连通网提出的概念。"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "08CON006",
            "name": "权 (Weight)",
            "attributes": {
                "难度": "入门",
                "内容": "图中边的数值属性，可以代表成本、距离、时间等。在最小生成树和最短路径问题中至关重要。"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "08ALG001",
            "name": "Prim算法",
            "attributes": {
                "难度": "中等",
                "内容": "一种求解最小生成树的贪心算法。从一个顶点开始，逐步扩展生成树，每次选择连接已选顶点和未选顶点中权值最小的边。",
                "时间复杂度": "O(n^2) (使用邻接矩阵)",
                "空间复杂度": "O(1) (指额外空间，不计图存储)",
                "设计思想": "贪心",
                "适用场景": "求解稠密图的最小生成树。"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "08ALG002",
            "name": "Kruskal算法",
            "attributes": {
                "难度": "中等",
                "内容": "另一种求解最小生成树的贪心算法。按边的权值从小到大依次选择，若选择的边不形成回路则加入生成树，直到包含n-1条边。",
                "时间复杂度": "O(e log e) 或 O(e log n) (取决于排序和并查集实现)，文中提及O(n^2)可能指特定实现或简化分析。",
                "空间复杂度": "O(n^2) (文中提及，可能指辅助判断回路的集合空间)",
                "设计思想": "贪心",
                "适用场景": "求解稀疏图的最小生成树。"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "数据结构",
            "ID": "08DS001",
            "name": "邻接矩阵 (Adjacency Matrix)",
            "attributes": {
                "难度": "入门",
                "内容": "用二维数组表示图中顶点间连接关系和权值的存储方式。适用于稠密图。",
                "存储开销": "O(n^2)",
                "核心特性": "快速判断两点间是否有边及获取权值。",
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "数据结构",
            "ID": "08DS002",
            "name": "边集数组 (Edge Set Array)",
            "attributes": {
                "难度": "入门",
                "内容": "用数组存储图的所有边及其权值信息。常用于Kruskal算法。",
                "存储开销": "O(e)",
                "核心特性": "方便按权值排序边。",
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "08CON007",
            "name": "最短路径 (Shortest Path)",
            "attributes": {
                "难度": "中等",
                "内容": "图中从一个顶点到另一个顶点的路径中，经过边数最少（无权图）或路径上边权值之和最小（带权图）的路径。"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "08CON008",
            "name": "路径长度 (Path Length)",
            "attributes": {
                "难度": "入门",
                "内容": "路径上所经过的边的数目。"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "08CON009",
            "name": "带权路径长度 (Weighted Path Length)",
            "attributes": {
                "难度": "入门",
                "内容": "路径上所经过边的权值之和。"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "08CON010",
            "name": "源点 (Source Vertex/Event)",
            "attributes": {
                "难度": "入门",
                "内容": "在最短路径问题中指起始顶点；在AOE网中指工程开始的事件，只有出边。"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "08CON011",
            "name": "终点 (Destination Vertex/Event)",
            "attributes": {
                "难度": "入门",
                "内容": "在最短路径问题中指目标顶点；在AOE网中指工程结束的事件，只有入边（汇点）。"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "08ALG003",
            "name": "Dijkstra算法",
            "attributes": {
                "难度": "中等",
                "内容": "求解单源最短路径问题的贪心算法。按路径长度递增的次序，逐步生成从源点到其他各顶点的最短路径。不能处理负权边。",
                "时间复杂度": "O(n^2) (使用邻接矩阵)",
                "空间复杂度": "O(n) (存储距离和路径信息)",
                "设计思想": "贪心",
                "适用场景": "求解无负权边的单源最短路径问题。"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "08ALG004",
            "name": "Floyd算法",
            "attributes": {
                "难度": "中等",
                "内容": "求解所有顶点对之间最短路径问题的动态规划算法。通过考虑允许经过的中间顶点逐步优化路径长度。",
                "时间复杂度": "O(n^3)",
                "空间复杂度": "O(n^2) (存储距离矩阵)",
                "设计思想": "动态规划",
                "适用场景": "求解所有顶点对之间的最短路径，可以处理负权边（但不能处理负权回路）。"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "08CON012",
            "name": "活动 (Activity)",
            "attributes": {
                "难度": "入门",
                "内容": "在工程项目中表示一个子工程或任务。在AOV网中由顶点表示，在AOE网中由边表示。"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "08CON013",
            "name": "顶点活动网 (AOV network)",
            "attributes": {
                "难度": "中等",
                "内容": "用顶点表示活动，有向边表示活动之间的先后（前驱）关系的有向图。通常用于表示工程或任务的依赖关系，必须是无环图。"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "08CON014",
            "name": "有向无环图 (DAG)",
            "attributes": {
                "难度": "中等",
                "内容": "图中不存在回路的有向图。AOV网必须是DAG。"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "08CON015",
            "name": "拓扑序列 (Topological Order)",
            "attributes": {
                "难度": "中等",
                "内容": "AOV网中所有活动的一种线性排列，使得对于任何活动，其所有前驱活动都排在该活动之前。一个AOV网可能存在多个拓扑序列。"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "08CON016",
            "name": "入度 (In-degree)",
            "attributes": {
                "难度": "入门",
                "内容": "在有向图中，指向某个顶点的边的数量。在拓扑排序中用于寻找没有前驱的活动。"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "08ALG005",
            "name": "拓扑排序 (Topological Sort)",
            "attributes": {
                "难度": "中等",
                "内容": "在AOV网（有向无环图）中构造拓扑序列的过程。通常通过重复选择并移除入度为0的顶点来实现。",
                "时间复杂度": "O(n+e) (使用邻接表)",
                "空间复杂度": "O(n) (存储入度或栈)",
                "设计思想": "基于图遍历",
                "适用场景": "任务调度、依赖关系分析等。"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "数据结构",
            "ID": "08DS003",
            "name": "邻接表 (Adjacency List)",
            "attributes": {
                "难度": "入门",
                "内容": "用数组（存储顶点信息）和链表（存储每个顶点的邻接点）结合的方式表示图。适用于稀疏图。",
                "存储开销": "O(n+e)",
                "核心特性": "节省空间，方便遍历顶点的邻接点。",
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "08CON017",
            "name": "边表示活动的网络 (AOE network)",
            "attributes": {
                "难度": "中等",
                "内容": "用带权有向边表示活动及其持续时间，顶点表示事件（活动的开始或结束）的有向图。用于工程计划和进度管理，如关键路径分析。"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "08CON018",
            "name": "事件 (Event)",
            "attributes": {
                "难度": "入门",
                "内容": "在AOE网中由顶点表示，标志着某些活动的完成和（或）另一些活动的开始。"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "08CON019",
            "name": "持续时间 (Duration Time)",
            "attributes": {
                "难度": "入门",
                "内容": "在AOE网中，活动（边）的权值，表示完成该活动所需的时间。"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "08CON020",
            "name": "事件最早发生时间 (ve)",
            "attributes": {
                "难度": "中等",
                "内容": "AOE网中事件可能发生的最早时间点，等于从源点到该事件顶点的最长路径长度。按拓扑顺序计算。"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "08CON021",
            "name": "事件最迟发生时间 (vl)",
            "attributes": {
                "难度": "中等",
                "内容": "AOE网中为保证工程按时完成，事件必须发生的最晚时间点。按逆拓扑顺序计算。"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "08CON022",
            "name": "活动最早开始时间 (e)",
            "attributes": {
                "难度": "中等",
                "内容": "AOE网中活动可能开始的最早时间点，等于其起点事件的最早发生时间 (ve)。"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "08CON023",
            "name": "活动最迟开始时间 (l)",
            "attributes": {
                "难度": "中等",
                "内容": "AOE网中为保证工程按时完成，活动必须开始的最晚时间点，等于其终点事件的最迟发生时间 (vl) 减去活动持续时间。"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "08CON024",
            "name": "开始时间余量 (Slack Time)",
            "attributes": {
                "难度": "中等",
                "内容": "AOE网中活动的最迟开始时间与最早开始时间之差 (l - e)。表示活动可以推迟开始而不影响总工期的时间。"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "08CON025",
            "name": "关键活动 (Critical Activity)",
            "attributes": {
                "难度": "中等",
                "内容": "AOE网中开始时间余量为0的活动。这些活动必须按时开始和完成，否则会延误整个工程。"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "概念",
            "ID": "08CON026",
            "name": "关键路径 (Critical Path)",
            "attributes": {
                "难度": "中等",
                "内容": "AOE网中从源点到汇点的、完全由关键活动组成的路径。关键路径的长度决定了整个工程的最短完成时间。"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        },
        {
            "type": "算法",
            "ID": "08ALG006",
            "name": "关键路径算法",
            "attributes": {
                "难度": "高级",
                "内容": "用于计算AOE网中各个事件的最早/最迟发生时间、各个活动的最早/最迟开始时间、时间余量，并找出所有关键活动和关键路径的算法。",
                "时间复杂度": "O(n+e) (依赖拓扑排序)",
                "空间复杂度": "O(n) (存储ve, vl等)",
                "设计思想": "基于拓扑排序和图遍历",
                "适用场景": "工程项目管理、进度优化。"
            },
            "resources": {
                "教学视频": "未知",
                "教学材料": "未知",
                "外部资源": "未知",
                "相关习题": "未知",
                "相关实验": "未知"
            }
        }
    ],
    "relations": [
        {
            "type": "理论依赖",
            "关系ID": "01REL001",
            "source": "01ALG006",
            "target": "01CON008",
            "attributes": {
                "依赖强度": "强"
            }
        },
        {
            "type": "理论依赖",
            "关系ID": "01REL002",
            "source": "01ALG007",
            "target": "01CON008",
            "attributes": {
                "依赖强度": "强"
            }
        },
        {
            "type": "理论依赖",
            "关系ID": "01REL003",
            "source": "01ALG008",
            "target": "01CON008",
            "attributes": {
                "依赖强度": "强"
            }
        },
        {
            "type": "理论依赖",
            "关系ID": "02REL001",
            "source": "02DS001",
            "target": "02CON001",
            "attributes": {
                "依赖强度": "强"
            }
        },
        {
            "type": "理论依赖",
            "关系ID": "02REL002",
            "source": "02DS001",
            "target": "02CON002",
            "attributes": {
                "依赖强度": "强"
            }
        },
        {
            "type": "理论依赖",
            "关系ID": "02REL003",
            "source": "02DS001",
            "target": "02CON003",
            "attributes": {
                "依赖强度": "强"
            }
        },
        {
            "type": "理论依赖",
            "关系ID": "02REL004",
            "source": "02DS001",
            "target": "02CON004",
            "attributes": {
                "依赖强度": "强"
            }
        },
        {
            "type": "理论依赖",
            "关系ID": "02REL005",
            "source": "02DS001",
            "target": "02CON005",
            "attributes": {
                "依赖强度": "强"
            }
        },
        {
            "type": "理论依赖",
            "关系ID": "02REL006",
            "source": "02DS001",
            "target": "02CON006",
            "attributes": {
                "依赖强度": "强"
            }
        },
        {
            "type": "操作绑定",
            "关系ID": "02REL007",
            "source": "02ALG001",
            "target": "02DS001",
            "attributes": {
                "必需性": "是"
            }
        },
        {
            "type": "操作绑定",
            "关系ID": "02REL008",
            "source": "02ALG002",
            "target": "02DS001",
            "attributes": {
                "必需性": "是"
            }
        },
        {
            "type": "操作绑定",
            "关系ID": "02REL009",
            "source": "02ALG003",
            "target": "02DS001",
            "attributes": {
                "必需性": "是"
            }
        },
        {
            "type": "操作绑定",
            "关系ID": "02REL010",
            "source": "02ALG004",
            "target": "02DS001",
            "attributes": {
                "必需性": "是"
            }
        },
        {
            "type": "操作绑定",
            "关系ID": "02REL011",
            "source": "02ALG005",
            "target": "02DS001",
            "attributes": {
                "必需性": "是"
            }
        },
        {
            "type": "操作绑定",
            "关系ID": "02REL012",
            "source": "02ALG006",
            "target": "02DS001",
            "attributes": {
                "必需性": "是"
            }
        },
        {
            "type": "操作绑定",
            "关系ID": "02REL013",
            "source": "02ALG007",
            "target": "02DS001",
            "attributes": {
                "必需性": "是"
            }
        },
        {
            "type": "操作绑定",
            "关系ID": "02REL014",
            "source": "02ALG008",
            "target": "02DS001",
            "attributes": {
                "必需性": "是"
            }
        },
        {
            "type": "操作绑定",
            "关系ID": "02REL015",
            "source": "02ALG009",
            "target": "02DS001",
            "attributes": {
                "必需性": "是"
            }
        },
        {
            "type": "操作绑定",
            "关系ID": "02REL016",
            "source": "02ALG010",
            "target": "02DS001",
            "attributes": {
                "必需性": "是"
            }
        },
        {
            "type": "操作绑定",
            "关系ID": "02REL017",
            "source": "02ALG011",
            "target": "02DS001",
            "attributes": {
                "必需性": "是"
            }
        },
        {
            "type": "理论依赖",
            "关系ID": "02REL018",
            "source": "02DS001",
            "target": "02CON009",
            "attributes": {
                "依赖强度": "中"
            }
        },
        {
            "type": "使用",
            "关系ID": "02REL019",
            "source": "02CON010",
            "target": "02DS002",
            "attributes": {
                "使用角色": "实现基础"
            }
        },
        {
            "type": "使用",
            "关系ID": "02REL020",
            "source": "02DS001",
            "target": "02CON010",
            "attributes": {
                "使用角色": "存储方式"
            }
        },
        {
            "type": "使用",
            "关系ID": "02REL021",
            "source": "02ALG011",
            "target": "02ALG012",
            "attributes": {
                "使用角色": "实现方法之一"
            }
        },
        {
            "type": "使用",
            "关系ID": "02REL022",
            "source": "02CON013",
            "target": "02CON014",
            "attributes": {
                "使用角色": "组成单元"
            }
        },
        {
            "type": "继承",
            "关系ID": "02REL023",
            "source": "02DS004",
            "target": "02DS003",
            "attributes": {
                "约束条件": "每个结点只有一个后继指针"
            }
        },
        {
            "type": "继承",
            "关系ID": "02REL024",
            "source": "02DS006",
            "target": "02DS003",
            "attributes": {
                "约束条件": "每个结点有前驱和后继指针"
            }
        },
        {
            "type": "使用",
            "关系ID": "02REL025",
            "source": "02DS001",
            "target": "02CON013",
            "attributes": {
                "使用角色": "存储方式"
            }
        },
        {
            "type": "使用",
            "关系ID": "02REL026",
            "source": "02DS004",
            "target": "02CON019",
            "attributes": {
                "使用角色": "访问入口"
            }
        },
        {
            "type": "使用",
            "关系ID": "02REL027",
            "source": "02DS006",
            "target": "02CON019",
            "attributes": {
                "使用角色": "访问入口"
            }
        },
        {
            "type": "变体",
            "关系ID": "02REL028",
            "source": "02DS003",
            "target": "02DS007",
            "attributes": {
                "变体类型": "结构变体（尾指针指向头）"
            }
        },
        {
            "type": "变体",
            "关系ID": "02REL029",
            "source": "02DS004",
            "target": "02DS008",
            "attributes": {
                "变体类型": "结构变体（尾指针指向头）"
            }
        },
        {
            "type": "变体",
            "关系ID": "02REL030",
            "source": "02DS006",
            "target": "02DS009",
            "attributes": {
                "变体类型": "结构变体（首尾指针相连）"
            }
        },
        {
            "type": "理论依赖",
            "关系ID": "02REL031",
            "source": "02ALG009",
            "target": "02CON010",
            "attributes": {
                "依赖强度": "中"
            }
        },
        {
            "type": "理论依赖",
            "关系ID": "02REL032",
            "source": "02ALG010",
            "target": "02CON010",
            "attributes": {
                "依赖强度": "中"
            }
        },
        {
            "type": "理论依赖",
            "关系ID": "02REL033",
            "source": "02ALG009",
            "target": "02CON013",
            "attributes": {
                "依赖强度": "中"
            }
        },
        {
            "type": "理论依赖",
            "关系ID": "02REL034",
            "source": "02ALG010",
            "target": "02CON013",
            "attributes": {
                "依赖强度": "中"
            }
        },
        {
            "type": "理论依赖",
            "关系ID": "02REL035",
            "source": "02CON010",
            "target": "02CON020",
            "attributes": {
                "依赖强度": "强"
            }
        },
        {
            "type": "理论依赖",
            "关系ID": "02REL036",
            "source": "02CON013",
            "target": "02CON021",
            "attributes": {
                "依赖强度": "强"
            }
        },
        {
            "type": "使用",
            "关系ID": "02REL037",
            "source": "02DS004",
            "target": "02CON022",
            "attributes": {
                "使用角色": "可选实现优化"
            }
        },
        {
            "type": "使用",
            "关系ID": "02REL038",
            "source": "02DS006",
            "target": "02CON022",
            "attributes": {
                "使用角色": "可选实现优化"
            }
        },
        {
            "type": "使用",
            "关系ID": "02REL039",
            "source": "02CON023",
            "target": "02DS004",
            "attributes": {
                "使用角色": "实现方式"
            }
        },
        {
            "type": "使用",
            "关系ID": "02REL040",
            "source": "02ALG013",
            "target": "02DS001",
            "attributes": {
                "使用角色": "数据表示（系数数组）"
            }
        },
        {
            "type": "使用",
            "关系ID": "02REL041",
            "source": "02ALG014",
            "target": "02DS001",
            "attributes": {
                "使用角色": "数据表示（Term列表）"
            }
        },
        {
            "type": "使用",
            "关系ID": "02REL042",
            "source": "02ALG014",
            "target": "02DS010",
            "attributes": {
                "使用角色": "元素类型"
            }
        },
        {
            "type": "使用",
            "关系ID": "02REL043",
            "source": "02ALG015",
            "target": "02DS004",
            "attributes": {
                "使用角色": "数据存储"
            }
        },
        {
            "type": "使用",
            "关系ID": "02REL044",
            "source": "02ALG016",
            "target": "02DS004",
            "attributes": {
                "使用角色": "数据存储"
            }
        },
        {
            "type": "使用",
            "关系ID": "02REL045",
            "source": "02ALG015",
            "target": "02DS010",
            "attributes": {
                "使用角色": "元素类型"
            }
        },
        {
            "type": "使用",
            "关系ID": "02REL046",
            "source": "02ALG016",
            "target": "02DS010",
            "attributes": {
                "使用角色": "元素类型"
            }
        },
        {
            "type": "理论依赖",
            "关系ID": "02REL047",
            "source": "02CON024",
            "target": "02DS001",
            "attributes": {
                "依赖强度": "中"
            }
        },
        {
            "type": "理论依赖",
            "关系ID": "02REL048",
            "source": "02CON024",
            "target": "02DS010",
            "attributes": {
                "依赖强度": "强"
            }
        },
        {
            "type": "继承",
            "关系ID": "02REL049",
            "source": "02DS003",
            "target": "02DS001",
            "attributes": {
                "约束条件": "使用链接存储实现"
            }
        },
        {
            "type": "理论依赖",
            "关系ID": "03REL001",
            "source": "03CON001",
            "target": "03DS001",
            "attributes": {
                "依赖强度": "强"
            }
        },
        {
            "type": "操作绑定",
            "关系ID": "03REL002",
            "source": "03ALG001",
            "target": "03DS001",
            "attributes": {
                "必需性": "是"
            }
        },
        {
            "type": "操作绑定",
            "关系ID": "03REL003",
            "source": "03ALG002",
            "target": "03DS001",
            "attributes": {
                "必需性": "是"
            }
        },
        {
            "type": "操作绑定",
            "关系ID": "03REL004",
            "source": "03ALG003",
            "target": "03DS001",
            "attributes": {
                "必需性": "是"
            }
        },
        {
            "type": "操作绑定",
            "关系ID": "03REL005",
            "source": "03ALG004",
            "target": "03DS001",
            "attributes": {
                "必需性": "是"
            }
        },
        {
            "type": "操作绑定",
            "关系ID": "03REL006",
            "source": "03ALG005",
            "target": "03DS001",
            "attributes": {
                "必需性": "是"
            }
        },
        {
            "type": "操作绑定",
            "关系ID": "03REL007",
            "source": "03ALG006",
            "target": "03DS001",
            "attributes": {
                "必需性": "是"
            }
        },
        {
            "type": "操作绑定",
            "关系ID": "03REL008",
            "source": "03ALG007",
            "target": "03DS001",
            "attributes": {
                "必需性": "是"
            }
        },
        {
            "type": "操作绑定",
            "关系ID": "03REL009",
            "source": "03ALG008",
            "target": "03DS001",
            "attributes": {
                "必需性": "是"
            }
        },
        {
            "type": "操作绑定",
            "关系ID": "03REL010",
            "source": "03ALG009",
            "target": "03DS001",
            "attributes": {
                "必需性": "是"
            }
        },
        {
            "type": "操作绑定",
            "关系ID": "03REL011",
            "source": "03ALG010",
            "target": "03DS001",
            "attributes": {
                "必需性": "是"
            }
        },
        {
            "type": "操作绑定",
            "关系ID": "03REL012",
            "source": "03ALG011",
            "target": "03DS001",
            "attributes": {
                "必需性": "是"
            }
        },
        {
            "type": "操作绑定",
            "关系ID": "03REL013",
            "source": "03ALG012",
            "target": "03DS001",
            "attributes": {
                "必需性": "是"
            }
        },
        {
            "type": "操作绑定",
            "关系ID": "03REL014",
            "source": "03ALG013",
            "target": "03DS001",
            "attributes": {
                "必需性": "是"
            }
        },
        {
            "type": "继承",
            "关系ID": "03REL015",
            "source": "03DS001",
            "target": "03DS002",
            "attributes": {
                "约束条件": "使用连续内存（数组）存储"
            }
        },
        {
            "type": "使用",
            "关系ID": "03REL016",
            "source": "03DS002",
            "target": "03DS003",
            "attributes": {
                "使用角色": "底层存储"
            }
        },
        {
            "type": "使用",
            "关系ID": "03REL017",
            "source": "03ALG015",
            "target": "03ALG014",
            "attributes": {
                "使用角色": "排序核心"
            }
        },
        {
            "type": "操作绑定",
            "关系ID": "03REL018",
            "source": "03ALG015",
            "target": "03DS001",
            "attributes": {
                "必需性": "否"
            }
        },
        {
            "type": "继承",
            "关系ID": "03REL019",
            "source": "03DS001",
            "target": "03DS004",
            "attributes": {
                "约束条件": "使用链式结构存储"
            }
        },
        {
            "type": "使用",
            "关系ID": "03REL020",
            "source": "03DS004",
            "target": "03DS005",
            "attributes": {
                "使用角色": "底层存储"
            }
        },
        {
            "type": "继承",
            "关系ID": "03REL021",
            "source": "03CON002",
            "target": "03DS006",
            "attributes": {
                "约束条件": "非零元素远少于零元素"
            }
        },
        {
            "type": "使用",
            "关系ID": "03REL022",
            "source": "03DS006",
            "target": "03CON003",
            "attributes": {
                "使用角色": "表示非零元素"
            }
        },
        {
            "type": "使用",
            "关系ID": "03REL023",
            "source": "03DS007",
            "target": "03CON003",
            "attributes": {
                "使用角色": "构成元素"
            }
        },
        {
            "type": "理论依赖",
            "关系ID": "03REL024",
            "source": "03DS007",
            "target": "03DS006",
            "attributes": {
                "依赖强度": "强"
            }
        },
        {
            "type": "操作绑定",
            "关系ID": "03REL025",
            "source": "03ALG016",
            "target": "03DS006",
            "attributes": {
                "必需性": "是"
            }
        },
        {
            "type": "操作绑定",
            "关系ID": "03REL026",
            "source": "03ALG017",
            "target": "03DS006",
            "attributes": {
                "必需性": "是"
            }
        },
        {
            "type": "操作绑定",
            "关系ID": "03REL027",
            "source": "03ALG018",
            "target": "03DS006",
            "attributes": {
                "必需性": "是"
            }
        },
        {
            "type": "操作绑定",
            "关系ID": "03REL028",
            "source": "03ALG019",
            "target": "03DS006",
            "attributes": {
                "必需性": "是"
            }
        },
        {
            "type": "操作绑定",
            "关系ID": "03REL029",
            "source": "03ALG020",
            "target": "03DS006",
            "attributes": {
                "必需性": "是"
            }
        },
        {
            "type": "操作绑定",
            "关系ID": "03REL030",
            "source": "03ALG021",
            "target": "03DS006",
            "attributes": {
                "必需性": "是"
            }
        },
        {
            "type": "继承",
            "关系ID": "03REL031",
            "source": "03DS007",
            "target": "03DS008",
            "attributes": {
                "约束条件": "使用结构体包含数组实现"
            }
        },
        {
            "type": "使用",
            "关系ID": "03REL032",
            "source": "03DS008",
            "target": "03DS003",
            "attributes": {
                "使用角色": "存储三元组"
            }
        },
        {
            "type": "继承",
            "关系ID": "03REL033",
            "source": "03DS009",
            "target": "03DS010",
            "attributes": {
                "约束条件": "使用行指针向量+行链表"
            }
        },
        {
            "type": "使用",
            "关系ID": "03REL034",
            "source": "03DS010",
            "target": "03DS003",
            "attributes": {
                "使用角色": "行指针向量"
            }
        },
        {
            "type": "使用",
            "关系ID": "03REL035",
            "source": "03DS010",
            "target": "03DS005",
            "attributes": {
                "使用角色": "存储行内非零元"
            }
        },
        {
            "type": "继承",
            "关系ID": "03REL036",
            "source": "03DS009",
            "target": "03DS011",
            "attributes": {
                "约束条件": "使用行列指针向量+十字链表结点"
            }
        },
        {
            "type": "使用",
            "关系ID": "03REL037",
            "source": "03DS011",
            "target": "03DS003",
            "attributes": {
                "使用角色": "行/列指针向量"
            }
        },
        {
            "type": "使用",
            "关系ID": "03REL038",
            "source": "03DS011",
            "target": "03DS005",
            "attributes": {
                "使用角色": "构成行链和列链"
            }
        },
        {
            "type": "变体",
            "关系ID": "03REL039",
            "source": "03ALG016",
            "target": "03ALG022",
            "attributes": {
                "变体类型": "基于顺序存储的实现"
            }
        },
        {
            "type": "优化",
            "关系ID": "03REL040",
            "source": "03ALG022",
            "target": "03ALG023",
            "attributes": {
                "优化方向": "时间复杂度"
            }
        },
        {
            "type": "变体",
            "关系ID": "03REL041",
            "source": "03ALG016",
            "target": "03ALG023",
            "attributes": {
                "变体类型": "基于顺序存储的高效实现"
            }
        },
        {
            "type": "使用",
            "关系ID": "03REL042",
            "source": "03DS012",
            "target": "03CON004",
            "attributes": {
                "使用角色": "构成元素"
            }
        },
        {
            "type": "使用",
            "关系ID": "03REL043",
            "source": "03DS012",
            "target": "03CON005",
            "attributes": {
                "使用角色": "构成元素 (递归)"
            }
        },
        {
            "type": "理论依赖",
            "关系ID": "03REL044",
            "source": "03CON005",
            "target": "03DS012",
            "attributes": {
                "依赖强度": "强"
            }
        },
        {
            "type": "继承",
            "关系ID": "03REL045",
            "source": "03DS012",
            "target": "03DS013",
            "attributes": {
                "约束条件": "使用带标志位的递归链式结点"
            }
        },
        {
            "type": "使用",
            "关系ID": "03REL046",
            "source": "03DS013",
            "target": "03CON010",
            "attributes": {
                "使用角色": "简化操作 (可选)"
            }
        },
        {
            "type": "操作绑定",
            "关系ID": "03REL047",
            "source": "03ALG024",
            "target": "03DS012",
            "attributes": {
                "必需性": "否"
            }
        },
        {
            "type": "操作绑定",
            "关系ID": "03REL048",
            "source": "03ALG025",
            "target": "03DS012",
            "attributes": {
                "必需性": "否"
            }
        },
        {
            "type": "操作绑定",
            "关系ID": "03REL049",
            "source": "03ALG026",
            "target": "03DS012",
            "attributes": {
                "必需性": "是"
            }
        },
        {
            "type": "操作绑定",
            "关系ID": "03REL050",
            "source": "03ALG027",
            "target": "03DS012",
            "attributes": {
                "必需性": "是"
            }
        },
        {
            "type": "继承",
            "关系ID": "04REL001",
            "source": "04DS001",
            "target": "04DS010",
            "attributes": {
                "约束条件": "运算受限（仅限一端操作）"
            }
        },
        {
            "type": "理论依赖",
            "关系ID": "04REL002",
            "source": "04DS001",
            "target": "04CON001",
            "attributes": {
                "依赖强度": "强"
            }
        },
        {
            "type": "理论依赖",
            "关系ID": "04REL003",
            "source": "04DS001",
            "target": "04CON002",
            "attributes": {
                "依赖强度": "强"
            }
        },
        {
            "type": "理论依赖",
            "关系ID": "04REL004",
            "source": "04DS001",
            "target": "04CON003",
            "attributes": {
                "依赖强度": "强"
            }
        },
        {
            "type": "理论依赖",
            "关系ID": "04REL005",
            "source": "04DS001",
            "target": "04CON004",
            "attributes": {
                "依赖强度": "强"
            }
        },
        {
            "type": "操作绑定",
            "关系ID": "04REL006",
            "source": "04ALG001",
            "target": "04DS001",
            "attributes": {
                "必需性": "是"
            }
        },
        {
            "type": "操作绑定",
            "关系ID": "04REL007",
            "source": "04ALG002",
            "target": "04DS001",
            "attributes": {
                "必需性": "是"
            }
        },
        {
            "type": "操作绑定",
            "关系ID": "04REL008",
            "source": "04ALG003",
            "target": "04DS001",
            "attributes": {
                "必需性": "是"
            }
        },
        {
            "type": "操作绑定",
            "关系ID": "04REL009",
            "source": "04ALG004",
            "target": "04DS001",
            "attributes": {
                "必需性": "是"
            }
        },
        {
            "type": "操作绑定",
            "关系ID": "04REL010",
            "source": "04ALG005",
            "target": "04DS001",
            "attributes": {
                "必需性": "是"
            }
        },
        {
            "type": "操作绑定",
            "关系ID": "04REL011",
            "source": "04ALG006",
            "target": "04DS001",
            "attributes": {
                "必需性": "是"
            }
        },
        {
            "type": "继承",
            "关系ID": "04REL012",
            "source": "04DS002",
            "target": "04DS001",
            "attributes": {
                "约束条件": "使用顺序存储实现"
            }
        },
        {
            "type": "使用",
            "关系ID": "04REL013",
            "source": "04DS002",
            "target": "04DS003",
            "attributes": {
                "使用角色": "底层存储"
            }
        },
        {
            "type": "理论依赖",
            "关系ID": "04REL014",
            "source": "04DS002",
            "target": "04CON005",
            "attributes": {
                "依赖强度": "强"
            }
        },
        {
            "type": "理论依赖",
            "关系ID": "04REL015",
            "source": "04DS002",
            "target": "04CON006",
            "attributes": {
                "依赖强度": "中"
            }
        },
        {
            "type": "理论依赖",
            "关系ID": "04REL016",
            "source": "04DS002",
            "target": "04CON007",
            "attributes": {
                "依赖强度": "强"
            }
        },
        {
            "type": "继承",
            "关系ID": "04REL017",
            "source": "04DS004",
            "target": "04DS001",
            "attributes": {
                "约束条件": "使用链式存储实现"
            }
        },
        {
            "type": "使用",
            "关系ID": "04REL018",
            "source": "04DS004",
            "target": "04DS005",
            "attributes": {
                "使用角色": "底层存储"
            }
        },
        {
            "type": "理论依赖",
            "关系ID": "04REL019",
            "source": "04DS004",
            "target": "04CON005",
            "attributes": {
                "依赖强度": "强"
            }
        },
        {
            "type": "理论依赖",
            "关系ID": "04REL020",
            "source": "04DS004",
            "target": "04CON008",
            "attributes": {
                "依赖强度": "强"
            }
        },
        {
            "type": "使用",
            "关系ID": "04REL021",
            "source": "04ALG007",
            "target": "04DS001",
            "attributes": {
                "使用角色": "核心工具"
            }
        },
        {
            "type": "使用",
            "关系ID": "04REL022",
            "source": "04ALG008",
            "target": "04DS001",
            "attributes": {
                "使用角色": "存储中间结果"
            }
        },
        {
            "type": "理论依赖",
            "关系ID": "04REL023",
            "source": "04CON010",
            "target": "04CON009",
            "attributes": {
                "依赖强度": "强"
            }
        },
        {
            "type": "理论依赖",
            "关系ID": "04REL024",
            "source": "04CON011",
            "target": "04CON009",
            "attributes": {
                "依赖强度": "强"
            }
        },
        {
            "type": "理论依赖",
            "关系ID": "04REL025",
            "source": "04CON009",
            "target": "04CON012",
            "attributes": {
                "依赖强度": "强"
            }
        },
        {
            "type": "理论依赖",
            "关系ID": "04REL026",
            "source": "04CON009",
            "target": "04CON013",
            "attributes": {
                "依赖强度": "强"
            }
        },
        {
            "type": "理论依赖",
            "关系ID": "04REL027",
            "source": "04CON010",
            "target": "04CON014",
            "attributes": {
                "依赖强度": "强"
            }
        },
        {
            "type": "使用",
            "关系ID": "04REL028",
            "source": "04ALG009",
            "target": "04DS001",
            "attributes": {
                "使用角色": "存储操作数和中间结果"
            }
        },
        {
            "type": "使用",
            "关系ID": "04REL029",
            "source": "04ALG010",
            "target": "04DS001",
            "attributes": {
                "使用角色": "存储运算符"
            }
        },
        {
            "type": "理论依赖",
            "关系ID": "04REL030",
            "source": "04CON015",
            "target": "04DS001",
            "attributes": {
                "依赖强度": "强"
            }
        },
        {
            "type": "理论依赖",
            "关系ID": "04REL031",
            "source": "04ALG011",
            "target": "04CON015",
            "attributes": {
                "依赖强度": "强"
            }
        },
        {
            "type": "使用",
            "关系ID": "04REL032",
            "source": "04ALG011",
            "target": "04DS001",
            "attributes": {
                "使用角色": "隐式调用栈"
            }
        },
        {
            "type": "理论依赖",
            "关系ID": "04REL033",
            "source": "04ALG012",
            "target": "04CON015",
            "attributes": {
                "依赖强度": "强"
            }
        },
        {
            "type": "使用",
            "关系ID": "04REL034",
            "source": "04ALG012",
            "target": "04DS001",
            "attributes": {
                "使用角色": "隐式调用栈"
            }
        },
        {
            "type": "理论依赖",
            "关系ID": "04REL035",
            "source": "04ALG013",
            "target": "04CON015",
            "attributes": {
                "依赖强度": "强"
            }
        },
        {
            "type": "使用",
            "关系ID": "04REL036",
            "source": "04ALG013",
            "target": "04DS001",
            "attributes": {
                "使用角色": "隐式调用栈"
            }
        },
        {
            "type": "理论依赖",
            "关系ID": "04REL037",
            "source": "04ALG014",
            "target": "04CON015",
            "attributes": {
                "依赖强度": "强"
            }
        },
        {
            "type": "使用",
            "关系ID": "04REL038",
            "source": "04ALG014",
            "target": "04DS001",
            "attributes": {
                "使用角色": "隐式调用栈 或 显式路径记录"
            }
        },
        {
            "type": "理论依赖",
            "关系ID": "04REL039",
            "source": "04ALG015",
            "target": "04CON015",
            "attributes": {
                "依赖强度": "强"
            }
        },
        {
            "type": "使用",
            "关系ID": "04REL040",
            "source": "04ALG015",
            "target": "04DS001",
            "attributes": {
                "使用角色": "隐式调用栈"
            }
        },
        {
            "type": "继承",
            "关系ID": "04REL041",
            "source": "04DS006",
            "target": "04DS010",
            "attributes": {
                "约束条件": "运算受限（队首出、队尾入）"
            }
        },
        {
            "type": "理论依赖",
            "关系ID": "04REL042",
            "source": "04DS006",
            "target": "04CON016",
            "attributes": {
                "依赖强度": "强"
            }
        },
        {
            "type": "理论依赖",
            "关系ID": "04REL043",
            "source": "04DS006",
            "target": "04CON017",
            "attributes": {
                "依赖强度": "强"
            }
        },
        {
            "type": "理论依赖",
            "关系ID": "04REL044",
            "source": "04DS006",
            "target": "04CON018",
            "attributes": {
                "依赖强度": "强"
            }
        },
        {
            "type": "理论依赖",
            "关系ID": "04REL045",
            "source": "04DS006",
            "target": "04CON019",
            "attributes": {
                "依赖强度": "强"
            }
        },
        {
            "type": "理论依赖",
            "关系ID": "04REL046",
            "source": "04DS006",
            "target": "04CON020",
            "attributes": {
                "依赖强度": "强"
            }
        },
        {
            "type": "操作绑定",
            "关系ID": "04REL047",
            "source": "04ALG016",
            "target": "04DS006",
            "attributes": {
                "必需性": "是"
            }
        },
        {
            "type": "操作绑定",
            "关系ID": "04REL048",
            "source": "04ALG017",
            "target": "04DS006",
            "attributes": {
                "必需性": "是"
            }
        },
        {
            "type": "操作绑定",
            "关系ID": "04REL049",
            "source": "04ALG018",
            "target": "04DS006",
            "attributes": {
                "必需性": "是"
            }
        },
        {
            "type": "操作绑定",
            "关系ID": "04REL050",
            "source": "04ALG019",
            "target": "04DS006",
            "attributes": {
                "必需性": "是"
            }
        },
        {
            "type": "操作绑定",
            "关系ID": "04REL051",
            "source": "04ALG020",
            "target": "04DS006",
            "attributes": {
                "必需性": "是"
            }
        },
        {
            "type": "操作绑定",
            "关系ID": "04REL052",
            "source": "04ALG021",
            "target": "04DS006",
            "attributes": {
                "必需性": "是"
            }
        },
        {
            "type": "继承",
            "关系ID": "04REL053",
            "source": "04DS007",
            "target": "04DS006",
            "attributes": {
                "约束条件": "使用顺序存储（通常循环）实现"
            }
        },
        {
            "type": "使用",
            "关系ID": "04REL054",
            "source": "04DS007",
            "target": "04DS003",
            "attributes": {
                "使用角色": "底层存储"
            }
        },
        {
            "type": "理论依赖",
            "关系ID": "04REL055",
            "source": "04DS007",
            "target": "04CON021",
            "attributes": {
                "依赖强度": "强"
            }
        },
        {
            "type": "理论依赖",
            "关系ID": "04REL056",
            "source": "04DS007",
            "target": "04CON022",
            "attributes": {
                "依赖强度": "强"
            }
        },
        {
            "type": "理论依赖",
            "关系ID": "04REL057",
            "source": "04DS007",
            "target": "04CON023",
            "attributes": {
                "依赖强度": "强"
            }
        },
        {
            "type": "理论依赖",
            "关系ID": "04REL058",
            "source": "04DS007",
            "target": "04CON024",
            "attributes": {
                "依赖强度": "强"
            }
        },
        {
            "type": "继承",
            "关系ID": "04REL059",
            "source": "04DS008",
            "target": "04DS006",
            "attributes": {
                "约束条件": "使用链式存储实现"
            }
        },
        {
            "type": "使用",
            "关系ID": "04REL060",
            "source": "04DS008",
            "target": "04DS005",
            "attributes": {
                "使用角色": "底层存储"
            }
        },
        {
            "type": "理论依赖",
            "关系ID": "04REL061",
            "source": "04DS008",
            "target": "04CON008",
            "attributes": {
                "依赖强度": "强"
            }
        },
        {
            "type": "理论依赖",
            "关系ID": "04REL062",
            "source": "04DS008",
            "target": "04CON021",
            "attributes": {
                "依赖强度": "强"
            }
        },
        {
            "type": "理论依赖",
            "关系ID": "04REL063",
            "source": "04DS008",
            "target": "04CON022",
            "attributes": {
                "依赖强度": "强"
            }
        },
        {
            "type": "变体",
            "关系ID": "04REL064",
            "source": "04DS006",
            "target": "04DS009",
            "attributes": {
                "变体类型": "按优先级出队"
            }
        },
        {
            "type": "理论依赖",
            "关系ID": "05REL001",
            "source": "05DS001",
            "target": "05CON004",
            "attributes": {
                "依赖强度": "强"
            }
        },
        {
            "type": "理论依赖",
            "关系ID": "05REL002",
            "source": "05CON002",
            "target": "05CON005",
            "attributes": {
                "依赖强度": "强"
            }
        },
        {
            "type": "理论依赖",
            "关系ID": "05REL003",
            "source": "05CON003",
            "target": "05CON006",
            "attributes": {
                "依赖强度": "强"
            }
        },
        {
            "type": "理论依赖",
            "关系ID": "05REL004",
            "source": "05CON008",
            "target": "05CON007",
            "attributes": {
                "依赖强度": "中"
            }
        },
        {
            "type": "理论依赖",
            "关系ID": "05REL005",
            "source": "05CON010",
            "target": "05CON009",
            "attributes": {
                "依赖强度": "强"
            }
        },
        {
            "type": "理论依赖",
            "关系ID": "05REL006",
            "source": "05CON011",
            "target": "05CON009",
            "attributes": {
                "依赖强度": "强"
            }
        },
        {
            "type": "理论依赖",
            "关系ID": "05REL007",
            "source": "05CON012",
            "target": "05CON006",
            "attributes": {
                "依赖强度": "强"
            }
        },
        {
            "type": "理论依赖",
            "关系ID": "05REL008",
            "source": "05CON013",
            "target": "05CON005",
            "attributes": {
                "依赖强度": "强"
            }
        },
        {
            "type": "理论依赖",
            "关系ID": "05REL009",
            "source": "05CON014",
            "target": "05CON013",
            "attributes": {
                "依赖强度": "强"
            }
        },
        {
            "type": "理论依赖",
            "关系ID": "05REL010",
            "source": "05CON016",
            "target": "05CON015",
            "attributes": {
                "依赖强度": "强"
            }
        },
        {
            "type": "理论依赖",
            "关系ID": "05REL011",
            "source": "05CON019",
            "target": "05DS001",
            "attributes": {
                "依赖强度": "强"
            }
        },
        {
            "type": "继承",
            "关系ID": "05REL012",
            "source": "05DS002",
            "target": "05DS001",
            "attributes": {
                "父类 ID": "05DS001",
                "子类 ID": "05DS002",
                "约束条件": "度为k"
            }
        },
        {
            "type": "继承",
            "关系ID": "05REL013",
            "source": "05DS003",
            "target": "05DS002",
            "attributes": {
                "父类 ID": "05DS002",
                "子类 ID": "05DS003",
                "约束条件": "结点数达到最大值"
            }
        },
        {
            "type": "继承",
            "关系ID": "05REL014",
            "source": "05DS004",
            "target": "05DS001",
            "attributes": {
                "父类 ID": "05DS001",
                "子类 ID": "05DS004",
                "约束条件": "度为2"
            }
        },
        {
            "type": "继承",
            "关系ID": "05REL015",
            "source": "05DS004",
            "target": "05CON017",
            "attributes": {
                "父类 ID": "05CON017",
                "子类 ID": "05DS004",
                "约束条件": "子树区分左右"
            }
        },
        {
            "type": "理论依赖",
            "关系ID": "05REL016",
            "source": "05DS004",
            "target": "05CON004",
            "attributes": {
                "依赖强度": "强"
            }
        },
        {
            "type": "理论依赖",
            "关系ID": "05REL017",
            "source": "05CON020",
            "target": "05CON012",
            "attributes": {
                "依赖强度": "强"
            }
        },
        {
            "type": "理论依赖",
            "关系ID": "05REL018",
            "source": "05CON021",
            "target": "05CON012",
            "attributes": {
                "依赖强度": "强"
            }
        },
        {
            "type": "继承",
            "关系ID": "05REL019",
            "source": "05DS005",
            "target": "05DS004",
            "attributes": {
                "父类 ID": "05DS004",
                "子类 ID": "05DS005",
                "约束条件": "每层都满"
            }
        },
        {
            "type": "继承",
            "关系ID": "05REL020",
            "source": "05DS005",
            "target": "05DS003",
            "attributes": {
                "父类 ID": "05DS003",
                "子类 ID": "05DS005",
                "约束条件": "k=2"
            }
        },
        {
            "type": "继承",
            "关系ID": "05REL021",
            "source": "05DS006",
            "target": "05DS004",
            "attributes": {
                "父类 ID": "05DS004",
                "子类 ID": "05DS006",
                "约束条件": "除最后一层外满, 最后一层靠左"
            }
        },
        {
            "type": "继承",
            "关系ID": "05REL022",
            "source": "05DS005",
            "target": "05DS006",
            "attributes": {
                "父类 ID": "05DS006",
                "子类 ID": "05DS005",
                "约束条件": "最后一层也满"
            }
        },
        {
            "type": "继承",
            "关系ID": "05REL023",
            "source": "05DS007",
            "target": "05DS004",
            "attributes": {
                "父类 ID": "05DS004",
                "子类 ID": "05DS007",
                "约束条件": "除最后一层外满"
            }
        },
        {
            "type": "继承",
            "关系ID": "05REL024",
            "source": "05DS006",
            "target": "05DS007",
            "attributes": {
                "父类 ID": "05DS007",
                "子类 ID": "05DS006",
                "约束条件": "最后一层靠左"
            }
        },
        {
            "type": "操作绑定",
            "关系ID": "05REL025",
            "source": "05ALG001",
            "target": "05DS004",
            "attributes": {
                "算法 ID": "05ALG001",
                "数据结构 ID": "05DS004",
                "必需性": "是"
            }
        },
        {
            "type": "操作绑定",
            "关系ID": "05REL026",
            "source": "05ALG002",
            "target": "05DS004",
            "attributes": {
                "算法 ID": "05ALG002",
                "数据结构 ID": "05DS004",
                "必需性": "是"
            }
        },
        {
            "type": "理论依赖",
            "关系ID": "05REL027",
            "source": "05ALG002",
            "target": "05CON008",
            "attributes": {
                "依赖强度": "强"
            }
        },
        {
            "type": "使用",
            "关系ID": "05REL028",
            "source": "05ALG002",
            "target": "05CON022",
            "attributes": {
                "使用方ID": "05ALG002",
                "被使用的数据结构 ID": "05CON022",
                "使用角色": "辅助结构"
            }
        },
        {
            "type": "操作绑定",
            "关系ID": "05REL029",
            "source": "05ALG003",
            "target": "05DS004",
            "attributes": {
                "算法 ID": "05ALG003",
                "数据结构 ID": "05DS004",
                "必需性": "是"
            }
        },
        {
            "type": "理论依赖",
            "关系ID": "05REL030",
            "source": "05CON023",
            "target": "05DS004",
            "attributes": {
                "依赖强度": "强"
            }
        },
        {
            "type": "操作绑定",
            "关系ID": "05REL031",
            "source": "05ALG004",
            "target": "05DS004",
            "attributes": {
                "算法 ID": "05ALG004",
                "数据结构 ID": "05DS004",
                "必需性": "是"
            }
        },
        {
            "type": "操作绑定",
            "关系ID": "05REL032",
            "source": "05ALG005",
            "target": "05DS004",
            "attributes": {
                "算法 ID": "05ALG005",
                "数据结构 ID": "05DS004",
                "必需性": "是"
            }
        },
        {
            "type": "理论依赖",
            "关系ID": "05REL033",
            "source": "05ALG005",
            "target": "05CON016",
            "attributes": {
                "依赖强度": "强"
            }
        },
        {
            "type": "操作绑定",
            "关系ID": "05REL034",
            "source": "05ALG006",
            "target": "05DS004",
            "attributes": {
                "算法 ID": "05ALG006",
                "数据结构 ID": "05DS004",
                "必需性": "是"
            }
        },
        {
            "type": "理论依赖",
            "关系ID": "05REL035",
            "source": "05ALG006",
            "target": "05CON008",
            "attributes": {
                "依赖强度": "强"
            }
        },
        {
            "type": "操作绑定",
            "关系ID": "05REL036",
            "source": "05ALG007",
            "target": "05DS004",
            "attributes": {
                "算法 ID": "05ALG007",
                "数据结构 ID": "05DS004",
                "必需性": "是"
            }
        },
        {
            "type": "使用",
            "关系ID": "05REL037",
            "source": "05DS008",
            "target": "05CON024",
            "attributes": {
                "使用方ID": "05DS008",
                "被使用的数据结构 ID": "05CON024",
                "使用角色": "底层存储"
            }
        },
        {
            "type": "理论依赖",
            "关系ID": "05REL038",
            "source": "05DS006",
            "target": "05DS008",
            "attributes": {
                "依赖强度": "中"
            }
        },
        {
            "type": "继承",
            "关系ID": "05REL039",
            "source": "05DS010",
            "target": "05DS009",
            "attributes": {
                "父类 ID": "05DS009",
                "子类 ID": "05DS010",
                "约束条件": "无双亲指针"
            }
        },
        {
            "type": "使用",
            "关系ID": "05REL040",
            "source": "05DS004",
            "target": "05DS010",
            "attributes": {
                "使用方ID": "05DS004",
                "被使用的数据结构 ID": "05DS010",
                "使用角色": "存储实现"
            }
        },
        {
            "type": "变体",
            "关系ID": "05REL041",
            "source": "05DS011",
            "target": "05DS010",
            "attributes": {
                "基础 ID": "05DS010",
                "变体 ID": "05DS011",
                "变体类型": "增加双亲指针"
            }
        },
        {
            "type": "使用",
            "关系ID": "05REL042",
            "source": "05DS004",
            "target": "05DS011",
            "attributes": {
                "使用方ID": "05DS004",
                "被使用的数据结构 ID": "05DS011",
                "使用角色": "存储实现"
            }
        },
        {
            "type": "操作绑定",
            "关系ID": "05REL043",
            "source": "05ALG008",
            "target": "05DS004",
            "attributes": {
                "算法 ID": "05ALG008",
                "数据结构 ID": "05DS004",
                "必需性": "是"
            }
        },
        {
            "type": "理论依赖",
            "关系ID": "05REL044",
            "source": "05ALG008",
            "target": "05CON023",
            "attributes": {
                "依赖强度": "强"
            }
        },
        {
            "type": "操作绑定",
            "关系ID": "05REL045",
            "source": "05ALG009",
            "target": "05DS004",
            "attributes": {
                "算法 ID": "05ALG009",
                "数据结构 ID": "05DS004",
                "必需性": "是"
            }
        },
        {
            "type": "理论依赖",
            "关系ID": "05REL046",
            "source": "05ALG009",
            "target": "05CON023",
            "attributes": {
                "依赖强度": "强"
            }
        },
        {
            "type": "操作绑定",
            "关系ID": "05REL047",
            "source": "05ALG010",
            "target": "05DS004",
            "attributes": {
                "算法 ID": "05ALG010",
                "数据结构 ID": "05DS004",
                "必需性": "是"
            }
        },
        {
            "type": "理论依赖",
            "关系ID": "05REL048",
            "source": "05ALG010",
            "target": "05CON023",
            "attributes": {
                "依赖强度": "强"
            }
        },
        {
            "type": "操作绑定",
            "关系ID": "05REL049",
            "source": "05ALG011",
            "target": "05DS004",
            "attributes": {
                "算法 ID": "05ALG011",
                "数据结构 ID": "05DS004",
                "必需性": "是"
            }
        },
        {
            "type": "理论依赖",
            "关系ID": "05REL050",
            "source": "05ALG011",
            "target": "05CON023",
            "attributes": {
                "依赖强度": "强"
            }
        },
        {
            "type": "使用",
            "关系ID": "05REL051",
            "source": "05ALG011",
            "target": "05CON025",
            "attributes": {
                "使用方ID": "05ALG011",
                "被使用的数据结构 ID": "05CON025",
                "使用角色": "辅助结构"
            }
        },
        {
            "type": "操作绑定",
            "关系ID": "05REL052",
            "source": "05ALG012",
            "target": "05DS002",
            "attributes": {
                "算法 ID": "05ALG012",
                "数据结构 ID": "05DS002",
                "必需性": "是"
            }
        },
        {
            "type": "操作绑定",
            "关系ID": "05REL053",
            "source": "05ALG013",
            "target": "05DS002",
            "attributes": {
                "算法 ID": "05ALG013",
                "数据结构 ID": "05DS002",
                "必需性": "是"
            }
        },
        {
            "type": "理论依赖",
            "关系ID": "05REL054",
            "source": "05ALG013",
            "target": "05CON008",
            "attributes": {
                "依赖强度": "强"
            }
        },
        {
            "type": "使用",
            "关系ID": "05REL055",
            "source": "05ALG013",
            "target": "05CON022",
            "attributes": {
                "使用方ID": "05ALG013",
                "被使用的数据结构 ID": "05CON022",
                "使用角色": "辅助结构"
            }
        },
        {
            "type": "使用",
            "关系ID": "05REL056",
            "source": "05ALG013",
            "target": "05DS012",
            "attributes": {
                "使用方ID": "05ALG013",
                "被使用的数据结构 ID": "05DS012",
                "使用角色": "生成目标"
            }
        },
        {
            "type": "继承",
            "关系ID": "05REL057",
            "source": "05DS012",
            "target": "05DS013",
            "attributes": {
                "父类 ID": "05DS013",
                "子类 ID": "05DS012",
                "约束条件": "标准方式, k个孩子指针"
            }
        },
        {
            "type": "理论依赖",
            "关系ID": "05REL058",
            "source": "05CON026",
            "target": "05DS001",
            "attributes": {
                "依赖强度": "强"
            }
        },
        {
            "type": "操作绑定",
            "关系ID": "05REL059",
            "source": "05ALG014",
            "target": "05DS002",
            "attributes": {
                "算法 ID": "05ALG014",
                "数据结构 ID": "05DS002",
                "必需性": "是"
            }
        },
        {
            "type": "操作绑定",
            "关系ID": "05REL060",
            "source": "05ALG015",
            "target": "05DS002",
            "attributes": {
                "算法 ID": "05ALG015",
                "数据结构 ID": "05DS002",
                "必需性": "是"
            }
        },
        {
            "type": "理论依赖",
            "关系ID": "05REL061",
            "source": "05ALG015",
            "target": "05CON008",
            "attributes": {
                "依赖强度": "强"
            }
        },
        {
            "type": "操作绑定",
            "关系ID": "05REL062",
            "source": "05ALG016",
            "target": "05DS002",
            "attributes": {
                "算法 ID": "05ALG016",
                "数据结构 ID": "05DS002",
                "必需性": "是"
            }
        },
        {
            "type": "操作绑定",
            "关系ID": "05REL063",
            "source": "05ALG017",
            "target": "05DS002",
            "attributes": {
                "算法 ID": "05ALG017",
                "数据结构 ID": "05DS002",
                "必需性": "是"
            }
        },
        {
            "type": "使用",
            "关系ID": "05REL064",
            "source": "05DS014",
            "target": "05CON024",
            "attributes": {
                "使用方ID": "05DS014",
                "被使用的数据结构 ID": "05CON024",
                "使用角色": "底层存储"
            }
        },
        {
            "type": "变体",
            "关系ID": "05REL065",
            "source": "05DS015",
            "target": "05DS012",
            "attributes": {
                "基础 ID": "05DS012",
                "变体 ID": "05DS015",
                "变体类型": "增加双亲指针"
            }
        },
        {
            "type": "使用",
            "关系ID": "05REL066",
            "source": "05DS016",
            "target": "05DS010",
            "attributes": {
                "使用方ID": "05DS016",
                "被使用的数据结构 ID": "05DS010",
                "使用角色": "底层存储"
            }
        },
        {
            "type": "使用",
            "关系ID": "05REL067",
            "source": "05DS001",
            "target": "05DS016",
            "attributes": {
                "使用方ID": "05DS001",
                "被使用的数据结构 ID": "05DS016",
                "使用角色": "存储实现"
            }
        },
        {
            "type": "操作绑定",
            "关系ID": "05REL068",
            "source": "05ALG018",
            "target": "05DS002",
            "attributes": {
                "算法 ID": "05ALG018",
                "数据结构 ID": "05DS002",
                "必需性": "是"
            }
        },
        {
            "type": "理论依赖",
            "关系ID": "05REL069",
            "source": "05ALG018",
            "target": "05CON026",
            "attributes": {
                "依赖强度": "强"
            }
        },
        {
            "type": "操作绑定",
            "关系ID": "05REL070",
            "source": "05ALG019",
            "target": "05DS002",
            "attributes": {
                "算法 ID": "05ALG019",
                "数据结构 ID": "05DS002",
                "必需性": "是"
            }
        },
        {
            "type": "理论依赖",
            "关系ID": "05REL071",
            "source": "05ALG019",
            "target": "05CON026",
            "attributes": {
                "依赖强度": "强"
            }
        },
        {
            "type": "操作绑定",
            "关系ID": "05REL072",
            "source": "05ALG020",
            "target": "05DS002",
            "attributes": {
                "算法 ID": "05ALG020",
                "数据结构 ID": "05DS002",
                "必需性": "是"
            }
        },
        {
            "type": "理论依赖",
            "关系ID": "05REL073",
            "source": "05ALG020",
            "target": "05CON026",
            "attributes": {
                "依赖强度": "强"
            }
        },
        {
            "type": "使用",
            "关系ID": "05REL074",
            "source": "05ALG020",
            "target": "05CON025",
            "attributes": {
                "使用方ID": "05ALG020",
                "被使用的数据结构 ID": "05CON025",
                "使用角色": "辅助结构"
            }
        },
        {
            "type": "操作绑定",
            "关系ID": "05REL075",
            "source": "05ALG021",
            "target": "05DS002",
            "attributes": {
                "算法 ID": "05ALG021",
                "数据结构 ID": "05DS002",
                "必需性": "是"
            }
        },
        {
            "type": "理论依赖",
            "关系ID": "05REL076",
            "source": "05ALG021",
            "target": "05CON016",
            "attributes": {
                "依赖强度": "强"
            }
        },
        {
            "type": "继承",
            "关系ID": "07REL001",
            "source": "07DS002",
            "target": "07DS001",
            "attributes": {
                "约束条件": "边是序偶"
            }
        },
        {
            "type": "继承",
            "关系ID": "07REL002",
            "source": "07DS003",
            "target": "07DS001",
            "attributes": {
                "约束条件": "边是无序对"
            }
        },
        {
            "type": "继承",
            "关系ID": "07REL003",
            "source": "07DS004",
            "target": "07DS001",
            "attributes": {
                "约束条件": "边带权"
            }
        },
        {
            "type": "理论依赖",
            "关系ID": "07REL004",
            "source": "07DS001",
            "target": "07CON001",
            "attributes": {
                "依赖强度": "强"
            }
        },
        {
            "type": "理论依赖",
            "关系ID": "07REL005",
            "source": "07DS001",
            "target": "07CON002",
            "attributes": {
                "依赖强度": "强"
            }
        },
        {
            "type": "理论依赖",
            "关系ID": "07REL006",
            "source": "07DS001",
            "target": "07CON003",
            "attributes": {
                "依赖强度": "强"
            }
        },
        {
            "type": "理论依赖",
            "关系ID": "07REL007",
            "source": "07DS001",
            "target": "07CON004",
            "attributes": {
                "依赖强度": "强"
            }
        },
        {
            "type": "理论依赖",
            "关系ID": "07REL008",
            "source": "07DS001",
            "target": "07CON005",
            "attributes": {
                "依赖强度": "中"
            }
        },
        {
            "type": "理论依赖",
            "关系ID": "07REL009",
            "source": "07DS001",
            "target": "07CON006",
            "attributes": {
                "依赖强度": "强"
            }
        },
        {
            "type": "理论依赖",
            "关系ID": "07REL010",
            "source": "07DS002",
            "target": "07CON007",
            "attributes": {
                "依赖强度": "强"
            }
        },
        {
            "type": "理论依赖",
            "关系ID": "07REL011",
            "source": "07DS002",
            "target": "07CON008",
            "attributes": {
                "依赖强度": "强"
            }
        },
        {
            "type": "理论依赖",
            "关系ID": "07REL012",
            "source": "07DS002",
            "target": "07CON009",
            "attributes": {
                "依赖强度": "强"
            }
        },
        {
            "type": "理论依赖",
            "关系ID": "07REL013",
            "source": "07DS002",
            "target": "07CON010",
            "attributes": {
                "依赖强度": "强"
            }
        },
        {
            "type": "理论依赖",
            "关系ID": "07REL014",
            "source": "07DS002",
            "target": "07CON011",
            "attributes": {
                "依赖强度": "强"
            }
        },
        {
            "type": "理论依赖",
            "关系ID": "07REL015",
            "source": "07DS002",
            "target": "07CON012",
            "attributes": {
                "依赖强度": "强"
            }
        },
        {
            "type": "理论依赖",
            "关系ID": "07REL016",
            "source": "07DS001",
            "target": "07CON013",
            "attributes": {
                "依赖强度": "强"
            }
        },
        {
            "type": "理论依赖",
            "关系ID": "07REL017",
            "source": "07DS002",
            "target": "07CON014",
            "attributes": {
                "依赖强度": "强"
            }
        },
        {
            "type": "理论依赖",
            "关系ID": "07REL018",
            "source": "07DS002",
            "target": "07CON015",
            "attributes": {
                "依赖强度": "强"
            }
        },
        {
            "type": "理论依赖",
            "关系ID": "07REL019",
            "source": "07DS001",
            "target": "07CON016",
            "attributes": {
                "依赖强度": "弱"
            }
        },
        {
            "type": "理论依赖",
            "关系ID": "07REL020",
            "source": "07DS001",
            "target": "07CON017",
            "attributes": {
                "依赖强度": "弱"
            }
        },
        {
            "type": "理论依赖",
            "关系ID": "07REL021",
            "source": "07DS001",
            "target": "07CON018",
            "attributes": {
                "依赖强度": "弱"
            }
        },
        {
            "type": "理论依赖",
            "关系ID": "07REL022",
            "source": "07DS001",
            "target": "07CON019",
            "attributes": {
                "依赖强度": "中"
            }
        },
        {
            "type": "理论依赖",
            "关系ID": "07REL023",
            "source": "07DS001",
            "target": "07CON020",
            "attributes": {
                "依赖强度": "强"
            }
        },
        {
            "type": "理论依赖",
            "关系ID": "07REL024",
            "source": "07CON020",
            "target": "07CON021",
            "attributes": {
                "依赖强度": "强"
            }
        },
        {
            "type": "理论依赖",
            "关系ID": "07REL025",
            "source": "07CON020",
            "target": "07CON022",
            "attributes": {
                "依赖强度": "中"
            }
        },
        {
            "type": "理论依赖",
            "关系ID": "07REL026",
            "source": "07DS001",
            "target": "07CON023",
            "attributes": {
                "依赖强度": "中"
            }
        },
        {
            "type": "理论依赖",
            "关系ID": "07REL027",
            "source": "07CON023",
            "target": "07CON024",
            "attributes": {
                "依赖强度": "中"
            }
        },
        {
            "type": "理论依赖",
            "关系ID": "07REL028",
            "source": "07DS001",
            "target": "07CON025",
            "attributes": {
                "依赖强度": "强"
            }
        },
        {
            "type": "理论依赖",
            "关系ID": "07REL029",
            "source": "07DS003",
            "target": "07CON026",
            "attributes": {
                "依赖强度": "强"
            }
        },
        {
            "type": "理论依赖",
            "关系ID": "07REL030",
            "source": "07DS003",
            "target": "07CON027",
            "attributes": {
                "依赖强度": "强"
            }
        },
        {
            "type": "理论依赖",
            "关系ID": "07REL031",
            "source": "07CON027",
            "target": "07CON028",
            "attributes": {
                "依赖强度": "强"
            }
        },
        {
            "type": "理论依赖",
            "关系ID": "07REL032",
            "source": "07DS002",
            "target": "07CON029",
            "attributes": {
                "依赖强度": "强"
            }
        },
        {
            "type": "理论依赖",
            "关系ID": "07REL033",
            "source": "07CON029",
            "target": "07CON030",
            "attributes": {
                "依赖强度": "强"
            }
        },
        {
            "type": "理论依赖",
            "关系ID": "07REL034",
            "source": "07DS004",
            "target": "07CON031",
            "attributes": {
                "依赖强度": "强"
            }
        },
        {
            "type": "操作绑定",
            "关系ID": "07REL035",
            "source": "07ALG001",
            "target": "07DS001",
            "attributes": {
                "必需性": "是"
            }
        },
        {
            "type": "操作绑定",
            "关系ID": "07REL036",
            "source": "07ALG002",
            "target": "07DS001",
            "attributes": {
                "必需性": "是"
            }
        },
        {
            "type": "操作绑定",
            "关系ID": "07REL037",
            "source": "07ALG003",
            "target": "07DS001",
            "attributes": {
                "必需性": "是"
            }
        },
        {
            "type": "操作绑定",
            "关系ID": "07REL038",
            "source": "07ALG004",
            "target": "07DS001",
            "attributes": {
                "必需性": "是"
            }
        },
        {
            "type": "操作绑定",
            "关系ID": "07REL039",
            "source": "07ALG005",
            "target": "07DS001",
            "attributes": {
                "必需性": "是"
            }
        },
        {
            "type": "操作绑定",
            "关系ID": "07REL040",
            "source": "07ALG006",
            "target": "07DS001",
            "attributes": {
                "必需性": "是"
            }
        },
        {
            "type": "操作绑定",
            "关系ID": "07REL041",
            "source": "07ALG007",
            "target": "07DS001",
            "attributes": {
                "必需性": "是"
            }
        },
        {
            "type": "操作绑定",
            "关系ID": "07REL042",
            "source": "07ALG008",
            "target": "07DS001",
            "attributes": {
                "必需性": "是"
            }
        },
        {
            "type": "操作绑定",
            "关系ID": "07REL043",
            "source": "07ALG009",
            "target": "07DS002",
            "attributes": {
                "必需性": "是"
            }
        },
        {
            "type": "操作绑定",
            "关系ID": "07REL044",
            "source": "07ALG010",
            "target": "07DS004",
            "attributes": {
                "必需性": "是"
            }
        },
        {
            "type": "理论依赖",
            "关系ID": "07REL045",
            "source": "07DS001",
            "target": "07CON032",
            "attributes": {
                "依赖强度": "强"
            }
        },
        {
            "type": "使用",
            "关系ID": "07REL046",
            "source": "07DS005",
            "target": "07DS001",
            "attributes": {
                "使用角色": "表示"
            }
        },
        {
            "type": "使用",
            "关系ID": "07REL047",
            "source": "07DS006",
            "target": "07DS001",
            "attributes": {
                "使用角色": "表示"
            }
        },
        {
            "type": "使用",
            "关系ID": "07REL048",
            "source": "07DS009",
            "target": "07DS001",
            "attributes": {
                "使用角色": "表示"
            }
        },
        {
            "type": "操作绑定",
            "关系ID": "07REL049",
            "source": "07ALG011",
            "target": "07DS005",
            "attributes": {
                "必需性": "是"
            }
        },
        {
            "type": "操作绑定",
            "关系ID": "07REL050",
            "source": "07ALG012",
            "target": "07DS005",
            "attributes": {
                "必需性": "是"
            }
        },
        {
            "type": "操作绑定",
            "关系ID": "07REL051",
            "source": "07ALG013",
            "target": "07DS005",
            "attributes": {
                "必需性": "是"
            }
        },
        {
            "type": "理论依赖",
            "关系ID": "07REL052",
            "source": "07DS006",
            "target": "07CON033",
            "attributes": {
                "依赖强度": "强"
            }
        },
        {
            "type": "操作绑定",
            "关系ID": "07REL053",
            "source": "07ALG014",
            "target": "07DS006",
            "attributes": {
                "必需性": "是"
            }
        },
        {
            "type": "操作绑定",
            "关系ID": "07REL054",
            "source": "07ALG015",
            "target": "07DS006",
            "attributes": {
                "必需性": "是"
            }
        },
        {
            "type": "操作绑定",
            "关系ID": "07REL055",
            "source": "07ALG016",
            "target": "07DS006",
            "attributes": {
                "必需性": "是"
            }
        },
        {
            "type": "变体",
            "关系ID": "07REL056",
            "source": "07DS006",
            "target": "07DS007",
            "attributes": {
                "变体类型": "存储入边信息"
            }
        },
        {
            "type": "变体",
            "关系ID": "07REL057",
            "source": "07DS006",
            "target": "07DS008",
            "attributes": {
                "变体类型": "结合邻接表和逆邻接表"
            }
        },
        {
            "type": "操作绑定",
            "关系ID": "07REL058",
            "source": "07ALG017",
            "target": "07DS009",
            "attributes": {
                "必需性": "是"
            }
        },
        {
            "type": "操作绑定",
            "关系ID": "07REL059",
            "source": "07ALG018",
            "target": "07DS009",
            "attributes": {
                "必需性": "是"
            }
        },
        {
            "type": "操作绑定",
            "关系ID": "07REL060",
            "source": "07ALG019",
            "target": "07DS009",
            "attributes": {
                "必需性": "是"
            }
        },
        {
            "type": "理论依赖",
            "关系ID": "07REL061",
            "source": "07ALG003",
            "target": "07CON034",
            "attributes": {
                "依赖强度": "强"
            }
        },
        {
            "type": "理论依赖",
            "关系ID": "07REL062",
            "source": "07CON034",
            "target": "07CON035",
            "attributes": {
                "依赖强度": "强"
            }
        },
        {
            "type": "操作绑定",
            "关系ID": "07REL063",
            "source": "07ALG020",
            "target": "07DS001",
            "attributes": {
                "必需性": "是"
            }
        },
        {
            "type": "继承",
            "关系ID": "07REL064",
            "source": "07ALG021",
            "target": "07ALG020",
            "attributes": {
                "约束条件": "基于邻接矩阵实现"
            }
        },
        {
            "type": "继承",
            "关系ID": "07REL065",
            "source": "07ALG022",
            "target": "07ALG020",
            "attributes": {
                "约束条件": "基于邻接表实现"
            }
        },
        {
            "type": "操作绑定",
            "关系ID": "07REL066",
            "source": "07ALG021",
            "target": "07DS005",
            "attributes": {
                "必需性": "是"
            }
        },
        {
            "type": "操作绑定",
            "关系ID": "07REL067",
            "source": "07ALG022",
            "target": "07DS006",
            "attributes": {
                "必需性": "是"
            }
        },
        {
            "type": "操作绑定",
            "关系ID": "07REL068",
            "source": "07ALG023",
            "target": "07DS001",
            "attributes": {
                "必需性": "是"
            }
        },
        {
            "type": "使用",
            "关系ID": "07REL069",
            "source": "07ALG023",
            "target": "07DS010",
            "attributes": {
                "使用角色": "辅助数据结构"
            }
        },
        {
            "type": "继承",
            "关系ID": "07REL070",
            "source": "07ALG024",
            "target": "07ALG023",
            "attributes": {
                "约束条件": "基于邻接矩阵实现"
            }
        },
        {
            "type": "继承",
            "关系ID": "07REL071",
            "source": "07ALG025",
            "target": "07ALG023",
            "attributes": {
                "约束条件": "基于邻接表实现"
            }
        },
        {
            "type": "操作绑定",
            "关系ID": "07REL072",
            "source": "07ALG024",
            "target": "07DS005",
            "attributes": {
                "必需性": "是"
            }
        },
        {
            "type": "操作绑定",
            "关系ID": "07REL073",
            "source": "07ALG025",
            "target": "07DS006",
            "attributes": {
                "必需性": "是"
            }
        },
        {
            "type": "理论依赖",
            "关系ID": "07REL074",
            "source": "07ALG020",
            "target": "07CON028",
            "attributes": {
                "依赖强度": "中"
            }
        },
        {
            "type": "理论依赖",
            "关系ID": "07REL075",
            "source": "07ALG023",
            "target": "07CON028",
            "attributes": {
                "依赖强度": "中"
            }
        },
        {
            "type": "理论依赖",
            "关系ID": "07REL076",
            "source": "07ALG020",
            "target": "07CON027",
            "attributes": {
                "依赖强度": "中"
            }
        },
        {
            "type": "理论依赖",
            "关系ID": "07REL077",
            "source": "07ALG023",
            "target": "07CON027",
            "attributes": {
                "依赖强度": "中"
            }
        },
        {
            "type": "继承",
            "关系ID": "08REL001",
            "source": "08CON002",
            "target": "08CON001",
            "attributes": {
                "父类 ID": "08CON001",
                "子类 ID": "08CON002",
                "约束条件": "子图，连通所有顶点，无回路"
            }
        },
        {
            "type": "继承",
            "关系ID": "08REL002",
            "source": "08CON003",
            "target": "08CON002",
            "attributes": {
                "父类 ID": "08CON002",
                "子类 ID": "08CON003",
                "约束条件": "在连通网中，权值总和最小"
            }
        },
        {
            "type": "理论依赖",
            "关系ID": "08REL003",
            "source": "08CON002",
            "target": "08CON004",
            "attributes": {
                "实体 ID": "08CON002",
                "概念 ID": "08CON004",
                "依赖强度": "强"
            }
        },
        {
            "type": "理论依赖",
            "关系ID": "08REL004",
            "source": "08CON003",
            "target": "08CON005",
            "attributes": {
                "实体 ID": "08CON003",
                "概念 ID": "08CON005",
                "依赖强度": "强"
            }
        },
        {
            "type": "理论依赖",
            "关系ID": "08REL005",
            "source": "08ALG001",
            "target": "08CON003",
            "attributes": {
                "实体 ID": "08ALG001",
                "概念 ID": "08CON003",
                "依赖强度": "强"
            }
        },
        {
            "type": "理论依赖",
            "关系ID": "08REL006",
            "source": "08ALG002",
            "target": "08CON003",
            "attributes": {
                "实体 ID": "08ALG002",
                "概念 ID": "08CON003",
                "依赖强度": "强"
            }
        },
        {
            "type": "使用",
            "关系ID": "08REL007",
            "source": "08ALG001",
            "target": "08DS001",
            "attributes": {
                "使用方ID": "08ALG001",
                "被使用的数据结构 ID": "08DS001",
                "使用角色": "核心存储结构"
            }
        },
        {
            "type": "使用",
            "关系ID": "08REL008",
            "source": "08ALG002",
            "target": "08DS002",
            "attributes": {
                "使用方ID": "08ALG002",
                "被使用的数据结构 ID": "08DS002",
                "使用角色": "核心存储结构"
            }
        },
        {
            "type": "理论依赖",
            "关系ID": "08REL009",
            "source": "08ALG003",
            "target": "08CON007",
            "attributes": {
                "实体 ID": "08ALG003",
                "概念 ID": "08CON007",
                "依赖强度": "强"
            }
        },
        {
            "type": "理论依赖",
            "关系ID": "08REL010",
            "source": "08ALG004",
            "target": "08CON007",
            "attributes": {
                "实体 ID": "08ALG004",
                "概念 ID": "08CON007",
                "依赖强度": "强"
            }
        },
        {
            "type": "使用",
            "关系ID": "08REL011",
            "source": "08ALG003",
            "target": "08DS001",
            "attributes": {
                "使用方ID": "08ALG003",
                "被使用的数据结构 ID": "08DS001",
                "使用角色": "核心存储结构"
            }
        },
        {
            "type": "使用",
            "关系ID": "08REL012",
            "source": "08ALG004",
            "target": "08DS001",
            "attributes": {
                "使用方ID": "08ALG004",
                "被使用的数据结构 ID": "08DS001",
                "使用角色": "核心存储结构"
            }
        },
        {
            "type": "理论依赖",
            "关系ID": "08REL013",
            "source": "08ALG005",
            "target": "08CON015",
            "attributes": {
                "实体 ID": "08ALG005",
                "概念 ID": "08CON015",
                "依赖强度": "强"
            }
        },
        {
            "type": "理论依赖",
            "关系ID": "08REL014",
            "source": "08ALG005",
            "target": "08CON013",
            "attributes": {
                "实体 ID": "08ALG005",
                "概念 ID": "08CON013",
                "依赖强度": "强"
            }
        },
        {
            "type": "理论依赖",
            "关系ID": "08REL015",
            "source": "08CON013",
            "target": "08CON014",
            "attributes": {
                "实体 ID": "08CON013",
                "概念 ID": "08CON014",
                "依赖强度": "强"
            }
        },
        {
            "type": "理论依赖",
            "关系ID": "08REL016",
            "source": "08ALG005",
            "target": "08CON016",
            "attributes": {
                "实体 ID": "08ALG005",
                "概念 ID": "08CON016",
                "依赖强度": "中"
            }
        },
        {
            "type": "使用",
            "关系ID": "08REL017",
            "source": "08ALG005",
            "target": "08DS003",
            "attributes": {
                "使用方ID": "08ALG005",
                "被使用的数据结构 ID": "08DS003",
                "使用角色": "推荐存储结构"
            }
        },
        {
            "type": "理论依赖",
            "关系ID": "08REL018",
            "source": "08ALG006",
            "target": "08CON026",
            "attributes": {
                "实体 ID": "08ALG006",
                "概念 ID": "08CON026",
                "依赖强度": "强"
            }
        },
        {
            "type": "理论依赖",
            "关系ID": "08REL019",
            "source": "08ALG006",
            "target": "08CON017",
            "attributes": {
                "实体 ID": "08ALG006",
                "概念 ID": "08CON017",
                "依赖强度": "强"
            }
        },
        {
            "type": "理论依赖",
            "关系ID": "08REL020",
            "source": "08ALG006",
            "target": "08ALG005",
            "attributes": {
                "实体 ID": "08ALG006",
                "概念 ID": "08ALG005",
                "依赖强度": "强"
            }
        },
        {
            "type": "使用",
            "关系ID": "08REL021",
            "source": "08ALG006",
            "target": "08DS003",
            "attributes": {
                "使用方ID": "08ALG006",
                "被使用的数据结构 ID": "08DS003",
                "使用角色": "推荐存储结构"
            }
        },
        {
            "type": "理论依赖",
            "关系ID": "08REL022",
            "source": "08CON026",
            "target": "08CON025",
            "attributes": {
                "实体 ID": "08CON026",
                "概念 ID": "08CON025",
                "依赖强度": "强"
            }
        },
        {
            "type": "理论依赖",
            "关系ID": "08REL023",
            "source": "08CON025",
            "target": "08CON024",
            "attributes": {
                "实体 ID": "08CON025",
                "概念 ID": "08CON024",
                "依赖强度": "强"
            }
        },
        {
            "type": "理论依赖",
            "关系ID": "08REL024",
            "source": "08CON024",
            "target": "08CON022",
            "attributes": {
                "实体 ID": "08CON024",
                "概念 ID": "08CON022",
                "依赖强度": "强"
            }
        },
        {
            "type": "理论依赖",
            "关系ID": "08REL025",
            "source": "08CON024",
            "target": "08CON023",
            "attributes": {
                "实体 ID": "08CON024",
                "概念 ID": "08CON023",
                "依赖强度": "强"
            }
        },
        {
            "type": "理论依赖",
            "关系ID": "08REL026",
            "source": "08CON022",
            "target": "08CON020",
            "attributes": {
                "实体 ID": "08CON022",
                "概念 ID": "08CON020",
                "依赖强度": "强"
            }
        },
        {
            "type": "理论依赖",
            "关系ID": "08REL027",
            "source": "08CON023",
            "target": "08CON021",
            "attributes": {
                "实体 ID": "08CON023",
                "概念 ID": "08CON021",
                "依赖强度": "强"
            }
        },
        {
            "type": "理论依赖",
            "关系ID": "08REL028",
            "source": "08CON023",
            "target": "08CON019",
            "attributes": {
                "实体 ID": "08CON023",
                "概念 ID": "08CON019",
                "依赖强度": "强"
            }
        },
        {
            "type": "继承",
            "关系ID": "08REL029",
            "source": "08CON017",
            "target": "08CON001",
            "attributes": {
                "父类 ID": "08CON001",
                "子类 ID": "08CON017",
                "约束条件": "有向带权图，边表示活动，点表示事件"
            }
        },
        {
            "type": "继承",
            "关系ID": "08REL030",
            "source": "08CON013",
            "target": "08CON001",
            "attributes": {
                "父类 ID": "08CON001",
                "子类 ID": "08CON013",
                "约束条件": "有向图，点表示活动，边表示依赖"
            }
        }
    ]
}