{
  "entities": [
    {
      "type": "数据结构",
      "ID": "03DS001",
      "name": "集合",
      "attributes": {
        "难度": "入门",
        "内容": "由具有相同属性的数据元素组合而成的数据结构，数据之间没有任何前驱和后继关系。集合中数据元素的个数称为集合的长度。长度为0时为空集。",
        "存储开销": "取决于存储方式（顺序或链接）和元素数量。",
        "核心特性": "无序性、元素唯一性",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "03CON001",
      "name": "集合结构",
      "attributes": {
        "难度": "入门",
        "内容": "集合的别称，强调其数据元素间无特定关系。",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "03CON002",
      "name": "集合的抽象数据类型",
      "attributes": {
        "难度": "入门",
        "内容": "定义了集合数据结构及其基本操作，如初始化、清空、求长度、判空、成员判断、插入、删除、并、交、差等。",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "03ALG001",
      "name": "InitSet",
      "attributes": {
        "难度": "入门",
        "内容": "初始化集合为空。",
        "时间复杂度": "O(1)（通常）",
        "空间复杂度": "O(1)或O(N)（取决于实现，如预分配空间）",
        "设计思想": "置空/分配初始资源",
        "适用场景": "创建新集合时",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "03ALG002",
      "name": "ClearSet",
      "attributes": {
        "难度": "入门",
        "内容": "清除集合中的所有元素。",
        "时间复杂度": "O(1)或O(N)（取决于实现，如需释放节点）",
        "空间复杂度": "O(1)",
        "设计思想": "清空/释放资源",
        "适用场景": "重用或销毁集合前",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "03ALG003",
      "name": "LengthSet",
      "attributes": {
        "难度": "入门",
        "内容": "求出集合的长度（元素个数）。",
        "时间复杂度": "O(1)（若维护长度）或O(N)（若需遍历）",
        "空间复杂度": "O(1)",
        "设计思想": "计数",
        "适用场景": "获取集合大小",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "03ALG004",
      "name": "EmptySet",
      "attributes": {
        "难度": "入门",
        "内容": "判断集合是否为空。",
        "时间复杂度": "O(1)",
        "空间复杂度": "O(1)",
        "设计思想": "检查长度或状态",
        "适用场景": "进行操作前检查集合状态",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "03ALG005",
      "name": "InSet",
      "attributes": {
        "难度": "入门",
        "内容": "判断一个元素是否属于集合。",
        "时间复杂度": "O(N)（顺序查找）或更快（如哈希）",
        "空间复杂度": "O(1)",
        "设计思想": "查找",
        "适用场景": "检查元素成员资格",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "03ALG006",
      "name": "OutputSet",
      "attributes": {
        "难度": "入门",
        "内容": "输出集合中所有元素。",
        "时间复杂度": "O(N)",
        "空间复杂度": "O(1)",
        "设计思想": "遍历",
        "适用场景": "展示集合内容",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "03ALG007",
      "name": "FindSet",
      "attributes": {
        "难度": "入门",
        "内容": "从集合中查找一个元素，通常基于关键字，并返回完整元素。",
        "时间复杂度": "O(N)（顺序查找）或更快（如哈希）",
        "空间复杂度": "O(1)",
        "设计思想": "查找",
        "适用场景": "检索集合中的特定元素信息",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "03ALG008",
      "name": "ModifySet",
      "attributes": {
        "难度": "入门",
        "内容": "修改集合中的一个指定元素（通常基于关键字查找后替换）。",
        "时间复杂度": "O(N)（顺序查找）或更快",
        "空间复杂度": "O(1)",
        "设计思想": "查找并更新",
        "适用场景": "更新集合中元素的值",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "03ALG009",
      "name": "InsertSet",
      "attributes": {
        "难度": "入门",
        "内容": "向集合插入一个元素，需保证元素唯一性。",
        "时间复杂度": "O(N)（顺序实现，包含查找）或更快",
        "空间复杂度": "O(1)（或涉及扩容）",
        "设计思想": "检查唯一性并添加",
        "适用场景": "向集合添加新元素",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "03ALG010",
      "name": "DeleteSet",
      "attributes": {
        "难度": "入门",
        "内容": "从集合删除一个元素。",
        "时间复杂度": "O(N)（顺序实现，包含查找）或更快",
        "空间复杂度": "O(1)（或涉及缩容）",
        "设计思想": "查找并移除",
        "适用场景": "从集合移除元素",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "03ALG011",
      "name": "UnionSet",
      "attributes": {
        "难度": "中等",
        "内容": "求两个集合的并集。",
        "时间复杂度": "O(N*M)（朴素顺序实现）或更快",
        "空间复杂度": "O(N+M)（结果集）",
        "设计思想": "合并并去重",
        "适用场景": "合并两个集合",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "03ALG012",
      "name": "InterseSet",
      "attributes": {
        "难度": "中等",
        "内容": "求两个集合的交集。",
        "时间复杂度": "O(N*M)（朴素顺序实现）或更快",
        "空间复杂度": "O(min(N, M))（结果集）",
        "设计思想": "查找共同元素",
        "适用场景": "找出两个集合的公共部分",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "03ALG013",
      "name": "DifferenceSet",
      "attributes": {
        "难度": "中等",
        "内容": "求两个集合的差集 (S1 - S2)。",
        "时间复杂度": "O(N*M)（朴素顺序实现）或更快",
        "空间复杂度": "O(N)（结果集）",
        "设计思想": "查找S1中不在S2的元素",
        "适用场景": "找出只存在于第一个集合中的元素",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "03CON003",
      "name": "集合的顺序存储",
      "attributes": {
        "难度": "入门",
        "内容": "使用数组存储集合元素的一种实现方式。通常需要额外变量记录当前长度。插入删除操作可能通过覆盖实现（O(1)）或移动（O(N)）。",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "03ALG014",
      "name": "简单选择排序",
      "attributes": {
        "难度": "入门",
        "内容": "一种简单的排序算法，每次从未排序部分选择最小（或最大）元素放到已排序部分的末尾。",
        "时间复杂度": "O(n^2)",
        "空间复杂度": "O(1)",
        "设计思想": "选择",
        "适用场景": "数据量小或教学",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "03ALG015",
      "name": "OutputSet1",
      "attributes": {
        "难度": "入门",
        "内容": "输出集合中所有元素，并按升序排列，同时保持原集合不变。",
        "时间复杂度": "O(N^2) (因使用简单选择排序)",
        "空间复杂度": "O(N) (需要临时数组)",
        "设计思想": "复制、排序、输出",
        "适用场景": "需要有序输出集合内容且不改变原集合时",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "03CON004",
      "name": "集合的链接存储",
      "attributes": {
        "难度": "入门",
        "内容": "使用链表（通常是单链表）存储集合元素的一种实现方式。每个元素对应一个结点。",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "03DS002",
      "name": "单链表",
      "attributes": {
        "难度": "入门",
        "内容": "一种线性数据结构，通过指针将一系列结点连接起来。每个结点包含数据域和指向下一个结点的指针域。",
        "存储开销": "O(N)",
        "核心特性": "动态大小、非连续存储、顺序访问",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "03CON005",
      "name": "散列存储",
      "attributes": {
        "难度": "中等",
        "内容": "一种根据关键字直接计算出存储地址的数据存储方法，常用于实现集合以提高查找、插入、删除效率。",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "03CON006",
      "name": "索引存储",
      "attributes": {
        "难度": "中等",
        "内容": "一种除主数据外，额外建立索引表以加速查找的数据存储方法。",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "03CON007",
      "name": "矩阵",
      "attributes": {
        "难度": "入门",
        "内容": "一个具有m行n列的数表，包含m*n个元素，每个元素由唯一的行号和列号确定。",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "03DS003",
      "name": "稀疏矩阵",
      "attributes": {
        "难度": "中等",
        "内容": "非零元素个数远少于零元素个数的矩阵。通常只存储非零元素以节省空间。",
        "存储开销": "取决于非零元素数量和存储方式",
        "核心特性": "稀疏性",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "03CON008",
      "name": "三元组线性表示",
      "attributes": {
        "难度": "入门",
        "内容": "表示稀疏矩阵中非零元素的方法，使用(行号, 列号, 元素值)三个信息构成一个三元组。",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "03CON009",
      "name": "稀疏矩阵的抽象数据类型",
      "attributes": {
        "难度": "中等",
        "内容": "定义了稀疏矩阵数据结构及其基本操作，如初始化、转置、加法、乘法、输入、输出等。",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "03ALG016",
      "name": "InitMatrix",
      "attributes": {
        "难度": "入门",
        "内容": "初始化稀疏矩阵为空矩阵。",
        "时间复杂度": "O(1) 或 O(MaxRows+MaxCols) (取决于实现)",
        "空间复杂度": "O(1)",
        "设计思想": "置空/初始化指针",
        "适用场景": "创建新稀疏矩阵时",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "03ALG017",
      "name": "Transpose",
      "attributes": {
        "难度": "中等",
        "内容": "求稀疏矩阵的转置矩阵。",
        "时间复杂度": "依赖具体实现（普通转置或快速转置）",
        "空间复杂度": "O(t) (t为非零元素个数)",
        "设计思想": "行列互换",
        "适用场景": "需要矩阵转置时",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "03ALG018",
      "name": "Add",
      "attributes": {
        "难度": "中等",
        "内容": "求两个稀疏矩阵之和。",
        "时间复杂度": "O(t1+t2) (t1, t2为非零元素个数)",
        "空间复杂度": "O(t1+t2) (结果矩阵)",
        "设计思想": "按行列合并对应元素",
        "适用场景": "计算稀疏矩阵和",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "03ALG019",
      "name": "Multiply",
      "attributes": {
        "难度": "高级",
        "内容": "求两个稀疏矩阵之乘积。",
        "时间复杂度": "较复杂，依赖具体实现和矩阵结构",
        "空间复杂度": "依赖结果矩阵非零元素个数",
        "设计思想": "基于矩阵乘法定义，优化零元素计算",
        "适用场景": "计算稀疏矩阵乘积",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "03ALG020",
      "name": "InputMatrix",
      "attributes": {
        "难度": "入门",
        "内容": "按照特定格式（如三元组）输入稀疏矩阵。",
        "时间复杂度": "O(t) (t为非零元素个数)",
        "空间复杂度": "O(t) (存储)",
        "设计思想": "读取并构建存储结构",
        "适用场景": "从外部源创建稀疏矩阵",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "03ALG021",
      "name": "OutputMatrix",
      "attributes": {
        "难度": "入门",
        "内容": "按照特定格式（如三元组）输出稀疏矩阵。",
        "时间复杂度": "O(t) (t为非零元素个数)",
        "空间复杂度": "O(1)",
        "设计思想": "遍历并格式化输出",
        "适用场景": "展示稀疏矩阵内容",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "03CON010",
      "name": "稀疏矩阵的顺序存储",
      "attributes": {
        "难度": "中等",
        "内容": "使用顺序结构（如数组）存储稀疏矩阵的三元组线性表示。需要额外存储矩阵维度和非零元素个数。",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "03CON011",
      "name": "带行指针向量的链接存储",
      "attributes": {
        "难度": "中等",
        "内容": "一种稀疏矩阵的链接存储方式。使用一个指针数组（行指针向量），每个元素指向对应行的非零元素单链表（按列号排序）。",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "03CON012",
      "name": "十字链接存储",
      "attributes": {
        "难度": "高级",
        "内容": "一种稀疏矩阵的链接存储方式。每个非零元素结点包含指向同一行下一个结点和同一列下一个结点的指针。需要行、列两个指针向量。",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "03ALG022",
      "name": "普通转置方法",
      "attributes": {
        "难度": "中等",
        "内容": "一种稀疏矩阵转置算法，按原矩阵列序扫描三元组表，逐个转换并写入新表。",
        "时间复杂度": "O(n*t) (n为列数, t为非零元素数)",
        "空间复杂度": "O(t)",
        "设计思想": "按列扫描转换",
        "适用场景": "实现简单，但效率可能不高",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "03ALG023",
      "name": "快速转置方法",
      "attributes": {
        "难度": "中等",
        "内容": "一种优化的稀疏矩阵转置算法。通过两次扫描，第一次统计每列元素个数确定在新表中的起始位置，第二次直接将元素放到计算好的位置。",
        "时间复杂度": "O(n+t) (n为列数, t为非零元素数)",
        "空间复杂度": "O(n+t)",
        "设计思想": "空间换时间，预计算位置",
        "适用场景": "需要高效转置稀疏矩阵时",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "数据结构",
      "ID": "03DS004",
      "name": "广义表",
      "attributes": {
        "难度": "中等",
        "内容": "线性表的推广，元素可以是单个原子或另一个广义表（子表）。是一种递归定义的数据结构。",
        "存储开销": "取决于元素数量、类型和嵌套深度，通常使用动态链接存储",
        "核心特性": "递归结构、元素可以是原子或列表",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "03CON013",
      "name": "单元素",
      "attributes": {
        "难度": "入门",
        "内容": "广义表中的原子元素，不可再分。",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "03CON014",
      "name": "子表",
      "attributes": {
        "难度": "入门",
        "内容": "广义表中作为元素的另一个广义表。",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "03CON015",
      "name": "空表",
      "attributes": {
        "难度": "入门",
        "内容": "长度为0的广义表。",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "03CON016",
      "name": "广义表的长度",
      "attributes": {
        "难度": "入门",
        "内容": "广义表顶层元素的个数。",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "03CON017",
      "name": "广义表的深度",
      "attributes": {
        "难度": "入门",
        "内容": "广义表中括号嵌套的最大层数。",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "03CON018",
      "name": "广义表的链接存储",
      "attributes": {
        "难度": "中等",
        "内容": "使用带标志域的结点实现广义表的存储。结点区分单元素和子表，子表结点包含指向子表头结点的指针。",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "03CON019",
      "name": "表头附加结点",
      "attributes": {
        "难度": "入门",
        "内容": "在广义表（或链表）的第一个实际结点前增加一个额外的头结点，通常用于简化某些操作（如插入、删除首元）。",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "03ALG024",
      "name": "求广义表的长度",
      "attributes": {
        "难度": "入门",
        "内容": "计算广义表顶层元素的个数。通常通过遍历顶层链表实现。",
        "时间复杂度": "O(N) (N为顶层元素个数)",
        "空间复杂度": "O(1) (迭代) 或 O(N) (递归)",
        "设计思想": "遍历计数",
        "适用场景": "获取广义表顶层大小",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "03ALG025",
      "name": "求广义表的深度",
      "attributes": {
        "难度": "中等",
        "内容": "计算广义表中括号嵌套的最大层数。通常使用递归实现。",
        "时间复杂度": "O(T) (T为广义表中结点总数)",
        "空间复杂度": "O(D) (D为广义表深度)",
        "设计思想": "递归遍历，记录最大深度",
        "适用场景": "获取广义表的嵌套层级",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "03ALG026",
      "name": "建立广义表的存储结构",
      "attributes": {
        "难度": "中等",
        "内容": "根据输入（通常是字符串表示）创建广义表的链接存储结构。常使用递归。",
        "时间复杂度": "O(T) (T为广义表中结点总数或输入字符数)",
        "空间复杂度": "O(T)",
        "设计思想": "递归解析输入，构建结点和链接",
        "适用场景": "从外部表示创建广义表实例",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "算法",
      "ID": "03ALG027",
      "name": "打印广义表",
      "attributes": {
        "难度": "中等",
        "内容": "将广义表的链接存储结构转换回其字符串表示形式（带括号和逗号）。常使用递归。",
        "时间复杂度": "O(T) (T为广义表中结点总数)",
        "空间复杂度": "O(D) (D为广义表深度)",
        "设计思想": "递归遍历，按规则输出字符",
        "适用场景": "显示广义表内容",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    },
    {
      "type": "概念",
      "ID": "03CON020",
      "name": "线性表",
      "attributes": {
        "难度": "入门",
        "内容": "由n(n>=0)个相同类型数据元素组成的有限序列。元素间存在一对一的线性关系。",
        "教学视频": "未知",
        "教学材料": "未知",
        "外部资源": "未知"
      }
    }
  ],
  "relations": [
    {
      "type": "理论依赖",
      "关系ID": "03REL001",
      "source": "03DS001",
      "target": "03CON001",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "03REL002",
      "source": "03ALG001",
      "target": "03DS001",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "03REL003",
      "source": "03ALG002",
      "target": "03DS001",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "03REL004",
      "source": "03ALG003",
      "target": "03DS001",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "03REL005",
      "source": "03ALG004",
      "target": "03DS001",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "03REL006",
      "source": "03ALG005",
      "target": "03DS001",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "03REL007",
      "source": "03ALG006",
      "target": "03DS001",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "03REL008",
      "source": "03ALG007",
      "target": "03DS001",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "03REL009",
      "source": "03ALG008",
      "target": "03DS001",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "03REL010",
      "source": "03ALG009",
      "target": "03DS001",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "03REL011",
      "source": "03ALG010",
      "target": "03DS001",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "03REL012",
      "source": "03ALG011",
      "target": "03DS001",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "03REL013",
      "source": "03ALG012",
      "target": "03DS001",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "03REL014",
      "source": "03ALG013",
      "target": "03DS001",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "03REL015",
      "source": "03CON003",
      "target": "03DS001",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "使用",
      "关系ID": "03REL016",
      "source": "03ALG015",
      "target": "03ALG014",
      "attributes": {
        "使用角色": "核心排序逻辑"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "03REL017",
      "source": "03ALG015",
      "target": "03DS001",
      "attributes": {
        "必需性": "否"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "03REL018",
      "source": "03CON004",
      "target": "03DS001",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "使用",
      "关系ID": "03REL019",
      "source": "03CON004",
      "target": "03DS002",
      "attributes": {
        "使用角色": "实现基础"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "03REL020",
      "source": "03CON005",
      "target": "03DS001",
      "attributes": {
        "依赖强度": "中"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "03REL021",
      "source": "03CON006",
      "target": "03DS001",
      "attributes": {
        "依赖强度": "中"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "03REL022",
      "source": "03DS003",
      "target": "03CON007",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "03REL023",
      "source": "03CON008",
      "target": "03DS003",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "03REL024",
      "source": "03ALG016",
      "target": "03DS003",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "03REL025",
      "source": "03ALG017",
      "target": "03DS003",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "03REL026",
      "source": "03ALG018",
      "target": "03DS003",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "03REL027",
      "source": "03ALG019",
      "target": "03DS003",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "03REL028",
      "source": "03ALG020",
      "target": "03DS003",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "03REL029",
      "source": "03ALG021",
      "target": "03DS003",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "03REL030",
      "source": "03CON010",
      "target": "03DS003",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "使用",
      "关系ID": "03REL031",
      "source": "03CON010",
      "target": "03CON008",
      "attributes": {
        "使用角色": "核心表示法"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "03REL032",
      "source": "03CON011",
      "target": "03DS003",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "使用",
      "关系ID": "03REL033",
      "source": "03CON011",
      "target": "03DS002",
      "attributes": {
        "使用角色": "行链表实现"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "03REL034",
      "source": "03CON012",
      "target": "03DS003",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "使用",
      "关系ID": "03REL035",
      "source": "03CON012",
      "target": "03DS002",
      "attributes": {
        "使用角色": "行列链表实现"
      }
    },
    {
      "type": "优化",
      "关系ID": "03REL036",
      "source": "03ALG022",
      "target": "03ALG023",
      "attributes": {
        "优化方向": "时间复杂度"
      }
    },
    {
      "type": "继承",
      "关系ID": "03REL037",
      "source": "03DS004",
      "target": "03CON020",
      "attributes": {
        "约束条件": "元素可以是原子或子表"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "03REL038",
      "source": "03DS004",
      "target": "03CON013",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "03REL039",
      "source": "03DS004",
      "target": "03CON014",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "03REL040",
      "source": "03CON018",
      "target": "03DS004",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "03REL041",
      "source": "03ALG024",
      "target": "03DS004",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "03REL042",
      "source": "03ALG025",
      "target": "03DS004",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "03REL043",
      "source": "03ALG026",
      "target": "03DS004",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "操作绑定",
      "关系ID": "03REL044",
      "source": "03ALG027",
      "target": "03DS004",
      "attributes": {
        "必需性": "是"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "03REL045",
      "source": "03ALG024",
      "target": "03CON016",
      "attributes": {
        "依赖强度": "强"
      }
    },
    {
      "type": "理论依赖",
      "关系ID": "03REL046",
      "source": "03ALG025",
      "target": "03CON017",
      "attributes": {
        "依赖强度": "强"
      }
    }
  ]
}