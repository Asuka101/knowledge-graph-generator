下标 0 1 2 3 4 5 6 7 8 9

排序前 36 25 48 12 65 25 43 58 76 32$d_{1}=5$25 25 48 12 32 36 43 58 76 65$d_{2}=2$25 12 32 25 43 36 48 58 76 65$d_{3}=1$12 25 25 32 36 43 48 58 65 76

图 10-1 希尔排序的过程示例

int i,j,d;
for(d=n/2; d>=1; d/=2)
{
    for(i=d; i<n; i++)
    {
        x=A[i];
        for(j=i-d; j>=0; j-=d)
        {
            if(x.stn<A[j].stn) A[j+d]=A[j];
            else break;
        }
        A[j+d]=x;
    }
}

虽然希尔排序的算法是三重循环，但只有中间 for 循环是$n$数量级的，外 for 循环为$\lg n$数量级，内 for 循环也远低于$n$数量级，因为当分组较多时，组内元素较少，所以此循环的次数就较少。当分组逐渐减少时，组内元素也逐渐增多，但由于记录也逐渐接近有序，所以循环次数不会随之增加。总之，希尔排序的时间复杂度在$O(n\lg n)$和$O(n^2)$之间，大致为$O(n\sqrt{n})$。

\section*{10.3 选择排序}

选择排序主要包括直接选择排序和堆排序两种。

\subsection*{10.3.1 直接选择排序}

直接选择排序 (straight select sorting) 是一种简单的排序方法。它每次从待排序的区间中选择出具有最小排序码的元素，把该元素与该区间的第 1 个元素交换位置。第 1 次（即
