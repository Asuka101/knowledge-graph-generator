【习题 2-4】编写对具有 LNode 结点类型的单链表进行处理的算法。

1. 将一个单链表按逆序链接，若原单链表中存储元素的次序为$a_1, a_2, \cdots, a_n$，则逆序链接后变为$a_n, a_{n-1}, \cdots, a_1$。
2. 从单链表中查找出所有元素的最大值，该值由函数返回，若单链表为空，则显示出错信息并停止运行。
3. 统计出单链表中结点的值等于给定值$x$的结点个数。
4. 根据一维数组$a[n]$建立一个单链表，使单链表中元素的次序与$a[n]$中元素的次序相同，并使该算法的时间复杂度为$O(n)$。
5. 将两个有序单链表合并成一个有序单链表，合并后使原有单链表为空。
6. 根据两个有序单链表生成一个新的有序单链表，原有单链表保持不变。两个有序单链表中的元素为$(2,8,10,20)$和$(3,8,9,15,16)$，则生成的新单链表中的元素为$(2,3,8,8,9,10,15,16,20)$。
7. 根据一个元素类型为整型的单链表生成两个单链表，使得第一个单链表中包含原单链表中所有元素值为奇数的结点，使得第二个单链表中包含原单链表中所有元素值为偶数的结点，原有单链表保持不变。

【习题 2-5】编写解决约瑟夫问题的算法。

编写一个算法，分别使用带表头附加结点的循环单链表、一般循环单链表（提示：设立指向表尾结点的指针将方便操作）、顺序存储的线性表解决约瑟夫 (Josephus) 问题。其问题是：设有$n$个人围坐在一张圆桌周围，先从某个人开始从 1 报数，数到$m$的人出列（即离开座位，不参加以后的报数），然后从出列的下一个人开始重新从 1 报数，数到$m$的人又出列，如此下去直到所有人都出列为止，试求出它们的出列次序。

例如，当$n=8$,$m=4$时，若从第 1 个人（每个人的编号依次为$1,2,\cdots,n$）开始报数，则得到的出列次序为：4,8,5,2,1,3,7,6。

此算法要求以$n$、$m$和$s$（从第$s$个人开始第 1 次报数）作为值参。

【习题 2-6】修改算法。

对在单链表上的插入算法进行适当修改，编写在带表头附加结点的循环单链表上实现插入元素的算法。

【习题 2-7】编写对结点类型为 DNode 的双向循环链表进行处理的算法。

1. 向双向循环链表的末尾插入一个值为$x$的结点。
2. 从双向循环链表中删除值为$x$的结点。
3. 向双向循环链表的第$i$个结点位置插入一个值为$x$的结点。

【习题 2-8】根据下面要求编写算法。

有一种带表头附加结点的链表，每个结点含 3 个域：data、next 和 range，其中 data 为整型值域，next 和 range 均为指针域，所有结点已经由 next 域链接起来。试编一算法，利用 range 域把所有结点按照其值从小到大的顺序链接起来，由此域链接得到的单链表的表头指针保存在表头附加结点的 range 域中。

【习题 2-9】编程实现下列功能。

1. 根据习题 2-8 对结点的要求生成一个具有 10 个整数元素结点的、带表头附加结点的、根据 next 域链接的链表，元素值采用随机函数产生。
2. 根据 next 域链接的次序输出链表中每个结点的值。
3. 调用按习题 2-8 要求编写的算法。
4. 根据 range 域链接的次序输出链表中每个结点的值。
