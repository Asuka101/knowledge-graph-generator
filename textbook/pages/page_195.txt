第5章 树

\section*{5.1 树的概念}

\subsection*{5.1.1 树的定义}

树（tree）是树形结构的简称。它是一种重要的非线性数据结构。树或者是一棵空树，即不含有任何结点（元素），或者是一棵非空树，即至少含有一个结点。在一棵非空树中，它有且仅有一个称作根（root）的结点，其余所有结点被分为$m$棵 ($m \geq 0$) 互不相交的子树（即称做根的子树），每棵子树（subtree）又同样是一棵树，并且每棵子树的根结点是整个树根结点的后继，而整个树根结点又是所有子树根结点的前驱。显然，树的定义是递归的，树是一种递归的数据结构。树的递归定义，将为以后实现树的各种运算提供方便。

一棵树 T 如图 5-1(a) 所示，它由根结点 A 和两棵子树 T1 和 T2 所组成，T1 和 T2 如图 5-1(b) 和图 5-1(c) 所示；T1 又由它的根结点 B 和三棵子树 T11、T12 和 T13 所组成，这 3 棵子树分别对应如图 5-1(d)、图 5-1(e) 和图 5-1(f) 所示；T11 和 T13 只含有根结点，不含于子树（或者说子树为空树），不可再分；T12 又由它的根结点 E 和两棵只含有根结点的子树所组成，每棵子树的根结点分别为 H 和 I；T2 由它的根结点 C 和一棵子树所组成，该子树也只含有一个根结点 G，不可再分。

\n
\begin{center}
\includegraphics[width=0.8\textwidth]{image.png}
\end{center}
\n

在一颗树中，每个结点被定义为它的每个子树的根结点的前驱，而它的每个子树的根结点就成为它的后继。由此可用二元组给出树的定义：$\text { tree }=(K, R)$$K=\left\{k_{i} \mid 1 \leq i \leq n, n \geq 0, k_{i} \in \text { ElemType }\right\}$
